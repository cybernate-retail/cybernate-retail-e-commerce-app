// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'schema.schema.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

const GAccountErrorCode _$gAccountErrorCodeACTIVATE_OWN_ACCOUNT =
    const GAccountErrorCode._('ACTIVATE_OWN_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeACTIVATE_SUPERUSER_ACCOUNT =
    const GAccountErrorCode._('ACTIVATE_SUPERUSER_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDUPLICATED_INPUT_ITEM =
    const GAccountErrorCode._('DUPLICATED_INPUT_ITEM');
const GAccountErrorCode _$gAccountErrorCodeDEACTIVATE_OWN_ACCOUNT =
    const GAccountErrorCode._('DEACTIVATE_OWN_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDEACTIVATE_SUPERUSER_ACCOUNT =
    const GAccountErrorCode._('DEACTIVATE_SUPERUSER_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDELETE_NON_STAFF_USER =
    const GAccountErrorCode._('DELETE_NON_STAFF_USER');
const GAccountErrorCode _$gAccountErrorCodeDELETE_OWN_ACCOUNT =
    const GAccountErrorCode._('DELETE_OWN_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDELETE_STAFF_ACCOUNT =
    const GAccountErrorCode._('DELETE_STAFF_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeDELETE_SUPERUSER_ACCOUNT =
    const GAccountErrorCode._('DELETE_SUPERUSER_ACCOUNT');
const GAccountErrorCode _$gAccountErrorCodeGRAPHQL_ERROR =
    const GAccountErrorCode._('GRAPHQL_ERROR');
const GAccountErrorCode _$gAccountErrorCodeINACTIVE =
    const GAccountErrorCode._('INACTIVE');
const GAccountErrorCode _$gAccountErrorCodeINVALID =
    const GAccountErrorCode._('INVALID');
const GAccountErrorCode _$gAccountErrorCodeINVALID_PASSWORD =
    const GAccountErrorCode._('INVALID_PASSWORD');
const GAccountErrorCode _$gAccountErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION =
    const GAccountErrorCode._('LEFT_NOT_MANAGEABLE_PERMISSION');
const GAccountErrorCode _$gAccountErrorCodeINVALID_CREDENTIALS =
    const GAccountErrorCode._('INVALID_CREDENTIALS');
const GAccountErrorCode _$gAccountErrorCodeNOT_FOUND =
    const GAccountErrorCode._('NOT_FOUND');
const GAccountErrorCode _$gAccountErrorCodeOUT_OF_SCOPE_USER =
    const GAccountErrorCode._('OUT_OF_SCOPE_USER');
const GAccountErrorCode _$gAccountErrorCodeOUT_OF_SCOPE_GROUP =
    const GAccountErrorCode._('OUT_OF_SCOPE_GROUP');
const GAccountErrorCode _$gAccountErrorCodeOUT_OF_SCOPE_PERMISSION =
    const GAccountErrorCode._('OUT_OF_SCOPE_PERMISSION');
const GAccountErrorCode _$gAccountErrorCodePASSWORD_ENTIRELY_NUMERIC =
    const GAccountErrorCode._('PASSWORD_ENTIRELY_NUMERIC');
const GAccountErrorCode _$gAccountErrorCodePASSWORD_TOO_COMMON =
    const GAccountErrorCode._('PASSWORD_TOO_COMMON');
const GAccountErrorCode _$gAccountErrorCodePASSWORD_TOO_SHORT =
    const GAccountErrorCode._('PASSWORD_TOO_SHORT');
const GAccountErrorCode _$gAccountErrorCodePASSWORD_TOO_SIMILAR =
    const GAccountErrorCode._('PASSWORD_TOO_SIMILAR');
const GAccountErrorCode _$gAccountErrorCodeREQUIRED =
    const GAccountErrorCode._('REQUIRED');
const GAccountErrorCode _$gAccountErrorCodeUNIQUE =
    const GAccountErrorCode._('UNIQUE');
const GAccountErrorCode _$gAccountErrorCodeJWT_SIGNATURE_EXPIRED =
    const GAccountErrorCode._('JWT_SIGNATURE_EXPIRED');
const GAccountErrorCode _$gAccountErrorCodeJWT_INVALID_TOKEN =
    const GAccountErrorCode._('JWT_INVALID_TOKEN');
const GAccountErrorCode _$gAccountErrorCodeJWT_DECODE_ERROR =
    const GAccountErrorCode._('JWT_DECODE_ERROR');
const GAccountErrorCode _$gAccountErrorCodeJWT_MISSING_TOKEN =
    const GAccountErrorCode._('JWT_MISSING_TOKEN');
const GAccountErrorCode _$gAccountErrorCodeJWT_INVALID_CSRF_TOKEN =
    const GAccountErrorCode._('JWT_INVALID_CSRF_TOKEN');
const GAccountErrorCode _$gAccountErrorCodeCHANNEL_INACTIVE =
    const GAccountErrorCode._('CHANNEL_INACTIVE');
const GAccountErrorCode _$gAccountErrorCodeMISSING_CHANNEL_SLUG =
    const GAccountErrorCode._('MISSING_CHANNEL_SLUG');
const GAccountErrorCode _$gAccountErrorCodeACCOUNT_NOT_CONFIRMED =
    const GAccountErrorCode._('ACCOUNT_NOT_CONFIRMED');

GAccountErrorCode _$gAccountErrorCodeValueOf(String name) {
  switch (name) {
    case 'ACTIVATE_OWN_ACCOUNT':
      return _$gAccountErrorCodeACTIVATE_OWN_ACCOUNT;
    case 'ACTIVATE_SUPERUSER_ACCOUNT':
      return _$gAccountErrorCodeACTIVATE_SUPERUSER_ACCOUNT;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gAccountErrorCodeDUPLICATED_INPUT_ITEM;
    case 'DEACTIVATE_OWN_ACCOUNT':
      return _$gAccountErrorCodeDEACTIVATE_OWN_ACCOUNT;
    case 'DEACTIVATE_SUPERUSER_ACCOUNT':
      return _$gAccountErrorCodeDEACTIVATE_SUPERUSER_ACCOUNT;
    case 'DELETE_NON_STAFF_USER':
      return _$gAccountErrorCodeDELETE_NON_STAFF_USER;
    case 'DELETE_OWN_ACCOUNT':
      return _$gAccountErrorCodeDELETE_OWN_ACCOUNT;
    case 'DELETE_STAFF_ACCOUNT':
      return _$gAccountErrorCodeDELETE_STAFF_ACCOUNT;
    case 'DELETE_SUPERUSER_ACCOUNT':
      return _$gAccountErrorCodeDELETE_SUPERUSER_ACCOUNT;
    case 'GRAPHQL_ERROR':
      return _$gAccountErrorCodeGRAPHQL_ERROR;
    case 'INACTIVE':
      return _$gAccountErrorCodeINACTIVE;
    case 'INVALID':
      return _$gAccountErrorCodeINVALID;
    case 'INVALID_PASSWORD':
      return _$gAccountErrorCodeINVALID_PASSWORD;
    case 'LEFT_NOT_MANAGEABLE_PERMISSION':
      return _$gAccountErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION;
    case 'INVALID_CREDENTIALS':
      return _$gAccountErrorCodeINVALID_CREDENTIALS;
    case 'NOT_FOUND':
      return _$gAccountErrorCodeNOT_FOUND;
    case 'OUT_OF_SCOPE_USER':
      return _$gAccountErrorCodeOUT_OF_SCOPE_USER;
    case 'OUT_OF_SCOPE_GROUP':
      return _$gAccountErrorCodeOUT_OF_SCOPE_GROUP;
    case 'OUT_OF_SCOPE_PERMISSION':
      return _$gAccountErrorCodeOUT_OF_SCOPE_PERMISSION;
    case 'PASSWORD_ENTIRELY_NUMERIC':
      return _$gAccountErrorCodePASSWORD_ENTIRELY_NUMERIC;
    case 'PASSWORD_TOO_COMMON':
      return _$gAccountErrorCodePASSWORD_TOO_COMMON;
    case 'PASSWORD_TOO_SHORT':
      return _$gAccountErrorCodePASSWORD_TOO_SHORT;
    case 'PASSWORD_TOO_SIMILAR':
      return _$gAccountErrorCodePASSWORD_TOO_SIMILAR;
    case 'REQUIRED':
      return _$gAccountErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gAccountErrorCodeUNIQUE;
    case 'JWT_SIGNATURE_EXPIRED':
      return _$gAccountErrorCodeJWT_SIGNATURE_EXPIRED;
    case 'JWT_INVALID_TOKEN':
      return _$gAccountErrorCodeJWT_INVALID_TOKEN;
    case 'JWT_DECODE_ERROR':
      return _$gAccountErrorCodeJWT_DECODE_ERROR;
    case 'JWT_MISSING_TOKEN':
      return _$gAccountErrorCodeJWT_MISSING_TOKEN;
    case 'JWT_INVALID_CSRF_TOKEN':
      return _$gAccountErrorCodeJWT_INVALID_CSRF_TOKEN;
    case 'CHANNEL_INACTIVE':
      return _$gAccountErrorCodeCHANNEL_INACTIVE;
    case 'MISSING_CHANNEL_SLUG':
      return _$gAccountErrorCodeMISSING_CHANNEL_SLUG;
    case 'ACCOUNT_NOT_CONFIRMED':
      return _$gAccountErrorCodeACCOUNT_NOT_CONFIRMED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAccountErrorCode> _$gAccountErrorCodeValues =
    new BuiltSet<GAccountErrorCode>(const <GAccountErrorCode>[
  _$gAccountErrorCodeACTIVATE_OWN_ACCOUNT,
  _$gAccountErrorCodeACTIVATE_SUPERUSER_ACCOUNT,
  _$gAccountErrorCodeDUPLICATED_INPUT_ITEM,
  _$gAccountErrorCodeDEACTIVATE_OWN_ACCOUNT,
  _$gAccountErrorCodeDEACTIVATE_SUPERUSER_ACCOUNT,
  _$gAccountErrorCodeDELETE_NON_STAFF_USER,
  _$gAccountErrorCodeDELETE_OWN_ACCOUNT,
  _$gAccountErrorCodeDELETE_STAFF_ACCOUNT,
  _$gAccountErrorCodeDELETE_SUPERUSER_ACCOUNT,
  _$gAccountErrorCodeGRAPHQL_ERROR,
  _$gAccountErrorCodeINACTIVE,
  _$gAccountErrorCodeINVALID,
  _$gAccountErrorCodeINVALID_PASSWORD,
  _$gAccountErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION,
  _$gAccountErrorCodeINVALID_CREDENTIALS,
  _$gAccountErrorCodeNOT_FOUND,
  _$gAccountErrorCodeOUT_OF_SCOPE_USER,
  _$gAccountErrorCodeOUT_OF_SCOPE_GROUP,
  _$gAccountErrorCodeOUT_OF_SCOPE_PERMISSION,
  _$gAccountErrorCodePASSWORD_ENTIRELY_NUMERIC,
  _$gAccountErrorCodePASSWORD_TOO_COMMON,
  _$gAccountErrorCodePASSWORD_TOO_SHORT,
  _$gAccountErrorCodePASSWORD_TOO_SIMILAR,
  _$gAccountErrorCodeREQUIRED,
  _$gAccountErrorCodeUNIQUE,
  _$gAccountErrorCodeJWT_SIGNATURE_EXPIRED,
  _$gAccountErrorCodeJWT_INVALID_TOKEN,
  _$gAccountErrorCodeJWT_DECODE_ERROR,
  _$gAccountErrorCodeJWT_MISSING_TOKEN,
  _$gAccountErrorCodeJWT_INVALID_CSRF_TOKEN,
  _$gAccountErrorCodeCHANNEL_INACTIVE,
  _$gAccountErrorCodeMISSING_CHANNEL_SLUG,
  _$gAccountErrorCodeACCOUNT_NOT_CONFIRMED,
]);

const GAddressTypeEnum _$gAddressTypeEnumBILLING =
    const GAddressTypeEnum._('BILLING');
const GAddressTypeEnum _$gAddressTypeEnumSHIPPING =
    const GAddressTypeEnum._('SHIPPING');

GAddressTypeEnum _$gAddressTypeEnumValueOf(String name) {
  switch (name) {
    case 'BILLING':
      return _$gAddressTypeEnumBILLING;
    case 'SHIPPING':
      return _$gAddressTypeEnumSHIPPING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAddressTypeEnum> _$gAddressTypeEnumValues =
    new BuiltSet<GAddressTypeEnum>(const <GAddressTypeEnum>[
  _$gAddressTypeEnumBILLING,
  _$gAddressTypeEnumSHIPPING,
]);

const GAllocationStrategyEnum
    _$gAllocationStrategyEnumPRIORITIZE_SORTING_ORDER =
    const GAllocationStrategyEnum._('PRIORITIZE_SORTING_ORDER');
const GAllocationStrategyEnum _$gAllocationStrategyEnumPRIORITIZE_HIGH_STOCK =
    const GAllocationStrategyEnum._('PRIORITIZE_HIGH_STOCK');

GAllocationStrategyEnum _$gAllocationStrategyEnumValueOf(String name) {
  switch (name) {
    case 'PRIORITIZE_SORTING_ORDER':
      return _$gAllocationStrategyEnumPRIORITIZE_SORTING_ORDER;
    case 'PRIORITIZE_HIGH_STOCK':
      return _$gAllocationStrategyEnumPRIORITIZE_HIGH_STOCK;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAllocationStrategyEnum> _$gAllocationStrategyEnumValues =
    new BuiltSet<GAllocationStrategyEnum>(const <GAllocationStrategyEnum>[
  _$gAllocationStrategyEnumPRIORITIZE_SORTING_ORDER,
  _$gAllocationStrategyEnumPRIORITIZE_HIGH_STOCK,
]);

const GAppErrorCode _$gAppErrorCodeFORBIDDEN =
    const GAppErrorCode._('FORBIDDEN');
const GAppErrorCode _$gAppErrorCodeGRAPHQL_ERROR =
    const GAppErrorCode._('GRAPHQL_ERROR');
const GAppErrorCode _$gAppErrorCodeINVALID = const GAppErrorCode._('INVALID');
const GAppErrorCode _$gAppErrorCodeINVALID_STATUS =
    const GAppErrorCode._('INVALID_STATUS');
const GAppErrorCode _$gAppErrorCodeINVALID_PERMISSION =
    const GAppErrorCode._('INVALID_PERMISSION');
const GAppErrorCode _$gAppErrorCodeINVALID_URL_FORMAT =
    const GAppErrorCode._('INVALID_URL_FORMAT');
const GAppErrorCode _$gAppErrorCodeINVALID_MANIFEST_FORMAT =
    const GAppErrorCode._('INVALID_MANIFEST_FORMAT');
const GAppErrorCode _$gAppErrorCodeMANIFEST_URL_CANT_CONNECT =
    const GAppErrorCode._('MANIFEST_URL_CANT_CONNECT');
const GAppErrorCode _$gAppErrorCodeNOT_FOUND =
    const GAppErrorCode._('NOT_FOUND');
const GAppErrorCode _$gAppErrorCodeREQUIRED = const GAppErrorCode._('REQUIRED');
const GAppErrorCode _$gAppErrorCodeUNIQUE = const GAppErrorCode._('UNIQUE');
const GAppErrorCode _$gAppErrorCodeOUT_OF_SCOPE_APP =
    const GAppErrorCode._('OUT_OF_SCOPE_APP');
const GAppErrorCode _$gAppErrorCodeOUT_OF_SCOPE_PERMISSION =
    const GAppErrorCode._('OUT_OF_SCOPE_PERMISSION');

GAppErrorCode _$gAppErrorCodeValueOf(String name) {
  switch (name) {
    case 'FORBIDDEN':
      return _$gAppErrorCodeFORBIDDEN;
    case 'GRAPHQL_ERROR':
      return _$gAppErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gAppErrorCodeINVALID;
    case 'INVALID_STATUS':
      return _$gAppErrorCodeINVALID_STATUS;
    case 'INVALID_PERMISSION':
      return _$gAppErrorCodeINVALID_PERMISSION;
    case 'INVALID_URL_FORMAT':
      return _$gAppErrorCodeINVALID_URL_FORMAT;
    case 'INVALID_MANIFEST_FORMAT':
      return _$gAppErrorCodeINVALID_MANIFEST_FORMAT;
    case 'MANIFEST_URL_CANT_CONNECT':
      return _$gAppErrorCodeMANIFEST_URL_CANT_CONNECT;
    case 'NOT_FOUND':
      return _$gAppErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gAppErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gAppErrorCodeUNIQUE;
    case 'OUT_OF_SCOPE_APP':
      return _$gAppErrorCodeOUT_OF_SCOPE_APP;
    case 'OUT_OF_SCOPE_PERMISSION':
      return _$gAppErrorCodeOUT_OF_SCOPE_PERMISSION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAppErrorCode> _$gAppErrorCodeValues =
    new BuiltSet<GAppErrorCode>(const <GAppErrorCode>[
  _$gAppErrorCodeFORBIDDEN,
  _$gAppErrorCodeGRAPHQL_ERROR,
  _$gAppErrorCodeINVALID,
  _$gAppErrorCodeINVALID_STATUS,
  _$gAppErrorCodeINVALID_PERMISSION,
  _$gAppErrorCodeINVALID_URL_FORMAT,
  _$gAppErrorCodeINVALID_MANIFEST_FORMAT,
  _$gAppErrorCodeMANIFEST_URL_CANT_CONNECT,
  _$gAppErrorCodeNOT_FOUND,
  _$gAppErrorCodeREQUIRED,
  _$gAppErrorCodeUNIQUE,
  _$gAppErrorCodeOUT_OF_SCOPE_APP,
  _$gAppErrorCodeOUT_OF_SCOPE_PERMISSION,
]);

const GAppExtensionMountEnum _$gAppExtensionMountEnumCUSTOMER_OVERVIEW_CREATE =
    const GAppExtensionMountEnum._('CUSTOMER_OVERVIEW_CREATE');
const GAppExtensionMountEnum
    _$gAppExtensionMountEnumCUSTOMER_OVERVIEW_MORE_ACTIONS =
    const GAppExtensionMountEnum._('CUSTOMER_OVERVIEW_MORE_ACTIONS');
const GAppExtensionMountEnum
    _$gAppExtensionMountEnumCUSTOMER_DETAILS_MORE_ACTIONS =
    const GAppExtensionMountEnum._('CUSTOMER_DETAILS_MORE_ACTIONS');
const GAppExtensionMountEnum _$gAppExtensionMountEnumPRODUCT_OVERVIEW_CREATE =
    const GAppExtensionMountEnum._('PRODUCT_OVERVIEW_CREATE');
const GAppExtensionMountEnum
    _$gAppExtensionMountEnumPRODUCT_OVERVIEW_MORE_ACTIONS =
    const GAppExtensionMountEnum._('PRODUCT_OVERVIEW_MORE_ACTIONS');
const GAppExtensionMountEnum
    _$gAppExtensionMountEnumPRODUCT_DETAILS_MORE_ACTIONS =
    const GAppExtensionMountEnum._('PRODUCT_DETAILS_MORE_ACTIONS');
const GAppExtensionMountEnum _$gAppExtensionMountEnumNAVIGATION_CATALOG =
    const GAppExtensionMountEnum._('NAVIGATION_CATALOG');
const GAppExtensionMountEnum _$gAppExtensionMountEnumNAVIGATION_ORDERS =
    const GAppExtensionMountEnum._('NAVIGATION_ORDERS');
const GAppExtensionMountEnum _$gAppExtensionMountEnumNAVIGATION_CUSTOMERS =
    const GAppExtensionMountEnum._('NAVIGATION_CUSTOMERS');
const GAppExtensionMountEnum _$gAppExtensionMountEnumNAVIGATION_DISCOUNTS =
    const GAppExtensionMountEnum._('NAVIGATION_DISCOUNTS');
const GAppExtensionMountEnum _$gAppExtensionMountEnumNAVIGATION_TRANSLATIONS =
    const GAppExtensionMountEnum._('NAVIGATION_TRANSLATIONS');
const GAppExtensionMountEnum _$gAppExtensionMountEnumNAVIGATION_PAGES =
    const GAppExtensionMountEnum._('NAVIGATION_PAGES');
const GAppExtensionMountEnum
    _$gAppExtensionMountEnumORDER_DETAILS_MORE_ACTIONS =
    const GAppExtensionMountEnum._('ORDER_DETAILS_MORE_ACTIONS');
const GAppExtensionMountEnum _$gAppExtensionMountEnumORDER_OVERVIEW_CREATE =
    const GAppExtensionMountEnum._('ORDER_OVERVIEW_CREATE');
const GAppExtensionMountEnum
    _$gAppExtensionMountEnumORDER_OVERVIEW_MORE_ACTIONS =
    const GAppExtensionMountEnum._('ORDER_OVERVIEW_MORE_ACTIONS');

GAppExtensionMountEnum _$gAppExtensionMountEnumValueOf(String name) {
  switch (name) {
    case 'CUSTOMER_OVERVIEW_CREATE':
      return _$gAppExtensionMountEnumCUSTOMER_OVERVIEW_CREATE;
    case 'CUSTOMER_OVERVIEW_MORE_ACTIONS':
      return _$gAppExtensionMountEnumCUSTOMER_OVERVIEW_MORE_ACTIONS;
    case 'CUSTOMER_DETAILS_MORE_ACTIONS':
      return _$gAppExtensionMountEnumCUSTOMER_DETAILS_MORE_ACTIONS;
    case 'PRODUCT_OVERVIEW_CREATE':
      return _$gAppExtensionMountEnumPRODUCT_OVERVIEW_CREATE;
    case 'PRODUCT_OVERVIEW_MORE_ACTIONS':
      return _$gAppExtensionMountEnumPRODUCT_OVERVIEW_MORE_ACTIONS;
    case 'PRODUCT_DETAILS_MORE_ACTIONS':
      return _$gAppExtensionMountEnumPRODUCT_DETAILS_MORE_ACTIONS;
    case 'NAVIGATION_CATALOG':
      return _$gAppExtensionMountEnumNAVIGATION_CATALOG;
    case 'NAVIGATION_ORDERS':
      return _$gAppExtensionMountEnumNAVIGATION_ORDERS;
    case 'NAVIGATION_CUSTOMERS':
      return _$gAppExtensionMountEnumNAVIGATION_CUSTOMERS;
    case 'NAVIGATION_DISCOUNTS':
      return _$gAppExtensionMountEnumNAVIGATION_DISCOUNTS;
    case 'NAVIGATION_TRANSLATIONS':
      return _$gAppExtensionMountEnumNAVIGATION_TRANSLATIONS;
    case 'NAVIGATION_PAGES':
      return _$gAppExtensionMountEnumNAVIGATION_PAGES;
    case 'ORDER_DETAILS_MORE_ACTIONS':
      return _$gAppExtensionMountEnumORDER_DETAILS_MORE_ACTIONS;
    case 'ORDER_OVERVIEW_CREATE':
      return _$gAppExtensionMountEnumORDER_OVERVIEW_CREATE;
    case 'ORDER_OVERVIEW_MORE_ACTIONS':
      return _$gAppExtensionMountEnumORDER_OVERVIEW_MORE_ACTIONS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAppExtensionMountEnum> _$gAppExtensionMountEnumValues =
    new BuiltSet<GAppExtensionMountEnum>(const <GAppExtensionMountEnum>[
  _$gAppExtensionMountEnumCUSTOMER_OVERVIEW_CREATE,
  _$gAppExtensionMountEnumCUSTOMER_OVERVIEW_MORE_ACTIONS,
  _$gAppExtensionMountEnumCUSTOMER_DETAILS_MORE_ACTIONS,
  _$gAppExtensionMountEnumPRODUCT_OVERVIEW_CREATE,
  _$gAppExtensionMountEnumPRODUCT_OVERVIEW_MORE_ACTIONS,
  _$gAppExtensionMountEnumPRODUCT_DETAILS_MORE_ACTIONS,
  _$gAppExtensionMountEnumNAVIGATION_CATALOG,
  _$gAppExtensionMountEnumNAVIGATION_ORDERS,
  _$gAppExtensionMountEnumNAVIGATION_CUSTOMERS,
  _$gAppExtensionMountEnumNAVIGATION_DISCOUNTS,
  _$gAppExtensionMountEnumNAVIGATION_TRANSLATIONS,
  _$gAppExtensionMountEnumNAVIGATION_PAGES,
  _$gAppExtensionMountEnumORDER_DETAILS_MORE_ACTIONS,
  _$gAppExtensionMountEnumORDER_OVERVIEW_CREATE,
  _$gAppExtensionMountEnumORDER_OVERVIEW_MORE_ACTIONS,
]);

const GAppExtensionTargetEnum _$gAppExtensionTargetEnumPOPUP =
    const GAppExtensionTargetEnum._('POPUP');
const GAppExtensionTargetEnum _$gAppExtensionTargetEnumAPP_PAGE =
    const GAppExtensionTargetEnum._('APP_PAGE');

GAppExtensionTargetEnum _$gAppExtensionTargetEnumValueOf(String name) {
  switch (name) {
    case 'POPUP':
      return _$gAppExtensionTargetEnumPOPUP;
    case 'APP_PAGE':
      return _$gAppExtensionTargetEnumAPP_PAGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAppExtensionTargetEnum> _$gAppExtensionTargetEnumValues =
    new BuiltSet<GAppExtensionTargetEnum>(const <GAppExtensionTargetEnum>[
  _$gAppExtensionTargetEnumPOPUP,
  _$gAppExtensionTargetEnumAPP_PAGE,
]);

const GAppSortField _$gAppSortFieldNAME = const GAppSortField._('NAME');
const GAppSortField _$gAppSortFieldCREATION_DATE =
    const GAppSortField._('CREATION_DATE');

GAppSortField _$gAppSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gAppSortFieldNAME;
    case 'CREATION_DATE':
      return _$gAppSortFieldCREATION_DATE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAppSortField> _$gAppSortFieldValues =
    new BuiltSet<GAppSortField>(const <GAppSortField>[
  _$gAppSortFieldNAME,
  _$gAppSortFieldCREATION_DATE,
]);

const GAppTypeEnum _$gAppTypeEnumLOCAL = const GAppTypeEnum._('LOCAL');
const GAppTypeEnum _$gAppTypeEnumTHIRDPARTY =
    const GAppTypeEnum._('THIRDPARTY');

GAppTypeEnum _$gAppTypeEnumValueOf(String name) {
  switch (name) {
    case 'LOCAL':
      return _$gAppTypeEnumLOCAL;
    case 'THIRDPARTY':
      return _$gAppTypeEnumTHIRDPARTY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAppTypeEnum> _$gAppTypeEnumValues =
    new BuiltSet<GAppTypeEnum>(const <GAppTypeEnum>[
  _$gAppTypeEnumLOCAL,
  _$gAppTypeEnumTHIRDPARTY,
]);

const GAreaUnitsEnum _$gAreaUnitsEnumSQ_CM = const GAreaUnitsEnum._('SQ_CM');
const GAreaUnitsEnum _$gAreaUnitsEnumSQ_M = const GAreaUnitsEnum._('SQ_M');
const GAreaUnitsEnum _$gAreaUnitsEnumSQ_KM = const GAreaUnitsEnum._('SQ_KM');
const GAreaUnitsEnum _$gAreaUnitsEnumSQ_FT = const GAreaUnitsEnum._('SQ_FT');
const GAreaUnitsEnum _$gAreaUnitsEnumSQ_YD = const GAreaUnitsEnum._('SQ_YD');
const GAreaUnitsEnum _$gAreaUnitsEnumSQ_INCH =
    const GAreaUnitsEnum._('SQ_INCH');

GAreaUnitsEnum _$gAreaUnitsEnumValueOf(String name) {
  switch (name) {
    case 'SQ_CM':
      return _$gAreaUnitsEnumSQ_CM;
    case 'SQ_M':
      return _$gAreaUnitsEnumSQ_M;
    case 'SQ_KM':
      return _$gAreaUnitsEnumSQ_KM;
    case 'SQ_FT':
      return _$gAreaUnitsEnumSQ_FT;
    case 'SQ_YD':
      return _$gAreaUnitsEnumSQ_YD;
    case 'SQ_INCH':
      return _$gAreaUnitsEnumSQ_INCH;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAreaUnitsEnum> _$gAreaUnitsEnumValues =
    new BuiltSet<GAreaUnitsEnum>(const <GAreaUnitsEnum>[
  _$gAreaUnitsEnumSQ_CM,
  _$gAreaUnitsEnumSQ_M,
  _$gAreaUnitsEnumSQ_KM,
  _$gAreaUnitsEnumSQ_FT,
  _$gAreaUnitsEnumSQ_YD,
  _$gAreaUnitsEnumSQ_INCH,
]);

const GAttributeChoicesSortField _$gAttributeChoicesSortFieldNAME =
    const GAttributeChoicesSortField._('NAME');
const GAttributeChoicesSortField _$gAttributeChoicesSortFieldSLUG =
    const GAttributeChoicesSortField._('SLUG');

GAttributeChoicesSortField _$gAttributeChoicesSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gAttributeChoicesSortFieldNAME;
    case 'SLUG':
      return _$gAttributeChoicesSortFieldSLUG;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeChoicesSortField> _$gAttributeChoicesSortFieldValues =
    new BuiltSet<GAttributeChoicesSortField>(const <GAttributeChoicesSortField>[
  _$gAttributeChoicesSortFieldNAME,
  _$gAttributeChoicesSortFieldSLUG,
]);

const GAttributeEntityTypeEnum _$gAttributeEntityTypeEnumPAGE =
    const GAttributeEntityTypeEnum._('PAGE');
const GAttributeEntityTypeEnum _$gAttributeEntityTypeEnumPRODUCT =
    const GAttributeEntityTypeEnum._('PRODUCT');
const GAttributeEntityTypeEnum _$gAttributeEntityTypeEnumPRODUCT_VARIANT =
    const GAttributeEntityTypeEnum._('PRODUCT_VARIANT');

GAttributeEntityTypeEnum _$gAttributeEntityTypeEnumValueOf(String name) {
  switch (name) {
    case 'PAGE':
      return _$gAttributeEntityTypeEnumPAGE;
    case 'PRODUCT':
      return _$gAttributeEntityTypeEnumPRODUCT;
    case 'PRODUCT_VARIANT':
      return _$gAttributeEntityTypeEnumPRODUCT_VARIANT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeEntityTypeEnum> _$gAttributeEntityTypeEnumValues =
    new BuiltSet<GAttributeEntityTypeEnum>(const <GAttributeEntityTypeEnum>[
  _$gAttributeEntityTypeEnumPAGE,
  _$gAttributeEntityTypeEnumPRODUCT,
  _$gAttributeEntityTypeEnumPRODUCT_VARIANT,
]);

const GAttributeErrorCode _$gAttributeErrorCodeALREADY_EXISTS =
    const GAttributeErrorCode._('ALREADY_EXISTS');
const GAttributeErrorCode _$gAttributeErrorCodeGRAPHQL_ERROR =
    const GAttributeErrorCode._('GRAPHQL_ERROR');
const GAttributeErrorCode _$gAttributeErrorCodeINVALID =
    const GAttributeErrorCode._('INVALID');
const GAttributeErrorCode _$gAttributeErrorCodeNOT_FOUND =
    const GAttributeErrorCode._('NOT_FOUND');
const GAttributeErrorCode _$gAttributeErrorCodeREQUIRED =
    const GAttributeErrorCode._('REQUIRED');
const GAttributeErrorCode _$gAttributeErrorCodeUNIQUE =
    const GAttributeErrorCode._('UNIQUE');

GAttributeErrorCode _$gAttributeErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gAttributeErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gAttributeErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gAttributeErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gAttributeErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gAttributeErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gAttributeErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeErrorCode> _$gAttributeErrorCodeValues =
    new BuiltSet<GAttributeErrorCode>(const <GAttributeErrorCode>[
  _$gAttributeErrorCodeALREADY_EXISTS,
  _$gAttributeErrorCodeGRAPHQL_ERROR,
  _$gAttributeErrorCodeINVALID,
  _$gAttributeErrorCodeNOT_FOUND,
  _$gAttributeErrorCodeREQUIRED,
  _$gAttributeErrorCodeUNIQUE,
]);

const GAttributeInputTypeEnum _$gAttributeInputTypeEnumDROPDOWN =
    const GAttributeInputTypeEnum._('DROPDOWN');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumMULTISELECT =
    const GAttributeInputTypeEnum._('MULTISELECT');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumFILE =
    const GAttributeInputTypeEnum._('FILE');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumREFERENCE =
    const GAttributeInputTypeEnum._('REFERENCE');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumNUMERIC =
    const GAttributeInputTypeEnum._('NUMERIC');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumRICH_TEXT =
    const GAttributeInputTypeEnum._('RICH_TEXT');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumPLAIN_TEXT =
    const GAttributeInputTypeEnum._('PLAIN_TEXT');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumSWATCH =
    const GAttributeInputTypeEnum._('SWATCH');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumBOOLEAN =
    const GAttributeInputTypeEnum._('BOOLEAN');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumDATE =
    const GAttributeInputTypeEnum._('DATE');
const GAttributeInputTypeEnum _$gAttributeInputTypeEnumDATE_TIME =
    const GAttributeInputTypeEnum._('DATE_TIME');

GAttributeInputTypeEnum _$gAttributeInputTypeEnumValueOf(String name) {
  switch (name) {
    case 'DROPDOWN':
      return _$gAttributeInputTypeEnumDROPDOWN;
    case 'MULTISELECT':
      return _$gAttributeInputTypeEnumMULTISELECT;
    case 'FILE':
      return _$gAttributeInputTypeEnumFILE;
    case 'REFERENCE':
      return _$gAttributeInputTypeEnumREFERENCE;
    case 'NUMERIC':
      return _$gAttributeInputTypeEnumNUMERIC;
    case 'RICH_TEXT':
      return _$gAttributeInputTypeEnumRICH_TEXT;
    case 'PLAIN_TEXT':
      return _$gAttributeInputTypeEnumPLAIN_TEXT;
    case 'SWATCH':
      return _$gAttributeInputTypeEnumSWATCH;
    case 'BOOLEAN':
      return _$gAttributeInputTypeEnumBOOLEAN;
    case 'DATE':
      return _$gAttributeInputTypeEnumDATE;
    case 'DATE_TIME':
      return _$gAttributeInputTypeEnumDATE_TIME;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeInputTypeEnum> _$gAttributeInputTypeEnumValues =
    new BuiltSet<GAttributeInputTypeEnum>(const <GAttributeInputTypeEnum>[
  _$gAttributeInputTypeEnumDROPDOWN,
  _$gAttributeInputTypeEnumMULTISELECT,
  _$gAttributeInputTypeEnumFILE,
  _$gAttributeInputTypeEnumREFERENCE,
  _$gAttributeInputTypeEnumNUMERIC,
  _$gAttributeInputTypeEnumRICH_TEXT,
  _$gAttributeInputTypeEnumPLAIN_TEXT,
  _$gAttributeInputTypeEnumSWATCH,
  _$gAttributeInputTypeEnumBOOLEAN,
  _$gAttributeInputTypeEnumDATE,
  _$gAttributeInputTypeEnumDATE_TIME,
]);

const GAttributeSortField _$gAttributeSortFieldNAME =
    const GAttributeSortField._('NAME');
const GAttributeSortField _$gAttributeSortFieldSLUG =
    const GAttributeSortField._('SLUG');
const GAttributeSortField _$gAttributeSortFieldVALUE_REQUIRED =
    const GAttributeSortField._('VALUE_REQUIRED');
const GAttributeSortField _$gAttributeSortFieldIS_VARIANT_ONLY =
    const GAttributeSortField._('IS_VARIANT_ONLY');
const GAttributeSortField _$gAttributeSortFieldVISIBLE_IN_STOREFRONT =
    const GAttributeSortField._('VISIBLE_IN_STOREFRONT');
const GAttributeSortField _$gAttributeSortFieldFILTERABLE_IN_STOREFRONT =
    const GAttributeSortField._('FILTERABLE_IN_STOREFRONT');
const GAttributeSortField _$gAttributeSortFieldFILTERABLE_IN_DASHBOARD =
    const GAttributeSortField._('FILTERABLE_IN_DASHBOARD');
const GAttributeSortField _$gAttributeSortFieldSTOREFRONT_SEARCH_POSITION =
    const GAttributeSortField._('STOREFRONT_SEARCH_POSITION');
const GAttributeSortField _$gAttributeSortFieldAVAILABLE_IN_GRID =
    const GAttributeSortField._('AVAILABLE_IN_GRID');

GAttributeSortField _$gAttributeSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gAttributeSortFieldNAME;
    case 'SLUG':
      return _$gAttributeSortFieldSLUG;
    case 'VALUE_REQUIRED':
      return _$gAttributeSortFieldVALUE_REQUIRED;
    case 'IS_VARIANT_ONLY':
      return _$gAttributeSortFieldIS_VARIANT_ONLY;
    case 'VISIBLE_IN_STOREFRONT':
      return _$gAttributeSortFieldVISIBLE_IN_STOREFRONT;
    case 'FILTERABLE_IN_STOREFRONT':
      return _$gAttributeSortFieldFILTERABLE_IN_STOREFRONT;
    case 'FILTERABLE_IN_DASHBOARD':
      return _$gAttributeSortFieldFILTERABLE_IN_DASHBOARD;
    case 'STOREFRONT_SEARCH_POSITION':
      return _$gAttributeSortFieldSTOREFRONT_SEARCH_POSITION;
    case 'AVAILABLE_IN_GRID':
      return _$gAttributeSortFieldAVAILABLE_IN_GRID;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeSortField> _$gAttributeSortFieldValues =
    new BuiltSet<GAttributeSortField>(const <GAttributeSortField>[
  _$gAttributeSortFieldNAME,
  _$gAttributeSortFieldSLUG,
  _$gAttributeSortFieldVALUE_REQUIRED,
  _$gAttributeSortFieldIS_VARIANT_ONLY,
  _$gAttributeSortFieldVISIBLE_IN_STOREFRONT,
  _$gAttributeSortFieldFILTERABLE_IN_STOREFRONT,
  _$gAttributeSortFieldFILTERABLE_IN_DASHBOARD,
  _$gAttributeSortFieldSTOREFRONT_SEARCH_POSITION,
  _$gAttributeSortFieldAVAILABLE_IN_GRID,
]);

const GAttributeTypeEnum _$gAttributeTypeEnumPRODUCT_TYPE =
    const GAttributeTypeEnum._('PRODUCT_TYPE');
const GAttributeTypeEnum _$gAttributeTypeEnumPAGE_TYPE =
    const GAttributeTypeEnum._('PAGE_TYPE');

GAttributeTypeEnum _$gAttributeTypeEnumValueOf(String name) {
  switch (name) {
    case 'PRODUCT_TYPE':
      return _$gAttributeTypeEnumPRODUCT_TYPE;
    case 'PAGE_TYPE':
      return _$gAttributeTypeEnumPAGE_TYPE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GAttributeTypeEnum> _$gAttributeTypeEnumValues =
    new BuiltSet<GAttributeTypeEnum>(const <GAttributeTypeEnum>[
  _$gAttributeTypeEnumPRODUCT_TYPE,
  _$gAttributeTypeEnumPAGE_TYPE,
]);

const GCategorySortField _$gCategorySortFieldNAME =
    const GCategorySortField._('NAME');
const GCategorySortField _$gCategorySortFieldPRODUCT_COUNT =
    const GCategorySortField._('PRODUCT_COUNT');
const GCategorySortField _$gCategorySortFieldSUBCATEGORY_COUNT =
    const GCategorySortField._('SUBCATEGORY_COUNT');

GCategorySortField _$gCategorySortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gCategorySortFieldNAME;
    case 'PRODUCT_COUNT':
      return _$gCategorySortFieldPRODUCT_COUNT;
    case 'SUBCATEGORY_COUNT':
      return _$gCategorySortFieldSUBCATEGORY_COUNT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCategorySortField> _$gCategorySortFieldValues =
    new BuiltSet<GCategorySortField>(const <GCategorySortField>[
  _$gCategorySortFieldNAME,
  _$gCategorySortFieldPRODUCT_COUNT,
  _$gCategorySortFieldSUBCATEGORY_COUNT,
]);

const GChannelErrorCode _$gChannelErrorCodeALREADY_EXISTS =
    const GChannelErrorCode._('ALREADY_EXISTS');
const GChannelErrorCode _$gChannelErrorCodeGRAPHQL_ERROR =
    const GChannelErrorCode._('GRAPHQL_ERROR');
const GChannelErrorCode _$gChannelErrorCodeINVALID =
    const GChannelErrorCode._('INVALID');
const GChannelErrorCode _$gChannelErrorCodeNOT_FOUND =
    const GChannelErrorCode._('NOT_FOUND');
const GChannelErrorCode _$gChannelErrorCodeREQUIRED =
    const GChannelErrorCode._('REQUIRED');
const GChannelErrorCode _$gChannelErrorCodeUNIQUE =
    const GChannelErrorCode._('UNIQUE');
const GChannelErrorCode _$gChannelErrorCodeCHANNELS_CURRENCY_MUST_BE_THE_SAME =
    const GChannelErrorCode._('CHANNELS_CURRENCY_MUST_BE_THE_SAME');
const GChannelErrorCode _$gChannelErrorCodeCHANNEL_WITH_ORDERS =
    const GChannelErrorCode._('CHANNEL_WITH_ORDERS');
const GChannelErrorCode _$gChannelErrorCodeDUPLICATED_INPUT_ITEM =
    const GChannelErrorCode._('DUPLICATED_INPUT_ITEM');

GChannelErrorCode _$gChannelErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gChannelErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gChannelErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gChannelErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gChannelErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gChannelErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gChannelErrorCodeUNIQUE;
    case 'CHANNELS_CURRENCY_MUST_BE_THE_SAME':
      return _$gChannelErrorCodeCHANNELS_CURRENCY_MUST_BE_THE_SAME;
    case 'CHANNEL_WITH_ORDERS':
      return _$gChannelErrorCodeCHANNEL_WITH_ORDERS;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gChannelErrorCodeDUPLICATED_INPUT_ITEM;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GChannelErrorCode> _$gChannelErrorCodeValues =
    new BuiltSet<GChannelErrorCode>(const <GChannelErrorCode>[
  _$gChannelErrorCodeALREADY_EXISTS,
  _$gChannelErrorCodeGRAPHQL_ERROR,
  _$gChannelErrorCodeINVALID,
  _$gChannelErrorCodeNOT_FOUND,
  _$gChannelErrorCodeREQUIRED,
  _$gChannelErrorCodeUNIQUE,
  _$gChannelErrorCodeCHANNELS_CURRENCY_MUST_BE_THE_SAME,
  _$gChannelErrorCodeCHANNEL_WITH_ORDERS,
  _$gChannelErrorCodeDUPLICATED_INPUT_ITEM,
]);

const GCheckoutErrorCode _$gCheckoutErrorCodeBILLING_ADDRESS_NOT_SET =
    const GCheckoutErrorCode._('BILLING_ADDRESS_NOT_SET');
const GCheckoutErrorCode _$gCheckoutErrorCodeCHECKOUT_NOT_FULLY_PAID =
    const GCheckoutErrorCode._('CHECKOUT_NOT_FULLY_PAID');
const GCheckoutErrorCode _$gCheckoutErrorCodeGRAPHQL_ERROR =
    const GCheckoutErrorCode._('GRAPHQL_ERROR');
const GCheckoutErrorCode _$gCheckoutErrorCodePRODUCT_NOT_PUBLISHED =
    const GCheckoutErrorCode._('PRODUCT_NOT_PUBLISHED');
const GCheckoutErrorCode _$gCheckoutErrorCodePRODUCT_UNAVAILABLE_FOR_PURCHASE =
    const GCheckoutErrorCode._('PRODUCT_UNAVAILABLE_FOR_PURCHASE');
const GCheckoutErrorCode _$gCheckoutErrorCodeINSUFFICIENT_STOCK =
    const GCheckoutErrorCode._('INSUFFICIENT_STOCK');
const GCheckoutErrorCode _$gCheckoutErrorCodeINVALID =
    const GCheckoutErrorCode._('INVALID');
const GCheckoutErrorCode _$gCheckoutErrorCodeINVALID_SHIPPING_METHOD =
    const GCheckoutErrorCode._('INVALID_SHIPPING_METHOD');
const GCheckoutErrorCode _$gCheckoutErrorCodeNOT_FOUND =
    const GCheckoutErrorCode._('NOT_FOUND');
const GCheckoutErrorCode _$gCheckoutErrorCodePAYMENT_ERROR =
    const GCheckoutErrorCode._('PAYMENT_ERROR');
const GCheckoutErrorCode _$gCheckoutErrorCodeQUANTITY_GREATER_THAN_LIMIT =
    const GCheckoutErrorCode._('QUANTITY_GREATER_THAN_LIMIT');
const GCheckoutErrorCode _$gCheckoutErrorCodeREQUIRED =
    const GCheckoutErrorCode._('REQUIRED');
const GCheckoutErrorCode _$gCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET =
    const GCheckoutErrorCode._('SHIPPING_ADDRESS_NOT_SET');
const GCheckoutErrorCode _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_APPLICABLE =
    const GCheckoutErrorCode._('SHIPPING_METHOD_NOT_APPLICABLE');
const GCheckoutErrorCode _$gCheckoutErrorCodeDELIVERY_METHOD_NOT_APPLICABLE =
    const GCheckoutErrorCode._('DELIVERY_METHOD_NOT_APPLICABLE');
const GCheckoutErrorCode _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_SET =
    const GCheckoutErrorCode._('SHIPPING_METHOD_NOT_SET');
const GCheckoutErrorCode _$gCheckoutErrorCodeSHIPPING_NOT_REQUIRED =
    const GCheckoutErrorCode._('SHIPPING_NOT_REQUIRED');
const GCheckoutErrorCode _$gCheckoutErrorCodeTAX_ERROR =
    const GCheckoutErrorCode._('TAX_ERROR');
const GCheckoutErrorCode _$gCheckoutErrorCodeUNIQUE =
    const GCheckoutErrorCode._('UNIQUE');
const GCheckoutErrorCode _$gCheckoutErrorCodeVOUCHER_NOT_APPLICABLE =
    const GCheckoutErrorCode._('VOUCHER_NOT_APPLICABLE');
const GCheckoutErrorCode _$gCheckoutErrorCodeGIFT_CARD_NOT_APPLICABLE =
    const GCheckoutErrorCode._('GIFT_CARD_NOT_APPLICABLE');
const GCheckoutErrorCode _$gCheckoutErrorCodeZERO_QUANTITY =
    const GCheckoutErrorCode._('ZERO_QUANTITY');
const GCheckoutErrorCode _$gCheckoutErrorCodeMISSING_CHANNEL_SLUG =
    const GCheckoutErrorCode._('MISSING_CHANNEL_SLUG');
const GCheckoutErrorCode _$gCheckoutErrorCodeCHANNEL_INACTIVE =
    const GCheckoutErrorCode._('CHANNEL_INACTIVE');
const GCheckoutErrorCode _$gCheckoutErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL =
    const GCheckoutErrorCode._('UNAVAILABLE_VARIANT_IN_CHANNEL');
const GCheckoutErrorCode _$gCheckoutErrorCodeEMAIL_NOT_SET =
    const GCheckoutErrorCode._('EMAIL_NOT_SET');
const GCheckoutErrorCode _$gCheckoutErrorCodeNO_LINES =
    const GCheckoutErrorCode._('NO_LINES');
const GCheckoutErrorCode _$gCheckoutErrorCodeINACTIVE_PAYMENT =
    const GCheckoutErrorCode._('INACTIVE_PAYMENT');

GCheckoutErrorCode _$gCheckoutErrorCodeValueOf(String name) {
  switch (name) {
    case 'BILLING_ADDRESS_NOT_SET':
      return _$gCheckoutErrorCodeBILLING_ADDRESS_NOT_SET;
    case 'CHECKOUT_NOT_FULLY_PAID':
      return _$gCheckoutErrorCodeCHECKOUT_NOT_FULLY_PAID;
    case 'GRAPHQL_ERROR':
      return _$gCheckoutErrorCodeGRAPHQL_ERROR;
    case 'PRODUCT_NOT_PUBLISHED':
      return _$gCheckoutErrorCodePRODUCT_NOT_PUBLISHED;
    case 'PRODUCT_UNAVAILABLE_FOR_PURCHASE':
      return _$gCheckoutErrorCodePRODUCT_UNAVAILABLE_FOR_PURCHASE;
    case 'INSUFFICIENT_STOCK':
      return _$gCheckoutErrorCodeINSUFFICIENT_STOCK;
    case 'INVALID':
      return _$gCheckoutErrorCodeINVALID;
    case 'INVALID_SHIPPING_METHOD':
      return _$gCheckoutErrorCodeINVALID_SHIPPING_METHOD;
    case 'NOT_FOUND':
      return _$gCheckoutErrorCodeNOT_FOUND;
    case 'PAYMENT_ERROR':
      return _$gCheckoutErrorCodePAYMENT_ERROR;
    case 'QUANTITY_GREATER_THAN_LIMIT':
      return _$gCheckoutErrorCodeQUANTITY_GREATER_THAN_LIMIT;
    case 'REQUIRED':
      return _$gCheckoutErrorCodeREQUIRED;
    case 'SHIPPING_ADDRESS_NOT_SET':
      return _$gCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET;
    case 'SHIPPING_METHOD_NOT_APPLICABLE':
      return _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_APPLICABLE;
    case 'DELIVERY_METHOD_NOT_APPLICABLE':
      return _$gCheckoutErrorCodeDELIVERY_METHOD_NOT_APPLICABLE;
    case 'SHIPPING_METHOD_NOT_SET':
      return _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_SET;
    case 'SHIPPING_NOT_REQUIRED':
      return _$gCheckoutErrorCodeSHIPPING_NOT_REQUIRED;
    case 'TAX_ERROR':
      return _$gCheckoutErrorCodeTAX_ERROR;
    case 'UNIQUE':
      return _$gCheckoutErrorCodeUNIQUE;
    case 'VOUCHER_NOT_APPLICABLE':
      return _$gCheckoutErrorCodeVOUCHER_NOT_APPLICABLE;
    case 'GIFT_CARD_NOT_APPLICABLE':
      return _$gCheckoutErrorCodeGIFT_CARD_NOT_APPLICABLE;
    case 'ZERO_QUANTITY':
      return _$gCheckoutErrorCodeZERO_QUANTITY;
    case 'MISSING_CHANNEL_SLUG':
      return _$gCheckoutErrorCodeMISSING_CHANNEL_SLUG;
    case 'CHANNEL_INACTIVE':
      return _$gCheckoutErrorCodeCHANNEL_INACTIVE;
    case 'UNAVAILABLE_VARIANT_IN_CHANNEL':
      return _$gCheckoutErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL;
    case 'EMAIL_NOT_SET':
      return _$gCheckoutErrorCodeEMAIL_NOT_SET;
    case 'NO_LINES':
      return _$gCheckoutErrorCodeNO_LINES;
    case 'INACTIVE_PAYMENT':
      return _$gCheckoutErrorCodeINACTIVE_PAYMENT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCheckoutErrorCode> _$gCheckoutErrorCodeValues =
    new BuiltSet<GCheckoutErrorCode>(const <GCheckoutErrorCode>[
  _$gCheckoutErrorCodeBILLING_ADDRESS_NOT_SET,
  _$gCheckoutErrorCodeCHECKOUT_NOT_FULLY_PAID,
  _$gCheckoutErrorCodeGRAPHQL_ERROR,
  _$gCheckoutErrorCodePRODUCT_NOT_PUBLISHED,
  _$gCheckoutErrorCodePRODUCT_UNAVAILABLE_FOR_PURCHASE,
  _$gCheckoutErrorCodeINSUFFICIENT_STOCK,
  _$gCheckoutErrorCodeINVALID,
  _$gCheckoutErrorCodeINVALID_SHIPPING_METHOD,
  _$gCheckoutErrorCodeNOT_FOUND,
  _$gCheckoutErrorCodePAYMENT_ERROR,
  _$gCheckoutErrorCodeQUANTITY_GREATER_THAN_LIMIT,
  _$gCheckoutErrorCodeREQUIRED,
  _$gCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET,
  _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_APPLICABLE,
  _$gCheckoutErrorCodeDELIVERY_METHOD_NOT_APPLICABLE,
  _$gCheckoutErrorCodeSHIPPING_METHOD_NOT_SET,
  _$gCheckoutErrorCodeSHIPPING_NOT_REQUIRED,
  _$gCheckoutErrorCodeTAX_ERROR,
  _$gCheckoutErrorCodeUNIQUE,
  _$gCheckoutErrorCodeVOUCHER_NOT_APPLICABLE,
  _$gCheckoutErrorCodeGIFT_CARD_NOT_APPLICABLE,
  _$gCheckoutErrorCodeZERO_QUANTITY,
  _$gCheckoutErrorCodeMISSING_CHANNEL_SLUG,
  _$gCheckoutErrorCodeCHANNEL_INACTIVE,
  _$gCheckoutErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL,
  _$gCheckoutErrorCodeEMAIL_NOT_SET,
  _$gCheckoutErrorCodeNO_LINES,
  _$gCheckoutErrorCodeINACTIVE_PAYMENT,
]);

const GCheckoutSortField _$gCheckoutSortFieldCREATION_DATE =
    const GCheckoutSortField._('CREATION_DATE');
const GCheckoutSortField _$gCheckoutSortFieldCUSTOMER =
    const GCheckoutSortField._('CUSTOMER');
const GCheckoutSortField _$gCheckoutSortFieldPAYMENT =
    const GCheckoutSortField._('PAYMENT');

GCheckoutSortField _$gCheckoutSortFieldValueOf(String name) {
  switch (name) {
    case 'CREATION_DATE':
      return _$gCheckoutSortFieldCREATION_DATE;
    case 'CUSTOMER':
      return _$gCheckoutSortFieldCUSTOMER;
    case 'PAYMENT':
      return _$gCheckoutSortFieldPAYMENT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCheckoutSortField> _$gCheckoutSortFieldValues =
    new BuiltSet<GCheckoutSortField>(const <GCheckoutSortField>[
  _$gCheckoutSortFieldCREATION_DATE,
  _$gCheckoutSortFieldCUSTOMER,
  _$gCheckoutSortFieldPAYMENT,
]);

const GCollectionErrorCode _$gCollectionErrorCodeDUPLICATED_INPUT_ITEM =
    const GCollectionErrorCode._('DUPLICATED_INPUT_ITEM');
const GCollectionErrorCode _$gCollectionErrorCodeGRAPHQL_ERROR =
    const GCollectionErrorCode._('GRAPHQL_ERROR');
const GCollectionErrorCode _$gCollectionErrorCodeINVALID =
    const GCollectionErrorCode._('INVALID');
const GCollectionErrorCode _$gCollectionErrorCodeNOT_FOUND =
    const GCollectionErrorCode._('NOT_FOUND');
const GCollectionErrorCode _$gCollectionErrorCodeREQUIRED =
    const GCollectionErrorCode._('REQUIRED');
const GCollectionErrorCode _$gCollectionErrorCodeUNIQUE =
    const GCollectionErrorCode._('UNIQUE');
const GCollectionErrorCode
    _$gCollectionErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT =
    const GCollectionErrorCode._('CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT');

GCollectionErrorCode _$gCollectionErrorCodeValueOf(String name) {
  switch (name) {
    case 'DUPLICATED_INPUT_ITEM':
      return _$gCollectionErrorCodeDUPLICATED_INPUT_ITEM;
    case 'GRAPHQL_ERROR':
      return _$gCollectionErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gCollectionErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gCollectionErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gCollectionErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gCollectionErrorCodeUNIQUE;
    case 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT':
      return _$gCollectionErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCollectionErrorCode> _$gCollectionErrorCodeValues =
    new BuiltSet<GCollectionErrorCode>(const <GCollectionErrorCode>[
  _$gCollectionErrorCodeDUPLICATED_INPUT_ITEM,
  _$gCollectionErrorCodeGRAPHQL_ERROR,
  _$gCollectionErrorCodeINVALID,
  _$gCollectionErrorCodeNOT_FOUND,
  _$gCollectionErrorCodeREQUIRED,
  _$gCollectionErrorCodeUNIQUE,
  _$gCollectionErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT,
]);

const GCollectionPublished _$gCollectionPublishedPUBLISHED =
    const GCollectionPublished._('PUBLISHED');
const GCollectionPublished _$gCollectionPublishedHIDDEN =
    const GCollectionPublished._('HIDDEN');

GCollectionPublished _$gCollectionPublishedValueOf(String name) {
  switch (name) {
    case 'PUBLISHED':
      return _$gCollectionPublishedPUBLISHED;
    case 'HIDDEN':
      return _$gCollectionPublishedHIDDEN;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCollectionPublished> _$gCollectionPublishedValues =
    new BuiltSet<GCollectionPublished>(const <GCollectionPublished>[
  _$gCollectionPublishedPUBLISHED,
  _$gCollectionPublishedHIDDEN,
]);

const GCollectionSortField _$gCollectionSortFieldNAME =
    const GCollectionSortField._('NAME');
const GCollectionSortField _$gCollectionSortFieldAVAILABILITY =
    const GCollectionSortField._('AVAILABILITY');
const GCollectionSortField _$gCollectionSortFieldPRODUCT_COUNT =
    const GCollectionSortField._('PRODUCT_COUNT');
const GCollectionSortField _$gCollectionSortFieldPUBLICATION_DATE =
    const GCollectionSortField._('PUBLICATION_DATE');
const GCollectionSortField _$gCollectionSortFieldPUBLISHED_AT =
    const GCollectionSortField._('PUBLISHED_AT');

GCollectionSortField _$gCollectionSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gCollectionSortFieldNAME;
    case 'AVAILABILITY':
      return _$gCollectionSortFieldAVAILABILITY;
    case 'PRODUCT_COUNT':
      return _$gCollectionSortFieldPRODUCT_COUNT;
    case 'PUBLICATION_DATE':
      return _$gCollectionSortFieldPUBLICATION_DATE;
    case 'PUBLISHED_AT':
      return _$gCollectionSortFieldPUBLISHED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCollectionSortField> _$gCollectionSortFieldValues =
    new BuiltSet<GCollectionSortField>(const <GCollectionSortField>[
  _$gCollectionSortFieldNAME,
  _$gCollectionSortFieldAVAILABILITY,
  _$gCollectionSortFieldPRODUCT_COUNT,
  _$gCollectionSortFieldPUBLICATION_DATE,
  _$gCollectionSortFieldPUBLISHED_AT,
]);

const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumSTRING =
    const GConfigurationTypeFieldEnum._('STRING');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumMULTILINE =
    const GConfigurationTypeFieldEnum._('MULTILINE');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumBOOLEAN =
    const GConfigurationTypeFieldEnum._('BOOLEAN');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumSECRET =
    const GConfigurationTypeFieldEnum._('SECRET');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumPASSWORD =
    const GConfigurationTypeFieldEnum._('PASSWORD');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumSECRETMULTILINE =
    const GConfigurationTypeFieldEnum._('SECRETMULTILINE');
const GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumOUTPUT =
    const GConfigurationTypeFieldEnum._('OUTPUT');

GConfigurationTypeFieldEnum _$gConfigurationTypeFieldEnumValueOf(String name) {
  switch (name) {
    case 'STRING':
      return _$gConfigurationTypeFieldEnumSTRING;
    case 'MULTILINE':
      return _$gConfigurationTypeFieldEnumMULTILINE;
    case 'BOOLEAN':
      return _$gConfigurationTypeFieldEnumBOOLEAN;
    case 'SECRET':
      return _$gConfigurationTypeFieldEnumSECRET;
    case 'PASSWORD':
      return _$gConfigurationTypeFieldEnumPASSWORD;
    case 'SECRETMULTILINE':
      return _$gConfigurationTypeFieldEnumSECRETMULTILINE;
    case 'OUTPUT':
      return _$gConfigurationTypeFieldEnumOUTPUT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GConfigurationTypeFieldEnum>
    _$gConfigurationTypeFieldEnumValues = new BuiltSet<
        GConfigurationTypeFieldEnum>(const <GConfigurationTypeFieldEnum>[
  _$gConfigurationTypeFieldEnumSTRING,
  _$gConfigurationTypeFieldEnumMULTILINE,
  _$gConfigurationTypeFieldEnumBOOLEAN,
  _$gConfigurationTypeFieldEnumSECRET,
  _$gConfigurationTypeFieldEnumPASSWORD,
  _$gConfigurationTypeFieldEnumSECRETMULTILINE,
  _$gConfigurationTypeFieldEnumOUTPUT,
]);

const GCountryCode _$gCountryCodeAF = const GCountryCode._('AF');
const GCountryCode _$gCountryCodeAX = const GCountryCode._('AX');
const GCountryCode _$gCountryCodeAL = const GCountryCode._('AL');
const GCountryCode _$gCountryCodeDZ = const GCountryCode._('DZ');
const GCountryCode _$gCountryCodeAS = const GCountryCode._('AS');
const GCountryCode _$gCountryCodeAD = const GCountryCode._('AD');
const GCountryCode _$gCountryCodeAO = const GCountryCode._('AO');
const GCountryCode _$gCountryCodeAI = const GCountryCode._('AI');
const GCountryCode _$gCountryCodeAQ = const GCountryCode._('AQ');
const GCountryCode _$gCountryCodeAG = const GCountryCode._('AG');
const GCountryCode _$gCountryCodeAR = const GCountryCode._('AR');
const GCountryCode _$gCountryCodeAM = const GCountryCode._('AM');
const GCountryCode _$gCountryCodeAW = const GCountryCode._('AW');
const GCountryCode _$gCountryCodeAU = const GCountryCode._('AU');
const GCountryCode _$gCountryCodeAT = const GCountryCode._('AT');
const GCountryCode _$gCountryCodeAZ = const GCountryCode._('AZ');
const GCountryCode _$gCountryCodeBS = const GCountryCode._('BS');
const GCountryCode _$gCountryCodeBH = const GCountryCode._('BH');
const GCountryCode _$gCountryCodeBD = const GCountryCode._('BD');
const GCountryCode _$gCountryCodeBB = const GCountryCode._('BB');
const GCountryCode _$gCountryCodeBY = const GCountryCode._('BY');
const GCountryCode _$gCountryCodeBE = const GCountryCode._('BE');
const GCountryCode _$gCountryCodeBZ = const GCountryCode._('BZ');
const GCountryCode _$gCountryCodeBJ = const GCountryCode._('BJ');
const GCountryCode _$gCountryCodeBM = const GCountryCode._('BM');
const GCountryCode _$gCountryCodeBT = const GCountryCode._('BT');
const GCountryCode _$gCountryCodeBO = const GCountryCode._('BO');
const GCountryCode _$gCountryCodeBQ = const GCountryCode._('BQ');
const GCountryCode _$gCountryCodeBA = const GCountryCode._('BA');
const GCountryCode _$gCountryCodeBW = const GCountryCode._('BW');
const GCountryCode _$gCountryCodeBV = const GCountryCode._('BV');
const GCountryCode _$gCountryCodeBR = const GCountryCode._('BR');
const GCountryCode _$gCountryCodeIO = const GCountryCode._('IO');
const GCountryCode _$gCountryCodeBN = const GCountryCode._('BN');
const GCountryCode _$gCountryCodeBG = const GCountryCode._('BG');
const GCountryCode _$gCountryCodeBF = const GCountryCode._('BF');
const GCountryCode _$gCountryCodeBI = const GCountryCode._('BI');
const GCountryCode _$gCountryCodeCV = const GCountryCode._('CV');
const GCountryCode _$gCountryCodeKH = const GCountryCode._('KH');
const GCountryCode _$gCountryCodeCM = const GCountryCode._('CM');
const GCountryCode _$gCountryCodeCA = const GCountryCode._('CA');
const GCountryCode _$gCountryCodeKY = const GCountryCode._('KY');
const GCountryCode _$gCountryCodeCF = const GCountryCode._('CF');
const GCountryCode _$gCountryCodeTD = const GCountryCode._('TD');
const GCountryCode _$gCountryCodeCL = const GCountryCode._('CL');
const GCountryCode _$gCountryCodeCN = const GCountryCode._('CN');
const GCountryCode _$gCountryCodeCX = const GCountryCode._('CX');
const GCountryCode _$gCountryCodeCC = const GCountryCode._('CC');
const GCountryCode _$gCountryCodeCO = const GCountryCode._('CO');
const GCountryCode _$gCountryCodeKM = const GCountryCode._('KM');
const GCountryCode _$gCountryCodeCG = const GCountryCode._('CG');
const GCountryCode _$gCountryCodeCD = const GCountryCode._('CD');
const GCountryCode _$gCountryCodeCK = const GCountryCode._('CK');
const GCountryCode _$gCountryCodeCR = const GCountryCode._('CR');
const GCountryCode _$gCountryCodeCI = const GCountryCode._('CI');
const GCountryCode _$gCountryCodeHR = const GCountryCode._('HR');
const GCountryCode _$gCountryCodeCU = const GCountryCode._('CU');
const GCountryCode _$gCountryCodeCW = const GCountryCode._('CW');
const GCountryCode _$gCountryCodeCY = const GCountryCode._('CY');
const GCountryCode _$gCountryCodeCZ = const GCountryCode._('CZ');
const GCountryCode _$gCountryCodeDK = const GCountryCode._('DK');
const GCountryCode _$gCountryCodeDJ = const GCountryCode._('DJ');
const GCountryCode _$gCountryCodeDM = const GCountryCode._('DM');
const GCountryCode _$gCountryCodeDO = const GCountryCode._('DO');
const GCountryCode _$gCountryCodeEC = const GCountryCode._('EC');
const GCountryCode _$gCountryCodeEG = const GCountryCode._('EG');
const GCountryCode _$gCountryCodeSV = const GCountryCode._('SV');
const GCountryCode _$gCountryCodeGQ = const GCountryCode._('GQ');
const GCountryCode _$gCountryCodeER = const GCountryCode._('ER');
const GCountryCode _$gCountryCodeEE = const GCountryCode._('EE');
const GCountryCode _$gCountryCodeSZ = const GCountryCode._('SZ');
const GCountryCode _$gCountryCodeET = const GCountryCode._('ET');
const GCountryCode _$gCountryCodeEU = const GCountryCode._('EU');
const GCountryCode _$gCountryCodeFK = const GCountryCode._('FK');
const GCountryCode _$gCountryCodeFO = const GCountryCode._('FO');
const GCountryCode _$gCountryCodeFJ = const GCountryCode._('FJ');
const GCountryCode _$gCountryCodeFI = const GCountryCode._('FI');
const GCountryCode _$gCountryCodeFR = const GCountryCode._('FR');
const GCountryCode _$gCountryCodeGF = const GCountryCode._('GF');
const GCountryCode _$gCountryCodePF = const GCountryCode._('PF');
const GCountryCode _$gCountryCodeTF = const GCountryCode._('TF');
const GCountryCode _$gCountryCodeGA = const GCountryCode._('GA');
const GCountryCode _$gCountryCodeGM = const GCountryCode._('GM');
const GCountryCode _$gCountryCodeGE = const GCountryCode._('GE');
const GCountryCode _$gCountryCodeDE = const GCountryCode._('DE');
const GCountryCode _$gCountryCodeGH = const GCountryCode._('GH');
const GCountryCode _$gCountryCodeGI = const GCountryCode._('GI');
const GCountryCode _$gCountryCodeGR = const GCountryCode._('GR');
const GCountryCode _$gCountryCodeGL = const GCountryCode._('GL');
const GCountryCode _$gCountryCodeGD = const GCountryCode._('GD');
const GCountryCode _$gCountryCodeGP = const GCountryCode._('GP');
const GCountryCode _$gCountryCodeGU = const GCountryCode._('GU');
const GCountryCode _$gCountryCodeGT = const GCountryCode._('GT');
const GCountryCode _$gCountryCodeGG = const GCountryCode._('GG');
const GCountryCode _$gCountryCodeGN = const GCountryCode._('GN');
const GCountryCode _$gCountryCodeGW = const GCountryCode._('GW');
const GCountryCode _$gCountryCodeGY = const GCountryCode._('GY');
const GCountryCode _$gCountryCodeHT = const GCountryCode._('HT');
const GCountryCode _$gCountryCodeHM = const GCountryCode._('HM');
const GCountryCode _$gCountryCodeVA = const GCountryCode._('VA');
const GCountryCode _$gCountryCodeHN = const GCountryCode._('HN');
const GCountryCode _$gCountryCodeHK = const GCountryCode._('HK');
const GCountryCode _$gCountryCodeHU = const GCountryCode._('HU');
const GCountryCode _$gCountryCodeIS = const GCountryCode._('IS');
const GCountryCode _$gCountryCodeIN = const GCountryCode._('IN');
const GCountryCode _$gCountryCodeID = const GCountryCode._('ID');
const GCountryCode _$gCountryCodeIR = const GCountryCode._('IR');
const GCountryCode _$gCountryCodeIQ = const GCountryCode._('IQ');
const GCountryCode _$gCountryCodeIE = const GCountryCode._('IE');
const GCountryCode _$gCountryCodeIM = const GCountryCode._('IM');
const GCountryCode _$gCountryCodeIL = const GCountryCode._('IL');
const GCountryCode _$gCountryCodeIT = const GCountryCode._('IT');
const GCountryCode _$gCountryCodeJM = const GCountryCode._('JM');
const GCountryCode _$gCountryCodeJP = const GCountryCode._('JP');
const GCountryCode _$gCountryCodeJE = const GCountryCode._('JE');
const GCountryCode _$gCountryCodeJO = const GCountryCode._('JO');
const GCountryCode _$gCountryCodeKZ = const GCountryCode._('KZ');
const GCountryCode _$gCountryCodeKE = const GCountryCode._('KE');
const GCountryCode _$gCountryCodeKI = const GCountryCode._('KI');
const GCountryCode _$gCountryCodeKW = const GCountryCode._('KW');
const GCountryCode _$gCountryCodeKG = const GCountryCode._('KG');
const GCountryCode _$gCountryCodeLA = const GCountryCode._('LA');
const GCountryCode _$gCountryCodeLV = const GCountryCode._('LV');
const GCountryCode _$gCountryCodeLB = const GCountryCode._('LB');
const GCountryCode _$gCountryCodeLS = const GCountryCode._('LS');
const GCountryCode _$gCountryCodeLR = const GCountryCode._('LR');
const GCountryCode _$gCountryCodeLY = const GCountryCode._('LY');
const GCountryCode _$gCountryCodeLI = const GCountryCode._('LI');
const GCountryCode _$gCountryCodeLT = const GCountryCode._('LT');
const GCountryCode _$gCountryCodeLU = const GCountryCode._('LU');
const GCountryCode _$gCountryCodeMO = const GCountryCode._('MO');
const GCountryCode _$gCountryCodeMG = const GCountryCode._('MG');
const GCountryCode _$gCountryCodeMW = const GCountryCode._('MW');
const GCountryCode _$gCountryCodeMY = const GCountryCode._('MY');
const GCountryCode _$gCountryCodeMV = const GCountryCode._('MV');
const GCountryCode _$gCountryCodeML = const GCountryCode._('ML');
const GCountryCode _$gCountryCodeMT = const GCountryCode._('MT');
const GCountryCode _$gCountryCodeMH = const GCountryCode._('MH');
const GCountryCode _$gCountryCodeMQ = const GCountryCode._('MQ');
const GCountryCode _$gCountryCodeMR = const GCountryCode._('MR');
const GCountryCode _$gCountryCodeMU = const GCountryCode._('MU');
const GCountryCode _$gCountryCodeYT = const GCountryCode._('YT');
const GCountryCode _$gCountryCodeMX = const GCountryCode._('MX');
const GCountryCode _$gCountryCodeFM = const GCountryCode._('FM');
const GCountryCode _$gCountryCodeMD = const GCountryCode._('MD');
const GCountryCode _$gCountryCodeMC = const GCountryCode._('MC');
const GCountryCode _$gCountryCodeMN = const GCountryCode._('MN');
const GCountryCode _$gCountryCodeME = const GCountryCode._('ME');
const GCountryCode _$gCountryCodeMS = const GCountryCode._('MS');
const GCountryCode _$gCountryCodeMA = const GCountryCode._('MA');
const GCountryCode _$gCountryCodeMZ = const GCountryCode._('MZ');
const GCountryCode _$gCountryCodeMM = const GCountryCode._('MM');
const GCountryCode _$gCountryCodeNA = const GCountryCode._('NA');
const GCountryCode _$gCountryCodeNR = const GCountryCode._('NR');
const GCountryCode _$gCountryCodeNP = const GCountryCode._('NP');
const GCountryCode _$gCountryCodeNL = const GCountryCode._('NL');
const GCountryCode _$gCountryCodeNC = const GCountryCode._('NC');
const GCountryCode _$gCountryCodeNZ = const GCountryCode._('NZ');
const GCountryCode _$gCountryCodeNI = const GCountryCode._('NI');
const GCountryCode _$gCountryCodeNE = const GCountryCode._('NE');
const GCountryCode _$gCountryCodeNG = const GCountryCode._('NG');
const GCountryCode _$gCountryCodeNU = const GCountryCode._('NU');
const GCountryCode _$gCountryCodeNF = const GCountryCode._('NF');
const GCountryCode _$gCountryCodeKP = const GCountryCode._('KP');
const GCountryCode _$gCountryCodeMK = const GCountryCode._('MK');
const GCountryCode _$gCountryCodeMP = const GCountryCode._('MP');
const GCountryCode _$gCountryCodeNO = const GCountryCode._('NO');
const GCountryCode _$gCountryCodeOM = const GCountryCode._('OM');
const GCountryCode _$gCountryCodePK = const GCountryCode._('PK');
const GCountryCode _$gCountryCodePW = const GCountryCode._('PW');
const GCountryCode _$gCountryCodePS = const GCountryCode._('PS');
const GCountryCode _$gCountryCodePA = const GCountryCode._('PA');
const GCountryCode _$gCountryCodePG = const GCountryCode._('PG');
const GCountryCode _$gCountryCodePY = const GCountryCode._('PY');
const GCountryCode _$gCountryCodePE = const GCountryCode._('PE');
const GCountryCode _$gCountryCodePH = const GCountryCode._('PH');
const GCountryCode _$gCountryCodePN = const GCountryCode._('PN');
const GCountryCode _$gCountryCodePL = const GCountryCode._('PL');
const GCountryCode _$gCountryCodePT = const GCountryCode._('PT');
const GCountryCode _$gCountryCodePR = const GCountryCode._('PR');
const GCountryCode _$gCountryCodeQA = const GCountryCode._('QA');
const GCountryCode _$gCountryCodeRE = const GCountryCode._('RE');
const GCountryCode _$gCountryCodeRO = const GCountryCode._('RO');
const GCountryCode _$gCountryCodeRU = const GCountryCode._('RU');
const GCountryCode _$gCountryCodeRW = const GCountryCode._('RW');
const GCountryCode _$gCountryCodeBL = const GCountryCode._('BL');
const GCountryCode _$gCountryCodeSH = const GCountryCode._('SH');
const GCountryCode _$gCountryCodeKN = const GCountryCode._('KN');
const GCountryCode _$gCountryCodeLC = const GCountryCode._('LC');
const GCountryCode _$gCountryCodeMF = const GCountryCode._('MF');
const GCountryCode _$gCountryCodePM = const GCountryCode._('PM');
const GCountryCode _$gCountryCodeVC = const GCountryCode._('VC');
const GCountryCode _$gCountryCodeWS = const GCountryCode._('WS');
const GCountryCode _$gCountryCodeSM = const GCountryCode._('SM');
const GCountryCode _$gCountryCodeST = const GCountryCode._('ST');
const GCountryCode _$gCountryCodeSA = const GCountryCode._('SA');
const GCountryCode _$gCountryCodeSN = const GCountryCode._('SN');
const GCountryCode _$gCountryCodeRS = const GCountryCode._('RS');
const GCountryCode _$gCountryCodeSC = const GCountryCode._('SC');
const GCountryCode _$gCountryCodeSL = const GCountryCode._('SL');
const GCountryCode _$gCountryCodeSG = const GCountryCode._('SG');
const GCountryCode _$gCountryCodeSX = const GCountryCode._('SX');
const GCountryCode _$gCountryCodeSK = const GCountryCode._('SK');
const GCountryCode _$gCountryCodeSI = const GCountryCode._('SI');
const GCountryCode _$gCountryCodeSB = const GCountryCode._('SB');
const GCountryCode _$gCountryCodeSO = const GCountryCode._('SO');
const GCountryCode _$gCountryCodeZA = const GCountryCode._('ZA');
const GCountryCode _$gCountryCodeGS = const GCountryCode._('GS');
const GCountryCode _$gCountryCodeKR = const GCountryCode._('KR');
const GCountryCode _$gCountryCodeSS = const GCountryCode._('SS');
const GCountryCode _$gCountryCodeES = const GCountryCode._('ES');
const GCountryCode _$gCountryCodeLK = const GCountryCode._('LK');
const GCountryCode _$gCountryCodeSD = const GCountryCode._('SD');
const GCountryCode _$gCountryCodeSR = const GCountryCode._('SR');
const GCountryCode _$gCountryCodeSJ = const GCountryCode._('SJ');
const GCountryCode _$gCountryCodeSE = const GCountryCode._('SE');
const GCountryCode _$gCountryCodeCH = const GCountryCode._('CH');
const GCountryCode _$gCountryCodeSY = const GCountryCode._('SY');
const GCountryCode _$gCountryCodeTW = const GCountryCode._('TW');
const GCountryCode _$gCountryCodeTJ = const GCountryCode._('TJ');
const GCountryCode _$gCountryCodeTZ = const GCountryCode._('TZ');
const GCountryCode _$gCountryCodeTH = const GCountryCode._('TH');
const GCountryCode _$gCountryCodeTL = const GCountryCode._('TL');
const GCountryCode _$gCountryCodeTG = const GCountryCode._('TG');
const GCountryCode _$gCountryCodeTK = const GCountryCode._('TK');
const GCountryCode _$gCountryCodeTO = const GCountryCode._('TO');
const GCountryCode _$gCountryCodeTT = const GCountryCode._('TT');
const GCountryCode _$gCountryCodeTN = const GCountryCode._('TN');
const GCountryCode _$gCountryCodeTR = const GCountryCode._('TR');
const GCountryCode _$gCountryCodeTM = const GCountryCode._('TM');
const GCountryCode _$gCountryCodeTC = const GCountryCode._('TC');
const GCountryCode _$gCountryCodeTV = const GCountryCode._('TV');
const GCountryCode _$gCountryCodeUG = const GCountryCode._('UG');
const GCountryCode _$gCountryCodeUA = const GCountryCode._('UA');
const GCountryCode _$gCountryCodeAE = const GCountryCode._('AE');
const GCountryCode _$gCountryCodeGB = const GCountryCode._('GB');
const GCountryCode _$gCountryCodeUM = const GCountryCode._('UM');
const GCountryCode _$gCountryCodeUS = const GCountryCode._('US');
const GCountryCode _$gCountryCodeUY = const GCountryCode._('UY');
const GCountryCode _$gCountryCodeUZ = const GCountryCode._('UZ');
const GCountryCode _$gCountryCodeVU = const GCountryCode._('VU');
const GCountryCode _$gCountryCodeVE = const GCountryCode._('VE');
const GCountryCode _$gCountryCodeVN = const GCountryCode._('VN');
const GCountryCode _$gCountryCodeVG = const GCountryCode._('VG');
const GCountryCode _$gCountryCodeVI = const GCountryCode._('VI');
const GCountryCode _$gCountryCodeWF = const GCountryCode._('WF');
const GCountryCode _$gCountryCodeEH = const GCountryCode._('EH');
const GCountryCode _$gCountryCodeYE = const GCountryCode._('YE');
const GCountryCode _$gCountryCodeZM = const GCountryCode._('ZM');
const GCountryCode _$gCountryCodeZW = const GCountryCode._('ZW');

GCountryCode _$gCountryCodeValueOf(String name) {
  switch (name) {
    case 'AF':
      return _$gCountryCodeAF;
    case 'AX':
      return _$gCountryCodeAX;
    case 'AL':
      return _$gCountryCodeAL;
    case 'DZ':
      return _$gCountryCodeDZ;
    case 'AS':
      return _$gCountryCodeAS;
    case 'AD':
      return _$gCountryCodeAD;
    case 'AO':
      return _$gCountryCodeAO;
    case 'AI':
      return _$gCountryCodeAI;
    case 'AQ':
      return _$gCountryCodeAQ;
    case 'AG':
      return _$gCountryCodeAG;
    case 'AR':
      return _$gCountryCodeAR;
    case 'AM':
      return _$gCountryCodeAM;
    case 'AW':
      return _$gCountryCodeAW;
    case 'AU':
      return _$gCountryCodeAU;
    case 'AT':
      return _$gCountryCodeAT;
    case 'AZ':
      return _$gCountryCodeAZ;
    case 'BS':
      return _$gCountryCodeBS;
    case 'BH':
      return _$gCountryCodeBH;
    case 'BD':
      return _$gCountryCodeBD;
    case 'BB':
      return _$gCountryCodeBB;
    case 'BY':
      return _$gCountryCodeBY;
    case 'BE':
      return _$gCountryCodeBE;
    case 'BZ':
      return _$gCountryCodeBZ;
    case 'BJ':
      return _$gCountryCodeBJ;
    case 'BM':
      return _$gCountryCodeBM;
    case 'BT':
      return _$gCountryCodeBT;
    case 'BO':
      return _$gCountryCodeBO;
    case 'BQ':
      return _$gCountryCodeBQ;
    case 'BA':
      return _$gCountryCodeBA;
    case 'BW':
      return _$gCountryCodeBW;
    case 'BV':
      return _$gCountryCodeBV;
    case 'BR':
      return _$gCountryCodeBR;
    case 'IO':
      return _$gCountryCodeIO;
    case 'BN':
      return _$gCountryCodeBN;
    case 'BG':
      return _$gCountryCodeBG;
    case 'BF':
      return _$gCountryCodeBF;
    case 'BI':
      return _$gCountryCodeBI;
    case 'CV':
      return _$gCountryCodeCV;
    case 'KH':
      return _$gCountryCodeKH;
    case 'CM':
      return _$gCountryCodeCM;
    case 'CA':
      return _$gCountryCodeCA;
    case 'KY':
      return _$gCountryCodeKY;
    case 'CF':
      return _$gCountryCodeCF;
    case 'TD':
      return _$gCountryCodeTD;
    case 'CL':
      return _$gCountryCodeCL;
    case 'CN':
      return _$gCountryCodeCN;
    case 'CX':
      return _$gCountryCodeCX;
    case 'CC':
      return _$gCountryCodeCC;
    case 'CO':
      return _$gCountryCodeCO;
    case 'KM':
      return _$gCountryCodeKM;
    case 'CG':
      return _$gCountryCodeCG;
    case 'CD':
      return _$gCountryCodeCD;
    case 'CK':
      return _$gCountryCodeCK;
    case 'CR':
      return _$gCountryCodeCR;
    case 'CI':
      return _$gCountryCodeCI;
    case 'HR':
      return _$gCountryCodeHR;
    case 'CU':
      return _$gCountryCodeCU;
    case 'CW':
      return _$gCountryCodeCW;
    case 'CY':
      return _$gCountryCodeCY;
    case 'CZ':
      return _$gCountryCodeCZ;
    case 'DK':
      return _$gCountryCodeDK;
    case 'DJ':
      return _$gCountryCodeDJ;
    case 'DM':
      return _$gCountryCodeDM;
    case 'DO':
      return _$gCountryCodeDO;
    case 'EC':
      return _$gCountryCodeEC;
    case 'EG':
      return _$gCountryCodeEG;
    case 'SV':
      return _$gCountryCodeSV;
    case 'GQ':
      return _$gCountryCodeGQ;
    case 'ER':
      return _$gCountryCodeER;
    case 'EE':
      return _$gCountryCodeEE;
    case 'SZ':
      return _$gCountryCodeSZ;
    case 'ET':
      return _$gCountryCodeET;
    case 'EU':
      return _$gCountryCodeEU;
    case 'FK':
      return _$gCountryCodeFK;
    case 'FO':
      return _$gCountryCodeFO;
    case 'FJ':
      return _$gCountryCodeFJ;
    case 'FI':
      return _$gCountryCodeFI;
    case 'FR':
      return _$gCountryCodeFR;
    case 'GF':
      return _$gCountryCodeGF;
    case 'PF':
      return _$gCountryCodePF;
    case 'TF':
      return _$gCountryCodeTF;
    case 'GA':
      return _$gCountryCodeGA;
    case 'GM':
      return _$gCountryCodeGM;
    case 'GE':
      return _$gCountryCodeGE;
    case 'DE':
      return _$gCountryCodeDE;
    case 'GH':
      return _$gCountryCodeGH;
    case 'GI':
      return _$gCountryCodeGI;
    case 'GR':
      return _$gCountryCodeGR;
    case 'GL':
      return _$gCountryCodeGL;
    case 'GD':
      return _$gCountryCodeGD;
    case 'GP':
      return _$gCountryCodeGP;
    case 'GU':
      return _$gCountryCodeGU;
    case 'GT':
      return _$gCountryCodeGT;
    case 'GG':
      return _$gCountryCodeGG;
    case 'GN':
      return _$gCountryCodeGN;
    case 'GW':
      return _$gCountryCodeGW;
    case 'GY':
      return _$gCountryCodeGY;
    case 'HT':
      return _$gCountryCodeHT;
    case 'HM':
      return _$gCountryCodeHM;
    case 'VA':
      return _$gCountryCodeVA;
    case 'HN':
      return _$gCountryCodeHN;
    case 'HK':
      return _$gCountryCodeHK;
    case 'HU':
      return _$gCountryCodeHU;
    case 'IS':
      return _$gCountryCodeIS;
    case 'IN':
      return _$gCountryCodeIN;
    case 'ID':
      return _$gCountryCodeID;
    case 'IR':
      return _$gCountryCodeIR;
    case 'IQ':
      return _$gCountryCodeIQ;
    case 'IE':
      return _$gCountryCodeIE;
    case 'IM':
      return _$gCountryCodeIM;
    case 'IL':
      return _$gCountryCodeIL;
    case 'IT':
      return _$gCountryCodeIT;
    case 'JM':
      return _$gCountryCodeJM;
    case 'JP':
      return _$gCountryCodeJP;
    case 'JE':
      return _$gCountryCodeJE;
    case 'JO':
      return _$gCountryCodeJO;
    case 'KZ':
      return _$gCountryCodeKZ;
    case 'KE':
      return _$gCountryCodeKE;
    case 'KI':
      return _$gCountryCodeKI;
    case 'KW':
      return _$gCountryCodeKW;
    case 'KG':
      return _$gCountryCodeKG;
    case 'LA':
      return _$gCountryCodeLA;
    case 'LV':
      return _$gCountryCodeLV;
    case 'LB':
      return _$gCountryCodeLB;
    case 'LS':
      return _$gCountryCodeLS;
    case 'LR':
      return _$gCountryCodeLR;
    case 'LY':
      return _$gCountryCodeLY;
    case 'LI':
      return _$gCountryCodeLI;
    case 'LT':
      return _$gCountryCodeLT;
    case 'LU':
      return _$gCountryCodeLU;
    case 'MO':
      return _$gCountryCodeMO;
    case 'MG':
      return _$gCountryCodeMG;
    case 'MW':
      return _$gCountryCodeMW;
    case 'MY':
      return _$gCountryCodeMY;
    case 'MV':
      return _$gCountryCodeMV;
    case 'ML':
      return _$gCountryCodeML;
    case 'MT':
      return _$gCountryCodeMT;
    case 'MH':
      return _$gCountryCodeMH;
    case 'MQ':
      return _$gCountryCodeMQ;
    case 'MR':
      return _$gCountryCodeMR;
    case 'MU':
      return _$gCountryCodeMU;
    case 'YT':
      return _$gCountryCodeYT;
    case 'MX':
      return _$gCountryCodeMX;
    case 'FM':
      return _$gCountryCodeFM;
    case 'MD':
      return _$gCountryCodeMD;
    case 'MC':
      return _$gCountryCodeMC;
    case 'MN':
      return _$gCountryCodeMN;
    case 'ME':
      return _$gCountryCodeME;
    case 'MS':
      return _$gCountryCodeMS;
    case 'MA':
      return _$gCountryCodeMA;
    case 'MZ':
      return _$gCountryCodeMZ;
    case 'MM':
      return _$gCountryCodeMM;
    case 'NA':
      return _$gCountryCodeNA;
    case 'NR':
      return _$gCountryCodeNR;
    case 'NP':
      return _$gCountryCodeNP;
    case 'NL':
      return _$gCountryCodeNL;
    case 'NC':
      return _$gCountryCodeNC;
    case 'NZ':
      return _$gCountryCodeNZ;
    case 'NI':
      return _$gCountryCodeNI;
    case 'NE':
      return _$gCountryCodeNE;
    case 'NG':
      return _$gCountryCodeNG;
    case 'NU':
      return _$gCountryCodeNU;
    case 'NF':
      return _$gCountryCodeNF;
    case 'KP':
      return _$gCountryCodeKP;
    case 'MK':
      return _$gCountryCodeMK;
    case 'MP':
      return _$gCountryCodeMP;
    case 'NO':
      return _$gCountryCodeNO;
    case 'OM':
      return _$gCountryCodeOM;
    case 'PK':
      return _$gCountryCodePK;
    case 'PW':
      return _$gCountryCodePW;
    case 'PS':
      return _$gCountryCodePS;
    case 'PA':
      return _$gCountryCodePA;
    case 'PG':
      return _$gCountryCodePG;
    case 'PY':
      return _$gCountryCodePY;
    case 'PE':
      return _$gCountryCodePE;
    case 'PH':
      return _$gCountryCodePH;
    case 'PN':
      return _$gCountryCodePN;
    case 'PL':
      return _$gCountryCodePL;
    case 'PT':
      return _$gCountryCodePT;
    case 'PR':
      return _$gCountryCodePR;
    case 'QA':
      return _$gCountryCodeQA;
    case 'RE':
      return _$gCountryCodeRE;
    case 'RO':
      return _$gCountryCodeRO;
    case 'RU':
      return _$gCountryCodeRU;
    case 'RW':
      return _$gCountryCodeRW;
    case 'BL':
      return _$gCountryCodeBL;
    case 'SH':
      return _$gCountryCodeSH;
    case 'KN':
      return _$gCountryCodeKN;
    case 'LC':
      return _$gCountryCodeLC;
    case 'MF':
      return _$gCountryCodeMF;
    case 'PM':
      return _$gCountryCodePM;
    case 'VC':
      return _$gCountryCodeVC;
    case 'WS':
      return _$gCountryCodeWS;
    case 'SM':
      return _$gCountryCodeSM;
    case 'ST':
      return _$gCountryCodeST;
    case 'SA':
      return _$gCountryCodeSA;
    case 'SN':
      return _$gCountryCodeSN;
    case 'RS':
      return _$gCountryCodeRS;
    case 'SC':
      return _$gCountryCodeSC;
    case 'SL':
      return _$gCountryCodeSL;
    case 'SG':
      return _$gCountryCodeSG;
    case 'SX':
      return _$gCountryCodeSX;
    case 'SK':
      return _$gCountryCodeSK;
    case 'SI':
      return _$gCountryCodeSI;
    case 'SB':
      return _$gCountryCodeSB;
    case 'SO':
      return _$gCountryCodeSO;
    case 'ZA':
      return _$gCountryCodeZA;
    case 'GS':
      return _$gCountryCodeGS;
    case 'KR':
      return _$gCountryCodeKR;
    case 'SS':
      return _$gCountryCodeSS;
    case 'ES':
      return _$gCountryCodeES;
    case 'LK':
      return _$gCountryCodeLK;
    case 'SD':
      return _$gCountryCodeSD;
    case 'SR':
      return _$gCountryCodeSR;
    case 'SJ':
      return _$gCountryCodeSJ;
    case 'SE':
      return _$gCountryCodeSE;
    case 'CH':
      return _$gCountryCodeCH;
    case 'SY':
      return _$gCountryCodeSY;
    case 'TW':
      return _$gCountryCodeTW;
    case 'TJ':
      return _$gCountryCodeTJ;
    case 'TZ':
      return _$gCountryCodeTZ;
    case 'TH':
      return _$gCountryCodeTH;
    case 'TL':
      return _$gCountryCodeTL;
    case 'TG':
      return _$gCountryCodeTG;
    case 'TK':
      return _$gCountryCodeTK;
    case 'TO':
      return _$gCountryCodeTO;
    case 'TT':
      return _$gCountryCodeTT;
    case 'TN':
      return _$gCountryCodeTN;
    case 'TR':
      return _$gCountryCodeTR;
    case 'TM':
      return _$gCountryCodeTM;
    case 'TC':
      return _$gCountryCodeTC;
    case 'TV':
      return _$gCountryCodeTV;
    case 'UG':
      return _$gCountryCodeUG;
    case 'UA':
      return _$gCountryCodeUA;
    case 'AE':
      return _$gCountryCodeAE;
    case 'GB':
      return _$gCountryCodeGB;
    case 'UM':
      return _$gCountryCodeUM;
    case 'US':
      return _$gCountryCodeUS;
    case 'UY':
      return _$gCountryCodeUY;
    case 'UZ':
      return _$gCountryCodeUZ;
    case 'VU':
      return _$gCountryCodeVU;
    case 'VE':
      return _$gCountryCodeVE;
    case 'VN':
      return _$gCountryCodeVN;
    case 'VG':
      return _$gCountryCodeVG;
    case 'VI':
      return _$gCountryCodeVI;
    case 'WF':
      return _$gCountryCodeWF;
    case 'EH':
      return _$gCountryCodeEH;
    case 'YE':
      return _$gCountryCodeYE;
    case 'ZM':
      return _$gCountryCodeZM;
    case 'ZW':
      return _$gCountryCodeZW;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCountryCode> _$gCountryCodeValues =
    new BuiltSet<GCountryCode>(const <GCountryCode>[
  _$gCountryCodeAF,
  _$gCountryCodeAX,
  _$gCountryCodeAL,
  _$gCountryCodeDZ,
  _$gCountryCodeAS,
  _$gCountryCodeAD,
  _$gCountryCodeAO,
  _$gCountryCodeAI,
  _$gCountryCodeAQ,
  _$gCountryCodeAG,
  _$gCountryCodeAR,
  _$gCountryCodeAM,
  _$gCountryCodeAW,
  _$gCountryCodeAU,
  _$gCountryCodeAT,
  _$gCountryCodeAZ,
  _$gCountryCodeBS,
  _$gCountryCodeBH,
  _$gCountryCodeBD,
  _$gCountryCodeBB,
  _$gCountryCodeBY,
  _$gCountryCodeBE,
  _$gCountryCodeBZ,
  _$gCountryCodeBJ,
  _$gCountryCodeBM,
  _$gCountryCodeBT,
  _$gCountryCodeBO,
  _$gCountryCodeBQ,
  _$gCountryCodeBA,
  _$gCountryCodeBW,
  _$gCountryCodeBV,
  _$gCountryCodeBR,
  _$gCountryCodeIO,
  _$gCountryCodeBN,
  _$gCountryCodeBG,
  _$gCountryCodeBF,
  _$gCountryCodeBI,
  _$gCountryCodeCV,
  _$gCountryCodeKH,
  _$gCountryCodeCM,
  _$gCountryCodeCA,
  _$gCountryCodeKY,
  _$gCountryCodeCF,
  _$gCountryCodeTD,
  _$gCountryCodeCL,
  _$gCountryCodeCN,
  _$gCountryCodeCX,
  _$gCountryCodeCC,
  _$gCountryCodeCO,
  _$gCountryCodeKM,
  _$gCountryCodeCG,
  _$gCountryCodeCD,
  _$gCountryCodeCK,
  _$gCountryCodeCR,
  _$gCountryCodeCI,
  _$gCountryCodeHR,
  _$gCountryCodeCU,
  _$gCountryCodeCW,
  _$gCountryCodeCY,
  _$gCountryCodeCZ,
  _$gCountryCodeDK,
  _$gCountryCodeDJ,
  _$gCountryCodeDM,
  _$gCountryCodeDO,
  _$gCountryCodeEC,
  _$gCountryCodeEG,
  _$gCountryCodeSV,
  _$gCountryCodeGQ,
  _$gCountryCodeER,
  _$gCountryCodeEE,
  _$gCountryCodeSZ,
  _$gCountryCodeET,
  _$gCountryCodeEU,
  _$gCountryCodeFK,
  _$gCountryCodeFO,
  _$gCountryCodeFJ,
  _$gCountryCodeFI,
  _$gCountryCodeFR,
  _$gCountryCodeGF,
  _$gCountryCodePF,
  _$gCountryCodeTF,
  _$gCountryCodeGA,
  _$gCountryCodeGM,
  _$gCountryCodeGE,
  _$gCountryCodeDE,
  _$gCountryCodeGH,
  _$gCountryCodeGI,
  _$gCountryCodeGR,
  _$gCountryCodeGL,
  _$gCountryCodeGD,
  _$gCountryCodeGP,
  _$gCountryCodeGU,
  _$gCountryCodeGT,
  _$gCountryCodeGG,
  _$gCountryCodeGN,
  _$gCountryCodeGW,
  _$gCountryCodeGY,
  _$gCountryCodeHT,
  _$gCountryCodeHM,
  _$gCountryCodeVA,
  _$gCountryCodeHN,
  _$gCountryCodeHK,
  _$gCountryCodeHU,
  _$gCountryCodeIS,
  _$gCountryCodeIN,
  _$gCountryCodeID,
  _$gCountryCodeIR,
  _$gCountryCodeIQ,
  _$gCountryCodeIE,
  _$gCountryCodeIM,
  _$gCountryCodeIL,
  _$gCountryCodeIT,
  _$gCountryCodeJM,
  _$gCountryCodeJP,
  _$gCountryCodeJE,
  _$gCountryCodeJO,
  _$gCountryCodeKZ,
  _$gCountryCodeKE,
  _$gCountryCodeKI,
  _$gCountryCodeKW,
  _$gCountryCodeKG,
  _$gCountryCodeLA,
  _$gCountryCodeLV,
  _$gCountryCodeLB,
  _$gCountryCodeLS,
  _$gCountryCodeLR,
  _$gCountryCodeLY,
  _$gCountryCodeLI,
  _$gCountryCodeLT,
  _$gCountryCodeLU,
  _$gCountryCodeMO,
  _$gCountryCodeMG,
  _$gCountryCodeMW,
  _$gCountryCodeMY,
  _$gCountryCodeMV,
  _$gCountryCodeML,
  _$gCountryCodeMT,
  _$gCountryCodeMH,
  _$gCountryCodeMQ,
  _$gCountryCodeMR,
  _$gCountryCodeMU,
  _$gCountryCodeYT,
  _$gCountryCodeMX,
  _$gCountryCodeFM,
  _$gCountryCodeMD,
  _$gCountryCodeMC,
  _$gCountryCodeMN,
  _$gCountryCodeME,
  _$gCountryCodeMS,
  _$gCountryCodeMA,
  _$gCountryCodeMZ,
  _$gCountryCodeMM,
  _$gCountryCodeNA,
  _$gCountryCodeNR,
  _$gCountryCodeNP,
  _$gCountryCodeNL,
  _$gCountryCodeNC,
  _$gCountryCodeNZ,
  _$gCountryCodeNI,
  _$gCountryCodeNE,
  _$gCountryCodeNG,
  _$gCountryCodeNU,
  _$gCountryCodeNF,
  _$gCountryCodeKP,
  _$gCountryCodeMK,
  _$gCountryCodeMP,
  _$gCountryCodeNO,
  _$gCountryCodeOM,
  _$gCountryCodePK,
  _$gCountryCodePW,
  _$gCountryCodePS,
  _$gCountryCodePA,
  _$gCountryCodePG,
  _$gCountryCodePY,
  _$gCountryCodePE,
  _$gCountryCodePH,
  _$gCountryCodePN,
  _$gCountryCodePL,
  _$gCountryCodePT,
  _$gCountryCodePR,
  _$gCountryCodeQA,
  _$gCountryCodeRE,
  _$gCountryCodeRO,
  _$gCountryCodeRU,
  _$gCountryCodeRW,
  _$gCountryCodeBL,
  _$gCountryCodeSH,
  _$gCountryCodeKN,
  _$gCountryCodeLC,
  _$gCountryCodeMF,
  _$gCountryCodePM,
  _$gCountryCodeVC,
  _$gCountryCodeWS,
  _$gCountryCodeSM,
  _$gCountryCodeST,
  _$gCountryCodeSA,
  _$gCountryCodeSN,
  _$gCountryCodeRS,
  _$gCountryCodeSC,
  _$gCountryCodeSL,
  _$gCountryCodeSG,
  _$gCountryCodeSX,
  _$gCountryCodeSK,
  _$gCountryCodeSI,
  _$gCountryCodeSB,
  _$gCountryCodeSO,
  _$gCountryCodeZA,
  _$gCountryCodeGS,
  _$gCountryCodeKR,
  _$gCountryCodeSS,
  _$gCountryCodeES,
  _$gCountryCodeLK,
  _$gCountryCodeSD,
  _$gCountryCodeSR,
  _$gCountryCodeSJ,
  _$gCountryCodeSE,
  _$gCountryCodeCH,
  _$gCountryCodeSY,
  _$gCountryCodeTW,
  _$gCountryCodeTJ,
  _$gCountryCodeTZ,
  _$gCountryCodeTH,
  _$gCountryCodeTL,
  _$gCountryCodeTG,
  _$gCountryCodeTK,
  _$gCountryCodeTO,
  _$gCountryCodeTT,
  _$gCountryCodeTN,
  _$gCountryCodeTR,
  _$gCountryCodeTM,
  _$gCountryCodeTC,
  _$gCountryCodeTV,
  _$gCountryCodeUG,
  _$gCountryCodeUA,
  _$gCountryCodeAE,
  _$gCountryCodeGB,
  _$gCountryCodeUM,
  _$gCountryCodeUS,
  _$gCountryCodeUY,
  _$gCountryCodeUZ,
  _$gCountryCodeVU,
  _$gCountryCodeVE,
  _$gCountryCodeVN,
  _$gCountryCodeVG,
  _$gCountryCodeVI,
  _$gCountryCodeWF,
  _$gCountryCodeEH,
  _$gCountryCodeYE,
  _$gCountryCodeZM,
  _$gCountryCodeZW,
]);

const GCustomerEventsEnum _$gCustomerEventsEnumACCOUNT_CREATED =
    const GCustomerEventsEnum._('ACCOUNT_CREATED');
const GCustomerEventsEnum _$gCustomerEventsEnumACCOUNT_ACTIVATED =
    const GCustomerEventsEnum._('ACCOUNT_ACTIVATED');
const GCustomerEventsEnum _$gCustomerEventsEnumACCOUNT_DEACTIVATED =
    const GCustomerEventsEnum._('ACCOUNT_DEACTIVATED');
const GCustomerEventsEnum _$gCustomerEventsEnumPASSWORD_RESET_LINK_SENT =
    const GCustomerEventsEnum._('PASSWORD_RESET_LINK_SENT');
const GCustomerEventsEnum _$gCustomerEventsEnumPASSWORD_RESET =
    const GCustomerEventsEnum._('PASSWORD_RESET');
const GCustomerEventsEnum _$gCustomerEventsEnumEMAIL_CHANGED_REQUEST =
    const GCustomerEventsEnum._('EMAIL_CHANGED_REQUEST');
const GCustomerEventsEnum _$gCustomerEventsEnumPASSWORD_CHANGED =
    const GCustomerEventsEnum._('PASSWORD_CHANGED');
const GCustomerEventsEnum _$gCustomerEventsEnumEMAIL_CHANGED =
    const GCustomerEventsEnum._('EMAIL_CHANGED');
const GCustomerEventsEnum _$gCustomerEventsEnumPLACED_ORDER =
    const GCustomerEventsEnum._('PLACED_ORDER');
const GCustomerEventsEnum _$gCustomerEventsEnumNOTE_ADDED_TO_ORDER =
    const GCustomerEventsEnum._('NOTE_ADDED_TO_ORDER');
const GCustomerEventsEnum _$gCustomerEventsEnumDIGITAL_LINK_DOWNLOADED =
    const GCustomerEventsEnum._('DIGITAL_LINK_DOWNLOADED');
const GCustomerEventsEnum _$gCustomerEventsEnumCUSTOMER_DELETED =
    const GCustomerEventsEnum._('CUSTOMER_DELETED');
const GCustomerEventsEnum _$gCustomerEventsEnumNAME_ASSIGNED =
    const GCustomerEventsEnum._('NAME_ASSIGNED');
const GCustomerEventsEnum _$gCustomerEventsEnumEMAIL_ASSIGNED =
    const GCustomerEventsEnum._('EMAIL_ASSIGNED');
const GCustomerEventsEnum _$gCustomerEventsEnumNOTE_ADDED =
    const GCustomerEventsEnum._('NOTE_ADDED');

GCustomerEventsEnum _$gCustomerEventsEnumValueOf(String name) {
  switch (name) {
    case 'ACCOUNT_CREATED':
      return _$gCustomerEventsEnumACCOUNT_CREATED;
    case 'ACCOUNT_ACTIVATED':
      return _$gCustomerEventsEnumACCOUNT_ACTIVATED;
    case 'ACCOUNT_DEACTIVATED':
      return _$gCustomerEventsEnumACCOUNT_DEACTIVATED;
    case 'PASSWORD_RESET_LINK_SENT':
      return _$gCustomerEventsEnumPASSWORD_RESET_LINK_SENT;
    case 'PASSWORD_RESET':
      return _$gCustomerEventsEnumPASSWORD_RESET;
    case 'EMAIL_CHANGED_REQUEST':
      return _$gCustomerEventsEnumEMAIL_CHANGED_REQUEST;
    case 'PASSWORD_CHANGED':
      return _$gCustomerEventsEnumPASSWORD_CHANGED;
    case 'EMAIL_CHANGED':
      return _$gCustomerEventsEnumEMAIL_CHANGED;
    case 'PLACED_ORDER':
      return _$gCustomerEventsEnumPLACED_ORDER;
    case 'NOTE_ADDED_TO_ORDER':
      return _$gCustomerEventsEnumNOTE_ADDED_TO_ORDER;
    case 'DIGITAL_LINK_DOWNLOADED':
      return _$gCustomerEventsEnumDIGITAL_LINK_DOWNLOADED;
    case 'CUSTOMER_DELETED':
      return _$gCustomerEventsEnumCUSTOMER_DELETED;
    case 'NAME_ASSIGNED':
      return _$gCustomerEventsEnumNAME_ASSIGNED;
    case 'EMAIL_ASSIGNED':
      return _$gCustomerEventsEnumEMAIL_ASSIGNED;
    case 'NOTE_ADDED':
      return _$gCustomerEventsEnumNOTE_ADDED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GCustomerEventsEnum> _$gCustomerEventsEnumValues =
    new BuiltSet<GCustomerEventsEnum>(const <GCustomerEventsEnum>[
  _$gCustomerEventsEnumACCOUNT_CREATED,
  _$gCustomerEventsEnumACCOUNT_ACTIVATED,
  _$gCustomerEventsEnumACCOUNT_DEACTIVATED,
  _$gCustomerEventsEnumPASSWORD_RESET_LINK_SENT,
  _$gCustomerEventsEnumPASSWORD_RESET,
  _$gCustomerEventsEnumEMAIL_CHANGED_REQUEST,
  _$gCustomerEventsEnumPASSWORD_CHANGED,
  _$gCustomerEventsEnumEMAIL_CHANGED,
  _$gCustomerEventsEnumPLACED_ORDER,
  _$gCustomerEventsEnumNOTE_ADDED_TO_ORDER,
  _$gCustomerEventsEnumDIGITAL_LINK_DOWNLOADED,
  _$gCustomerEventsEnumCUSTOMER_DELETED,
  _$gCustomerEventsEnumNAME_ASSIGNED,
  _$gCustomerEventsEnumEMAIL_ASSIGNED,
  _$gCustomerEventsEnumNOTE_ADDED,
]);

const GDiscountErrorCode _$gDiscountErrorCodeALREADY_EXISTS =
    const GDiscountErrorCode._('ALREADY_EXISTS');
const GDiscountErrorCode _$gDiscountErrorCodeGRAPHQL_ERROR =
    const GDiscountErrorCode._('GRAPHQL_ERROR');
const GDiscountErrorCode _$gDiscountErrorCodeINVALID =
    const GDiscountErrorCode._('INVALID');
const GDiscountErrorCode _$gDiscountErrorCodeNOT_FOUND =
    const GDiscountErrorCode._('NOT_FOUND');
const GDiscountErrorCode _$gDiscountErrorCodeREQUIRED =
    const GDiscountErrorCode._('REQUIRED');
const GDiscountErrorCode _$gDiscountErrorCodeUNIQUE =
    const GDiscountErrorCode._('UNIQUE');
const GDiscountErrorCode
    _$gDiscountErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT =
    const GDiscountErrorCode._('CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT');
const GDiscountErrorCode _$gDiscountErrorCodeDUPLICATED_INPUT_ITEM =
    const GDiscountErrorCode._('DUPLICATED_INPUT_ITEM');

GDiscountErrorCode _$gDiscountErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gDiscountErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gDiscountErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gDiscountErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gDiscountErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gDiscountErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gDiscountErrorCodeUNIQUE;
    case 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT':
      return _$gDiscountErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gDiscountErrorCodeDUPLICATED_INPUT_ITEM;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDiscountErrorCode> _$gDiscountErrorCodeValues =
    new BuiltSet<GDiscountErrorCode>(const <GDiscountErrorCode>[
  _$gDiscountErrorCodeALREADY_EXISTS,
  _$gDiscountErrorCodeGRAPHQL_ERROR,
  _$gDiscountErrorCodeINVALID,
  _$gDiscountErrorCodeNOT_FOUND,
  _$gDiscountErrorCodeREQUIRED,
  _$gDiscountErrorCodeUNIQUE,
  _$gDiscountErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT,
  _$gDiscountErrorCodeDUPLICATED_INPUT_ITEM,
]);

const GDiscountStatusEnum _$gDiscountStatusEnumACTIVE =
    const GDiscountStatusEnum._('ACTIVE');
const GDiscountStatusEnum _$gDiscountStatusEnumEXPIRED =
    const GDiscountStatusEnum._('EXPIRED');
const GDiscountStatusEnum _$gDiscountStatusEnumSCHEDULED =
    const GDiscountStatusEnum._('SCHEDULED');

GDiscountStatusEnum _$gDiscountStatusEnumValueOf(String name) {
  switch (name) {
    case 'ACTIVE':
      return _$gDiscountStatusEnumACTIVE;
    case 'EXPIRED':
      return _$gDiscountStatusEnumEXPIRED;
    case 'SCHEDULED':
      return _$gDiscountStatusEnumSCHEDULED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDiscountStatusEnum> _$gDiscountStatusEnumValues =
    new BuiltSet<GDiscountStatusEnum>(const <GDiscountStatusEnum>[
  _$gDiscountStatusEnumACTIVE,
  _$gDiscountStatusEnumEXPIRED,
  _$gDiscountStatusEnumSCHEDULED,
]);

const GDiscountValueTypeEnum _$gDiscountValueTypeEnumFIXED =
    const GDiscountValueTypeEnum._('FIXED');
const GDiscountValueTypeEnum _$gDiscountValueTypeEnumPERCENTAGE =
    const GDiscountValueTypeEnum._('PERCENTAGE');

GDiscountValueTypeEnum _$gDiscountValueTypeEnumValueOf(String name) {
  switch (name) {
    case 'FIXED':
      return _$gDiscountValueTypeEnumFIXED;
    case 'PERCENTAGE':
      return _$gDiscountValueTypeEnumPERCENTAGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDiscountValueTypeEnum> _$gDiscountValueTypeEnumValues =
    new BuiltSet<GDiscountValueTypeEnum>(const <GDiscountValueTypeEnum>[
  _$gDiscountValueTypeEnumFIXED,
  _$gDiscountValueTypeEnumPERCENTAGE,
]);

const GDistanceUnitsEnum _$gDistanceUnitsEnumCM =
    const GDistanceUnitsEnum._('CM');
const GDistanceUnitsEnum _$gDistanceUnitsEnumM =
    const GDistanceUnitsEnum._('M');
const GDistanceUnitsEnum _$gDistanceUnitsEnumKM =
    const GDistanceUnitsEnum._('KM');
const GDistanceUnitsEnum _$gDistanceUnitsEnumFT =
    const GDistanceUnitsEnum._('FT');
const GDistanceUnitsEnum _$gDistanceUnitsEnumYD =
    const GDistanceUnitsEnum._('YD');
const GDistanceUnitsEnum _$gDistanceUnitsEnumINCH =
    const GDistanceUnitsEnum._('INCH');

GDistanceUnitsEnum _$gDistanceUnitsEnumValueOf(String name) {
  switch (name) {
    case 'CM':
      return _$gDistanceUnitsEnumCM;
    case 'M':
      return _$gDistanceUnitsEnumM;
    case 'KM':
      return _$gDistanceUnitsEnumKM;
    case 'FT':
      return _$gDistanceUnitsEnumFT;
    case 'YD':
      return _$gDistanceUnitsEnumYD;
    case 'INCH':
      return _$gDistanceUnitsEnumINCH;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GDistanceUnitsEnum> _$gDistanceUnitsEnumValues =
    new BuiltSet<GDistanceUnitsEnum>(const <GDistanceUnitsEnum>[
  _$gDistanceUnitsEnumCM,
  _$gDistanceUnitsEnumM,
  _$gDistanceUnitsEnumKM,
  _$gDistanceUnitsEnumFT,
  _$gDistanceUnitsEnumYD,
  _$gDistanceUnitsEnumINCH,
]);

const GEventDeliveryAttemptSortField
    _$gEventDeliveryAttemptSortFieldCREATED_AT =
    const GEventDeliveryAttemptSortField._('CREATED_AT');

GEventDeliveryAttemptSortField _$gEventDeliveryAttemptSortFieldValueOf(
    String name) {
  switch (name) {
    case 'CREATED_AT':
      return _$gEventDeliveryAttemptSortFieldCREATED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEventDeliveryAttemptSortField>
    _$gEventDeliveryAttemptSortFieldValues = new BuiltSet<
        GEventDeliveryAttemptSortField>(const <GEventDeliveryAttemptSortField>[
  _$gEventDeliveryAttemptSortFieldCREATED_AT,
]);

const GEventDeliverySortField _$gEventDeliverySortFieldCREATED_AT =
    const GEventDeliverySortField._('CREATED_AT');

GEventDeliverySortField _$gEventDeliverySortFieldValueOf(String name) {
  switch (name) {
    case 'CREATED_AT':
      return _$gEventDeliverySortFieldCREATED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEventDeliverySortField> _$gEventDeliverySortFieldValues =
    new BuiltSet<GEventDeliverySortField>(const <GEventDeliverySortField>[
  _$gEventDeliverySortFieldCREATED_AT,
]);

const GEventDeliveryStatusEnum _$gEventDeliveryStatusEnumPENDING =
    const GEventDeliveryStatusEnum._('PENDING');
const GEventDeliveryStatusEnum _$gEventDeliveryStatusEnumSUCCESS =
    const GEventDeliveryStatusEnum._('SUCCESS');
const GEventDeliveryStatusEnum _$gEventDeliveryStatusEnumFAILED =
    const GEventDeliveryStatusEnum._('FAILED');

GEventDeliveryStatusEnum _$gEventDeliveryStatusEnumValueOf(String name) {
  switch (name) {
    case 'PENDING':
      return _$gEventDeliveryStatusEnumPENDING;
    case 'SUCCESS':
      return _$gEventDeliveryStatusEnumSUCCESS;
    case 'FAILED':
      return _$gEventDeliveryStatusEnumFAILED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GEventDeliveryStatusEnum> _$gEventDeliveryStatusEnumValues =
    new BuiltSet<GEventDeliveryStatusEnum>(const <GEventDeliveryStatusEnum>[
  _$gEventDeliveryStatusEnumPENDING,
  _$gEventDeliveryStatusEnumSUCCESS,
  _$gEventDeliveryStatusEnumFAILED,
]);

const GExportErrorCode _$gExportErrorCodeGRAPHQL_ERROR =
    const GExportErrorCode._('GRAPHQL_ERROR');
const GExportErrorCode _$gExportErrorCodeINVALID =
    const GExportErrorCode._('INVALID');
const GExportErrorCode _$gExportErrorCodeNOT_FOUND =
    const GExportErrorCode._('NOT_FOUND');
const GExportErrorCode _$gExportErrorCodeREQUIRED =
    const GExportErrorCode._('REQUIRED');

GExportErrorCode _$gExportErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gExportErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gExportErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gExportErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gExportErrorCodeREQUIRED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GExportErrorCode> _$gExportErrorCodeValues =
    new BuiltSet<GExportErrorCode>(const <GExportErrorCode>[
  _$gExportErrorCodeGRAPHQL_ERROR,
  _$gExportErrorCodeINVALID,
  _$gExportErrorCodeNOT_FOUND,
  _$gExportErrorCodeREQUIRED,
]);

const GExportEventsEnum _$gExportEventsEnumEXPORT_PENDING =
    const GExportEventsEnum._('EXPORT_PENDING');
const GExportEventsEnum _$gExportEventsEnumEXPORT_SUCCESS =
    const GExportEventsEnum._('EXPORT_SUCCESS');
const GExportEventsEnum _$gExportEventsEnumEXPORT_FAILED =
    const GExportEventsEnum._('EXPORT_FAILED');
const GExportEventsEnum _$gExportEventsEnumEXPORT_DELETED =
    const GExportEventsEnum._('EXPORT_DELETED');
const GExportEventsEnum _$gExportEventsEnumEXPORTED_FILE_SENT =
    const GExportEventsEnum._('EXPORTED_FILE_SENT');
const GExportEventsEnum _$gExportEventsEnumEXPORT_FAILED_INFO_SENT =
    const GExportEventsEnum._('EXPORT_FAILED_INFO_SENT');

GExportEventsEnum _$gExportEventsEnumValueOf(String name) {
  switch (name) {
    case 'EXPORT_PENDING':
      return _$gExportEventsEnumEXPORT_PENDING;
    case 'EXPORT_SUCCESS':
      return _$gExportEventsEnumEXPORT_SUCCESS;
    case 'EXPORT_FAILED':
      return _$gExportEventsEnumEXPORT_FAILED;
    case 'EXPORT_DELETED':
      return _$gExportEventsEnumEXPORT_DELETED;
    case 'EXPORTED_FILE_SENT':
      return _$gExportEventsEnumEXPORTED_FILE_SENT;
    case 'EXPORT_FAILED_INFO_SENT':
      return _$gExportEventsEnumEXPORT_FAILED_INFO_SENT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GExportEventsEnum> _$gExportEventsEnumValues =
    new BuiltSet<GExportEventsEnum>(const <GExportEventsEnum>[
  _$gExportEventsEnumEXPORT_PENDING,
  _$gExportEventsEnumEXPORT_SUCCESS,
  _$gExportEventsEnumEXPORT_FAILED,
  _$gExportEventsEnumEXPORT_DELETED,
  _$gExportEventsEnumEXPORTED_FILE_SENT,
  _$gExportEventsEnumEXPORT_FAILED_INFO_SENT,
]);

const GExportFileSortField _$gExportFileSortFieldSTATUS =
    const GExportFileSortField._('STATUS');
const GExportFileSortField _$gExportFileSortFieldCREATED_AT =
    const GExportFileSortField._('CREATED_AT');
const GExportFileSortField _$gExportFileSortFieldUPDATED_AT =
    const GExportFileSortField._('UPDATED_AT');
const GExportFileSortField _$gExportFileSortFieldLAST_MODIFIED_AT =
    const GExportFileSortField._('LAST_MODIFIED_AT');

GExportFileSortField _$gExportFileSortFieldValueOf(String name) {
  switch (name) {
    case 'STATUS':
      return _$gExportFileSortFieldSTATUS;
    case 'CREATED_AT':
      return _$gExportFileSortFieldCREATED_AT;
    case 'UPDATED_AT':
      return _$gExportFileSortFieldUPDATED_AT;
    case 'LAST_MODIFIED_AT':
      return _$gExportFileSortFieldLAST_MODIFIED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GExportFileSortField> _$gExportFileSortFieldValues =
    new BuiltSet<GExportFileSortField>(const <GExportFileSortField>[
  _$gExportFileSortFieldSTATUS,
  _$gExportFileSortFieldCREATED_AT,
  _$gExportFileSortFieldUPDATED_AT,
  _$gExportFileSortFieldLAST_MODIFIED_AT,
]);

const GExportScope _$gExportScopeALL = const GExportScope._('ALL');
const GExportScope _$gExportScopeIDS = const GExportScope._('IDS');
const GExportScope _$gExportScopeFILTER = const GExportScope._('FILTER');

GExportScope _$gExportScopeValueOf(String name) {
  switch (name) {
    case 'ALL':
      return _$gExportScopeALL;
    case 'IDS':
      return _$gExportScopeIDS;
    case 'FILTER':
      return _$gExportScopeFILTER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GExportScope> _$gExportScopeValues =
    new BuiltSet<GExportScope>(const <GExportScope>[
  _$gExportScopeALL,
  _$gExportScopeIDS,
  _$gExportScopeFILTER,
]);

const GExternalNotificationErrorCodes
    _$gExternalNotificationErrorCodesREQUIRED =
    const GExternalNotificationErrorCodes._('REQUIRED');
const GExternalNotificationErrorCodes
    _$gExternalNotificationErrorCodesINVALID_MODEL_TYPE =
    const GExternalNotificationErrorCodes._('INVALID_MODEL_TYPE');
const GExternalNotificationErrorCodes
    _$gExternalNotificationErrorCodesNOT_FOUND =
    const GExternalNotificationErrorCodes._('NOT_FOUND');
const GExternalNotificationErrorCodes
    _$gExternalNotificationErrorCodesCHANNEL_INACTIVE =
    const GExternalNotificationErrorCodes._('CHANNEL_INACTIVE');

GExternalNotificationErrorCodes _$gExternalNotificationErrorCodesValueOf(
    String name) {
  switch (name) {
    case 'REQUIRED':
      return _$gExternalNotificationErrorCodesREQUIRED;
    case 'INVALID_MODEL_TYPE':
      return _$gExternalNotificationErrorCodesINVALID_MODEL_TYPE;
    case 'NOT_FOUND':
      return _$gExternalNotificationErrorCodesNOT_FOUND;
    case 'CHANNEL_INACTIVE':
      return _$gExternalNotificationErrorCodesCHANNEL_INACTIVE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GExternalNotificationErrorCodes>
    _$gExternalNotificationErrorCodesValues =
    new BuiltSet<GExternalNotificationErrorCodes>(const <
        GExternalNotificationErrorCodes>[
  _$gExternalNotificationErrorCodesREQUIRED,
  _$gExternalNotificationErrorCodesINVALID_MODEL_TYPE,
  _$gExternalNotificationErrorCodesNOT_FOUND,
  _$gExternalNotificationErrorCodesCHANNEL_INACTIVE,
]);

const GFileTypesEnum _$gFileTypesEnumCSV = const GFileTypesEnum._('CSV');
const GFileTypesEnum _$gFileTypesEnumXLSX = const GFileTypesEnum._('XLSX');

GFileTypesEnum _$gFileTypesEnumValueOf(String name) {
  switch (name) {
    case 'CSV':
      return _$gFileTypesEnumCSV;
    case 'XLSX':
      return _$gFileTypesEnumXLSX;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GFileTypesEnum> _$gFileTypesEnumValues =
    new BuiltSet<GFileTypesEnum>(const <GFileTypesEnum>[
  _$gFileTypesEnumCSV,
  _$gFileTypesEnumXLSX,
]);

const GFulfillmentStatus _$gFulfillmentStatusFULFILLED =
    const GFulfillmentStatus._('FULFILLED');
const GFulfillmentStatus _$gFulfillmentStatusREFUNDED =
    const GFulfillmentStatus._('REFUNDED');
const GFulfillmentStatus _$gFulfillmentStatusRETURNED =
    const GFulfillmentStatus._('RETURNED');
const GFulfillmentStatus _$gFulfillmentStatusREPLACED =
    const GFulfillmentStatus._('REPLACED');
const GFulfillmentStatus _$gFulfillmentStatusREFUNDED_AND_RETURNED =
    const GFulfillmentStatus._('REFUNDED_AND_RETURNED');
const GFulfillmentStatus _$gFulfillmentStatusCANCELED =
    const GFulfillmentStatus._('CANCELED');
const GFulfillmentStatus _$gFulfillmentStatusWAITING_FOR_APPROVAL =
    const GFulfillmentStatus._('WAITING_FOR_APPROVAL');

GFulfillmentStatus _$gFulfillmentStatusValueOf(String name) {
  switch (name) {
    case 'FULFILLED':
      return _$gFulfillmentStatusFULFILLED;
    case 'REFUNDED':
      return _$gFulfillmentStatusREFUNDED;
    case 'RETURNED':
      return _$gFulfillmentStatusRETURNED;
    case 'REPLACED':
      return _$gFulfillmentStatusREPLACED;
    case 'REFUNDED_AND_RETURNED':
      return _$gFulfillmentStatusREFUNDED_AND_RETURNED;
    case 'CANCELED':
      return _$gFulfillmentStatusCANCELED;
    case 'WAITING_FOR_APPROVAL':
      return _$gFulfillmentStatusWAITING_FOR_APPROVAL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GFulfillmentStatus> _$gFulfillmentStatusValues =
    new BuiltSet<GFulfillmentStatus>(const <GFulfillmentStatus>[
  _$gFulfillmentStatusFULFILLED,
  _$gFulfillmentStatusREFUNDED,
  _$gFulfillmentStatusRETURNED,
  _$gFulfillmentStatusREPLACED,
  _$gFulfillmentStatusREFUNDED_AND_RETURNED,
  _$gFulfillmentStatusCANCELED,
  _$gFulfillmentStatusWAITING_FOR_APPROVAL,
]);

const GGiftCardErrorCode _$gGiftCardErrorCodeALREADY_EXISTS =
    const GGiftCardErrorCode._('ALREADY_EXISTS');
const GGiftCardErrorCode _$gGiftCardErrorCodeGRAPHQL_ERROR =
    const GGiftCardErrorCode._('GRAPHQL_ERROR');
const GGiftCardErrorCode _$gGiftCardErrorCodeINVALID =
    const GGiftCardErrorCode._('INVALID');
const GGiftCardErrorCode _$gGiftCardErrorCodeNOT_FOUND =
    const GGiftCardErrorCode._('NOT_FOUND');
const GGiftCardErrorCode _$gGiftCardErrorCodeREQUIRED =
    const GGiftCardErrorCode._('REQUIRED');
const GGiftCardErrorCode _$gGiftCardErrorCodeUNIQUE =
    const GGiftCardErrorCode._('UNIQUE');
const GGiftCardErrorCode _$gGiftCardErrorCodeEXPIRED_GIFT_CARD =
    const GGiftCardErrorCode._('EXPIRED_GIFT_CARD');
const GGiftCardErrorCode _$gGiftCardErrorCodeDUPLICATED_INPUT_ITEM =
    const GGiftCardErrorCode._('DUPLICATED_INPUT_ITEM');

GGiftCardErrorCode _$gGiftCardErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gGiftCardErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gGiftCardErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gGiftCardErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gGiftCardErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gGiftCardErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gGiftCardErrorCodeUNIQUE;
    case 'EXPIRED_GIFT_CARD':
      return _$gGiftCardErrorCodeEXPIRED_GIFT_CARD;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gGiftCardErrorCodeDUPLICATED_INPUT_ITEM;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GGiftCardErrorCode> _$gGiftCardErrorCodeValues =
    new BuiltSet<GGiftCardErrorCode>(const <GGiftCardErrorCode>[
  _$gGiftCardErrorCodeALREADY_EXISTS,
  _$gGiftCardErrorCodeGRAPHQL_ERROR,
  _$gGiftCardErrorCodeINVALID,
  _$gGiftCardErrorCodeNOT_FOUND,
  _$gGiftCardErrorCodeREQUIRED,
  _$gGiftCardErrorCodeUNIQUE,
  _$gGiftCardErrorCodeEXPIRED_GIFT_CARD,
  _$gGiftCardErrorCodeDUPLICATED_INPUT_ITEM,
]);

const GGiftCardEventsEnum _$gGiftCardEventsEnumISSUED =
    const GGiftCardEventsEnum._('ISSUED');
const GGiftCardEventsEnum _$gGiftCardEventsEnumBOUGHT =
    const GGiftCardEventsEnum._('BOUGHT');
const GGiftCardEventsEnum _$gGiftCardEventsEnumUPDATED =
    const GGiftCardEventsEnum._('UPDATED');
const GGiftCardEventsEnum _$gGiftCardEventsEnumACTIVATED =
    const GGiftCardEventsEnum._('ACTIVATED');
const GGiftCardEventsEnum _$gGiftCardEventsEnumDEACTIVATED =
    const GGiftCardEventsEnum._('DEACTIVATED');
const GGiftCardEventsEnum _$gGiftCardEventsEnumBALANCE_RESET =
    const GGiftCardEventsEnum._('BALANCE_RESET');
const GGiftCardEventsEnum _$gGiftCardEventsEnumEXPIRY_DATE_UPDATED =
    const GGiftCardEventsEnum._('EXPIRY_DATE_UPDATED');
const GGiftCardEventsEnum _$gGiftCardEventsEnumTAGS_UPDATED =
    const GGiftCardEventsEnum._('TAGS_UPDATED');
const GGiftCardEventsEnum _$gGiftCardEventsEnumSENT_TO_CUSTOMER =
    const GGiftCardEventsEnum._('SENT_TO_CUSTOMER');
const GGiftCardEventsEnum _$gGiftCardEventsEnumRESENT =
    const GGiftCardEventsEnum._('RESENT');
const GGiftCardEventsEnum _$gGiftCardEventsEnumNOTE_ADDED =
    const GGiftCardEventsEnum._('NOTE_ADDED');
const GGiftCardEventsEnum _$gGiftCardEventsEnumUSED_IN_ORDER =
    const GGiftCardEventsEnum._('USED_IN_ORDER');

GGiftCardEventsEnum _$gGiftCardEventsEnumValueOf(String name) {
  switch (name) {
    case 'ISSUED':
      return _$gGiftCardEventsEnumISSUED;
    case 'BOUGHT':
      return _$gGiftCardEventsEnumBOUGHT;
    case 'UPDATED':
      return _$gGiftCardEventsEnumUPDATED;
    case 'ACTIVATED':
      return _$gGiftCardEventsEnumACTIVATED;
    case 'DEACTIVATED':
      return _$gGiftCardEventsEnumDEACTIVATED;
    case 'BALANCE_RESET':
      return _$gGiftCardEventsEnumBALANCE_RESET;
    case 'EXPIRY_DATE_UPDATED':
      return _$gGiftCardEventsEnumEXPIRY_DATE_UPDATED;
    case 'TAGS_UPDATED':
      return _$gGiftCardEventsEnumTAGS_UPDATED;
    case 'SENT_TO_CUSTOMER':
      return _$gGiftCardEventsEnumSENT_TO_CUSTOMER;
    case 'RESENT':
      return _$gGiftCardEventsEnumRESENT;
    case 'NOTE_ADDED':
      return _$gGiftCardEventsEnumNOTE_ADDED;
    case 'USED_IN_ORDER':
      return _$gGiftCardEventsEnumUSED_IN_ORDER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GGiftCardEventsEnum> _$gGiftCardEventsEnumValues =
    new BuiltSet<GGiftCardEventsEnum>(const <GGiftCardEventsEnum>[
  _$gGiftCardEventsEnumISSUED,
  _$gGiftCardEventsEnumBOUGHT,
  _$gGiftCardEventsEnumUPDATED,
  _$gGiftCardEventsEnumACTIVATED,
  _$gGiftCardEventsEnumDEACTIVATED,
  _$gGiftCardEventsEnumBALANCE_RESET,
  _$gGiftCardEventsEnumEXPIRY_DATE_UPDATED,
  _$gGiftCardEventsEnumTAGS_UPDATED,
  _$gGiftCardEventsEnumSENT_TO_CUSTOMER,
  _$gGiftCardEventsEnumRESENT,
  _$gGiftCardEventsEnumNOTE_ADDED,
  _$gGiftCardEventsEnumUSED_IN_ORDER,
]);

const GGiftCardSettingsErrorCode _$gGiftCardSettingsErrorCodeINVALID =
    const GGiftCardSettingsErrorCode._('INVALID');
const GGiftCardSettingsErrorCode _$gGiftCardSettingsErrorCodeREQUIRED =
    const GGiftCardSettingsErrorCode._('REQUIRED');
const GGiftCardSettingsErrorCode _$gGiftCardSettingsErrorCodeGRAPHQL_ERROR =
    const GGiftCardSettingsErrorCode._('GRAPHQL_ERROR');

GGiftCardSettingsErrorCode _$gGiftCardSettingsErrorCodeValueOf(String name) {
  switch (name) {
    case 'INVALID':
      return _$gGiftCardSettingsErrorCodeINVALID;
    case 'REQUIRED':
      return _$gGiftCardSettingsErrorCodeREQUIRED;
    case 'GRAPHQL_ERROR':
      return _$gGiftCardSettingsErrorCodeGRAPHQL_ERROR;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GGiftCardSettingsErrorCode> _$gGiftCardSettingsErrorCodeValues =
    new BuiltSet<GGiftCardSettingsErrorCode>(const <GGiftCardSettingsErrorCode>[
  _$gGiftCardSettingsErrorCodeINVALID,
  _$gGiftCardSettingsErrorCodeREQUIRED,
  _$gGiftCardSettingsErrorCodeGRAPHQL_ERROR,
]);

const GGiftCardSettingsExpiryTypeEnum
    _$gGiftCardSettingsExpiryTypeEnumNEVER_EXPIRE =
    const GGiftCardSettingsExpiryTypeEnum._('NEVER_EXPIRE');
const GGiftCardSettingsExpiryTypeEnum
    _$gGiftCardSettingsExpiryTypeEnumEXPIRY_PERIOD =
    const GGiftCardSettingsExpiryTypeEnum._('EXPIRY_PERIOD');

GGiftCardSettingsExpiryTypeEnum _$gGiftCardSettingsExpiryTypeEnumValueOf(
    String name) {
  switch (name) {
    case 'NEVER_EXPIRE':
      return _$gGiftCardSettingsExpiryTypeEnumNEVER_EXPIRE;
    case 'EXPIRY_PERIOD':
      return _$gGiftCardSettingsExpiryTypeEnumEXPIRY_PERIOD;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GGiftCardSettingsExpiryTypeEnum>
    _$gGiftCardSettingsExpiryTypeEnumValues =
    new BuiltSet<GGiftCardSettingsExpiryTypeEnum>(const <
        GGiftCardSettingsExpiryTypeEnum>[
  _$gGiftCardSettingsExpiryTypeEnumNEVER_EXPIRE,
  _$gGiftCardSettingsExpiryTypeEnumEXPIRY_PERIOD,
]);

const GGiftCardSortField _$gGiftCardSortFieldPRODUCT =
    const GGiftCardSortField._('PRODUCT');
const GGiftCardSortField _$gGiftCardSortFieldUSED_BY =
    const GGiftCardSortField._('USED_BY');
const GGiftCardSortField _$gGiftCardSortFieldCURRENT_BALANCE =
    const GGiftCardSortField._('CURRENT_BALANCE');
const GGiftCardSortField _$gGiftCardSortFieldCREATED_AT =
    const GGiftCardSortField._('CREATED_AT');

GGiftCardSortField _$gGiftCardSortFieldValueOf(String name) {
  switch (name) {
    case 'PRODUCT':
      return _$gGiftCardSortFieldPRODUCT;
    case 'USED_BY':
      return _$gGiftCardSortFieldUSED_BY;
    case 'CURRENT_BALANCE':
      return _$gGiftCardSortFieldCURRENT_BALANCE;
    case 'CREATED_AT':
      return _$gGiftCardSortFieldCREATED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GGiftCardSortField> _$gGiftCardSortFieldValues =
    new BuiltSet<GGiftCardSortField>(const <GGiftCardSortField>[
  _$gGiftCardSortFieldPRODUCT,
  _$gGiftCardSortFieldUSED_BY,
  _$gGiftCardSortFieldCURRENT_BALANCE,
  _$gGiftCardSortFieldCREATED_AT,
]);

const GInvoiceErrorCode _$gInvoiceErrorCodeREQUIRED =
    const GInvoiceErrorCode._('REQUIRED');
const GInvoiceErrorCode _$gInvoiceErrorCodeNOT_READY =
    const GInvoiceErrorCode._('NOT_READY');
const GInvoiceErrorCode _$gInvoiceErrorCodeURL_NOT_SET =
    const GInvoiceErrorCode._('URL_NOT_SET');
const GInvoiceErrorCode _$gInvoiceErrorCodeEMAIL_NOT_SET =
    const GInvoiceErrorCode._('EMAIL_NOT_SET');
const GInvoiceErrorCode _$gInvoiceErrorCodeNUMBER_NOT_SET =
    const GInvoiceErrorCode._('NUMBER_NOT_SET');
const GInvoiceErrorCode _$gInvoiceErrorCodeNOT_FOUND =
    const GInvoiceErrorCode._('NOT_FOUND');
const GInvoiceErrorCode _$gInvoiceErrorCodeINVALID_STATUS =
    const GInvoiceErrorCode._('INVALID_STATUS');
const GInvoiceErrorCode _$gInvoiceErrorCodeNO_INVOICE_PLUGIN =
    const GInvoiceErrorCode._('NO_INVOICE_PLUGIN');

GInvoiceErrorCode _$gInvoiceErrorCodeValueOf(String name) {
  switch (name) {
    case 'REQUIRED':
      return _$gInvoiceErrorCodeREQUIRED;
    case 'NOT_READY':
      return _$gInvoiceErrorCodeNOT_READY;
    case 'URL_NOT_SET':
      return _$gInvoiceErrorCodeURL_NOT_SET;
    case 'EMAIL_NOT_SET':
      return _$gInvoiceErrorCodeEMAIL_NOT_SET;
    case 'NUMBER_NOT_SET':
      return _$gInvoiceErrorCodeNUMBER_NOT_SET;
    case 'NOT_FOUND':
      return _$gInvoiceErrorCodeNOT_FOUND;
    case 'INVALID_STATUS':
      return _$gInvoiceErrorCodeINVALID_STATUS;
    case 'NO_INVOICE_PLUGIN':
      return _$gInvoiceErrorCodeNO_INVOICE_PLUGIN;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GInvoiceErrorCode> _$gInvoiceErrorCodeValues =
    new BuiltSet<GInvoiceErrorCode>(const <GInvoiceErrorCode>[
  _$gInvoiceErrorCodeREQUIRED,
  _$gInvoiceErrorCodeNOT_READY,
  _$gInvoiceErrorCodeURL_NOT_SET,
  _$gInvoiceErrorCodeEMAIL_NOT_SET,
  _$gInvoiceErrorCodeNUMBER_NOT_SET,
  _$gInvoiceErrorCodeNOT_FOUND,
  _$gInvoiceErrorCodeINVALID_STATUS,
  _$gInvoiceErrorCodeNO_INVOICE_PLUGIN,
]);

const GJobStatusEnum _$gJobStatusEnumPENDING =
    const GJobStatusEnum._('PENDING');
const GJobStatusEnum _$gJobStatusEnumSUCCESS =
    const GJobStatusEnum._('SUCCESS');
const GJobStatusEnum _$gJobStatusEnumFAILED = const GJobStatusEnum._('FAILED');
const GJobStatusEnum _$gJobStatusEnumDELETED =
    const GJobStatusEnum._('DELETED');

GJobStatusEnum _$gJobStatusEnumValueOf(String name) {
  switch (name) {
    case 'PENDING':
      return _$gJobStatusEnumPENDING;
    case 'SUCCESS':
      return _$gJobStatusEnumSUCCESS;
    case 'FAILED':
      return _$gJobStatusEnumFAILED;
    case 'DELETED':
      return _$gJobStatusEnumDELETED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GJobStatusEnum> _$gJobStatusEnumValues =
    new BuiltSet<GJobStatusEnum>(const <GJobStatusEnum>[
  _$gJobStatusEnumPENDING,
  _$gJobStatusEnumSUCCESS,
  _$gJobStatusEnumFAILED,
  _$gJobStatusEnumDELETED,
]);

const GLanguageCodeEnum _$gLanguageCodeEnumAF = const GLanguageCodeEnum._('AF');
const GLanguageCodeEnum _$gLanguageCodeEnumAF_NA =
    const GLanguageCodeEnum._('AF_NA');
const GLanguageCodeEnum _$gLanguageCodeEnumAF_ZA =
    const GLanguageCodeEnum._('AF_ZA');
const GLanguageCodeEnum _$gLanguageCodeEnumAGQ =
    const GLanguageCodeEnum._('AGQ');
const GLanguageCodeEnum _$gLanguageCodeEnumAGQ_CM =
    const GLanguageCodeEnum._('AGQ_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumAK = const GLanguageCodeEnum._('AK');
const GLanguageCodeEnum _$gLanguageCodeEnumAK_GH =
    const GLanguageCodeEnum._('AK_GH');
const GLanguageCodeEnum _$gLanguageCodeEnumAM = const GLanguageCodeEnum._('AM');
const GLanguageCodeEnum _$gLanguageCodeEnumAM_ET =
    const GLanguageCodeEnum._('AM_ET');
const GLanguageCodeEnum _$gLanguageCodeEnumAR = const GLanguageCodeEnum._('AR');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_AE =
    const GLanguageCodeEnum._('AR_AE');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_BH =
    const GLanguageCodeEnum._('AR_BH');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_DJ =
    const GLanguageCodeEnum._('AR_DJ');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_DZ =
    const GLanguageCodeEnum._('AR_DZ');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_EG =
    const GLanguageCodeEnum._('AR_EG');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_EH =
    const GLanguageCodeEnum._('AR_EH');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_ER =
    const GLanguageCodeEnum._('AR_ER');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_IL =
    const GLanguageCodeEnum._('AR_IL');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_IQ =
    const GLanguageCodeEnum._('AR_IQ');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_JO =
    const GLanguageCodeEnum._('AR_JO');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_KM =
    const GLanguageCodeEnum._('AR_KM');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_KW =
    const GLanguageCodeEnum._('AR_KW');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_LB =
    const GLanguageCodeEnum._('AR_LB');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_LY =
    const GLanguageCodeEnum._('AR_LY');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_MA =
    const GLanguageCodeEnum._('AR_MA');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_MR =
    const GLanguageCodeEnum._('AR_MR');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_OM =
    const GLanguageCodeEnum._('AR_OM');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_PS =
    const GLanguageCodeEnum._('AR_PS');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_QA =
    const GLanguageCodeEnum._('AR_QA');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_SA =
    const GLanguageCodeEnum._('AR_SA');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_SD =
    const GLanguageCodeEnum._('AR_SD');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_SO =
    const GLanguageCodeEnum._('AR_SO');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_SS =
    const GLanguageCodeEnum._('AR_SS');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_SY =
    const GLanguageCodeEnum._('AR_SY');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_TD =
    const GLanguageCodeEnum._('AR_TD');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_TN =
    const GLanguageCodeEnum._('AR_TN');
const GLanguageCodeEnum _$gLanguageCodeEnumAR_YE =
    const GLanguageCodeEnum._('AR_YE');
const GLanguageCodeEnum _$gLanguageCodeEnumAS = const GLanguageCodeEnum._('AS');
const GLanguageCodeEnum _$gLanguageCodeEnumAS_IN =
    const GLanguageCodeEnum._('AS_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumASA =
    const GLanguageCodeEnum._('ASA');
const GLanguageCodeEnum _$gLanguageCodeEnumASA_TZ =
    const GLanguageCodeEnum._('ASA_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumAST =
    const GLanguageCodeEnum._('AST');
const GLanguageCodeEnum _$gLanguageCodeEnumAST_ES =
    const GLanguageCodeEnum._('AST_ES');
const GLanguageCodeEnum _$gLanguageCodeEnumAZ = const GLanguageCodeEnum._('AZ');
const GLanguageCodeEnum _$gLanguageCodeEnumAZ_CYRL =
    const GLanguageCodeEnum._('AZ_CYRL');
const GLanguageCodeEnum _$gLanguageCodeEnumAZ_CYRL_AZ =
    const GLanguageCodeEnum._('AZ_CYRL_AZ');
const GLanguageCodeEnum _$gLanguageCodeEnumAZ_LATN =
    const GLanguageCodeEnum._('AZ_LATN');
const GLanguageCodeEnum _$gLanguageCodeEnumAZ_LATN_AZ =
    const GLanguageCodeEnum._('AZ_LATN_AZ');
const GLanguageCodeEnum _$gLanguageCodeEnumBAS =
    const GLanguageCodeEnum._('BAS');
const GLanguageCodeEnum _$gLanguageCodeEnumBAS_CM =
    const GLanguageCodeEnum._('BAS_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumBE = const GLanguageCodeEnum._('BE');
const GLanguageCodeEnum _$gLanguageCodeEnumBE_BY =
    const GLanguageCodeEnum._('BE_BY');
const GLanguageCodeEnum _$gLanguageCodeEnumBEM =
    const GLanguageCodeEnum._('BEM');
const GLanguageCodeEnum _$gLanguageCodeEnumBEM_ZM =
    const GLanguageCodeEnum._('BEM_ZM');
const GLanguageCodeEnum _$gLanguageCodeEnumBEZ =
    const GLanguageCodeEnum._('BEZ');
const GLanguageCodeEnum _$gLanguageCodeEnumBEZ_TZ =
    const GLanguageCodeEnum._('BEZ_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumBG = const GLanguageCodeEnum._('BG');
const GLanguageCodeEnum _$gLanguageCodeEnumBG_BG =
    const GLanguageCodeEnum._('BG_BG');
const GLanguageCodeEnum _$gLanguageCodeEnumBM = const GLanguageCodeEnum._('BM');
const GLanguageCodeEnum _$gLanguageCodeEnumBM_ML =
    const GLanguageCodeEnum._('BM_ML');
const GLanguageCodeEnum _$gLanguageCodeEnumBN = const GLanguageCodeEnum._('BN');
const GLanguageCodeEnum _$gLanguageCodeEnumBN_BD =
    const GLanguageCodeEnum._('BN_BD');
const GLanguageCodeEnum _$gLanguageCodeEnumBN_IN =
    const GLanguageCodeEnum._('BN_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumBO = const GLanguageCodeEnum._('BO');
const GLanguageCodeEnum _$gLanguageCodeEnumBO_CN =
    const GLanguageCodeEnum._('BO_CN');
const GLanguageCodeEnum _$gLanguageCodeEnumBO_IN =
    const GLanguageCodeEnum._('BO_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumBR = const GLanguageCodeEnum._('BR');
const GLanguageCodeEnum _$gLanguageCodeEnumBR_FR =
    const GLanguageCodeEnum._('BR_FR');
const GLanguageCodeEnum _$gLanguageCodeEnumBRX =
    const GLanguageCodeEnum._('BRX');
const GLanguageCodeEnum _$gLanguageCodeEnumBRX_IN =
    const GLanguageCodeEnum._('BRX_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumBS = const GLanguageCodeEnum._('BS');
const GLanguageCodeEnum _$gLanguageCodeEnumBS_CYRL =
    const GLanguageCodeEnum._('BS_CYRL');
const GLanguageCodeEnum _$gLanguageCodeEnumBS_CYRL_BA =
    const GLanguageCodeEnum._('BS_CYRL_BA');
const GLanguageCodeEnum _$gLanguageCodeEnumBS_LATN =
    const GLanguageCodeEnum._('BS_LATN');
const GLanguageCodeEnum _$gLanguageCodeEnumBS_LATN_BA =
    const GLanguageCodeEnum._('BS_LATN_BA');
const GLanguageCodeEnum _$gLanguageCodeEnumCA = const GLanguageCodeEnum._('CA');
const GLanguageCodeEnum _$gLanguageCodeEnumCA_AD =
    const GLanguageCodeEnum._('CA_AD');
const GLanguageCodeEnum _$gLanguageCodeEnumCA_ES =
    const GLanguageCodeEnum._('CA_ES');
const GLanguageCodeEnum _$gLanguageCodeEnumCA_ES_VALENCIA =
    const GLanguageCodeEnum._('CA_ES_VALENCIA');
const GLanguageCodeEnum _$gLanguageCodeEnumCA_FR =
    const GLanguageCodeEnum._('CA_FR');
const GLanguageCodeEnum _$gLanguageCodeEnumCA_IT =
    const GLanguageCodeEnum._('CA_IT');
const GLanguageCodeEnum _$gLanguageCodeEnumCCP =
    const GLanguageCodeEnum._('CCP');
const GLanguageCodeEnum _$gLanguageCodeEnumCCP_BD =
    const GLanguageCodeEnum._('CCP_BD');
const GLanguageCodeEnum _$gLanguageCodeEnumCCP_IN =
    const GLanguageCodeEnum._('CCP_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumCE = const GLanguageCodeEnum._('CE');
const GLanguageCodeEnum _$gLanguageCodeEnumCE_RU =
    const GLanguageCodeEnum._('CE_RU');
const GLanguageCodeEnum _$gLanguageCodeEnumCEB =
    const GLanguageCodeEnum._('CEB');
const GLanguageCodeEnum _$gLanguageCodeEnumCEB_PH =
    const GLanguageCodeEnum._('CEB_PH');
const GLanguageCodeEnum _$gLanguageCodeEnumCGG =
    const GLanguageCodeEnum._('CGG');
const GLanguageCodeEnum _$gLanguageCodeEnumCGG_UG =
    const GLanguageCodeEnum._('CGG_UG');
const GLanguageCodeEnum _$gLanguageCodeEnumCHR =
    const GLanguageCodeEnum._('CHR');
const GLanguageCodeEnum _$gLanguageCodeEnumCHR_US =
    const GLanguageCodeEnum._('CHR_US');
const GLanguageCodeEnum _$gLanguageCodeEnumCKB =
    const GLanguageCodeEnum._('CKB');
const GLanguageCodeEnum _$gLanguageCodeEnumCKB_IQ =
    const GLanguageCodeEnum._('CKB_IQ');
const GLanguageCodeEnum _$gLanguageCodeEnumCKB_IR =
    const GLanguageCodeEnum._('CKB_IR');
const GLanguageCodeEnum _$gLanguageCodeEnumCS = const GLanguageCodeEnum._('CS');
const GLanguageCodeEnum _$gLanguageCodeEnumCS_CZ =
    const GLanguageCodeEnum._('CS_CZ');
const GLanguageCodeEnum _$gLanguageCodeEnumCU = const GLanguageCodeEnum._('CU');
const GLanguageCodeEnum _$gLanguageCodeEnumCU_RU =
    const GLanguageCodeEnum._('CU_RU');
const GLanguageCodeEnum _$gLanguageCodeEnumCY = const GLanguageCodeEnum._('CY');
const GLanguageCodeEnum _$gLanguageCodeEnumCY_GB =
    const GLanguageCodeEnum._('CY_GB');
const GLanguageCodeEnum _$gLanguageCodeEnumDA = const GLanguageCodeEnum._('DA');
const GLanguageCodeEnum _$gLanguageCodeEnumDA_DK =
    const GLanguageCodeEnum._('DA_DK');
const GLanguageCodeEnum _$gLanguageCodeEnumDA_GL =
    const GLanguageCodeEnum._('DA_GL');
const GLanguageCodeEnum _$gLanguageCodeEnumDAV =
    const GLanguageCodeEnum._('DAV');
const GLanguageCodeEnum _$gLanguageCodeEnumDAV_KE =
    const GLanguageCodeEnum._('DAV_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumDE = const GLanguageCodeEnum._('DE');
const GLanguageCodeEnum _$gLanguageCodeEnumDE_AT =
    const GLanguageCodeEnum._('DE_AT');
const GLanguageCodeEnum _$gLanguageCodeEnumDE_BE =
    const GLanguageCodeEnum._('DE_BE');
const GLanguageCodeEnum _$gLanguageCodeEnumDE_CH =
    const GLanguageCodeEnum._('DE_CH');
const GLanguageCodeEnum _$gLanguageCodeEnumDE_DE =
    const GLanguageCodeEnum._('DE_DE');
const GLanguageCodeEnum _$gLanguageCodeEnumDE_IT =
    const GLanguageCodeEnum._('DE_IT');
const GLanguageCodeEnum _$gLanguageCodeEnumDE_LI =
    const GLanguageCodeEnum._('DE_LI');
const GLanguageCodeEnum _$gLanguageCodeEnumDE_LU =
    const GLanguageCodeEnum._('DE_LU');
const GLanguageCodeEnum _$gLanguageCodeEnumDJE =
    const GLanguageCodeEnum._('DJE');
const GLanguageCodeEnum _$gLanguageCodeEnumDJE_NE =
    const GLanguageCodeEnum._('DJE_NE');
const GLanguageCodeEnum _$gLanguageCodeEnumDSB =
    const GLanguageCodeEnum._('DSB');
const GLanguageCodeEnum _$gLanguageCodeEnumDSB_DE =
    const GLanguageCodeEnum._('DSB_DE');
const GLanguageCodeEnum _$gLanguageCodeEnumDUA =
    const GLanguageCodeEnum._('DUA');
const GLanguageCodeEnum _$gLanguageCodeEnumDUA_CM =
    const GLanguageCodeEnum._('DUA_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumDYO =
    const GLanguageCodeEnum._('DYO');
const GLanguageCodeEnum _$gLanguageCodeEnumDYO_SN =
    const GLanguageCodeEnum._('DYO_SN');
const GLanguageCodeEnum _$gLanguageCodeEnumDZ = const GLanguageCodeEnum._('DZ');
const GLanguageCodeEnum _$gLanguageCodeEnumDZ_BT =
    const GLanguageCodeEnum._('DZ_BT');
const GLanguageCodeEnum _$gLanguageCodeEnumEBU =
    const GLanguageCodeEnum._('EBU');
const GLanguageCodeEnum _$gLanguageCodeEnumEBU_KE =
    const GLanguageCodeEnum._('EBU_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumEE = const GLanguageCodeEnum._('EE');
const GLanguageCodeEnum _$gLanguageCodeEnumEE_GH =
    const GLanguageCodeEnum._('EE_GH');
const GLanguageCodeEnum _$gLanguageCodeEnumEE_TG =
    const GLanguageCodeEnum._('EE_TG');
const GLanguageCodeEnum _$gLanguageCodeEnumEL = const GLanguageCodeEnum._('EL');
const GLanguageCodeEnum _$gLanguageCodeEnumEL_CY =
    const GLanguageCodeEnum._('EL_CY');
const GLanguageCodeEnum _$gLanguageCodeEnumEL_GR =
    const GLanguageCodeEnum._('EL_GR');
const GLanguageCodeEnum _$gLanguageCodeEnumEN = const GLanguageCodeEnum._('EN');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_AE =
    const GLanguageCodeEnum._('EN_AE');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_AG =
    const GLanguageCodeEnum._('EN_AG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_AI =
    const GLanguageCodeEnum._('EN_AI');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_AS =
    const GLanguageCodeEnum._('EN_AS');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_AT =
    const GLanguageCodeEnum._('EN_AT');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_AU =
    const GLanguageCodeEnum._('EN_AU');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_BB =
    const GLanguageCodeEnum._('EN_BB');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_BE =
    const GLanguageCodeEnum._('EN_BE');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_BI =
    const GLanguageCodeEnum._('EN_BI');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_BM =
    const GLanguageCodeEnum._('EN_BM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_BS =
    const GLanguageCodeEnum._('EN_BS');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_BW =
    const GLanguageCodeEnum._('EN_BW');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_BZ =
    const GLanguageCodeEnum._('EN_BZ');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_CA =
    const GLanguageCodeEnum._('EN_CA');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_CC =
    const GLanguageCodeEnum._('EN_CC');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_CH =
    const GLanguageCodeEnum._('EN_CH');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_CK =
    const GLanguageCodeEnum._('EN_CK');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_CM =
    const GLanguageCodeEnum._('EN_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_CX =
    const GLanguageCodeEnum._('EN_CX');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_CY =
    const GLanguageCodeEnum._('EN_CY');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_DE =
    const GLanguageCodeEnum._('EN_DE');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_DG =
    const GLanguageCodeEnum._('EN_DG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_DK =
    const GLanguageCodeEnum._('EN_DK');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_DM =
    const GLanguageCodeEnum._('EN_DM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_ER =
    const GLanguageCodeEnum._('EN_ER');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_FI =
    const GLanguageCodeEnum._('EN_FI');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_FJ =
    const GLanguageCodeEnum._('EN_FJ');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_FK =
    const GLanguageCodeEnum._('EN_FK');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_FM =
    const GLanguageCodeEnum._('EN_FM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_GB =
    const GLanguageCodeEnum._('EN_GB');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_GD =
    const GLanguageCodeEnum._('EN_GD');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_GG =
    const GLanguageCodeEnum._('EN_GG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_GH =
    const GLanguageCodeEnum._('EN_GH');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_GI =
    const GLanguageCodeEnum._('EN_GI');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_GM =
    const GLanguageCodeEnum._('EN_GM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_GU =
    const GLanguageCodeEnum._('EN_GU');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_GY =
    const GLanguageCodeEnum._('EN_GY');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_HK =
    const GLanguageCodeEnum._('EN_HK');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_IE =
    const GLanguageCodeEnum._('EN_IE');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_IL =
    const GLanguageCodeEnum._('EN_IL');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_IM =
    const GLanguageCodeEnum._('EN_IM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_IN =
    const GLanguageCodeEnum._('EN_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_IO =
    const GLanguageCodeEnum._('EN_IO');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_JE =
    const GLanguageCodeEnum._('EN_JE');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_JM =
    const GLanguageCodeEnum._('EN_JM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_KE =
    const GLanguageCodeEnum._('EN_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_KI =
    const GLanguageCodeEnum._('EN_KI');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_KN =
    const GLanguageCodeEnum._('EN_KN');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_KY =
    const GLanguageCodeEnum._('EN_KY');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_LC =
    const GLanguageCodeEnum._('EN_LC');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_LR =
    const GLanguageCodeEnum._('EN_LR');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_LS =
    const GLanguageCodeEnum._('EN_LS');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MG =
    const GLanguageCodeEnum._('EN_MG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MH =
    const GLanguageCodeEnum._('EN_MH');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MO =
    const GLanguageCodeEnum._('EN_MO');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MP =
    const GLanguageCodeEnum._('EN_MP');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MS =
    const GLanguageCodeEnum._('EN_MS');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MT =
    const GLanguageCodeEnum._('EN_MT');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MU =
    const GLanguageCodeEnum._('EN_MU');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MW =
    const GLanguageCodeEnum._('EN_MW');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_MY =
    const GLanguageCodeEnum._('EN_MY');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_NA =
    const GLanguageCodeEnum._('EN_NA');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_NF =
    const GLanguageCodeEnum._('EN_NF');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_NG =
    const GLanguageCodeEnum._('EN_NG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_NL =
    const GLanguageCodeEnum._('EN_NL');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_NR =
    const GLanguageCodeEnum._('EN_NR');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_NU =
    const GLanguageCodeEnum._('EN_NU');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_NZ =
    const GLanguageCodeEnum._('EN_NZ');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_PG =
    const GLanguageCodeEnum._('EN_PG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_PH =
    const GLanguageCodeEnum._('EN_PH');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_PK =
    const GLanguageCodeEnum._('EN_PK');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_PN =
    const GLanguageCodeEnum._('EN_PN');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_PR =
    const GLanguageCodeEnum._('EN_PR');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_PW =
    const GLanguageCodeEnum._('EN_PW');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_RW =
    const GLanguageCodeEnum._('EN_RW');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SB =
    const GLanguageCodeEnum._('EN_SB');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SC =
    const GLanguageCodeEnum._('EN_SC');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SD =
    const GLanguageCodeEnum._('EN_SD');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SE =
    const GLanguageCodeEnum._('EN_SE');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SG =
    const GLanguageCodeEnum._('EN_SG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SH =
    const GLanguageCodeEnum._('EN_SH');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SI =
    const GLanguageCodeEnum._('EN_SI');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SL =
    const GLanguageCodeEnum._('EN_SL');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SS =
    const GLanguageCodeEnum._('EN_SS');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SX =
    const GLanguageCodeEnum._('EN_SX');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_SZ =
    const GLanguageCodeEnum._('EN_SZ');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_TC =
    const GLanguageCodeEnum._('EN_TC');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_TK =
    const GLanguageCodeEnum._('EN_TK');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_TO =
    const GLanguageCodeEnum._('EN_TO');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_TT =
    const GLanguageCodeEnum._('EN_TT');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_TV =
    const GLanguageCodeEnum._('EN_TV');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_TZ =
    const GLanguageCodeEnum._('EN_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_UG =
    const GLanguageCodeEnum._('EN_UG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_UM =
    const GLanguageCodeEnum._('EN_UM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_US =
    const GLanguageCodeEnum._('EN_US');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_VC =
    const GLanguageCodeEnum._('EN_VC');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_VG =
    const GLanguageCodeEnum._('EN_VG');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_VI =
    const GLanguageCodeEnum._('EN_VI');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_VU =
    const GLanguageCodeEnum._('EN_VU');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_WS =
    const GLanguageCodeEnum._('EN_WS');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_ZA =
    const GLanguageCodeEnum._('EN_ZA');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_ZM =
    const GLanguageCodeEnum._('EN_ZM');
const GLanguageCodeEnum _$gLanguageCodeEnumEN_ZW =
    const GLanguageCodeEnum._('EN_ZW');
const GLanguageCodeEnum _$gLanguageCodeEnumEO = const GLanguageCodeEnum._('EO');
const GLanguageCodeEnum _$gLanguageCodeEnumES = const GLanguageCodeEnum._('ES');
const GLanguageCodeEnum _$gLanguageCodeEnumES_AR =
    const GLanguageCodeEnum._('ES_AR');
const GLanguageCodeEnum _$gLanguageCodeEnumES_BO =
    const GLanguageCodeEnum._('ES_BO');
const GLanguageCodeEnum _$gLanguageCodeEnumES_BR =
    const GLanguageCodeEnum._('ES_BR');
const GLanguageCodeEnum _$gLanguageCodeEnumES_BZ =
    const GLanguageCodeEnum._('ES_BZ');
const GLanguageCodeEnum _$gLanguageCodeEnumES_CL =
    const GLanguageCodeEnum._('ES_CL');
const GLanguageCodeEnum _$gLanguageCodeEnumES_CO =
    const GLanguageCodeEnum._('ES_CO');
const GLanguageCodeEnum _$gLanguageCodeEnumES_CR =
    const GLanguageCodeEnum._('ES_CR');
const GLanguageCodeEnum _$gLanguageCodeEnumES_CU =
    const GLanguageCodeEnum._('ES_CU');
const GLanguageCodeEnum _$gLanguageCodeEnumES_DO =
    const GLanguageCodeEnum._('ES_DO');
const GLanguageCodeEnum _$gLanguageCodeEnumES_EA =
    const GLanguageCodeEnum._('ES_EA');
const GLanguageCodeEnum _$gLanguageCodeEnumES_EC =
    const GLanguageCodeEnum._('ES_EC');
const GLanguageCodeEnum _$gLanguageCodeEnumES_ES =
    const GLanguageCodeEnum._('ES_ES');
const GLanguageCodeEnum _$gLanguageCodeEnumES_GQ =
    const GLanguageCodeEnum._('ES_GQ');
const GLanguageCodeEnum _$gLanguageCodeEnumES_GT =
    const GLanguageCodeEnum._('ES_GT');
const GLanguageCodeEnum _$gLanguageCodeEnumES_HN =
    const GLanguageCodeEnum._('ES_HN');
const GLanguageCodeEnum _$gLanguageCodeEnumES_IC =
    const GLanguageCodeEnum._('ES_IC');
const GLanguageCodeEnum _$gLanguageCodeEnumES_MX =
    const GLanguageCodeEnum._('ES_MX');
const GLanguageCodeEnum _$gLanguageCodeEnumES_NI =
    const GLanguageCodeEnum._('ES_NI');
const GLanguageCodeEnum _$gLanguageCodeEnumES_PA =
    const GLanguageCodeEnum._('ES_PA');
const GLanguageCodeEnum _$gLanguageCodeEnumES_PE =
    const GLanguageCodeEnum._('ES_PE');
const GLanguageCodeEnum _$gLanguageCodeEnumES_PH =
    const GLanguageCodeEnum._('ES_PH');
const GLanguageCodeEnum _$gLanguageCodeEnumES_PR =
    const GLanguageCodeEnum._('ES_PR');
const GLanguageCodeEnum _$gLanguageCodeEnumES_PY =
    const GLanguageCodeEnum._('ES_PY');
const GLanguageCodeEnum _$gLanguageCodeEnumES_SV =
    const GLanguageCodeEnum._('ES_SV');
const GLanguageCodeEnum _$gLanguageCodeEnumES_US =
    const GLanguageCodeEnum._('ES_US');
const GLanguageCodeEnum _$gLanguageCodeEnumES_UY =
    const GLanguageCodeEnum._('ES_UY');
const GLanguageCodeEnum _$gLanguageCodeEnumES_VE =
    const GLanguageCodeEnum._('ES_VE');
const GLanguageCodeEnum _$gLanguageCodeEnumET = const GLanguageCodeEnum._('ET');
const GLanguageCodeEnum _$gLanguageCodeEnumET_EE =
    const GLanguageCodeEnum._('ET_EE');
const GLanguageCodeEnum _$gLanguageCodeEnumEU = const GLanguageCodeEnum._('EU');
const GLanguageCodeEnum _$gLanguageCodeEnumEU_ES =
    const GLanguageCodeEnum._('EU_ES');
const GLanguageCodeEnum _$gLanguageCodeEnumEWO =
    const GLanguageCodeEnum._('EWO');
const GLanguageCodeEnum _$gLanguageCodeEnumEWO_CM =
    const GLanguageCodeEnum._('EWO_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumFA = const GLanguageCodeEnum._('FA');
const GLanguageCodeEnum _$gLanguageCodeEnumFA_AF =
    const GLanguageCodeEnum._('FA_AF');
const GLanguageCodeEnum _$gLanguageCodeEnumFA_IR =
    const GLanguageCodeEnum._('FA_IR');
const GLanguageCodeEnum _$gLanguageCodeEnumFF = const GLanguageCodeEnum._('FF');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM =
    const GLanguageCodeEnum._('FF_ADLM');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_BF =
    const GLanguageCodeEnum._('FF_ADLM_BF');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_CM =
    const GLanguageCodeEnum._('FF_ADLM_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_GH =
    const GLanguageCodeEnum._('FF_ADLM_GH');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_GM =
    const GLanguageCodeEnum._('FF_ADLM_GM');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_GN =
    const GLanguageCodeEnum._('FF_ADLM_GN');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_GW =
    const GLanguageCodeEnum._('FF_ADLM_GW');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_LR =
    const GLanguageCodeEnum._('FF_ADLM_LR');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_MR =
    const GLanguageCodeEnum._('FF_ADLM_MR');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_NE =
    const GLanguageCodeEnum._('FF_ADLM_NE');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_NG =
    const GLanguageCodeEnum._('FF_ADLM_NG');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_SL =
    const GLanguageCodeEnum._('FF_ADLM_SL');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_ADLM_SN =
    const GLanguageCodeEnum._('FF_ADLM_SN');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN =
    const GLanguageCodeEnum._('FF_LATN');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_BF =
    const GLanguageCodeEnum._('FF_LATN_BF');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_CM =
    const GLanguageCodeEnum._('FF_LATN_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_GH =
    const GLanguageCodeEnum._('FF_LATN_GH');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_GM =
    const GLanguageCodeEnum._('FF_LATN_GM');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_GN =
    const GLanguageCodeEnum._('FF_LATN_GN');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_GW =
    const GLanguageCodeEnum._('FF_LATN_GW');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_LR =
    const GLanguageCodeEnum._('FF_LATN_LR');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_MR =
    const GLanguageCodeEnum._('FF_LATN_MR');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_NE =
    const GLanguageCodeEnum._('FF_LATN_NE');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_NG =
    const GLanguageCodeEnum._('FF_LATN_NG');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_SL =
    const GLanguageCodeEnum._('FF_LATN_SL');
const GLanguageCodeEnum _$gLanguageCodeEnumFF_LATN_SN =
    const GLanguageCodeEnum._('FF_LATN_SN');
const GLanguageCodeEnum _$gLanguageCodeEnumFI = const GLanguageCodeEnum._('FI');
const GLanguageCodeEnum _$gLanguageCodeEnumFI_FI =
    const GLanguageCodeEnum._('FI_FI');
const GLanguageCodeEnum _$gLanguageCodeEnumFIL =
    const GLanguageCodeEnum._('FIL');
const GLanguageCodeEnum _$gLanguageCodeEnumFIL_PH =
    const GLanguageCodeEnum._('FIL_PH');
const GLanguageCodeEnum _$gLanguageCodeEnumFO = const GLanguageCodeEnum._('FO');
const GLanguageCodeEnum _$gLanguageCodeEnumFO_DK =
    const GLanguageCodeEnum._('FO_DK');
const GLanguageCodeEnum _$gLanguageCodeEnumFO_FO =
    const GLanguageCodeEnum._('FO_FO');
const GLanguageCodeEnum _$gLanguageCodeEnumFR = const GLanguageCodeEnum._('FR');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_BE =
    const GLanguageCodeEnum._('FR_BE');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_BF =
    const GLanguageCodeEnum._('FR_BF');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_BI =
    const GLanguageCodeEnum._('FR_BI');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_BJ =
    const GLanguageCodeEnum._('FR_BJ');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_BL =
    const GLanguageCodeEnum._('FR_BL');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_CA =
    const GLanguageCodeEnum._('FR_CA');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_CD =
    const GLanguageCodeEnum._('FR_CD');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_CF =
    const GLanguageCodeEnum._('FR_CF');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_CG =
    const GLanguageCodeEnum._('FR_CG');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_CH =
    const GLanguageCodeEnum._('FR_CH');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_CI =
    const GLanguageCodeEnum._('FR_CI');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_CM =
    const GLanguageCodeEnum._('FR_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_DJ =
    const GLanguageCodeEnum._('FR_DJ');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_DZ =
    const GLanguageCodeEnum._('FR_DZ');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_FR =
    const GLanguageCodeEnum._('FR_FR');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_GA =
    const GLanguageCodeEnum._('FR_GA');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_GF =
    const GLanguageCodeEnum._('FR_GF');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_GN =
    const GLanguageCodeEnum._('FR_GN');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_GP =
    const GLanguageCodeEnum._('FR_GP');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_GQ =
    const GLanguageCodeEnum._('FR_GQ');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_HT =
    const GLanguageCodeEnum._('FR_HT');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_KM =
    const GLanguageCodeEnum._('FR_KM');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_LU =
    const GLanguageCodeEnum._('FR_LU');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_MA =
    const GLanguageCodeEnum._('FR_MA');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_MC =
    const GLanguageCodeEnum._('FR_MC');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_MF =
    const GLanguageCodeEnum._('FR_MF');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_MG =
    const GLanguageCodeEnum._('FR_MG');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_ML =
    const GLanguageCodeEnum._('FR_ML');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_MQ =
    const GLanguageCodeEnum._('FR_MQ');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_MR =
    const GLanguageCodeEnum._('FR_MR');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_MU =
    const GLanguageCodeEnum._('FR_MU');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_NC =
    const GLanguageCodeEnum._('FR_NC');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_NE =
    const GLanguageCodeEnum._('FR_NE');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_PF =
    const GLanguageCodeEnum._('FR_PF');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_PM =
    const GLanguageCodeEnum._('FR_PM');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_RE =
    const GLanguageCodeEnum._('FR_RE');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_RW =
    const GLanguageCodeEnum._('FR_RW');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_SC =
    const GLanguageCodeEnum._('FR_SC');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_SN =
    const GLanguageCodeEnum._('FR_SN');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_SY =
    const GLanguageCodeEnum._('FR_SY');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_TD =
    const GLanguageCodeEnum._('FR_TD');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_TG =
    const GLanguageCodeEnum._('FR_TG');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_TN =
    const GLanguageCodeEnum._('FR_TN');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_VU =
    const GLanguageCodeEnum._('FR_VU');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_WF =
    const GLanguageCodeEnum._('FR_WF');
const GLanguageCodeEnum _$gLanguageCodeEnumFR_YT =
    const GLanguageCodeEnum._('FR_YT');
const GLanguageCodeEnum _$gLanguageCodeEnumFUR =
    const GLanguageCodeEnum._('FUR');
const GLanguageCodeEnum _$gLanguageCodeEnumFUR_IT =
    const GLanguageCodeEnum._('FUR_IT');
const GLanguageCodeEnum _$gLanguageCodeEnumFY = const GLanguageCodeEnum._('FY');
const GLanguageCodeEnum _$gLanguageCodeEnumFY_NL =
    const GLanguageCodeEnum._('FY_NL');
const GLanguageCodeEnum _$gLanguageCodeEnumGA = const GLanguageCodeEnum._('GA');
const GLanguageCodeEnum _$gLanguageCodeEnumGA_GB =
    const GLanguageCodeEnum._('GA_GB');
const GLanguageCodeEnum _$gLanguageCodeEnumGA_IE =
    const GLanguageCodeEnum._('GA_IE');
const GLanguageCodeEnum _$gLanguageCodeEnumGD = const GLanguageCodeEnum._('GD');
const GLanguageCodeEnum _$gLanguageCodeEnumGD_GB =
    const GLanguageCodeEnum._('GD_GB');
const GLanguageCodeEnum _$gLanguageCodeEnumGL = const GLanguageCodeEnum._('GL');
const GLanguageCodeEnum _$gLanguageCodeEnumGL_ES =
    const GLanguageCodeEnum._('GL_ES');
const GLanguageCodeEnum _$gLanguageCodeEnumGSW =
    const GLanguageCodeEnum._('GSW');
const GLanguageCodeEnum _$gLanguageCodeEnumGSW_CH =
    const GLanguageCodeEnum._('GSW_CH');
const GLanguageCodeEnum _$gLanguageCodeEnumGSW_FR =
    const GLanguageCodeEnum._('GSW_FR');
const GLanguageCodeEnum _$gLanguageCodeEnumGSW_LI =
    const GLanguageCodeEnum._('GSW_LI');
const GLanguageCodeEnum _$gLanguageCodeEnumGU = const GLanguageCodeEnum._('GU');
const GLanguageCodeEnum _$gLanguageCodeEnumGU_IN =
    const GLanguageCodeEnum._('GU_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumGUZ =
    const GLanguageCodeEnum._('GUZ');
const GLanguageCodeEnum _$gLanguageCodeEnumGUZ_KE =
    const GLanguageCodeEnum._('GUZ_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumGV = const GLanguageCodeEnum._('GV');
const GLanguageCodeEnum _$gLanguageCodeEnumGV_IM =
    const GLanguageCodeEnum._('GV_IM');
const GLanguageCodeEnum _$gLanguageCodeEnumHA = const GLanguageCodeEnum._('HA');
const GLanguageCodeEnum _$gLanguageCodeEnumHA_GH =
    const GLanguageCodeEnum._('HA_GH');
const GLanguageCodeEnum _$gLanguageCodeEnumHA_NE =
    const GLanguageCodeEnum._('HA_NE');
const GLanguageCodeEnum _$gLanguageCodeEnumHA_NG =
    const GLanguageCodeEnum._('HA_NG');
const GLanguageCodeEnum _$gLanguageCodeEnumHAW =
    const GLanguageCodeEnum._('HAW');
const GLanguageCodeEnum _$gLanguageCodeEnumHAW_US =
    const GLanguageCodeEnum._('HAW_US');
const GLanguageCodeEnum _$gLanguageCodeEnumHE = const GLanguageCodeEnum._('HE');
const GLanguageCodeEnum _$gLanguageCodeEnumHE_IL =
    const GLanguageCodeEnum._('HE_IL');
const GLanguageCodeEnum _$gLanguageCodeEnumHI = const GLanguageCodeEnum._('HI');
const GLanguageCodeEnum _$gLanguageCodeEnumHI_IN =
    const GLanguageCodeEnum._('HI_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumHR = const GLanguageCodeEnum._('HR');
const GLanguageCodeEnum _$gLanguageCodeEnumHR_BA =
    const GLanguageCodeEnum._('HR_BA');
const GLanguageCodeEnum _$gLanguageCodeEnumHR_HR =
    const GLanguageCodeEnum._('HR_HR');
const GLanguageCodeEnum _$gLanguageCodeEnumHSB =
    const GLanguageCodeEnum._('HSB');
const GLanguageCodeEnum _$gLanguageCodeEnumHSB_DE =
    const GLanguageCodeEnum._('HSB_DE');
const GLanguageCodeEnum _$gLanguageCodeEnumHU = const GLanguageCodeEnum._('HU');
const GLanguageCodeEnum _$gLanguageCodeEnumHU_HU =
    const GLanguageCodeEnum._('HU_HU');
const GLanguageCodeEnum _$gLanguageCodeEnumHY = const GLanguageCodeEnum._('HY');
const GLanguageCodeEnum _$gLanguageCodeEnumHY_AM =
    const GLanguageCodeEnum._('HY_AM');
const GLanguageCodeEnum _$gLanguageCodeEnumIA = const GLanguageCodeEnum._('IA');
const GLanguageCodeEnum _$gLanguageCodeEnumID = const GLanguageCodeEnum._('ID');
const GLanguageCodeEnum _$gLanguageCodeEnumID_ID =
    const GLanguageCodeEnum._('ID_ID');
const GLanguageCodeEnum _$gLanguageCodeEnumIG = const GLanguageCodeEnum._('IG');
const GLanguageCodeEnum _$gLanguageCodeEnumIG_NG =
    const GLanguageCodeEnum._('IG_NG');
const GLanguageCodeEnum _$gLanguageCodeEnumII = const GLanguageCodeEnum._('II');
const GLanguageCodeEnum _$gLanguageCodeEnumII_CN =
    const GLanguageCodeEnum._('II_CN');
const GLanguageCodeEnum _$gLanguageCodeEnumIS = const GLanguageCodeEnum._('IS');
const GLanguageCodeEnum _$gLanguageCodeEnumIS_IS =
    const GLanguageCodeEnum._('IS_IS');
const GLanguageCodeEnum _$gLanguageCodeEnumIT = const GLanguageCodeEnum._('IT');
const GLanguageCodeEnum _$gLanguageCodeEnumIT_CH =
    const GLanguageCodeEnum._('IT_CH');
const GLanguageCodeEnum _$gLanguageCodeEnumIT_IT =
    const GLanguageCodeEnum._('IT_IT');
const GLanguageCodeEnum _$gLanguageCodeEnumIT_SM =
    const GLanguageCodeEnum._('IT_SM');
const GLanguageCodeEnum _$gLanguageCodeEnumIT_VA =
    const GLanguageCodeEnum._('IT_VA');
const GLanguageCodeEnum _$gLanguageCodeEnumJA = const GLanguageCodeEnum._('JA');
const GLanguageCodeEnum _$gLanguageCodeEnumJA_JP =
    const GLanguageCodeEnum._('JA_JP');
const GLanguageCodeEnum _$gLanguageCodeEnumJGO =
    const GLanguageCodeEnum._('JGO');
const GLanguageCodeEnum _$gLanguageCodeEnumJGO_CM =
    const GLanguageCodeEnum._('JGO_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumJMC =
    const GLanguageCodeEnum._('JMC');
const GLanguageCodeEnum _$gLanguageCodeEnumJMC_TZ =
    const GLanguageCodeEnum._('JMC_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumJV = const GLanguageCodeEnum._('JV');
const GLanguageCodeEnum _$gLanguageCodeEnumJV_ID =
    const GLanguageCodeEnum._('JV_ID');
const GLanguageCodeEnum _$gLanguageCodeEnumKA = const GLanguageCodeEnum._('KA');
const GLanguageCodeEnum _$gLanguageCodeEnumKA_GE =
    const GLanguageCodeEnum._('KA_GE');
const GLanguageCodeEnum _$gLanguageCodeEnumKAB =
    const GLanguageCodeEnum._('KAB');
const GLanguageCodeEnum _$gLanguageCodeEnumKAB_DZ =
    const GLanguageCodeEnum._('KAB_DZ');
const GLanguageCodeEnum _$gLanguageCodeEnumKAM =
    const GLanguageCodeEnum._('KAM');
const GLanguageCodeEnum _$gLanguageCodeEnumKAM_KE =
    const GLanguageCodeEnum._('KAM_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumKDE =
    const GLanguageCodeEnum._('KDE');
const GLanguageCodeEnum _$gLanguageCodeEnumKDE_TZ =
    const GLanguageCodeEnum._('KDE_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumKEA =
    const GLanguageCodeEnum._('KEA');
const GLanguageCodeEnum _$gLanguageCodeEnumKEA_CV =
    const GLanguageCodeEnum._('KEA_CV');
const GLanguageCodeEnum _$gLanguageCodeEnumKHQ =
    const GLanguageCodeEnum._('KHQ');
const GLanguageCodeEnum _$gLanguageCodeEnumKHQ_ML =
    const GLanguageCodeEnum._('KHQ_ML');
const GLanguageCodeEnum _$gLanguageCodeEnumKI = const GLanguageCodeEnum._('KI');
const GLanguageCodeEnum _$gLanguageCodeEnumKI_KE =
    const GLanguageCodeEnum._('KI_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumKK = const GLanguageCodeEnum._('KK');
const GLanguageCodeEnum _$gLanguageCodeEnumKK_KZ =
    const GLanguageCodeEnum._('KK_KZ');
const GLanguageCodeEnum _$gLanguageCodeEnumKKJ =
    const GLanguageCodeEnum._('KKJ');
const GLanguageCodeEnum _$gLanguageCodeEnumKKJ_CM =
    const GLanguageCodeEnum._('KKJ_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumKL = const GLanguageCodeEnum._('KL');
const GLanguageCodeEnum _$gLanguageCodeEnumKL_GL =
    const GLanguageCodeEnum._('KL_GL');
const GLanguageCodeEnum _$gLanguageCodeEnumKLN =
    const GLanguageCodeEnum._('KLN');
const GLanguageCodeEnum _$gLanguageCodeEnumKLN_KE =
    const GLanguageCodeEnum._('KLN_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumKM = const GLanguageCodeEnum._('KM');
const GLanguageCodeEnum _$gLanguageCodeEnumKM_KH =
    const GLanguageCodeEnum._('KM_KH');
const GLanguageCodeEnum _$gLanguageCodeEnumKN = const GLanguageCodeEnum._('KN');
const GLanguageCodeEnum _$gLanguageCodeEnumKN_IN =
    const GLanguageCodeEnum._('KN_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumKO = const GLanguageCodeEnum._('KO');
const GLanguageCodeEnum _$gLanguageCodeEnumKO_KP =
    const GLanguageCodeEnum._('KO_KP');
const GLanguageCodeEnum _$gLanguageCodeEnumKO_KR =
    const GLanguageCodeEnum._('KO_KR');
const GLanguageCodeEnum _$gLanguageCodeEnumKOK =
    const GLanguageCodeEnum._('KOK');
const GLanguageCodeEnum _$gLanguageCodeEnumKOK_IN =
    const GLanguageCodeEnum._('KOK_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumKS = const GLanguageCodeEnum._('KS');
const GLanguageCodeEnum _$gLanguageCodeEnumKS_ARAB =
    const GLanguageCodeEnum._('KS_ARAB');
const GLanguageCodeEnum _$gLanguageCodeEnumKS_ARAB_IN =
    const GLanguageCodeEnum._('KS_ARAB_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumKSB =
    const GLanguageCodeEnum._('KSB');
const GLanguageCodeEnum _$gLanguageCodeEnumKSB_TZ =
    const GLanguageCodeEnum._('KSB_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumKSF =
    const GLanguageCodeEnum._('KSF');
const GLanguageCodeEnum _$gLanguageCodeEnumKSF_CM =
    const GLanguageCodeEnum._('KSF_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumKSH =
    const GLanguageCodeEnum._('KSH');
const GLanguageCodeEnum _$gLanguageCodeEnumKSH_DE =
    const GLanguageCodeEnum._('KSH_DE');
const GLanguageCodeEnum _$gLanguageCodeEnumKU = const GLanguageCodeEnum._('KU');
const GLanguageCodeEnum _$gLanguageCodeEnumKU_TR =
    const GLanguageCodeEnum._('KU_TR');
const GLanguageCodeEnum _$gLanguageCodeEnumKW = const GLanguageCodeEnum._('KW');
const GLanguageCodeEnum _$gLanguageCodeEnumKW_GB =
    const GLanguageCodeEnum._('KW_GB');
const GLanguageCodeEnum _$gLanguageCodeEnumKY = const GLanguageCodeEnum._('KY');
const GLanguageCodeEnum _$gLanguageCodeEnumKY_KG =
    const GLanguageCodeEnum._('KY_KG');
const GLanguageCodeEnum _$gLanguageCodeEnumLAG =
    const GLanguageCodeEnum._('LAG');
const GLanguageCodeEnum _$gLanguageCodeEnumLAG_TZ =
    const GLanguageCodeEnum._('LAG_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumLB = const GLanguageCodeEnum._('LB');
const GLanguageCodeEnum _$gLanguageCodeEnumLB_LU =
    const GLanguageCodeEnum._('LB_LU');
const GLanguageCodeEnum _$gLanguageCodeEnumLG = const GLanguageCodeEnum._('LG');
const GLanguageCodeEnum _$gLanguageCodeEnumLG_UG =
    const GLanguageCodeEnum._('LG_UG');
const GLanguageCodeEnum _$gLanguageCodeEnumLKT =
    const GLanguageCodeEnum._('LKT');
const GLanguageCodeEnum _$gLanguageCodeEnumLKT_US =
    const GLanguageCodeEnum._('LKT_US');
const GLanguageCodeEnum _$gLanguageCodeEnumLN = const GLanguageCodeEnum._('LN');
const GLanguageCodeEnum _$gLanguageCodeEnumLN_AO =
    const GLanguageCodeEnum._('LN_AO');
const GLanguageCodeEnum _$gLanguageCodeEnumLN_CD =
    const GLanguageCodeEnum._('LN_CD');
const GLanguageCodeEnum _$gLanguageCodeEnumLN_CF =
    const GLanguageCodeEnum._('LN_CF');
const GLanguageCodeEnum _$gLanguageCodeEnumLN_CG =
    const GLanguageCodeEnum._('LN_CG');
const GLanguageCodeEnum _$gLanguageCodeEnumLO = const GLanguageCodeEnum._('LO');
const GLanguageCodeEnum _$gLanguageCodeEnumLO_LA =
    const GLanguageCodeEnum._('LO_LA');
const GLanguageCodeEnum _$gLanguageCodeEnumLRC =
    const GLanguageCodeEnum._('LRC');
const GLanguageCodeEnum _$gLanguageCodeEnumLRC_IQ =
    const GLanguageCodeEnum._('LRC_IQ');
const GLanguageCodeEnum _$gLanguageCodeEnumLRC_IR =
    const GLanguageCodeEnum._('LRC_IR');
const GLanguageCodeEnum _$gLanguageCodeEnumLT = const GLanguageCodeEnum._('LT');
const GLanguageCodeEnum _$gLanguageCodeEnumLT_LT =
    const GLanguageCodeEnum._('LT_LT');
const GLanguageCodeEnum _$gLanguageCodeEnumLU = const GLanguageCodeEnum._('LU');
const GLanguageCodeEnum _$gLanguageCodeEnumLU_CD =
    const GLanguageCodeEnum._('LU_CD');
const GLanguageCodeEnum _$gLanguageCodeEnumLUO =
    const GLanguageCodeEnum._('LUO');
const GLanguageCodeEnum _$gLanguageCodeEnumLUO_KE =
    const GLanguageCodeEnum._('LUO_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumLUY =
    const GLanguageCodeEnum._('LUY');
const GLanguageCodeEnum _$gLanguageCodeEnumLUY_KE =
    const GLanguageCodeEnum._('LUY_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumLV = const GLanguageCodeEnum._('LV');
const GLanguageCodeEnum _$gLanguageCodeEnumLV_LV =
    const GLanguageCodeEnum._('LV_LV');
const GLanguageCodeEnum _$gLanguageCodeEnumMAI =
    const GLanguageCodeEnum._('MAI');
const GLanguageCodeEnum _$gLanguageCodeEnumMAI_IN =
    const GLanguageCodeEnum._('MAI_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumMAS =
    const GLanguageCodeEnum._('MAS');
const GLanguageCodeEnum _$gLanguageCodeEnumMAS_KE =
    const GLanguageCodeEnum._('MAS_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumMAS_TZ =
    const GLanguageCodeEnum._('MAS_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumMER =
    const GLanguageCodeEnum._('MER');
const GLanguageCodeEnum _$gLanguageCodeEnumMER_KE =
    const GLanguageCodeEnum._('MER_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumMFE =
    const GLanguageCodeEnum._('MFE');
const GLanguageCodeEnum _$gLanguageCodeEnumMFE_MU =
    const GLanguageCodeEnum._('MFE_MU');
const GLanguageCodeEnum _$gLanguageCodeEnumMG = const GLanguageCodeEnum._('MG');
const GLanguageCodeEnum _$gLanguageCodeEnumMG_MG =
    const GLanguageCodeEnum._('MG_MG');
const GLanguageCodeEnum _$gLanguageCodeEnumMGH =
    const GLanguageCodeEnum._('MGH');
const GLanguageCodeEnum _$gLanguageCodeEnumMGH_MZ =
    const GLanguageCodeEnum._('MGH_MZ');
const GLanguageCodeEnum _$gLanguageCodeEnumMGO =
    const GLanguageCodeEnum._('MGO');
const GLanguageCodeEnum _$gLanguageCodeEnumMGO_CM =
    const GLanguageCodeEnum._('MGO_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumMI = const GLanguageCodeEnum._('MI');
const GLanguageCodeEnum _$gLanguageCodeEnumMI_NZ =
    const GLanguageCodeEnum._('MI_NZ');
const GLanguageCodeEnum _$gLanguageCodeEnumMK = const GLanguageCodeEnum._('MK');
const GLanguageCodeEnum _$gLanguageCodeEnumMK_MK =
    const GLanguageCodeEnum._('MK_MK');
const GLanguageCodeEnum _$gLanguageCodeEnumML = const GLanguageCodeEnum._('ML');
const GLanguageCodeEnum _$gLanguageCodeEnumML_IN =
    const GLanguageCodeEnum._('ML_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumMN = const GLanguageCodeEnum._('MN');
const GLanguageCodeEnum _$gLanguageCodeEnumMN_MN =
    const GLanguageCodeEnum._('MN_MN');
const GLanguageCodeEnum _$gLanguageCodeEnumMNI =
    const GLanguageCodeEnum._('MNI');
const GLanguageCodeEnum _$gLanguageCodeEnumMNI_BENG =
    const GLanguageCodeEnum._('MNI_BENG');
const GLanguageCodeEnum _$gLanguageCodeEnumMNI_BENG_IN =
    const GLanguageCodeEnum._('MNI_BENG_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumMR = const GLanguageCodeEnum._('MR');
const GLanguageCodeEnum _$gLanguageCodeEnumMR_IN =
    const GLanguageCodeEnum._('MR_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumMS = const GLanguageCodeEnum._('MS');
const GLanguageCodeEnum _$gLanguageCodeEnumMS_BN =
    const GLanguageCodeEnum._('MS_BN');
const GLanguageCodeEnum _$gLanguageCodeEnumMS_ID =
    const GLanguageCodeEnum._('MS_ID');
const GLanguageCodeEnum _$gLanguageCodeEnumMS_MY =
    const GLanguageCodeEnum._('MS_MY');
const GLanguageCodeEnum _$gLanguageCodeEnumMS_SG =
    const GLanguageCodeEnum._('MS_SG');
const GLanguageCodeEnum _$gLanguageCodeEnumMT = const GLanguageCodeEnum._('MT');
const GLanguageCodeEnum _$gLanguageCodeEnumMT_MT =
    const GLanguageCodeEnum._('MT_MT');
const GLanguageCodeEnum _$gLanguageCodeEnumMUA =
    const GLanguageCodeEnum._('MUA');
const GLanguageCodeEnum _$gLanguageCodeEnumMUA_CM =
    const GLanguageCodeEnum._('MUA_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumMY = const GLanguageCodeEnum._('MY');
const GLanguageCodeEnum _$gLanguageCodeEnumMY_MM =
    const GLanguageCodeEnum._('MY_MM');
const GLanguageCodeEnum _$gLanguageCodeEnumMZN =
    const GLanguageCodeEnum._('MZN');
const GLanguageCodeEnum _$gLanguageCodeEnumMZN_IR =
    const GLanguageCodeEnum._('MZN_IR');
const GLanguageCodeEnum _$gLanguageCodeEnumNAQ =
    const GLanguageCodeEnum._('NAQ');
const GLanguageCodeEnum _$gLanguageCodeEnumNAQ_NA =
    const GLanguageCodeEnum._('NAQ_NA');
const GLanguageCodeEnum _$gLanguageCodeEnumNB = const GLanguageCodeEnum._('NB');
const GLanguageCodeEnum _$gLanguageCodeEnumNB_NO =
    const GLanguageCodeEnum._('NB_NO');
const GLanguageCodeEnum _$gLanguageCodeEnumNB_SJ =
    const GLanguageCodeEnum._('NB_SJ');
const GLanguageCodeEnum _$gLanguageCodeEnumND = const GLanguageCodeEnum._('ND');
const GLanguageCodeEnum _$gLanguageCodeEnumND_ZW =
    const GLanguageCodeEnum._('ND_ZW');
const GLanguageCodeEnum _$gLanguageCodeEnumNDS =
    const GLanguageCodeEnum._('NDS');
const GLanguageCodeEnum _$gLanguageCodeEnumNDS_DE =
    const GLanguageCodeEnum._('NDS_DE');
const GLanguageCodeEnum _$gLanguageCodeEnumNDS_NL =
    const GLanguageCodeEnum._('NDS_NL');
const GLanguageCodeEnum _$gLanguageCodeEnumNE = const GLanguageCodeEnum._('NE');
const GLanguageCodeEnum _$gLanguageCodeEnumNE_IN =
    const GLanguageCodeEnum._('NE_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumNE_NP =
    const GLanguageCodeEnum._('NE_NP');
const GLanguageCodeEnum _$gLanguageCodeEnumNL = const GLanguageCodeEnum._('NL');
const GLanguageCodeEnum _$gLanguageCodeEnumNL_AW =
    const GLanguageCodeEnum._('NL_AW');
const GLanguageCodeEnum _$gLanguageCodeEnumNL_BE =
    const GLanguageCodeEnum._('NL_BE');
const GLanguageCodeEnum _$gLanguageCodeEnumNL_BQ =
    const GLanguageCodeEnum._('NL_BQ');
const GLanguageCodeEnum _$gLanguageCodeEnumNL_CW =
    const GLanguageCodeEnum._('NL_CW');
const GLanguageCodeEnum _$gLanguageCodeEnumNL_NL =
    const GLanguageCodeEnum._('NL_NL');
const GLanguageCodeEnum _$gLanguageCodeEnumNL_SR =
    const GLanguageCodeEnum._('NL_SR');
const GLanguageCodeEnum _$gLanguageCodeEnumNL_SX =
    const GLanguageCodeEnum._('NL_SX');
const GLanguageCodeEnum _$gLanguageCodeEnumNMG =
    const GLanguageCodeEnum._('NMG');
const GLanguageCodeEnum _$gLanguageCodeEnumNMG_CM =
    const GLanguageCodeEnum._('NMG_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumNN = const GLanguageCodeEnum._('NN');
const GLanguageCodeEnum _$gLanguageCodeEnumNN_NO =
    const GLanguageCodeEnum._('NN_NO');
const GLanguageCodeEnum _$gLanguageCodeEnumNNH =
    const GLanguageCodeEnum._('NNH');
const GLanguageCodeEnum _$gLanguageCodeEnumNNH_CM =
    const GLanguageCodeEnum._('NNH_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumNUS =
    const GLanguageCodeEnum._('NUS');
const GLanguageCodeEnum _$gLanguageCodeEnumNUS_SS =
    const GLanguageCodeEnum._('NUS_SS');
const GLanguageCodeEnum _$gLanguageCodeEnumNYN =
    const GLanguageCodeEnum._('NYN');
const GLanguageCodeEnum _$gLanguageCodeEnumNYN_UG =
    const GLanguageCodeEnum._('NYN_UG');
const GLanguageCodeEnum _$gLanguageCodeEnumOM = const GLanguageCodeEnum._('OM');
const GLanguageCodeEnum _$gLanguageCodeEnumOM_ET =
    const GLanguageCodeEnum._('OM_ET');
const GLanguageCodeEnum _$gLanguageCodeEnumOM_KE =
    const GLanguageCodeEnum._('OM_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumOR = const GLanguageCodeEnum._('OR');
const GLanguageCodeEnum _$gLanguageCodeEnumOR_IN =
    const GLanguageCodeEnum._('OR_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumOS = const GLanguageCodeEnum._('OS');
const GLanguageCodeEnum _$gLanguageCodeEnumOS_GE =
    const GLanguageCodeEnum._('OS_GE');
const GLanguageCodeEnum _$gLanguageCodeEnumOS_RU =
    const GLanguageCodeEnum._('OS_RU');
const GLanguageCodeEnum _$gLanguageCodeEnumPA = const GLanguageCodeEnum._('PA');
const GLanguageCodeEnum _$gLanguageCodeEnumPA_ARAB =
    const GLanguageCodeEnum._('PA_ARAB');
const GLanguageCodeEnum _$gLanguageCodeEnumPA_ARAB_PK =
    const GLanguageCodeEnum._('PA_ARAB_PK');
const GLanguageCodeEnum _$gLanguageCodeEnumPA_GURU =
    const GLanguageCodeEnum._('PA_GURU');
const GLanguageCodeEnum _$gLanguageCodeEnumPA_GURU_IN =
    const GLanguageCodeEnum._('PA_GURU_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumPCM =
    const GLanguageCodeEnum._('PCM');
const GLanguageCodeEnum _$gLanguageCodeEnumPCM_NG =
    const GLanguageCodeEnum._('PCM_NG');
const GLanguageCodeEnum _$gLanguageCodeEnumPL = const GLanguageCodeEnum._('PL');
const GLanguageCodeEnum _$gLanguageCodeEnumPL_PL =
    const GLanguageCodeEnum._('PL_PL');
const GLanguageCodeEnum _$gLanguageCodeEnumPRG =
    const GLanguageCodeEnum._('PRG');
const GLanguageCodeEnum _$gLanguageCodeEnumPS = const GLanguageCodeEnum._('PS');
const GLanguageCodeEnum _$gLanguageCodeEnumPS_AF =
    const GLanguageCodeEnum._('PS_AF');
const GLanguageCodeEnum _$gLanguageCodeEnumPS_PK =
    const GLanguageCodeEnum._('PS_PK');
const GLanguageCodeEnum _$gLanguageCodeEnumPT = const GLanguageCodeEnum._('PT');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_AO =
    const GLanguageCodeEnum._('PT_AO');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_BR =
    const GLanguageCodeEnum._('PT_BR');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_CH =
    const GLanguageCodeEnum._('PT_CH');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_CV =
    const GLanguageCodeEnum._('PT_CV');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_GQ =
    const GLanguageCodeEnum._('PT_GQ');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_GW =
    const GLanguageCodeEnum._('PT_GW');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_LU =
    const GLanguageCodeEnum._('PT_LU');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_MO =
    const GLanguageCodeEnum._('PT_MO');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_MZ =
    const GLanguageCodeEnum._('PT_MZ');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_PT =
    const GLanguageCodeEnum._('PT_PT');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_ST =
    const GLanguageCodeEnum._('PT_ST');
const GLanguageCodeEnum _$gLanguageCodeEnumPT_TL =
    const GLanguageCodeEnum._('PT_TL');
const GLanguageCodeEnum _$gLanguageCodeEnumQU = const GLanguageCodeEnum._('QU');
const GLanguageCodeEnum _$gLanguageCodeEnumQU_BO =
    const GLanguageCodeEnum._('QU_BO');
const GLanguageCodeEnum _$gLanguageCodeEnumQU_EC =
    const GLanguageCodeEnum._('QU_EC');
const GLanguageCodeEnum _$gLanguageCodeEnumQU_PE =
    const GLanguageCodeEnum._('QU_PE');
const GLanguageCodeEnum _$gLanguageCodeEnumRM = const GLanguageCodeEnum._('RM');
const GLanguageCodeEnum _$gLanguageCodeEnumRM_CH =
    const GLanguageCodeEnum._('RM_CH');
const GLanguageCodeEnum _$gLanguageCodeEnumRN = const GLanguageCodeEnum._('RN');
const GLanguageCodeEnum _$gLanguageCodeEnumRN_BI =
    const GLanguageCodeEnum._('RN_BI');
const GLanguageCodeEnum _$gLanguageCodeEnumRO = const GLanguageCodeEnum._('RO');
const GLanguageCodeEnum _$gLanguageCodeEnumRO_MD =
    const GLanguageCodeEnum._('RO_MD');
const GLanguageCodeEnum _$gLanguageCodeEnumRO_RO =
    const GLanguageCodeEnum._('RO_RO');
const GLanguageCodeEnum _$gLanguageCodeEnumROF =
    const GLanguageCodeEnum._('ROF');
const GLanguageCodeEnum _$gLanguageCodeEnumROF_TZ =
    const GLanguageCodeEnum._('ROF_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumRU = const GLanguageCodeEnum._('RU');
const GLanguageCodeEnum _$gLanguageCodeEnumRU_BY =
    const GLanguageCodeEnum._('RU_BY');
const GLanguageCodeEnum _$gLanguageCodeEnumRU_KG =
    const GLanguageCodeEnum._('RU_KG');
const GLanguageCodeEnum _$gLanguageCodeEnumRU_KZ =
    const GLanguageCodeEnum._('RU_KZ');
const GLanguageCodeEnum _$gLanguageCodeEnumRU_MD =
    const GLanguageCodeEnum._('RU_MD');
const GLanguageCodeEnum _$gLanguageCodeEnumRU_RU =
    const GLanguageCodeEnum._('RU_RU');
const GLanguageCodeEnum _$gLanguageCodeEnumRU_UA =
    const GLanguageCodeEnum._('RU_UA');
const GLanguageCodeEnum _$gLanguageCodeEnumRW = const GLanguageCodeEnum._('RW');
const GLanguageCodeEnum _$gLanguageCodeEnumRW_RW =
    const GLanguageCodeEnum._('RW_RW');
const GLanguageCodeEnum _$gLanguageCodeEnumRWK =
    const GLanguageCodeEnum._('RWK');
const GLanguageCodeEnum _$gLanguageCodeEnumRWK_TZ =
    const GLanguageCodeEnum._('RWK_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumSAH =
    const GLanguageCodeEnum._('SAH');
const GLanguageCodeEnum _$gLanguageCodeEnumSAH_RU =
    const GLanguageCodeEnum._('SAH_RU');
const GLanguageCodeEnum _$gLanguageCodeEnumSAQ =
    const GLanguageCodeEnum._('SAQ');
const GLanguageCodeEnum _$gLanguageCodeEnumSAQ_KE =
    const GLanguageCodeEnum._('SAQ_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumSAT =
    const GLanguageCodeEnum._('SAT');
const GLanguageCodeEnum _$gLanguageCodeEnumSAT_OLCK =
    const GLanguageCodeEnum._('SAT_OLCK');
const GLanguageCodeEnum _$gLanguageCodeEnumSAT_OLCK_IN =
    const GLanguageCodeEnum._('SAT_OLCK_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumSBP =
    const GLanguageCodeEnum._('SBP');
const GLanguageCodeEnum _$gLanguageCodeEnumSBP_TZ =
    const GLanguageCodeEnum._('SBP_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumSD = const GLanguageCodeEnum._('SD');
const GLanguageCodeEnum _$gLanguageCodeEnumSD_ARAB =
    const GLanguageCodeEnum._('SD_ARAB');
const GLanguageCodeEnum _$gLanguageCodeEnumSD_ARAB_PK =
    const GLanguageCodeEnum._('SD_ARAB_PK');
const GLanguageCodeEnum _$gLanguageCodeEnumSD_DEVA =
    const GLanguageCodeEnum._('SD_DEVA');
const GLanguageCodeEnum _$gLanguageCodeEnumSD_DEVA_IN =
    const GLanguageCodeEnum._('SD_DEVA_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumSE = const GLanguageCodeEnum._('SE');
const GLanguageCodeEnum _$gLanguageCodeEnumSE_FI =
    const GLanguageCodeEnum._('SE_FI');
const GLanguageCodeEnum _$gLanguageCodeEnumSE_NO =
    const GLanguageCodeEnum._('SE_NO');
const GLanguageCodeEnum _$gLanguageCodeEnumSE_SE =
    const GLanguageCodeEnum._('SE_SE');
const GLanguageCodeEnum _$gLanguageCodeEnumSEH =
    const GLanguageCodeEnum._('SEH');
const GLanguageCodeEnum _$gLanguageCodeEnumSEH_MZ =
    const GLanguageCodeEnum._('SEH_MZ');
const GLanguageCodeEnum _$gLanguageCodeEnumSES =
    const GLanguageCodeEnum._('SES');
const GLanguageCodeEnum _$gLanguageCodeEnumSES_ML =
    const GLanguageCodeEnum._('SES_ML');
const GLanguageCodeEnum _$gLanguageCodeEnumSG = const GLanguageCodeEnum._('SG');
const GLanguageCodeEnum _$gLanguageCodeEnumSG_CF =
    const GLanguageCodeEnum._('SG_CF');
const GLanguageCodeEnum _$gLanguageCodeEnumSHI =
    const GLanguageCodeEnum._('SHI');
const GLanguageCodeEnum _$gLanguageCodeEnumSHI_LATN =
    const GLanguageCodeEnum._('SHI_LATN');
const GLanguageCodeEnum _$gLanguageCodeEnumSHI_LATN_MA =
    const GLanguageCodeEnum._('SHI_LATN_MA');
const GLanguageCodeEnum _$gLanguageCodeEnumSHI_TFNG =
    const GLanguageCodeEnum._('SHI_TFNG');
const GLanguageCodeEnum _$gLanguageCodeEnumSHI_TFNG_MA =
    const GLanguageCodeEnum._('SHI_TFNG_MA');
const GLanguageCodeEnum _$gLanguageCodeEnumSI = const GLanguageCodeEnum._('SI');
const GLanguageCodeEnum _$gLanguageCodeEnumSI_LK =
    const GLanguageCodeEnum._('SI_LK');
const GLanguageCodeEnum _$gLanguageCodeEnumSK = const GLanguageCodeEnum._('SK');
const GLanguageCodeEnum _$gLanguageCodeEnumSK_SK =
    const GLanguageCodeEnum._('SK_SK');
const GLanguageCodeEnum _$gLanguageCodeEnumSL = const GLanguageCodeEnum._('SL');
const GLanguageCodeEnum _$gLanguageCodeEnumSL_SI =
    const GLanguageCodeEnum._('SL_SI');
const GLanguageCodeEnum _$gLanguageCodeEnumSMN =
    const GLanguageCodeEnum._('SMN');
const GLanguageCodeEnum _$gLanguageCodeEnumSMN_FI =
    const GLanguageCodeEnum._('SMN_FI');
const GLanguageCodeEnum _$gLanguageCodeEnumSN = const GLanguageCodeEnum._('SN');
const GLanguageCodeEnum _$gLanguageCodeEnumSN_ZW =
    const GLanguageCodeEnum._('SN_ZW');
const GLanguageCodeEnum _$gLanguageCodeEnumSO = const GLanguageCodeEnum._('SO');
const GLanguageCodeEnum _$gLanguageCodeEnumSO_DJ =
    const GLanguageCodeEnum._('SO_DJ');
const GLanguageCodeEnum _$gLanguageCodeEnumSO_ET =
    const GLanguageCodeEnum._('SO_ET');
const GLanguageCodeEnum _$gLanguageCodeEnumSO_KE =
    const GLanguageCodeEnum._('SO_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumSO_SO =
    const GLanguageCodeEnum._('SO_SO');
const GLanguageCodeEnum _$gLanguageCodeEnumSQ = const GLanguageCodeEnum._('SQ');
const GLanguageCodeEnum _$gLanguageCodeEnumSQ_AL =
    const GLanguageCodeEnum._('SQ_AL');
const GLanguageCodeEnum _$gLanguageCodeEnumSQ_MK =
    const GLanguageCodeEnum._('SQ_MK');
const GLanguageCodeEnum _$gLanguageCodeEnumSQ_XK =
    const GLanguageCodeEnum._('SQ_XK');
const GLanguageCodeEnum _$gLanguageCodeEnumSR = const GLanguageCodeEnum._('SR');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_CYRL =
    const GLanguageCodeEnum._('SR_CYRL');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_CYRL_BA =
    const GLanguageCodeEnum._('SR_CYRL_BA');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_CYRL_ME =
    const GLanguageCodeEnum._('SR_CYRL_ME');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_CYRL_RS =
    const GLanguageCodeEnum._('SR_CYRL_RS');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_CYRL_XK =
    const GLanguageCodeEnum._('SR_CYRL_XK');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_LATN =
    const GLanguageCodeEnum._('SR_LATN');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_LATN_BA =
    const GLanguageCodeEnum._('SR_LATN_BA');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_LATN_ME =
    const GLanguageCodeEnum._('SR_LATN_ME');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_LATN_RS =
    const GLanguageCodeEnum._('SR_LATN_RS');
const GLanguageCodeEnum _$gLanguageCodeEnumSR_LATN_XK =
    const GLanguageCodeEnum._('SR_LATN_XK');
const GLanguageCodeEnum _$gLanguageCodeEnumSU = const GLanguageCodeEnum._('SU');
const GLanguageCodeEnum _$gLanguageCodeEnumSU_LATN =
    const GLanguageCodeEnum._('SU_LATN');
const GLanguageCodeEnum _$gLanguageCodeEnumSU_LATN_ID =
    const GLanguageCodeEnum._('SU_LATN_ID');
const GLanguageCodeEnum _$gLanguageCodeEnumSV = const GLanguageCodeEnum._('SV');
const GLanguageCodeEnum _$gLanguageCodeEnumSV_AX =
    const GLanguageCodeEnum._('SV_AX');
const GLanguageCodeEnum _$gLanguageCodeEnumSV_FI =
    const GLanguageCodeEnum._('SV_FI');
const GLanguageCodeEnum _$gLanguageCodeEnumSV_SE =
    const GLanguageCodeEnum._('SV_SE');
const GLanguageCodeEnum _$gLanguageCodeEnumSW = const GLanguageCodeEnum._('SW');
const GLanguageCodeEnum _$gLanguageCodeEnumSW_CD =
    const GLanguageCodeEnum._('SW_CD');
const GLanguageCodeEnum _$gLanguageCodeEnumSW_KE =
    const GLanguageCodeEnum._('SW_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumSW_TZ =
    const GLanguageCodeEnum._('SW_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumSW_UG =
    const GLanguageCodeEnum._('SW_UG');
const GLanguageCodeEnum _$gLanguageCodeEnumTA = const GLanguageCodeEnum._('TA');
const GLanguageCodeEnum _$gLanguageCodeEnumTA_IN =
    const GLanguageCodeEnum._('TA_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumTA_LK =
    const GLanguageCodeEnum._('TA_LK');
const GLanguageCodeEnum _$gLanguageCodeEnumTA_MY =
    const GLanguageCodeEnum._('TA_MY');
const GLanguageCodeEnum _$gLanguageCodeEnumTA_SG =
    const GLanguageCodeEnum._('TA_SG');
const GLanguageCodeEnum _$gLanguageCodeEnumTE = const GLanguageCodeEnum._('TE');
const GLanguageCodeEnum _$gLanguageCodeEnumTE_IN =
    const GLanguageCodeEnum._('TE_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumTEO =
    const GLanguageCodeEnum._('TEO');
const GLanguageCodeEnum _$gLanguageCodeEnumTEO_KE =
    const GLanguageCodeEnum._('TEO_KE');
const GLanguageCodeEnum _$gLanguageCodeEnumTEO_UG =
    const GLanguageCodeEnum._('TEO_UG');
const GLanguageCodeEnum _$gLanguageCodeEnumTG = const GLanguageCodeEnum._('TG');
const GLanguageCodeEnum _$gLanguageCodeEnumTG_TJ =
    const GLanguageCodeEnum._('TG_TJ');
const GLanguageCodeEnum _$gLanguageCodeEnumTH = const GLanguageCodeEnum._('TH');
const GLanguageCodeEnum _$gLanguageCodeEnumTH_TH =
    const GLanguageCodeEnum._('TH_TH');
const GLanguageCodeEnum _$gLanguageCodeEnumTI = const GLanguageCodeEnum._('TI');
const GLanguageCodeEnum _$gLanguageCodeEnumTI_ER =
    const GLanguageCodeEnum._('TI_ER');
const GLanguageCodeEnum _$gLanguageCodeEnumTI_ET =
    const GLanguageCodeEnum._('TI_ET');
const GLanguageCodeEnum _$gLanguageCodeEnumTK = const GLanguageCodeEnum._('TK');
const GLanguageCodeEnum _$gLanguageCodeEnumTK_TM =
    const GLanguageCodeEnum._('TK_TM');
const GLanguageCodeEnum _$gLanguageCodeEnumTO = const GLanguageCodeEnum._('TO');
const GLanguageCodeEnum _$gLanguageCodeEnumTO_TO =
    const GLanguageCodeEnum._('TO_TO');
const GLanguageCodeEnum _$gLanguageCodeEnumTR = const GLanguageCodeEnum._('TR');
const GLanguageCodeEnum _$gLanguageCodeEnumTR_CY =
    const GLanguageCodeEnum._('TR_CY');
const GLanguageCodeEnum _$gLanguageCodeEnumTR_TR =
    const GLanguageCodeEnum._('TR_TR');
const GLanguageCodeEnum _$gLanguageCodeEnumTT = const GLanguageCodeEnum._('TT');
const GLanguageCodeEnum _$gLanguageCodeEnumTT_RU =
    const GLanguageCodeEnum._('TT_RU');
const GLanguageCodeEnum _$gLanguageCodeEnumTWQ =
    const GLanguageCodeEnum._('TWQ');
const GLanguageCodeEnum _$gLanguageCodeEnumTWQ_NE =
    const GLanguageCodeEnum._('TWQ_NE');
const GLanguageCodeEnum _$gLanguageCodeEnumTZM =
    const GLanguageCodeEnum._('TZM');
const GLanguageCodeEnum _$gLanguageCodeEnumTZM_MA =
    const GLanguageCodeEnum._('TZM_MA');
const GLanguageCodeEnum _$gLanguageCodeEnumUG = const GLanguageCodeEnum._('UG');
const GLanguageCodeEnum _$gLanguageCodeEnumUG_CN =
    const GLanguageCodeEnum._('UG_CN');
const GLanguageCodeEnum _$gLanguageCodeEnumUK = const GLanguageCodeEnum._('UK');
const GLanguageCodeEnum _$gLanguageCodeEnumUK_UA =
    const GLanguageCodeEnum._('UK_UA');
const GLanguageCodeEnum _$gLanguageCodeEnumUR = const GLanguageCodeEnum._('UR');
const GLanguageCodeEnum _$gLanguageCodeEnumUR_IN =
    const GLanguageCodeEnum._('UR_IN');
const GLanguageCodeEnum _$gLanguageCodeEnumUR_PK =
    const GLanguageCodeEnum._('UR_PK');
const GLanguageCodeEnum _$gLanguageCodeEnumUZ = const GLanguageCodeEnum._('UZ');
const GLanguageCodeEnum _$gLanguageCodeEnumUZ_ARAB =
    const GLanguageCodeEnum._('UZ_ARAB');
const GLanguageCodeEnum _$gLanguageCodeEnumUZ_ARAB_AF =
    const GLanguageCodeEnum._('UZ_ARAB_AF');
const GLanguageCodeEnum _$gLanguageCodeEnumUZ_CYRL =
    const GLanguageCodeEnum._('UZ_CYRL');
const GLanguageCodeEnum _$gLanguageCodeEnumUZ_CYRL_UZ =
    const GLanguageCodeEnum._('UZ_CYRL_UZ');
const GLanguageCodeEnum _$gLanguageCodeEnumUZ_LATN =
    const GLanguageCodeEnum._('UZ_LATN');
const GLanguageCodeEnum _$gLanguageCodeEnumUZ_LATN_UZ =
    const GLanguageCodeEnum._('UZ_LATN_UZ');
const GLanguageCodeEnum _$gLanguageCodeEnumVAI =
    const GLanguageCodeEnum._('VAI');
const GLanguageCodeEnum _$gLanguageCodeEnumVAI_LATN =
    const GLanguageCodeEnum._('VAI_LATN');
const GLanguageCodeEnum _$gLanguageCodeEnumVAI_LATN_LR =
    const GLanguageCodeEnum._('VAI_LATN_LR');
const GLanguageCodeEnum _$gLanguageCodeEnumVAI_VAII =
    const GLanguageCodeEnum._('VAI_VAII');
const GLanguageCodeEnum _$gLanguageCodeEnumVAI_VAII_LR =
    const GLanguageCodeEnum._('VAI_VAII_LR');
const GLanguageCodeEnum _$gLanguageCodeEnumVI = const GLanguageCodeEnum._('VI');
const GLanguageCodeEnum _$gLanguageCodeEnumVI_VN =
    const GLanguageCodeEnum._('VI_VN');
const GLanguageCodeEnum _$gLanguageCodeEnumVO = const GLanguageCodeEnum._('VO');
const GLanguageCodeEnum _$gLanguageCodeEnumVUN =
    const GLanguageCodeEnum._('VUN');
const GLanguageCodeEnum _$gLanguageCodeEnumVUN_TZ =
    const GLanguageCodeEnum._('VUN_TZ');
const GLanguageCodeEnum _$gLanguageCodeEnumWAE =
    const GLanguageCodeEnum._('WAE');
const GLanguageCodeEnum _$gLanguageCodeEnumWAE_CH =
    const GLanguageCodeEnum._('WAE_CH');
const GLanguageCodeEnum _$gLanguageCodeEnumWO = const GLanguageCodeEnum._('WO');
const GLanguageCodeEnum _$gLanguageCodeEnumWO_SN =
    const GLanguageCodeEnum._('WO_SN');
const GLanguageCodeEnum _$gLanguageCodeEnumXH = const GLanguageCodeEnum._('XH');
const GLanguageCodeEnum _$gLanguageCodeEnumXH_ZA =
    const GLanguageCodeEnum._('XH_ZA');
const GLanguageCodeEnum _$gLanguageCodeEnumXOG =
    const GLanguageCodeEnum._('XOG');
const GLanguageCodeEnum _$gLanguageCodeEnumXOG_UG =
    const GLanguageCodeEnum._('XOG_UG');
const GLanguageCodeEnum _$gLanguageCodeEnumYAV =
    const GLanguageCodeEnum._('YAV');
const GLanguageCodeEnum _$gLanguageCodeEnumYAV_CM =
    const GLanguageCodeEnum._('YAV_CM');
const GLanguageCodeEnum _$gLanguageCodeEnumYI = const GLanguageCodeEnum._('YI');
const GLanguageCodeEnum _$gLanguageCodeEnumYO = const GLanguageCodeEnum._('YO');
const GLanguageCodeEnum _$gLanguageCodeEnumYO_BJ =
    const GLanguageCodeEnum._('YO_BJ');
const GLanguageCodeEnum _$gLanguageCodeEnumYO_NG =
    const GLanguageCodeEnum._('YO_NG');
const GLanguageCodeEnum _$gLanguageCodeEnumYUE =
    const GLanguageCodeEnum._('YUE');
const GLanguageCodeEnum _$gLanguageCodeEnumYUE_HANS =
    const GLanguageCodeEnum._('YUE_HANS');
const GLanguageCodeEnum _$gLanguageCodeEnumYUE_HANS_CN =
    const GLanguageCodeEnum._('YUE_HANS_CN');
const GLanguageCodeEnum _$gLanguageCodeEnumYUE_HANT =
    const GLanguageCodeEnum._('YUE_HANT');
const GLanguageCodeEnum _$gLanguageCodeEnumYUE_HANT_HK =
    const GLanguageCodeEnum._('YUE_HANT_HK');
const GLanguageCodeEnum _$gLanguageCodeEnumZGH =
    const GLanguageCodeEnum._('ZGH');
const GLanguageCodeEnum _$gLanguageCodeEnumZGH_MA =
    const GLanguageCodeEnum._('ZGH_MA');
const GLanguageCodeEnum _$gLanguageCodeEnumZH = const GLanguageCodeEnum._('ZH');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANS =
    const GLanguageCodeEnum._('ZH_HANS');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANS_CN =
    const GLanguageCodeEnum._('ZH_HANS_CN');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANS_HK =
    const GLanguageCodeEnum._('ZH_HANS_HK');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANS_MO =
    const GLanguageCodeEnum._('ZH_HANS_MO');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANS_SG =
    const GLanguageCodeEnum._('ZH_HANS_SG');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANT =
    const GLanguageCodeEnum._('ZH_HANT');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANT_HK =
    const GLanguageCodeEnum._('ZH_HANT_HK');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANT_MO =
    const GLanguageCodeEnum._('ZH_HANT_MO');
const GLanguageCodeEnum _$gLanguageCodeEnumZH_HANT_TW =
    const GLanguageCodeEnum._('ZH_HANT_TW');
const GLanguageCodeEnum _$gLanguageCodeEnumZU = const GLanguageCodeEnum._('ZU');
const GLanguageCodeEnum _$gLanguageCodeEnumZU_ZA =
    const GLanguageCodeEnum._('ZU_ZA');

GLanguageCodeEnum _$gLanguageCodeEnumValueOf(String name) {
  switch (name) {
    case 'AF':
      return _$gLanguageCodeEnumAF;
    case 'AF_NA':
      return _$gLanguageCodeEnumAF_NA;
    case 'AF_ZA':
      return _$gLanguageCodeEnumAF_ZA;
    case 'AGQ':
      return _$gLanguageCodeEnumAGQ;
    case 'AGQ_CM':
      return _$gLanguageCodeEnumAGQ_CM;
    case 'AK':
      return _$gLanguageCodeEnumAK;
    case 'AK_GH':
      return _$gLanguageCodeEnumAK_GH;
    case 'AM':
      return _$gLanguageCodeEnumAM;
    case 'AM_ET':
      return _$gLanguageCodeEnumAM_ET;
    case 'AR':
      return _$gLanguageCodeEnumAR;
    case 'AR_AE':
      return _$gLanguageCodeEnumAR_AE;
    case 'AR_BH':
      return _$gLanguageCodeEnumAR_BH;
    case 'AR_DJ':
      return _$gLanguageCodeEnumAR_DJ;
    case 'AR_DZ':
      return _$gLanguageCodeEnumAR_DZ;
    case 'AR_EG':
      return _$gLanguageCodeEnumAR_EG;
    case 'AR_EH':
      return _$gLanguageCodeEnumAR_EH;
    case 'AR_ER':
      return _$gLanguageCodeEnumAR_ER;
    case 'AR_IL':
      return _$gLanguageCodeEnumAR_IL;
    case 'AR_IQ':
      return _$gLanguageCodeEnumAR_IQ;
    case 'AR_JO':
      return _$gLanguageCodeEnumAR_JO;
    case 'AR_KM':
      return _$gLanguageCodeEnumAR_KM;
    case 'AR_KW':
      return _$gLanguageCodeEnumAR_KW;
    case 'AR_LB':
      return _$gLanguageCodeEnumAR_LB;
    case 'AR_LY':
      return _$gLanguageCodeEnumAR_LY;
    case 'AR_MA':
      return _$gLanguageCodeEnumAR_MA;
    case 'AR_MR':
      return _$gLanguageCodeEnumAR_MR;
    case 'AR_OM':
      return _$gLanguageCodeEnumAR_OM;
    case 'AR_PS':
      return _$gLanguageCodeEnumAR_PS;
    case 'AR_QA':
      return _$gLanguageCodeEnumAR_QA;
    case 'AR_SA':
      return _$gLanguageCodeEnumAR_SA;
    case 'AR_SD':
      return _$gLanguageCodeEnumAR_SD;
    case 'AR_SO':
      return _$gLanguageCodeEnumAR_SO;
    case 'AR_SS':
      return _$gLanguageCodeEnumAR_SS;
    case 'AR_SY':
      return _$gLanguageCodeEnumAR_SY;
    case 'AR_TD':
      return _$gLanguageCodeEnumAR_TD;
    case 'AR_TN':
      return _$gLanguageCodeEnumAR_TN;
    case 'AR_YE':
      return _$gLanguageCodeEnumAR_YE;
    case 'AS':
      return _$gLanguageCodeEnumAS;
    case 'AS_IN':
      return _$gLanguageCodeEnumAS_IN;
    case 'ASA':
      return _$gLanguageCodeEnumASA;
    case 'ASA_TZ':
      return _$gLanguageCodeEnumASA_TZ;
    case 'AST':
      return _$gLanguageCodeEnumAST;
    case 'AST_ES':
      return _$gLanguageCodeEnumAST_ES;
    case 'AZ':
      return _$gLanguageCodeEnumAZ;
    case 'AZ_CYRL':
      return _$gLanguageCodeEnumAZ_CYRL;
    case 'AZ_CYRL_AZ':
      return _$gLanguageCodeEnumAZ_CYRL_AZ;
    case 'AZ_LATN':
      return _$gLanguageCodeEnumAZ_LATN;
    case 'AZ_LATN_AZ':
      return _$gLanguageCodeEnumAZ_LATN_AZ;
    case 'BAS':
      return _$gLanguageCodeEnumBAS;
    case 'BAS_CM':
      return _$gLanguageCodeEnumBAS_CM;
    case 'BE':
      return _$gLanguageCodeEnumBE;
    case 'BE_BY':
      return _$gLanguageCodeEnumBE_BY;
    case 'BEM':
      return _$gLanguageCodeEnumBEM;
    case 'BEM_ZM':
      return _$gLanguageCodeEnumBEM_ZM;
    case 'BEZ':
      return _$gLanguageCodeEnumBEZ;
    case 'BEZ_TZ':
      return _$gLanguageCodeEnumBEZ_TZ;
    case 'BG':
      return _$gLanguageCodeEnumBG;
    case 'BG_BG':
      return _$gLanguageCodeEnumBG_BG;
    case 'BM':
      return _$gLanguageCodeEnumBM;
    case 'BM_ML':
      return _$gLanguageCodeEnumBM_ML;
    case 'BN':
      return _$gLanguageCodeEnumBN;
    case 'BN_BD':
      return _$gLanguageCodeEnumBN_BD;
    case 'BN_IN':
      return _$gLanguageCodeEnumBN_IN;
    case 'BO':
      return _$gLanguageCodeEnumBO;
    case 'BO_CN':
      return _$gLanguageCodeEnumBO_CN;
    case 'BO_IN':
      return _$gLanguageCodeEnumBO_IN;
    case 'BR':
      return _$gLanguageCodeEnumBR;
    case 'BR_FR':
      return _$gLanguageCodeEnumBR_FR;
    case 'BRX':
      return _$gLanguageCodeEnumBRX;
    case 'BRX_IN':
      return _$gLanguageCodeEnumBRX_IN;
    case 'BS':
      return _$gLanguageCodeEnumBS;
    case 'BS_CYRL':
      return _$gLanguageCodeEnumBS_CYRL;
    case 'BS_CYRL_BA':
      return _$gLanguageCodeEnumBS_CYRL_BA;
    case 'BS_LATN':
      return _$gLanguageCodeEnumBS_LATN;
    case 'BS_LATN_BA':
      return _$gLanguageCodeEnumBS_LATN_BA;
    case 'CA':
      return _$gLanguageCodeEnumCA;
    case 'CA_AD':
      return _$gLanguageCodeEnumCA_AD;
    case 'CA_ES':
      return _$gLanguageCodeEnumCA_ES;
    case 'CA_ES_VALENCIA':
      return _$gLanguageCodeEnumCA_ES_VALENCIA;
    case 'CA_FR':
      return _$gLanguageCodeEnumCA_FR;
    case 'CA_IT':
      return _$gLanguageCodeEnumCA_IT;
    case 'CCP':
      return _$gLanguageCodeEnumCCP;
    case 'CCP_BD':
      return _$gLanguageCodeEnumCCP_BD;
    case 'CCP_IN':
      return _$gLanguageCodeEnumCCP_IN;
    case 'CE':
      return _$gLanguageCodeEnumCE;
    case 'CE_RU':
      return _$gLanguageCodeEnumCE_RU;
    case 'CEB':
      return _$gLanguageCodeEnumCEB;
    case 'CEB_PH':
      return _$gLanguageCodeEnumCEB_PH;
    case 'CGG':
      return _$gLanguageCodeEnumCGG;
    case 'CGG_UG':
      return _$gLanguageCodeEnumCGG_UG;
    case 'CHR':
      return _$gLanguageCodeEnumCHR;
    case 'CHR_US':
      return _$gLanguageCodeEnumCHR_US;
    case 'CKB':
      return _$gLanguageCodeEnumCKB;
    case 'CKB_IQ':
      return _$gLanguageCodeEnumCKB_IQ;
    case 'CKB_IR':
      return _$gLanguageCodeEnumCKB_IR;
    case 'CS':
      return _$gLanguageCodeEnumCS;
    case 'CS_CZ':
      return _$gLanguageCodeEnumCS_CZ;
    case 'CU':
      return _$gLanguageCodeEnumCU;
    case 'CU_RU':
      return _$gLanguageCodeEnumCU_RU;
    case 'CY':
      return _$gLanguageCodeEnumCY;
    case 'CY_GB':
      return _$gLanguageCodeEnumCY_GB;
    case 'DA':
      return _$gLanguageCodeEnumDA;
    case 'DA_DK':
      return _$gLanguageCodeEnumDA_DK;
    case 'DA_GL':
      return _$gLanguageCodeEnumDA_GL;
    case 'DAV':
      return _$gLanguageCodeEnumDAV;
    case 'DAV_KE':
      return _$gLanguageCodeEnumDAV_KE;
    case 'DE':
      return _$gLanguageCodeEnumDE;
    case 'DE_AT':
      return _$gLanguageCodeEnumDE_AT;
    case 'DE_BE':
      return _$gLanguageCodeEnumDE_BE;
    case 'DE_CH':
      return _$gLanguageCodeEnumDE_CH;
    case 'DE_DE':
      return _$gLanguageCodeEnumDE_DE;
    case 'DE_IT':
      return _$gLanguageCodeEnumDE_IT;
    case 'DE_LI':
      return _$gLanguageCodeEnumDE_LI;
    case 'DE_LU':
      return _$gLanguageCodeEnumDE_LU;
    case 'DJE':
      return _$gLanguageCodeEnumDJE;
    case 'DJE_NE':
      return _$gLanguageCodeEnumDJE_NE;
    case 'DSB':
      return _$gLanguageCodeEnumDSB;
    case 'DSB_DE':
      return _$gLanguageCodeEnumDSB_DE;
    case 'DUA':
      return _$gLanguageCodeEnumDUA;
    case 'DUA_CM':
      return _$gLanguageCodeEnumDUA_CM;
    case 'DYO':
      return _$gLanguageCodeEnumDYO;
    case 'DYO_SN':
      return _$gLanguageCodeEnumDYO_SN;
    case 'DZ':
      return _$gLanguageCodeEnumDZ;
    case 'DZ_BT':
      return _$gLanguageCodeEnumDZ_BT;
    case 'EBU':
      return _$gLanguageCodeEnumEBU;
    case 'EBU_KE':
      return _$gLanguageCodeEnumEBU_KE;
    case 'EE':
      return _$gLanguageCodeEnumEE;
    case 'EE_GH':
      return _$gLanguageCodeEnumEE_GH;
    case 'EE_TG':
      return _$gLanguageCodeEnumEE_TG;
    case 'EL':
      return _$gLanguageCodeEnumEL;
    case 'EL_CY':
      return _$gLanguageCodeEnumEL_CY;
    case 'EL_GR':
      return _$gLanguageCodeEnumEL_GR;
    case 'EN':
      return _$gLanguageCodeEnumEN;
    case 'EN_AE':
      return _$gLanguageCodeEnumEN_AE;
    case 'EN_AG':
      return _$gLanguageCodeEnumEN_AG;
    case 'EN_AI':
      return _$gLanguageCodeEnumEN_AI;
    case 'EN_AS':
      return _$gLanguageCodeEnumEN_AS;
    case 'EN_AT':
      return _$gLanguageCodeEnumEN_AT;
    case 'EN_AU':
      return _$gLanguageCodeEnumEN_AU;
    case 'EN_BB':
      return _$gLanguageCodeEnumEN_BB;
    case 'EN_BE':
      return _$gLanguageCodeEnumEN_BE;
    case 'EN_BI':
      return _$gLanguageCodeEnumEN_BI;
    case 'EN_BM':
      return _$gLanguageCodeEnumEN_BM;
    case 'EN_BS':
      return _$gLanguageCodeEnumEN_BS;
    case 'EN_BW':
      return _$gLanguageCodeEnumEN_BW;
    case 'EN_BZ':
      return _$gLanguageCodeEnumEN_BZ;
    case 'EN_CA':
      return _$gLanguageCodeEnumEN_CA;
    case 'EN_CC':
      return _$gLanguageCodeEnumEN_CC;
    case 'EN_CH':
      return _$gLanguageCodeEnumEN_CH;
    case 'EN_CK':
      return _$gLanguageCodeEnumEN_CK;
    case 'EN_CM':
      return _$gLanguageCodeEnumEN_CM;
    case 'EN_CX':
      return _$gLanguageCodeEnumEN_CX;
    case 'EN_CY':
      return _$gLanguageCodeEnumEN_CY;
    case 'EN_DE':
      return _$gLanguageCodeEnumEN_DE;
    case 'EN_DG':
      return _$gLanguageCodeEnumEN_DG;
    case 'EN_DK':
      return _$gLanguageCodeEnumEN_DK;
    case 'EN_DM':
      return _$gLanguageCodeEnumEN_DM;
    case 'EN_ER':
      return _$gLanguageCodeEnumEN_ER;
    case 'EN_FI':
      return _$gLanguageCodeEnumEN_FI;
    case 'EN_FJ':
      return _$gLanguageCodeEnumEN_FJ;
    case 'EN_FK':
      return _$gLanguageCodeEnumEN_FK;
    case 'EN_FM':
      return _$gLanguageCodeEnumEN_FM;
    case 'EN_GB':
      return _$gLanguageCodeEnumEN_GB;
    case 'EN_GD':
      return _$gLanguageCodeEnumEN_GD;
    case 'EN_GG':
      return _$gLanguageCodeEnumEN_GG;
    case 'EN_GH':
      return _$gLanguageCodeEnumEN_GH;
    case 'EN_GI':
      return _$gLanguageCodeEnumEN_GI;
    case 'EN_GM':
      return _$gLanguageCodeEnumEN_GM;
    case 'EN_GU':
      return _$gLanguageCodeEnumEN_GU;
    case 'EN_GY':
      return _$gLanguageCodeEnumEN_GY;
    case 'EN_HK':
      return _$gLanguageCodeEnumEN_HK;
    case 'EN_IE':
      return _$gLanguageCodeEnumEN_IE;
    case 'EN_IL':
      return _$gLanguageCodeEnumEN_IL;
    case 'EN_IM':
      return _$gLanguageCodeEnumEN_IM;
    case 'EN_IN':
      return _$gLanguageCodeEnumEN_IN;
    case 'EN_IO':
      return _$gLanguageCodeEnumEN_IO;
    case 'EN_JE':
      return _$gLanguageCodeEnumEN_JE;
    case 'EN_JM':
      return _$gLanguageCodeEnumEN_JM;
    case 'EN_KE':
      return _$gLanguageCodeEnumEN_KE;
    case 'EN_KI':
      return _$gLanguageCodeEnumEN_KI;
    case 'EN_KN':
      return _$gLanguageCodeEnumEN_KN;
    case 'EN_KY':
      return _$gLanguageCodeEnumEN_KY;
    case 'EN_LC':
      return _$gLanguageCodeEnumEN_LC;
    case 'EN_LR':
      return _$gLanguageCodeEnumEN_LR;
    case 'EN_LS':
      return _$gLanguageCodeEnumEN_LS;
    case 'EN_MG':
      return _$gLanguageCodeEnumEN_MG;
    case 'EN_MH':
      return _$gLanguageCodeEnumEN_MH;
    case 'EN_MO':
      return _$gLanguageCodeEnumEN_MO;
    case 'EN_MP':
      return _$gLanguageCodeEnumEN_MP;
    case 'EN_MS':
      return _$gLanguageCodeEnumEN_MS;
    case 'EN_MT':
      return _$gLanguageCodeEnumEN_MT;
    case 'EN_MU':
      return _$gLanguageCodeEnumEN_MU;
    case 'EN_MW':
      return _$gLanguageCodeEnumEN_MW;
    case 'EN_MY':
      return _$gLanguageCodeEnumEN_MY;
    case 'EN_NA':
      return _$gLanguageCodeEnumEN_NA;
    case 'EN_NF':
      return _$gLanguageCodeEnumEN_NF;
    case 'EN_NG':
      return _$gLanguageCodeEnumEN_NG;
    case 'EN_NL':
      return _$gLanguageCodeEnumEN_NL;
    case 'EN_NR':
      return _$gLanguageCodeEnumEN_NR;
    case 'EN_NU':
      return _$gLanguageCodeEnumEN_NU;
    case 'EN_NZ':
      return _$gLanguageCodeEnumEN_NZ;
    case 'EN_PG':
      return _$gLanguageCodeEnumEN_PG;
    case 'EN_PH':
      return _$gLanguageCodeEnumEN_PH;
    case 'EN_PK':
      return _$gLanguageCodeEnumEN_PK;
    case 'EN_PN':
      return _$gLanguageCodeEnumEN_PN;
    case 'EN_PR':
      return _$gLanguageCodeEnumEN_PR;
    case 'EN_PW':
      return _$gLanguageCodeEnumEN_PW;
    case 'EN_RW':
      return _$gLanguageCodeEnumEN_RW;
    case 'EN_SB':
      return _$gLanguageCodeEnumEN_SB;
    case 'EN_SC':
      return _$gLanguageCodeEnumEN_SC;
    case 'EN_SD':
      return _$gLanguageCodeEnumEN_SD;
    case 'EN_SE':
      return _$gLanguageCodeEnumEN_SE;
    case 'EN_SG':
      return _$gLanguageCodeEnumEN_SG;
    case 'EN_SH':
      return _$gLanguageCodeEnumEN_SH;
    case 'EN_SI':
      return _$gLanguageCodeEnumEN_SI;
    case 'EN_SL':
      return _$gLanguageCodeEnumEN_SL;
    case 'EN_SS':
      return _$gLanguageCodeEnumEN_SS;
    case 'EN_SX':
      return _$gLanguageCodeEnumEN_SX;
    case 'EN_SZ':
      return _$gLanguageCodeEnumEN_SZ;
    case 'EN_TC':
      return _$gLanguageCodeEnumEN_TC;
    case 'EN_TK':
      return _$gLanguageCodeEnumEN_TK;
    case 'EN_TO':
      return _$gLanguageCodeEnumEN_TO;
    case 'EN_TT':
      return _$gLanguageCodeEnumEN_TT;
    case 'EN_TV':
      return _$gLanguageCodeEnumEN_TV;
    case 'EN_TZ':
      return _$gLanguageCodeEnumEN_TZ;
    case 'EN_UG':
      return _$gLanguageCodeEnumEN_UG;
    case 'EN_UM':
      return _$gLanguageCodeEnumEN_UM;
    case 'EN_US':
      return _$gLanguageCodeEnumEN_US;
    case 'EN_VC':
      return _$gLanguageCodeEnumEN_VC;
    case 'EN_VG':
      return _$gLanguageCodeEnumEN_VG;
    case 'EN_VI':
      return _$gLanguageCodeEnumEN_VI;
    case 'EN_VU':
      return _$gLanguageCodeEnumEN_VU;
    case 'EN_WS':
      return _$gLanguageCodeEnumEN_WS;
    case 'EN_ZA':
      return _$gLanguageCodeEnumEN_ZA;
    case 'EN_ZM':
      return _$gLanguageCodeEnumEN_ZM;
    case 'EN_ZW':
      return _$gLanguageCodeEnumEN_ZW;
    case 'EO':
      return _$gLanguageCodeEnumEO;
    case 'ES':
      return _$gLanguageCodeEnumES;
    case 'ES_AR':
      return _$gLanguageCodeEnumES_AR;
    case 'ES_BO':
      return _$gLanguageCodeEnumES_BO;
    case 'ES_BR':
      return _$gLanguageCodeEnumES_BR;
    case 'ES_BZ':
      return _$gLanguageCodeEnumES_BZ;
    case 'ES_CL':
      return _$gLanguageCodeEnumES_CL;
    case 'ES_CO':
      return _$gLanguageCodeEnumES_CO;
    case 'ES_CR':
      return _$gLanguageCodeEnumES_CR;
    case 'ES_CU':
      return _$gLanguageCodeEnumES_CU;
    case 'ES_DO':
      return _$gLanguageCodeEnumES_DO;
    case 'ES_EA':
      return _$gLanguageCodeEnumES_EA;
    case 'ES_EC':
      return _$gLanguageCodeEnumES_EC;
    case 'ES_ES':
      return _$gLanguageCodeEnumES_ES;
    case 'ES_GQ':
      return _$gLanguageCodeEnumES_GQ;
    case 'ES_GT':
      return _$gLanguageCodeEnumES_GT;
    case 'ES_HN':
      return _$gLanguageCodeEnumES_HN;
    case 'ES_IC':
      return _$gLanguageCodeEnumES_IC;
    case 'ES_MX':
      return _$gLanguageCodeEnumES_MX;
    case 'ES_NI':
      return _$gLanguageCodeEnumES_NI;
    case 'ES_PA':
      return _$gLanguageCodeEnumES_PA;
    case 'ES_PE':
      return _$gLanguageCodeEnumES_PE;
    case 'ES_PH':
      return _$gLanguageCodeEnumES_PH;
    case 'ES_PR':
      return _$gLanguageCodeEnumES_PR;
    case 'ES_PY':
      return _$gLanguageCodeEnumES_PY;
    case 'ES_SV':
      return _$gLanguageCodeEnumES_SV;
    case 'ES_US':
      return _$gLanguageCodeEnumES_US;
    case 'ES_UY':
      return _$gLanguageCodeEnumES_UY;
    case 'ES_VE':
      return _$gLanguageCodeEnumES_VE;
    case 'ET':
      return _$gLanguageCodeEnumET;
    case 'ET_EE':
      return _$gLanguageCodeEnumET_EE;
    case 'EU':
      return _$gLanguageCodeEnumEU;
    case 'EU_ES':
      return _$gLanguageCodeEnumEU_ES;
    case 'EWO':
      return _$gLanguageCodeEnumEWO;
    case 'EWO_CM':
      return _$gLanguageCodeEnumEWO_CM;
    case 'FA':
      return _$gLanguageCodeEnumFA;
    case 'FA_AF':
      return _$gLanguageCodeEnumFA_AF;
    case 'FA_IR':
      return _$gLanguageCodeEnumFA_IR;
    case 'FF':
      return _$gLanguageCodeEnumFF;
    case 'FF_ADLM':
      return _$gLanguageCodeEnumFF_ADLM;
    case 'FF_ADLM_BF':
      return _$gLanguageCodeEnumFF_ADLM_BF;
    case 'FF_ADLM_CM':
      return _$gLanguageCodeEnumFF_ADLM_CM;
    case 'FF_ADLM_GH':
      return _$gLanguageCodeEnumFF_ADLM_GH;
    case 'FF_ADLM_GM':
      return _$gLanguageCodeEnumFF_ADLM_GM;
    case 'FF_ADLM_GN':
      return _$gLanguageCodeEnumFF_ADLM_GN;
    case 'FF_ADLM_GW':
      return _$gLanguageCodeEnumFF_ADLM_GW;
    case 'FF_ADLM_LR':
      return _$gLanguageCodeEnumFF_ADLM_LR;
    case 'FF_ADLM_MR':
      return _$gLanguageCodeEnumFF_ADLM_MR;
    case 'FF_ADLM_NE':
      return _$gLanguageCodeEnumFF_ADLM_NE;
    case 'FF_ADLM_NG':
      return _$gLanguageCodeEnumFF_ADLM_NG;
    case 'FF_ADLM_SL':
      return _$gLanguageCodeEnumFF_ADLM_SL;
    case 'FF_ADLM_SN':
      return _$gLanguageCodeEnumFF_ADLM_SN;
    case 'FF_LATN':
      return _$gLanguageCodeEnumFF_LATN;
    case 'FF_LATN_BF':
      return _$gLanguageCodeEnumFF_LATN_BF;
    case 'FF_LATN_CM':
      return _$gLanguageCodeEnumFF_LATN_CM;
    case 'FF_LATN_GH':
      return _$gLanguageCodeEnumFF_LATN_GH;
    case 'FF_LATN_GM':
      return _$gLanguageCodeEnumFF_LATN_GM;
    case 'FF_LATN_GN':
      return _$gLanguageCodeEnumFF_LATN_GN;
    case 'FF_LATN_GW':
      return _$gLanguageCodeEnumFF_LATN_GW;
    case 'FF_LATN_LR':
      return _$gLanguageCodeEnumFF_LATN_LR;
    case 'FF_LATN_MR':
      return _$gLanguageCodeEnumFF_LATN_MR;
    case 'FF_LATN_NE':
      return _$gLanguageCodeEnumFF_LATN_NE;
    case 'FF_LATN_NG':
      return _$gLanguageCodeEnumFF_LATN_NG;
    case 'FF_LATN_SL':
      return _$gLanguageCodeEnumFF_LATN_SL;
    case 'FF_LATN_SN':
      return _$gLanguageCodeEnumFF_LATN_SN;
    case 'FI':
      return _$gLanguageCodeEnumFI;
    case 'FI_FI':
      return _$gLanguageCodeEnumFI_FI;
    case 'FIL':
      return _$gLanguageCodeEnumFIL;
    case 'FIL_PH':
      return _$gLanguageCodeEnumFIL_PH;
    case 'FO':
      return _$gLanguageCodeEnumFO;
    case 'FO_DK':
      return _$gLanguageCodeEnumFO_DK;
    case 'FO_FO':
      return _$gLanguageCodeEnumFO_FO;
    case 'FR':
      return _$gLanguageCodeEnumFR;
    case 'FR_BE':
      return _$gLanguageCodeEnumFR_BE;
    case 'FR_BF':
      return _$gLanguageCodeEnumFR_BF;
    case 'FR_BI':
      return _$gLanguageCodeEnumFR_BI;
    case 'FR_BJ':
      return _$gLanguageCodeEnumFR_BJ;
    case 'FR_BL':
      return _$gLanguageCodeEnumFR_BL;
    case 'FR_CA':
      return _$gLanguageCodeEnumFR_CA;
    case 'FR_CD':
      return _$gLanguageCodeEnumFR_CD;
    case 'FR_CF':
      return _$gLanguageCodeEnumFR_CF;
    case 'FR_CG':
      return _$gLanguageCodeEnumFR_CG;
    case 'FR_CH':
      return _$gLanguageCodeEnumFR_CH;
    case 'FR_CI':
      return _$gLanguageCodeEnumFR_CI;
    case 'FR_CM':
      return _$gLanguageCodeEnumFR_CM;
    case 'FR_DJ':
      return _$gLanguageCodeEnumFR_DJ;
    case 'FR_DZ':
      return _$gLanguageCodeEnumFR_DZ;
    case 'FR_FR':
      return _$gLanguageCodeEnumFR_FR;
    case 'FR_GA':
      return _$gLanguageCodeEnumFR_GA;
    case 'FR_GF':
      return _$gLanguageCodeEnumFR_GF;
    case 'FR_GN':
      return _$gLanguageCodeEnumFR_GN;
    case 'FR_GP':
      return _$gLanguageCodeEnumFR_GP;
    case 'FR_GQ':
      return _$gLanguageCodeEnumFR_GQ;
    case 'FR_HT':
      return _$gLanguageCodeEnumFR_HT;
    case 'FR_KM':
      return _$gLanguageCodeEnumFR_KM;
    case 'FR_LU':
      return _$gLanguageCodeEnumFR_LU;
    case 'FR_MA':
      return _$gLanguageCodeEnumFR_MA;
    case 'FR_MC':
      return _$gLanguageCodeEnumFR_MC;
    case 'FR_MF':
      return _$gLanguageCodeEnumFR_MF;
    case 'FR_MG':
      return _$gLanguageCodeEnumFR_MG;
    case 'FR_ML':
      return _$gLanguageCodeEnumFR_ML;
    case 'FR_MQ':
      return _$gLanguageCodeEnumFR_MQ;
    case 'FR_MR':
      return _$gLanguageCodeEnumFR_MR;
    case 'FR_MU':
      return _$gLanguageCodeEnumFR_MU;
    case 'FR_NC':
      return _$gLanguageCodeEnumFR_NC;
    case 'FR_NE':
      return _$gLanguageCodeEnumFR_NE;
    case 'FR_PF':
      return _$gLanguageCodeEnumFR_PF;
    case 'FR_PM':
      return _$gLanguageCodeEnumFR_PM;
    case 'FR_RE':
      return _$gLanguageCodeEnumFR_RE;
    case 'FR_RW':
      return _$gLanguageCodeEnumFR_RW;
    case 'FR_SC':
      return _$gLanguageCodeEnumFR_SC;
    case 'FR_SN':
      return _$gLanguageCodeEnumFR_SN;
    case 'FR_SY':
      return _$gLanguageCodeEnumFR_SY;
    case 'FR_TD':
      return _$gLanguageCodeEnumFR_TD;
    case 'FR_TG':
      return _$gLanguageCodeEnumFR_TG;
    case 'FR_TN':
      return _$gLanguageCodeEnumFR_TN;
    case 'FR_VU':
      return _$gLanguageCodeEnumFR_VU;
    case 'FR_WF':
      return _$gLanguageCodeEnumFR_WF;
    case 'FR_YT':
      return _$gLanguageCodeEnumFR_YT;
    case 'FUR':
      return _$gLanguageCodeEnumFUR;
    case 'FUR_IT':
      return _$gLanguageCodeEnumFUR_IT;
    case 'FY':
      return _$gLanguageCodeEnumFY;
    case 'FY_NL':
      return _$gLanguageCodeEnumFY_NL;
    case 'GA':
      return _$gLanguageCodeEnumGA;
    case 'GA_GB':
      return _$gLanguageCodeEnumGA_GB;
    case 'GA_IE':
      return _$gLanguageCodeEnumGA_IE;
    case 'GD':
      return _$gLanguageCodeEnumGD;
    case 'GD_GB':
      return _$gLanguageCodeEnumGD_GB;
    case 'GL':
      return _$gLanguageCodeEnumGL;
    case 'GL_ES':
      return _$gLanguageCodeEnumGL_ES;
    case 'GSW':
      return _$gLanguageCodeEnumGSW;
    case 'GSW_CH':
      return _$gLanguageCodeEnumGSW_CH;
    case 'GSW_FR':
      return _$gLanguageCodeEnumGSW_FR;
    case 'GSW_LI':
      return _$gLanguageCodeEnumGSW_LI;
    case 'GU':
      return _$gLanguageCodeEnumGU;
    case 'GU_IN':
      return _$gLanguageCodeEnumGU_IN;
    case 'GUZ':
      return _$gLanguageCodeEnumGUZ;
    case 'GUZ_KE':
      return _$gLanguageCodeEnumGUZ_KE;
    case 'GV':
      return _$gLanguageCodeEnumGV;
    case 'GV_IM':
      return _$gLanguageCodeEnumGV_IM;
    case 'HA':
      return _$gLanguageCodeEnumHA;
    case 'HA_GH':
      return _$gLanguageCodeEnumHA_GH;
    case 'HA_NE':
      return _$gLanguageCodeEnumHA_NE;
    case 'HA_NG':
      return _$gLanguageCodeEnumHA_NG;
    case 'HAW':
      return _$gLanguageCodeEnumHAW;
    case 'HAW_US':
      return _$gLanguageCodeEnumHAW_US;
    case 'HE':
      return _$gLanguageCodeEnumHE;
    case 'HE_IL':
      return _$gLanguageCodeEnumHE_IL;
    case 'HI':
      return _$gLanguageCodeEnumHI;
    case 'HI_IN':
      return _$gLanguageCodeEnumHI_IN;
    case 'HR':
      return _$gLanguageCodeEnumHR;
    case 'HR_BA':
      return _$gLanguageCodeEnumHR_BA;
    case 'HR_HR':
      return _$gLanguageCodeEnumHR_HR;
    case 'HSB':
      return _$gLanguageCodeEnumHSB;
    case 'HSB_DE':
      return _$gLanguageCodeEnumHSB_DE;
    case 'HU':
      return _$gLanguageCodeEnumHU;
    case 'HU_HU':
      return _$gLanguageCodeEnumHU_HU;
    case 'HY':
      return _$gLanguageCodeEnumHY;
    case 'HY_AM':
      return _$gLanguageCodeEnumHY_AM;
    case 'IA':
      return _$gLanguageCodeEnumIA;
    case 'ID':
      return _$gLanguageCodeEnumID;
    case 'ID_ID':
      return _$gLanguageCodeEnumID_ID;
    case 'IG':
      return _$gLanguageCodeEnumIG;
    case 'IG_NG':
      return _$gLanguageCodeEnumIG_NG;
    case 'II':
      return _$gLanguageCodeEnumII;
    case 'II_CN':
      return _$gLanguageCodeEnumII_CN;
    case 'IS':
      return _$gLanguageCodeEnumIS;
    case 'IS_IS':
      return _$gLanguageCodeEnumIS_IS;
    case 'IT':
      return _$gLanguageCodeEnumIT;
    case 'IT_CH':
      return _$gLanguageCodeEnumIT_CH;
    case 'IT_IT':
      return _$gLanguageCodeEnumIT_IT;
    case 'IT_SM':
      return _$gLanguageCodeEnumIT_SM;
    case 'IT_VA':
      return _$gLanguageCodeEnumIT_VA;
    case 'JA':
      return _$gLanguageCodeEnumJA;
    case 'JA_JP':
      return _$gLanguageCodeEnumJA_JP;
    case 'JGO':
      return _$gLanguageCodeEnumJGO;
    case 'JGO_CM':
      return _$gLanguageCodeEnumJGO_CM;
    case 'JMC':
      return _$gLanguageCodeEnumJMC;
    case 'JMC_TZ':
      return _$gLanguageCodeEnumJMC_TZ;
    case 'JV':
      return _$gLanguageCodeEnumJV;
    case 'JV_ID':
      return _$gLanguageCodeEnumJV_ID;
    case 'KA':
      return _$gLanguageCodeEnumKA;
    case 'KA_GE':
      return _$gLanguageCodeEnumKA_GE;
    case 'KAB':
      return _$gLanguageCodeEnumKAB;
    case 'KAB_DZ':
      return _$gLanguageCodeEnumKAB_DZ;
    case 'KAM':
      return _$gLanguageCodeEnumKAM;
    case 'KAM_KE':
      return _$gLanguageCodeEnumKAM_KE;
    case 'KDE':
      return _$gLanguageCodeEnumKDE;
    case 'KDE_TZ':
      return _$gLanguageCodeEnumKDE_TZ;
    case 'KEA':
      return _$gLanguageCodeEnumKEA;
    case 'KEA_CV':
      return _$gLanguageCodeEnumKEA_CV;
    case 'KHQ':
      return _$gLanguageCodeEnumKHQ;
    case 'KHQ_ML':
      return _$gLanguageCodeEnumKHQ_ML;
    case 'KI':
      return _$gLanguageCodeEnumKI;
    case 'KI_KE':
      return _$gLanguageCodeEnumKI_KE;
    case 'KK':
      return _$gLanguageCodeEnumKK;
    case 'KK_KZ':
      return _$gLanguageCodeEnumKK_KZ;
    case 'KKJ':
      return _$gLanguageCodeEnumKKJ;
    case 'KKJ_CM':
      return _$gLanguageCodeEnumKKJ_CM;
    case 'KL':
      return _$gLanguageCodeEnumKL;
    case 'KL_GL':
      return _$gLanguageCodeEnumKL_GL;
    case 'KLN':
      return _$gLanguageCodeEnumKLN;
    case 'KLN_KE':
      return _$gLanguageCodeEnumKLN_KE;
    case 'KM':
      return _$gLanguageCodeEnumKM;
    case 'KM_KH':
      return _$gLanguageCodeEnumKM_KH;
    case 'KN':
      return _$gLanguageCodeEnumKN;
    case 'KN_IN':
      return _$gLanguageCodeEnumKN_IN;
    case 'KO':
      return _$gLanguageCodeEnumKO;
    case 'KO_KP':
      return _$gLanguageCodeEnumKO_KP;
    case 'KO_KR':
      return _$gLanguageCodeEnumKO_KR;
    case 'KOK':
      return _$gLanguageCodeEnumKOK;
    case 'KOK_IN':
      return _$gLanguageCodeEnumKOK_IN;
    case 'KS':
      return _$gLanguageCodeEnumKS;
    case 'KS_ARAB':
      return _$gLanguageCodeEnumKS_ARAB;
    case 'KS_ARAB_IN':
      return _$gLanguageCodeEnumKS_ARAB_IN;
    case 'KSB':
      return _$gLanguageCodeEnumKSB;
    case 'KSB_TZ':
      return _$gLanguageCodeEnumKSB_TZ;
    case 'KSF':
      return _$gLanguageCodeEnumKSF;
    case 'KSF_CM':
      return _$gLanguageCodeEnumKSF_CM;
    case 'KSH':
      return _$gLanguageCodeEnumKSH;
    case 'KSH_DE':
      return _$gLanguageCodeEnumKSH_DE;
    case 'KU':
      return _$gLanguageCodeEnumKU;
    case 'KU_TR':
      return _$gLanguageCodeEnumKU_TR;
    case 'KW':
      return _$gLanguageCodeEnumKW;
    case 'KW_GB':
      return _$gLanguageCodeEnumKW_GB;
    case 'KY':
      return _$gLanguageCodeEnumKY;
    case 'KY_KG':
      return _$gLanguageCodeEnumKY_KG;
    case 'LAG':
      return _$gLanguageCodeEnumLAG;
    case 'LAG_TZ':
      return _$gLanguageCodeEnumLAG_TZ;
    case 'LB':
      return _$gLanguageCodeEnumLB;
    case 'LB_LU':
      return _$gLanguageCodeEnumLB_LU;
    case 'LG':
      return _$gLanguageCodeEnumLG;
    case 'LG_UG':
      return _$gLanguageCodeEnumLG_UG;
    case 'LKT':
      return _$gLanguageCodeEnumLKT;
    case 'LKT_US':
      return _$gLanguageCodeEnumLKT_US;
    case 'LN':
      return _$gLanguageCodeEnumLN;
    case 'LN_AO':
      return _$gLanguageCodeEnumLN_AO;
    case 'LN_CD':
      return _$gLanguageCodeEnumLN_CD;
    case 'LN_CF':
      return _$gLanguageCodeEnumLN_CF;
    case 'LN_CG':
      return _$gLanguageCodeEnumLN_CG;
    case 'LO':
      return _$gLanguageCodeEnumLO;
    case 'LO_LA':
      return _$gLanguageCodeEnumLO_LA;
    case 'LRC':
      return _$gLanguageCodeEnumLRC;
    case 'LRC_IQ':
      return _$gLanguageCodeEnumLRC_IQ;
    case 'LRC_IR':
      return _$gLanguageCodeEnumLRC_IR;
    case 'LT':
      return _$gLanguageCodeEnumLT;
    case 'LT_LT':
      return _$gLanguageCodeEnumLT_LT;
    case 'LU':
      return _$gLanguageCodeEnumLU;
    case 'LU_CD':
      return _$gLanguageCodeEnumLU_CD;
    case 'LUO':
      return _$gLanguageCodeEnumLUO;
    case 'LUO_KE':
      return _$gLanguageCodeEnumLUO_KE;
    case 'LUY':
      return _$gLanguageCodeEnumLUY;
    case 'LUY_KE':
      return _$gLanguageCodeEnumLUY_KE;
    case 'LV':
      return _$gLanguageCodeEnumLV;
    case 'LV_LV':
      return _$gLanguageCodeEnumLV_LV;
    case 'MAI':
      return _$gLanguageCodeEnumMAI;
    case 'MAI_IN':
      return _$gLanguageCodeEnumMAI_IN;
    case 'MAS':
      return _$gLanguageCodeEnumMAS;
    case 'MAS_KE':
      return _$gLanguageCodeEnumMAS_KE;
    case 'MAS_TZ':
      return _$gLanguageCodeEnumMAS_TZ;
    case 'MER':
      return _$gLanguageCodeEnumMER;
    case 'MER_KE':
      return _$gLanguageCodeEnumMER_KE;
    case 'MFE':
      return _$gLanguageCodeEnumMFE;
    case 'MFE_MU':
      return _$gLanguageCodeEnumMFE_MU;
    case 'MG':
      return _$gLanguageCodeEnumMG;
    case 'MG_MG':
      return _$gLanguageCodeEnumMG_MG;
    case 'MGH':
      return _$gLanguageCodeEnumMGH;
    case 'MGH_MZ':
      return _$gLanguageCodeEnumMGH_MZ;
    case 'MGO':
      return _$gLanguageCodeEnumMGO;
    case 'MGO_CM':
      return _$gLanguageCodeEnumMGO_CM;
    case 'MI':
      return _$gLanguageCodeEnumMI;
    case 'MI_NZ':
      return _$gLanguageCodeEnumMI_NZ;
    case 'MK':
      return _$gLanguageCodeEnumMK;
    case 'MK_MK':
      return _$gLanguageCodeEnumMK_MK;
    case 'ML':
      return _$gLanguageCodeEnumML;
    case 'ML_IN':
      return _$gLanguageCodeEnumML_IN;
    case 'MN':
      return _$gLanguageCodeEnumMN;
    case 'MN_MN':
      return _$gLanguageCodeEnumMN_MN;
    case 'MNI':
      return _$gLanguageCodeEnumMNI;
    case 'MNI_BENG':
      return _$gLanguageCodeEnumMNI_BENG;
    case 'MNI_BENG_IN':
      return _$gLanguageCodeEnumMNI_BENG_IN;
    case 'MR':
      return _$gLanguageCodeEnumMR;
    case 'MR_IN':
      return _$gLanguageCodeEnumMR_IN;
    case 'MS':
      return _$gLanguageCodeEnumMS;
    case 'MS_BN':
      return _$gLanguageCodeEnumMS_BN;
    case 'MS_ID':
      return _$gLanguageCodeEnumMS_ID;
    case 'MS_MY':
      return _$gLanguageCodeEnumMS_MY;
    case 'MS_SG':
      return _$gLanguageCodeEnumMS_SG;
    case 'MT':
      return _$gLanguageCodeEnumMT;
    case 'MT_MT':
      return _$gLanguageCodeEnumMT_MT;
    case 'MUA':
      return _$gLanguageCodeEnumMUA;
    case 'MUA_CM':
      return _$gLanguageCodeEnumMUA_CM;
    case 'MY':
      return _$gLanguageCodeEnumMY;
    case 'MY_MM':
      return _$gLanguageCodeEnumMY_MM;
    case 'MZN':
      return _$gLanguageCodeEnumMZN;
    case 'MZN_IR':
      return _$gLanguageCodeEnumMZN_IR;
    case 'NAQ':
      return _$gLanguageCodeEnumNAQ;
    case 'NAQ_NA':
      return _$gLanguageCodeEnumNAQ_NA;
    case 'NB':
      return _$gLanguageCodeEnumNB;
    case 'NB_NO':
      return _$gLanguageCodeEnumNB_NO;
    case 'NB_SJ':
      return _$gLanguageCodeEnumNB_SJ;
    case 'ND':
      return _$gLanguageCodeEnumND;
    case 'ND_ZW':
      return _$gLanguageCodeEnumND_ZW;
    case 'NDS':
      return _$gLanguageCodeEnumNDS;
    case 'NDS_DE':
      return _$gLanguageCodeEnumNDS_DE;
    case 'NDS_NL':
      return _$gLanguageCodeEnumNDS_NL;
    case 'NE':
      return _$gLanguageCodeEnumNE;
    case 'NE_IN':
      return _$gLanguageCodeEnumNE_IN;
    case 'NE_NP':
      return _$gLanguageCodeEnumNE_NP;
    case 'NL':
      return _$gLanguageCodeEnumNL;
    case 'NL_AW':
      return _$gLanguageCodeEnumNL_AW;
    case 'NL_BE':
      return _$gLanguageCodeEnumNL_BE;
    case 'NL_BQ':
      return _$gLanguageCodeEnumNL_BQ;
    case 'NL_CW':
      return _$gLanguageCodeEnumNL_CW;
    case 'NL_NL':
      return _$gLanguageCodeEnumNL_NL;
    case 'NL_SR':
      return _$gLanguageCodeEnumNL_SR;
    case 'NL_SX':
      return _$gLanguageCodeEnumNL_SX;
    case 'NMG':
      return _$gLanguageCodeEnumNMG;
    case 'NMG_CM':
      return _$gLanguageCodeEnumNMG_CM;
    case 'NN':
      return _$gLanguageCodeEnumNN;
    case 'NN_NO':
      return _$gLanguageCodeEnumNN_NO;
    case 'NNH':
      return _$gLanguageCodeEnumNNH;
    case 'NNH_CM':
      return _$gLanguageCodeEnumNNH_CM;
    case 'NUS':
      return _$gLanguageCodeEnumNUS;
    case 'NUS_SS':
      return _$gLanguageCodeEnumNUS_SS;
    case 'NYN':
      return _$gLanguageCodeEnumNYN;
    case 'NYN_UG':
      return _$gLanguageCodeEnumNYN_UG;
    case 'OM':
      return _$gLanguageCodeEnumOM;
    case 'OM_ET':
      return _$gLanguageCodeEnumOM_ET;
    case 'OM_KE':
      return _$gLanguageCodeEnumOM_KE;
    case 'OR':
      return _$gLanguageCodeEnumOR;
    case 'OR_IN':
      return _$gLanguageCodeEnumOR_IN;
    case 'OS':
      return _$gLanguageCodeEnumOS;
    case 'OS_GE':
      return _$gLanguageCodeEnumOS_GE;
    case 'OS_RU':
      return _$gLanguageCodeEnumOS_RU;
    case 'PA':
      return _$gLanguageCodeEnumPA;
    case 'PA_ARAB':
      return _$gLanguageCodeEnumPA_ARAB;
    case 'PA_ARAB_PK':
      return _$gLanguageCodeEnumPA_ARAB_PK;
    case 'PA_GURU':
      return _$gLanguageCodeEnumPA_GURU;
    case 'PA_GURU_IN':
      return _$gLanguageCodeEnumPA_GURU_IN;
    case 'PCM':
      return _$gLanguageCodeEnumPCM;
    case 'PCM_NG':
      return _$gLanguageCodeEnumPCM_NG;
    case 'PL':
      return _$gLanguageCodeEnumPL;
    case 'PL_PL':
      return _$gLanguageCodeEnumPL_PL;
    case 'PRG':
      return _$gLanguageCodeEnumPRG;
    case 'PS':
      return _$gLanguageCodeEnumPS;
    case 'PS_AF':
      return _$gLanguageCodeEnumPS_AF;
    case 'PS_PK':
      return _$gLanguageCodeEnumPS_PK;
    case 'PT':
      return _$gLanguageCodeEnumPT;
    case 'PT_AO':
      return _$gLanguageCodeEnumPT_AO;
    case 'PT_BR':
      return _$gLanguageCodeEnumPT_BR;
    case 'PT_CH':
      return _$gLanguageCodeEnumPT_CH;
    case 'PT_CV':
      return _$gLanguageCodeEnumPT_CV;
    case 'PT_GQ':
      return _$gLanguageCodeEnumPT_GQ;
    case 'PT_GW':
      return _$gLanguageCodeEnumPT_GW;
    case 'PT_LU':
      return _$gLanguageCodeEnumPT_LU;
    case 'PT_MO':
      return _$gLanguageCodeEnumPT_MO;
    case 'PT_MZ':
      return _$gLanguageCodeEnumPT_MZ;
    case 'PT_PT':
      return _$gLanguageCodeEnumPT_PT;
    case 'PT_ST':
      return _$gLanguageCodeEnumPT_ST;
    case 'PT_TL':
      return _$gLanguageCodeEnumPT_TL;
    case 'QU':
      return _$gLanguageCodeEnumQU;
    case 'QU_BO':
      return _$gLanguageCodeEnumQU_BO;
    case 'QU_EC':
      return _$gLanguageCodeEnumQU_EC;
    case 'QU_PE':
      return _$gLanguageCodeEnumQU_PE;
    case 'RM':
      return _$gLanguageCodeEnumRM;
    case 'RM_CH':
      return _$gLanguageCodeEnumRM_CH;
    case 'RN':
      return _$gLanguageCodeEnumRN;
    case 'RN_BI':
      return _$gLanguageCodeEnumRN_BI;
    case 'RO':
      return _$gLanguageCodeEnumRO;
    case 'RO_MD':
      return _$gLanguageCodeEnumRO_MD;
    case 'RO_RO':
      return _$gLanguageCodeEnumRO_RO;
    case 'ROF':
      return _$gLanguageCodeEnumROF;
    case 'ROF_TZ':
      return _$gLanguageCodeEnumROF_TZ;
    case 'RU':
      return _$gLanguageCodeEnumRU;
    case 'RU_BY':
      return _$gLanguageCodeEnumRU_BY;
    case 'RU_KG':
      return _$gLanguageCodeEnumRU_KG;
    case 'RU_KZ':
      return _$gLanguageCodeEnumRU_KZ;
    case 'RU_MD':
      return _$gLanguageCodeEnumRU_MD;
    case 'RU_RU':
      return _$gLanguageCodeEnumRU_RU;
    case 'RU_UA':
      return _$gLanguageCodeEnumRU_UA;
    case 'RW':
      return _$gLanguageCodeEnumRW;
    case 'RW_RW':
      return _$gLanguageCodeEnumRW_RW;
    case 'RWK':
      return _$gLanguageCodeEnumRWK;
    case 'RWK_TZ':
      return _$gLanguageCodeEnumRWK_TZ;
    case 'SAH':
      return _$gLanguageCodeEnumSAH;
    case 'SAH_RU':
      return _$gLanguageCodeEnumSAH_RU;
    case 'SAQ':
      return _$gLanguageCodeEnumSAQ;
    case 'SAQ_KE':
      return _$gLanguageCodeEnumSAQ_KE;
    case 'SAT':
      return _$gLanguageCodeEnumSAT;
    case 'SAT_OLCK':
      return _$gLanguageCodeEnumSAT_OLCK;
    case 'SAT_OLCK_IN':
      return _$gLanguageCodeEnumSAT_OLCK_IN;
    case 'SBP':
      return _$gLanguageCodeEnumSBP;
    case 'SBP_TZ':
      return _$gLanguageCodeEnumSBP_TZ;
    case 'SD':
      return _$gLanguageCodeEnumSD;
    case 'SD_ARAB':
      return _$gLanguageCodeEnumSD_ARAB;
    case 'SD_ARAB_PK':
      return _$gLanguageCodeEnumSD_ARAB_PK;
    case 'SD_DEVA':
      return _$gLanguageCodeEnumSD_DEVA;
    case 'SD_DEVA_IN':
      return _$gLanguageCodeEnumSD_DEVA_IN;
    case 'SE':
      return _$gLanguageCodeEnumSE;
    case 'SE_FI':
      return _$gLanguageCodeEnumSE_FI;
    case 'SE_NO':
      return _$gLanguageCodeEnumSE_NO;
    case 'SE_SE':
      return _$gLanguageCodeEnumSE_SE;
    case 'SEH':
      return _$gLanguageCodeEnumSEH;
    case 'SEH_MZ':
      return _$gLanguageCodeEnumSEH_MZ;
    case 'SES':
      return _$gLanguageCodeEnumSES;
    case 'SES_ML':
      return _$gLanguageCodeEnumSES_ML;
    case 'SG':
      return _$gLanguageCodeEnumSG;
    case 'SG_CF':
      return _$gLanguageCodeEnumSG_CF;
    case 'SHI':
      return _$gLanguageCodeEnumSHI;
    case 'SHI_LATN':
      return _$gLanguageCodeEnumSHI_LATN;
    case 'SHI_LATN_MA':
      return _$gLanguageCodeEnumSHI_LATN_MA;
    case 'SHI_TFNG':
      return _$gLanguageCodeEnumSHI_TFNG;
    case 'SHI_TFNG_MA':
      return _$gLanguageCodeEnumSHI_TFNG_MA;
    case 'SI':
      return _$gLanguageCodeEnumSI;
    case 'SI_LK':
      return _$gLanguageCodeEnumSI_LK;
    case 'SK':
      return _$gLanguageCodeEnumSK;
    case 'SK_SK':
      return _$gLanguageCodeEnumSK_SK;
    case 'SL':
      return _$gLanguageCodeEnumSL;
    case 'SL_SI':
      return _$gLanguageCodeEnumSL_SI;
    case 'SMN':
      return _$gLanguageCodeEnumSMN;
    case 'SMN_FI':
      return _$gLanguageCodeEnumSMN_FI;
    case 'SN':
      return _$gLanguageCodeEnumSN;
    case 'SN_ZW':
      return _$gLanguageCodeEnumSN_ZW;
    case 'SO':
      return _$gLanguageCodeEnumSO;
    case 'SO_DJ':
      return _$gLanguageCodeEnumSO_DJ;
    case 'SO_ET':
      return _$gLanguageCodeEnumSO_ET;
    case 'SO_KE':
      return _$gLanguageCodeEnumSO_KE;
    case 'SO_SO':
      return _$gLanguageCodeEnumSO_SO;
    case 'SQ':
      return _$gLanguageCodeEnumSQ;
    case 'SQ_AL':
      return _$gLanguageCodeEnumSQ_AL;
    case 'SQ_MK':
      return _$gLanguageCodeEnumSQ_MK;
    case 'SQ_XK':
      return _$gLanguageCodeEnumSQ_XK;
    case 'SR':
      return _$gLanguageCodeEnumSR;
    case 'SR_CYRL':
      return _$gLanguageCodeEnumSR_CYRL;
    case 'SR_CYRL_BA':
      return _$gLanguageCodeEnumSR_CYRL_BA;
    case 'SR_CYRL_ME':
      return _$gLanguageCodeEnumSR_CYRL_ME;
    case 'SR_CYRL_RS':
      return _$gLanguageCodeEnumSR_CYRL_RS;
    case 'SR_CYRL_XK':
      return _$gLanguageCodeEnumSR_CYRL_XK;
    case 'SR_LATN':
      return _$gLanguageCodeEnumSR_LATN;
    case 'SR_LATN_BA':
      return _$gLanguageCodeEnumSR_LATN_BA;
    case 'SR_LATN_ME':
      return _$gLanguageCodeEnumSR_LATN_ME;
    case 'SR_LATN_RS':
      return _$gLanguageCodeEnumSR_LATN_RS;
    case 'SR_LATN_XK':
      return _$gLanguageCodeEnumSR_LATN_XK;
    case 'SU':
      return _$gLanguageCodeEnumSU;
    case 'SU_LATN':
      return _$gLanguageCodeEnumSU_LATN;
    case 'SU_LATN_ID':
      return _$gLanguageCodeEnumSU_LATN_ID;
    case 'SV':
      return _$gLanguageCodeEnumSV;
    case 'SV_AX':
      return _$gLanguageCodeEnumSV_AX;
    case 'SV_FI':
      return _$gLanguageCodeEnumSV_FI;
    case 'SV_SE':
      return _$gLanguageCodeEnumSV_SE;
    case 'SW':
      return _$gLanguageCodeEnumSW;
    case 'SW_CD':
      return _$gLanguageCodeEnumSW_CD;
    case 'SW_KE':
      return _$gLanguageCodeEnumSW_KE;
    case 'SW_TZ':
      return _$gLanguageCodeEnumSW_TZ;
    case 'SW_UG':
      return _$gLanguageCodeEnumSW_UG;
    case 'TA':
      return _$gLanguageCodeEnumTA;
    case 'TA_IN':
      return _$gLanguageCodeEnumTA_IN;
    case 'TA_LK':
      return _$gLanguageCodeEnumTA_LK;
    case 'TA_MY':
      return _$gLanguageCodeEnumTA_MY;
    case 'TA_SG':
      return _$gLanguageCodeEnumTA_SG;
    case 'TE':
      return _$gLanguageCodeEnumTE;
    case 'TE_IN':
      return _$gLanguageCodeEnumTE_IN;
    case 'TEO':
      return _$gLanguageCodeEnumTEO;
    case 'TEO_KE':
      return _$gLanguageCodeEnumTEO_KE;
    case 'TEO_UG':
      return _$gLanguageCodeEnumTEO_UG;
    case 'TG':
      return _$gLanguageCodeEnumTG;
    case 'TG_TJ':
      return _$gLanguageCodeEnumTG_TJ;
    case 'TH':
      return _$gLanguageCodeEnumTH;
    case 'TH_TH':
      return _$gLanguageCodeEnumTH_TH;
    case 'TI':
      return _$gLanguageCodeEnumTI;
    case 'TI_ER':
      return _$gLanguageCodeEnumTI_ER;
    case 'TI_ET':
      return _$gLanguageCodeEnumTI_ET;
    case 'TK':
      return _$gLanguageCodeEnumTK;
    case 'TK_TM':
      return _$gLanguageCodeEnumTK_TM;
    case 'TO':
      return _$gLanguageCodeEnumTO;
    case 'TO_TO':
      return _$gLanguageCodeEnumTO_TO;
    case 'TR':
      return _$gLanguageCodeEnumTR;
    case 'TR_CY':
      return _$gLanguageCodeEnumTR_CY;
    case 'TR_TR':
      return _$gLanguageCodeEnumTR_TR;
    case 'TT':
      return _$gLanguageCodeEnumTT;
    case 'TT_RU':
      return _$gLanguageCodeEnumTT_RU;
    case 'TWQ':
      return _$gLanguageCodeEnumTWQ;
    case 'TWQ_NE':
      return _$gLanguageCodeEnumTWQ_NE;
    case 'TZM':
      return _$gLanguageCodeEnumTZM;
    case 'TZM_MA':
      return _$gLanguageCodeEnumTZM_MA;
    case 'UG':
      return _$gLanguageCodeEnumUG;
    case 'UG_CN':
      return _$gLanguageCodeEnumUG_CN;
    case 'UK':
      return _$gLanguageCodeEnumUK;
    case 'UK_UA':
      return _$gLanguageCodeEnumUK_UA;
    case 'UR':
      return _$gLanguageCodeEnumUR;
    case 'UR_IN':
      return _$gLanguageCodeEnumUR_IN;
    case 'UR_PK':
      return _$gLanguageCodeEnumUR_PK;
    case 'UZ':
      return _$gLanguageCodeEnumUZ;
    case 'UZ_ARAB':
      return _$gLanguageCodeEnumUZ_ARAB;
    case 'UZ_ARAB_AF':
      return _$gLanguageCodeEnumUZ_ARAB_AF;
    case 'UZ_CYRL':
      return _$gLanguageCodeEnumUZ_CYRL;
    case 'UZ_CYRL_UZ':
      return _$gLanguageCodeEnumUZ_CYRL_UZ;
    case 'UZ_LATN':
      return _$gLanguageCodeEnumUZ_LATN;
    case 'UZ_LATN_UZ':
      return _$gLanguageCodeEnumUZ_LATN_UZ;
    case 'VAI':
      return _$gLanguageCodeEnumVAI;
    case 'VAI_LATN':
      return _$gLanguageCodeEnumVAI_LATN;
    case 'VAI_LATN_LR':
      return _$gLanguageCodeEnumVAI_LATN_LR;
    case 'VAI_VAII':
      return _$gLanguageCodeEnumVAI_VAII;
    case 'VAI_VAII_LR':
      return _$gLanguageCodeEnumVAI_VAII_LR;
    case 'VI':
      return _$gLanguageCodeEnumVI;
    case 'VI_VN':
      return _$gLanguageCodeEnumVI_VN;
    case 'VO':
      return _$gLanguageCodeEnumVO;
    case 'VUN':
      return _$gLanguageCodeEnumVUN;
    case 'VUN_TZ':
      return _$gLanguageCodeEnumVUN_TZ;
    case 'WAE':
      return _$gLanguageCodeEnumWAE;
    case 'WAE_CH':
      return _$gLanguageCodeEnumWAE_CH;
    case 'WO':
      return _$gLanguageCodeEnumWO;
    case 'WO_SN':
      return _$gLanguageCodeEnumWO_SN;
    case 'XH':
      return _$gLanguageCodeEnumXH;
    case 'XH_ZA':
      return _$gLanguageCodeEnumXH_ZA;
    case 'XOG':
      return _$gLanguageCodeEnumXOG;
    case 'XOG_UG':
      return _$gLanguageCodeEnumXOG_UG;
    case 'YAV':
      return _$gLanguageCodeEnumYAV;
    case 'YAV_CM':
      return _$gLanguageCodeEnumYAV_CM;
    case 'YI':
      return _$gLanguageCodeEnumYI;
    case 'YO':
      return _$gLanguageCodeEnumYO;
    case 'YO_BJ':
      return _$gLanguageCodeEnumYO_BJ;
    case 'YO_NG':
      return _$gLanguageCodeEnumYO_NG;
    case 'YUE':
      return _$gLanguageCodeEnumYUE;
    case 'YUE_HANS':
      return _$gLanguageCodeEnumYUE_HANS;
    case 'YUE_HANS_CN':
      return _$gLanguageCodeEnumYUE_HANS_CN;
    case 'YUE_HANT':
      return _$gLanguageCodeEnumYUE_HANT;
    case 'YUE_HANT_HK':
      return _$gLanguageCodeEnumYUE_HANT_HK;
    case 'ZGH':
      return _$gLanguageCodeEnumZGH;
    case 'ZGH_MA':
      return _$gLanguageCodeEnumZGH_MA;
    case 'ZH':
      return _$gLanguageCodeEnumZH;
    case 'ZH_HANS':
      return _$gLanguageCodeEnumZH_HANS;
    case 'ZH_HANS_CN':
      return _$gLanguageCodeEnumZH_HANS_CN;
    case 'ZH_HANS_HK':
      return _$gLanguageCodeEnumZH_HANS_HK;
    case 'ZH_HANS_MO':
      return _$gLanguageCodeEnumZH_HANS_MO;
    case 'ZH_HANS_SG':
      return _$gLanguageCodeEnumZH_HANS_SG;
    case 'ZH_HANT':
      return _$gLanguageCodeEnumZH_HANT;
    case 'ZH_HANT_HK':
      return _$gLanguageCodeEnumZH_HANT_HK;
    case 'ZH_HANT_MO':
      return _$gLanguageCodeEnumZH_HANT_MO;
    case 'ZH_HANT_TW':
      return _$gLanguageCodeEnumZH_HANT_TW;
    case 'ZU':
      return _$gLanguageCodeEnumZU;
    case 'ZU_ZA':
      return _$gLanguageCodeEnumZU_ZA;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GLanguageCodeEnum> _$gLanguageCodeEnumValues =
    new BuiltSet<GLanguageCodeEnum>(const <GLanguageCodeEnum>[
  _$gLanguageCodeEnumAF,
  _$gLanguageCodeEnumAF_NA,
  _$gLanguageCodeEnumAF_ZA,
  _$gLanguageCodeEnumAGQ,
  _$gLanguageCodeEnumAGQ_CM,
  _$gLanguageCodeEnumAK,
  _$gLanguageCodeEnumAK_GH,
  _$gLanguageCodeEnumAM,
  _$gLanguageCodeEnumAM_ET,
  _$gLanguageCodeEnumAR,
  _$gLanguageCodeEnumAR_AE,
  _$gLanguageCodeEnumAR_BH,
  _$gLanguageCodeEnumAR_DJ,
  _$gLanguageCodeEnumAR_DZ,
  _$gLanguageCodeEnumAR_EG,
  _$gLanguageCodeEnumAR_EH,
  _$gLanguageCodeEnumAR_ER,
  _$gLanguageCodeEnumAR_IL,
  _$gLanguageCodeEnumAR_IQ,
  _$gLanguageCodeEnumAR_JO,
  _$gLanguageCodeEnumAR_KM,
  _$gLanguageCodeEnumAR_KW,
  _$gLanguageCodeEnumAR_LB,
  _$gLanguageCodeEnumAR_LY,
  _$gLanguageCodeEnumAR_MA,
  _$gLanguageCodeEnumAR_MR,
  _$gLanguageCodeEnumAR_OM,
  _$gLanguageCodeEnumAR_PS,
  _$gLanguageCodeEnumAR_QA,
  _$gLanguageCodeEnumAR_SA,
  _$gLanguageCodeEnumAR_SD,
  _$gLanguageCodeEnumAR_SO,
  _$gLanguageCodeEnumAR_SS,
  _$gLanguageCodeEnumAR_SY,
  _$gLanguageCodeEnumAR_TD,
  _$gLanguageCodeEnumAR_TN,
  _$gLanguageCodeEnumAR_YE,
  _$gLanguageCodeEnumAS,
  _$gLanguageCodeEnumAS_IN,
  _$gLanguageCodeEnumASA,
  _$gLanguageCodeEnumASA_TZ,
  _$gLanguageCodeEnumAST,
  _$gLanguageCodeEnumAST_ES,
  _$gLanguageCodeEnumAZ,
  _$gLanguageCodeEnumAZ_CYRL,
  _$gLanguageCodeEnumAZ_CYRL_AZ,
  _$gLanguageCodeEnumAZ_LATN,
  _$gLanguageCodeEnumAZ_LATN_AZ,
  _$gLanguageCodeEnumBAS,
  _$gLanguageCodeEnumBAS_CM,
  _$gLanguageCodeEnumBE,
  _$gLanguageCodeEnumBE_BY,
  _$gLanguageCodeEnumBEM,
  _$gLanguageCodeEnumBEM_ZM,
  _$gLanguageCodeEnumBEZ,
  _$gLanguageCodeEnumBEZ_TZ,
  _$gLanguageCodeEnumBG,
  _$gLanguageCodeEnumBG_BG,
  _$gLanguageCodeEnumBM,
  _$gLanguageCodeEnumBM_ML,
  _$gLanguageCodeEnumBN,
  _$gLanguageCodeEnumBN_BD,
  _$gLanguageCodeEnumBN_IN,
  _$gLanguageCodeEnumBO,
  _$gLanguageCodeEnumBO_CN,
  _$gLanguageCodeEnumBO_IN,
  _$gLanguageCodeEnumBR,
  _$gLanguageCodeEnumBR_FR,
  _$gLanguageCodeEnumBRX,
  _$gLanguageCodeEnumBRX_IN,
  _$gLanguageCodeEnumBS,
  _$gLanguageCodeEnumBS_CYRL,
  _$gLanguageCodeEnumBS_CYRL_BA,
  _$gLanguageCodeEnumBS_LATN,
  _$gLanguageCodeEnumBS_LATN_BA,
  _$gLanguageCodeEnumCA,
  _$gLanguageCodeEnumCA_AD,
  _$gLanguageCodeEnumCA_ES,
  _$gLanguageCodeEnumCA_ES_VALENCIA,
  _$gLanguageCodeEnumCA_FR,
  _$gLanguageCodeEnumCA_IT,
  _$gLanguageCodeEnumCCP,
  _$gLanguageCodeEnumCCP_BD,
  _$gLanguageCodeEnumCCP_IN,
  _$gLanguageCodeEnumCE,
  _$gLanguageCodeEnumCE_RU,
  _$gLanguageCodeEnumCEB,
  _$gLanguageCodeEnumCEB_PH,
  _$gLanguageCodeEnumCGG,
  _$gLanguageCodeEnumCGG_UG,
  _$gLanguageCodeEnumCHR,
  _$gLanguageCodeEnumCHR_US,
  _$gLanguageCodeEnumCKB,
  _$gLanguageCodeEnumCKB_IQ,
  _$gLanguageCodeEnumCKB_IR,
  _$gLanguageCodeEnumCS,
  _$gLanguageCodeEnumCS_CZ,
  _$gLanguageCodeEnumCU,
  _$gLanguageCodeEnumCU_RU,
  _$gLanguageCodeEnumCY,
  _$gLanguageCodeEnumCY_GB,
  _$gLanguageCodeEnumDA,
  _$gLanguageCodeEnumDA_DK,
  _$gLanguageCodeEnumDA_GL,
  _$gLanguageCodeEnumDAV,
  _$gLanguageCodeEnumDAV_KE,
  _$gLanguageCodeEnumDE,
  _$gLanguageCodeEnumDE_AT,
  _$gLanguageCodeEnumDE_BE,
  _$gLanguageCodeEnumDE_CH,
  _$gLanguageCodeEnumDE_DE,
  _$gLanguageCodeEnumDE_IT,
  _$gLanguageCodeEnumDE_LI,
  _$gLanguageCodeEnumDE_LU,
  _$gLanguageCodeEnumDJE,
  _$gLanguageCodeEnumDJE_NE,
  _$gLanguageCodeEnumDSB,
  _$gLanguageCodeEnumDSB_DE,
  _$gLanguageCodeEnumDUA,
  _$gLanguageCodeEnumDUA_CM,
  _$gLanguageCodeEnumDYO,
  _$gLanguageCodeEnumDYO_SN,
  _$gLanguageCodeEnumDZ,
  _$gLanguageCodeEnumDZ_BT,
  _$gLanguageCodeEnumEBU,
  _$gLanguageCodeEnumEBU_KE,
  _$gLanguageCodeEnumEE,
  _$gLanguageCodeEnumEE_GH,
  _$gLanguageCodeEnumEE_TG,
  _$gLanguageCodeEnumEL,
  _$gLanguageCodeEnumEL_CY,
  _$gLanguageCodeEnumEL_GR,
  _$gLanguageCodeEnumEN,
  _$gLanguageCodeEnumEN_AE,
  _$gLanguageCodeEnumEN_AG,
  _$gLanguageCodeEnumEN_AI,
  _$gLanguageCodeEnumEN_AS,
  _$gLanguageCodeEnumEN_AT,
  _$gLanguageCodeEnumEN_AU,
  _$gLanguageCodeEnumEN_BB,
  _$gLanguageCodeEnumEN_BE,
  _$gLanguageCodeEnumEN_BI,
  _$gLanguageCodeEnumEN_BM,
  _$gLanguageCodeEnumEN_BS,
  _$gLanguageCodeEnumEN_BW,
  _$gLanguageCodeEnumEN_BZ,
  _$gLanguageCodeEnumEN_CA,
  _$gLanguageCodeEnumEN_CC,
  _$gLanguageCodeEnumEN_CH,
  _$gLanguageCodeEnumEN_CK,
  _$gLanguageCodeEnumEN_CM,
  _$gLanguageCodeEnumEN_CX,
  _$gLanguageCodeEnumEN_CY,
  _$gLanguageCodeEnumEN_DE,
  _$gLanguageCodeEnumEN_DG,
  _$gLanguageCodeEnumEN_DK,
  _$gLanguageCodeEnumEN_DM,
  _$gLanguageCodeEnumEN_ER,
  _$gLanguageCodeEnumEN_FI,
  _$gLanguageCodeEnumEN_FJ,
  _$gLanguageCodeEnumEN_FK,
  _$gLanguageCodeEnumEN_FM,
  _$gLanguageCodeEnumEN_GB,
  _$gLanguageCodeEnumEN_GD,
  _$gLanguageCodeEnumEN_GG,
  _$gLanguageCodeEnumEN_GH,
  _$gLanguageCodeEnumEN_GI,
  _$gLanguageCodeEnumEN_GM,
  _$gLanguageCodeEnumEN_GU,
  _$gLanguageCodeEnumEN_GY,
  _$gLanguageCodeEnumEN_HK,
  _$gLanguageCodeEnumEN_IE,
  _$gLanguageCodeEnumEN_IL,
  _$gLanguageCodeEnumEN_IM,
  _$gLanguageCodeEnumEN_IN,
  _$gLanguageCodeEnumEN_IO,
  _$gLanguageCodeEnumEN_JE,
  _$gLanguageCodeEnumEN_JM,
  _$gLanguageCodeEnumEN_KE,
  _$gLanguageCodeEnumEN_KI,
  _$gLanguageCodeEnumEN_KN,
  _$gLanguageCodeEnumEN_KY,
  _$gLanguageCodeEnumEN_LC,
  _$gLanguageCodeEnumEN_LR,
  _$gLanguageCodeEnumEN_LS,
  _$gLanguageCodeEnumEN_MG,
  _$gLanguageCodeEnumEN_MH,
  _$gLanguageCodeEnumEN_MO,
  _$gLanguageCodeEnumEN_MP,
  _$gLanguageCodeEnumEN_MS,
  _$gLanguageCodeEnumEN_MT,
  _$gLanguageCodeEnumEN_MU,
  _$gLanguageCodeEnumEN_MW,
  _$gLanguageCodeEnumEN_MY,
  _$gLanguageCodeEnumEN_NA,
  _$gLanguageCodeEnumEN_NF,
  _$gLanguageCodeEnumEN_NG,
  _$gLanguageCodeEnumEN_NL,
  _$gLanguageCodeEnumEN_NR,
  _$gLanguageCodeEnumEN_NU,
  _$gLanguageCodeEnumEN_NZ,
  _$gLanguageCodeEnumEN_PG,
  _$gLanguageCodeEnumEN_PH,
  _$gLanguageCodeEnumEN_PK,
  _$gLanguageCodeEnumEN_PN,
  _$gLanguageCodeEnumEN_PR,
  _$gLanguageCodeEnumEN_PW,
  _$gLanguageCodeEnumEN_RW,
  _$gLanguageCodeEnumEN_SB,
  _$gLanguageCodeEnumEN_SC,
  _$gLanguageCodeEnumEN_SD,
  _$gLanguageCodeEnumEN_SE,
  _$gLanguageCodeEnumEN_SG,
  _$gLanguageCodeEnumEN_SH,
  _$gLanguageCodeEnumEN_SI,
  _$gLanguageCodeEnumEN_SL,
  _$gLanguageCodeEnumEN_SS,
  _$gLanguageCodeEnumEN_SX,
  _$gLanguageCodeEnumEN_SZ,
  _$gLanguageCodeEnumEN_TC,
  _$gLanguageCodeEnumEN_TK,
  _$gLanguageCodeEnumEN_TO,
  _$gLanguageCodeEnumEN_TT,
  _$gLanguageCodeEnumEN_TV,
  _$gLanguageCodeEnumEN_TZ,
  _$gLanguageCodeEnumEN_UG,
  _$gLanguageCodeEnumEN_UM,
  _$gLanguageCodeEnumEN_US,
  _$gLanguageCodeEnumEN_VC,
  _$gLanguageCodeEnumEN_VG,
  _$gLanguageCodeEnumEN_VI,
  _$gLanguageCodeEnumEN_VU,
  _$gLanguageCodeEnumEN_WS,
  _$gLanguageCodeEnumEN_ZA,
  _$gLanguageCodeEnumEN_ZM,
  _$gLanguageCodeEnumEN_ZW,
  _$gLanguageCodeEnumEO,
  _$gLanguageCodeEnumES,
  _$gLanguageCodeEnumES_AR,
  _$gLanguageCodeEnumES_BO,
  _$gLanguageCodeEnumES_BR,
  _$gLanguageCodeEnumES_BZ,
  _$gLanguageCodeEnumES_CL,
  _$gLanguageCodeEnumES_CO,
  _$gLanguageCodeEnumES_CR,
  _$gLanguageCodeEnumES_CU,
  _$gLanguageCodeEnumES_DO,
  _$gLanguageCodeEnumES_EA,
  _$gLanguageCodeEnumES_EC,
  _$gLanguageCodeEnumES_ES,
  _$gLanguageCodeEnumES_GQ,
  _$gLanguageCodeEnumES_GT,
  _$gLanguageCodeEnumES_HN,
  _$gLanguageCodeEnumES_IC,
  _$gLanguageCodeEnumES_MX,
  _$gLanguageCodeEnumES_NI,
  _$gLanguageCodeEnumES_PA,
  _$gLanguageCodeEnumES_PE,
  _$gLanguageCodeEnumES_PH,
  _$gLanguageCodeEnumES_PR,
  _$gLanguageCodeEnumES_PY,
  _$gLanguageCodeEnumES_SV,
  _$gLanguageCodeEnumES_US,
  _$gLanguageCodeEnumES_UY,
  _$gLanguageCodeEnumES_VE,
  _$gLanguageCodeEnumET,
  _$gLanguageCodeEnumET_EE,
  _$gLanguageCodeEnumEU,
  _$gLanguageCodeEnumEU_ES,
  _$gLanguageCodeEnumEWO,
  _$gLanguageCodeEnumEWO_CM,
  _$gLanguageCodeEnumFA,
  _$gLanguageCodeEnumFA_AF,
  _$gLanguageCodeEnumFA_IR,
  _$gLanguageCodeEnumFF,
  _$gLanguageCodeEnumFF_ADLM,
  _$gLanguageCodeEnumFF_ADLM_BF,
  _$gLanguageCodeEnumFF_ADLM_CM,
  _$gLanguageCodeEnumFF_ADLM_GH,
  _$gLanguageCodeEnumFF_ADLM_GM,
  _$gLanguageCodeEnumFF_ADLM_GN,
  _$gLanguageCodeEnumFF_ADLM_GW,
  _$gLanguageCodeEnumFF_ADLM_LR,
  _$gLanguageCodeEnumFF_ADLM_MR,
  _$gLanguageCodeEnumFF_ADLM_NE,
  _$gLanguageCodeEnumFF_ADLM_NG,
  _$gLanguageCodeEnumFF_ADLM_SL,
  _$gLanguageCodeEnumFF_ADLM_SN,
  _$gLanguageCodeEnumFF_LATN,
  _$gLanguageCodeEnumFF_LATN_BF,
  _$gLanguageCodeEnumFF_LATN_CM,
  _$gLanguageCodeEnumFF_LATN_GH,
  _$gLanguageCodeEnumFF_LATN_GM,
  _$gLanguageCodeEnumFF_LATN_GN,
  _$gLanguageCodeEnumFF_LATN_GW,
  _$gLanguageCodeEnumFF_LATN_LR,
  _$gLanguageCodeEnumFF_LATN_MR,
  _$gLanguageCodeEnumFF_LATN_NE,
  _$gLanguageCodeEnumFF_LATN_NG,
  _$gLanguageCodeEnumFF_LATN_SL,
  _$gLanguageCodeEnumFF_LATN_SN,
  _$gLanguageCodeEnumFI,
  _$gLanguageCodeEnumFI_FI,
  _$gLanguageCodeEnumFIL,
  _$gLanguageCodeEnumFIL_PH,
  _$gLanguageCodeEnumFO,
  _$gLanguageCodeEnumFO_DK,
  _$gLanguageCodeEnumFO_FO,
  _$gLanguageCodeEnumFR,
  _$gLanguageCodeEnumFR_BE,
  _$gLanguageCodeEnumFR_BF,
  _$gLanguageCodeEnumFR_BI,
  _$gLanguageCodeEnumFR_BJ,
  _$gLanguageCodeEnumFR_BL,
  _$gLanguageCodeEnumFR_CA,
  _$gLanguageCodeEnumFR_CD,
  _$gLanguageCodeEnumFR_CF,
  _$gLanguageCodeEnumFR_CG,
  _$gLanguageCodeEnumFR_CH,
  _$gLanguageCodeEnumFR_CI,
  _$gLanguageCodeEnumFR_CM,
  _$gLanguageCodeEnumFR_DJ,
  _$gLanguageCodeEnumFR_DZ,
  _$gLanguageCodeEnumFR_FR,
  _$gLanguageCodeEnumFR_GA,
  _$gLanguageCodeEnumFR_GF,
  _$gLanguageCodeEnumFR_GN,
  _$gLanguageCodeEnumFR_GP,
  _$gLanguageCodeEnumFR_GQ,
  _$gLanguageCodeEnumFR_HT,
  _$gLanguageCodeEnumFR_KM,
  _$gLanguageCodeEnumFR_LU,
  _$gLanguageCodeEnumFR_MA,
  _$gLanguageCodeEnumFR_MC,
  _$gLanguageCodeEnumFR_MF,
  _$gLanguageCodeEnumFR_MG,
  _$gLanguageCodeEnumFR_ML,
  _$gLanguageCodeEnumFR_MQ,
  _$gLanguageCodeEnumFR_MR,
  _$gLanguageCodeEnumFR_MU,
  _$gLanguageCodeEnumFR_NC,
  _$gLanguageCodeEnumFR_NE,
  _$gLanguageCodeEnumFR_PF,
  _$gLanguageCodeEnumFR_PM,
  _$gLanguageCodeEnumFR_RE,
  _$gLanguageCodeEnumFR_RW,
  _$gLanguageCodeEnumFR_SC,
  _$gLanguageCodeEnumFR_SN,
  _$gLanguageCodeEnumFR_SY,
  _$gLanguageCodeEnumFR_TD,
  _$gLanguageCodeEnumFR_TG,
  _$gLanguageCodeEnumFR_TN,
  _$gLanguageCodeEnumFR_VU,
  _$gLanguageCodeEnumFR_WF,
  _$gLanguageCodeEnumFR_YT,
  _$gLanguageCodeEnumFUR,
  _$gLanguageCodeEnumFUR_IT,
  _$gLanguageCodeEnumFY,
  _$gLanguageCodeEnumFY_NL,
  _$gLanguageCodeEnumGA,
  _$gLanguageCodeEnumGA_GB,
  _$gLanguageCodeEnumGA_IE,
  _$gLanguageCodeEnumGD,
  _$gLanguageCodeEnumGD_GB,
  _$gLanguageCodeEnumGL,
  _$gLanguageCodeEnumGL_ES,
  _$gLanguageCodeEnumGSW,
  _$gLanguageCodeEnumGSW_CH,
  _$gLanguageCodeEnumGSW_FR,
  _$gLanguageCodeEnumGSW_LI,
  _$gLanguageCodeEnumGU,
  _$gLanguageCodeEnumGU_IN,
  _$gLanguageCodeEnumGUZ,
  _$gLanguageCodeEnumGUZ_KE,
  _$gLanguageCodeEnumGV,
  _$gLanguageCodeEnumGV_IM,
  _$gLanguageCodeEnumHA,
  _$gLanguageCodeEnumHA_GH,
  _$gLanguageCodeEnumHA_NE,
  _$gLanguageCodeEnumHA_NG,
  _$gLanguageCodeEnumHAW,
  _$gLanguageCodeEnumHAW_US,
  _$gLanguageCodeEnumHE,
  _$gLanguageCodeEnumHE_IL,
  _$gLanguageCodeEnumHI,
  _$gLanguageCodeEnumHI_IN,
  _$gLanguageCodeEnumHR,
  _$gLanguageCodeEnumHR_BA,
  _$gLanguageCodeEnumHR_HR,
  _$gLanguageCodeEnumHSB,
  _$gLanguageCodeEnumHSB_DE,
  _$gLanguageCodeEnumHU,
  _$gLanguageCodeEnumHU_HU,
  _$gLanguageCodeEnumHY,
  _$gLanguageCodeEnumHY_AM,
  _$gLanguageCodeEnumIA,
  _$gLanguageCodeEnumID,
  _$gLanguageCodeEnumID_ID,
  _$gLanguageCodeEnumIG,
  _$gLanguageCodeEnumIG_NG,
  _$gLanguageCodeEnumII,
  _$gLanguageCodeEnumII_CN,
  _$gLanguageCodeEnumIS,
  _$gLanguageCodeEnumIS_IS,
  _$gLanguageCodeEnumIT,
  _$gLanguageCodeEnumIT_CH,
  _$gLanguageCodeEnumIT_IT,
  _$gLanguageCodeEnumIT_SM,
  _$gLanguageCodeEnumIT_VA,
  _$gLanguageCodeEnumJA,
  _$gLanguageCodeEnumJA_JP,
  _$gLanguageCodeEnumJGO,
  _$gLanguageCodeEnumJGO_CM,
  _$gLanguageCodeEnumJMC,
  _$gLanguageCodeEnumJMC_TZ,
  _$gLanguageCodeEnumJV,
  _$gLanguageCodeEnumJV_ID,
  _$gLanguageCodeEnumKA,
  _$gLanguageCodeEnumKA_GE,
  _$gLanguageCodeEnumKAB,
  _$gLanguageCodeEnumKAB_DZ,
  _$gLanguageCodeEnumKAM,
  _$gLanguageCodeEnumKAM_KE,
  _$gLanguageCodeEnumKDE,
  _$gLanguageCodeEnumKDE_TZ,
  _$gLanguageCodeEnumKEA,
  _$gLanguageCodeEnumKEA_CV,
  _$gLanguageCodeEnumKHQ,
  _$gLanguageCodeEnumKHQ_ML,
  _$gLanguageCodeEnumKI,
  _$gLanguageCodeEnumKI_KE,
  _$gLanguageCodeEnumKK,
  _$gLanguageCodeEnumKK_KZ,
  _$gLanguageCodeEnumKKJ,
  _$gLanguageCodeEnumKKJ_CM,
  _$gLanguageCodeEnumKL,
  _$gLanguageCodeEnumKL_GL,
  _$gLanguageCodeEnumKLN,
  _$gLanguageCodeEnumKLN_KE,
  _$gLanguageCodeEnumKM,
  _$gLanguageCodeEnumKM_KH,
  _$gLanguageCodeEnumKN,
  _$gLanguageCodeEnumKN_IN,
  _$gLanguageCodeEnumKO,
  _$gLanguageCodeEnumKO_KP,
  _$gLanguageCodeEnumKO_KR,
  _$gLanguageCodeEnumKOK,
  _$gLanguageCodeEnumKOK_IN,
  _$gLanguageCodeEnumKS,
  _$gLanguageCodeEnumKS_ARAB,
  _$gLanguageCodeEnumKS_ARAB_IN,
  _$gLanguageCodeEnumKSB,
  _$gLanguageCodeEnumKSB_TZ,
  _$gLanguageCodeEnumKSF,
  _$gLanguageCodeEnumKSF_CM,
  _$gLanguageCodeEnumKSH,
  _$gLanguageCodeEnumKSH_DE,
  _$gLanguageCodeEnumKU,
  _$gLanguageCodeEnumKU_TR,
  _$gLanguageCodeEnumKW,
  _$gLanguageCodeEnumKW_GB,
  _$gLanguageCodeEnumKY,
  _$gLanguageCodeEnumKY_KG,
  _$gLanguageCodeEnumLAG,
  _$gLanguageCodeEnumLAG_TZ,
  _$gLanguageCodeEnumLB,
  _$gLanguageCodeEnumLB_LU,
  _$gLanguageCodeEnumLG,
  _$gLanguageCodeEnumLG_UG,
  _$gLanguageCodeEnumLKT,
  _$gLanguageCodeEnumLKT_US,
  _$gLanguageCodeEnumLN,
  _$gLanguageCodeEnumLN_AO,
  _$gLanguageCodeEnumLN_CD,
  _$gLanguageCodeEnumLN_CF,
  _$gLanguageCodeEnumLN_CG,
  _$gLanguageCodeEnumLO,
  _$gLanguageCodeEnumLO_LA,
  _$gLanguageCodeEnumLRC,
  _$gLanguageCodeEnumLRC_IQ,
  _$gLanguageCodeEnumLRC_IR,
  _$gLanguageCodeEnumLT,
  _$gLanguageCodeEnumLT_LT,
  _$gLanguageCodeEnumLU,
  _$gLanguageCodeEnumLU_CD,
  _$gLanguageCodeEnumLUO,
  _$gLanguageCodeEnumLUO_KE,
  _$gLanguageCodeEnumLUY,
  _$gLanguageCodeEnumLUY_KE,
  _$gLanguageCodeEnumLV,
  _$gLanguageCodeEnumLV_LV,
  _$gLanguageCodeEnumMAI,
  _$gLanguageCodeEnumMAI_IN,
  _$gLanguageCodeEnumMAS,
  _$gLanguageCodeEnumMAS_KE,
  _$gLanguageCodeEnumMAS_TZ,
  _$gLanguageCodeEnumMER,
  _$gLanguageCodeEnumMER_KE,
  _$gLanguageCodeEnumMFE,
  _$gLanguageCodeEnumMFE_MU,
  _$gLanguageCodeEnumMG,
  _$gLanguageCodeEnumMG_MG,
  _$gLanguageCodeEnumMGH,
  _$gLanguageCodeEnumMGH_MZ,
  _$gLanguageCodeEnumMGO,
  _$gLanguageCodeEnumMGO_CM,
  _$gLanguageCodeEnumMI,
  _$gLanguageCodeEnumMI_NZ,
  _$gLanguageCodeEnumMK,
  _$gLanguageCodeEnumMK_MK,
  _$gLanguageCodeEnumML,
  _$gLanguageCodeEnumML_IN,
  _$gLanguageCodeEnumMN,
  _$gLanguageCodeEnumMN_MN,
  _$gLanguageCodeEnumMNI,
  _$gLanguageCodeEnumMNI_BENG,
  _$gLanguageCodeEnumMNI_BENG_IN,
  _$gLanguageCodeEnumMR,
  _$gLanguageCodeEnumMR_IN,
  _$gLanguageCodeEnumMS,
  _$gLanguageCodeEnumMS_BN,
  _$gLanguageCodeEnumMS_ID,
  _$gLanguageCodeEnumMS_MY,
  _$gLanguageCodeEnumMS_SG,
  _$gLanguageCodeEnumMT,
  _$gLanguageCodeEnumMT_MT,
  _$gLanguageCodeEnumMUA,
  _$gLanguageCodeEnumMUA_CM,
  _$gLanguageCodeEnumMY,
  _$gLanguageCodeEnumMY_MM,
  _$gLanguageCodeEnumMZN,
  _$gLanguageCodeEnumMZN_IR,
  _$gLanguageCodeEnumNAQ,
  _$gLanguageCodeEnumNAQ_NA,
  _$gLanguageCodeEnumNB,
  _$gLanguageCodeEnumNB_NO,
  _$gLanguageCodeEnumNB_SJ,
  _$gLanguageCodeEnumND,
  _$gLanguageCodeEnumND_ZW,
  _$gLanguageCodeEnumNDS,
  _$gLanguageCodeEnumNDS_DE,
  _$gLanguageCodeEnumNDS_NL,
  _$gLanguageCodeEnumNE,
  _$gLanguageCodeEnumNE_IN,
  _$gLanguageCodeEnumNE_NP,
  _$gLanguageCodeEnumNL,
  _$gLanguageCodeEnumNL_AW,
  _$gLanguageCodeEnumNL_BE,
  _$gLanguageCodeEnumNL_BQ,
  _$gLanguageCodeEnumNL_CW,
  _$gLanguageCodeEnumNL_NL,
  _$gLanguageCodeEnumNL_SR,
  _$gLanguageCodeEnumNL_SX,
  _$gLanguageCodeEnumNMG,
  _$gLanguageCodeEnumNMG_CM,
  _$gLanguageCodeEnumNN,
  _$gLanguageCodeEnumNN_NO,
  _$gLanguageCodeEnumNNH,
  _$gLanguageCodeEnumNNH_CM,
  _$gLanguageCodeEnumNUS,
  _$gLanguageCodeEnumNUS_SS,
  _$gLanguageCodeEnumNYN,
  _$gLanguageCodeEnumNYN_UG,
  _$gLanguageCodeEnumOM,
  _$gLanguageCodeEnumOM_ET,
  _$gLanguageCodeEnumOM_KE,
  _$gLanguageCodeEnumOR,
  _$gLanguageCodeEnumOR_IN,
  _$gLanguageCodeEnumOS,
  _$gLanguageCodeEnumOS_GE,
  _$gLanguageCodeEnumOS_RU,
  _$gLanguageCodeEnumPA,
  _$gLanguageCodeEnumPA_ARAB,
  _$gLanguageCodeEnumPA_ARAB_PK,
  _$gLanguageCodeEnumPA_GURU,
  _$gLanguageCodeEnumPA_GURU_IN,
  _$gLanguageCodeEnumPCM,
  _$gLanguageCodeEnumPCM_NG,
  _$gLanguageCodeEnumPL,
  _$gLanguageCodeEnumPL_PL,
  _$gLanguageCodeEnumPRG,
  _$gLanguageCodeEnumPS,
  _$gLanguageCodeEnumPS_AF,
  _$gLanguageCodeEnumPS_PK,
  _$gLanguageCodeEnumPT,
  _$gLanguageCodeEnumPT_AO,
  _$gLanguageCodeEnumPT_BR,
  _$gLanguageCodeEnumPT_CH,
  _$gLanguageCodeEnumPT_CV,
  _$gLanguageCodeEnumPT_GQ,
  _$gLanguageCodeEnumPT_GW,
  _$gLanguageCodeEnumPT_LU,
  _$gLanguageCodeEnumPT_MO,
  _$gLanguageCodeEnumPT_MZ,
  _$gLanguageCodeEnumPT_PT,
  _$gLanguageCodeEnumPT_ST,
  _$gLanguageCodeEnumPT_TL,
  _$gLanguageCodeEnumQU,
  _$gLanguageCodeEnumQU_BO,
  _$gLanguageCodeEnumQU_EC,
  _$gLanguageCodeEnumQU_PE,
  _$gLanguageCodeEnumRM,
  _$gLanguageCodeEnumRM_CH,
  _$gLanguageCodeEnumRN,
  _$gLanguageCodeEnumRN_BI,
  _$gLanguageCodeEnumRO,
  _$gLanguageCodeEnumRO_MD,
  _$gLanguageCodeEnumRO_RO,
  _$gLanguageCodeEnumROF,
  _$gLanguageCodeEnumROF_TZ,
  _$gLanguageCodeEnumRU,
  _$gLanguageCodeEnumRU_BY,
  _$gLanguageCodeEnumRU_KG,
  _$gLanguageCodeEnumRU_KZ,
  _$gLanguageCodeEnumRU_MD,
  _$gLanguageCodeEnumRU_RU,
  _$gLanguageCodeEnumRU_UA,
  _$gLanguageCodeEnumRW,
  _$gLanguageCodeEnumRW_RW,
  _$gLanguageCodeEnumRWK,
  _$gLanguageCodeEnumRWK_TZ,
  _$gLanguageCodeEnumSAH,
  _$gLanguageCodeEnumSAH_RU,
  _$gLanguageCodeEnumSAQ,
  _$gLanguageCodeEnumSAQ_KE,
  _$gLanguageCodeEnumSAT,
  _$gLanguageCodeEnumSAT_OLCK,
  _$gLanguageCodeEnumSAT_OLCK_IN,
  _$gLanguageCodeEnumSBP,
  _$gLanguageCodeEnumSBP_TZ,
  _$gLanguageCodeEnumSD,
  _$gLanguageCodeEnumSD_ARAB,
  _$gLanguageCodeEnumSD_ARAB_PK,
  _$gLanguageCodeEnumSD_DEVA,
  _$gLanguageCodeEnumSD_DEVA_IN,
  _$gLanguageCodeEnumSE,
  _$gLanguageCodeEnumSE_FI,
  _$gLanguageCodeEnumSE_NO,
  _$gLanguageCodeEnumSE_SE,
  _$gLanguageCodeEnumSEH,
  _$gLanguageCodeEnumSEH_MZ,
  _$gLanguageCodeEnumSES,
  _$gLanguageCodeEnumSES_ML,
  _$gLanguageCodeEnumSG,
  _$gLanguageCodeEnumSG_CF,
  _$gLanguageCodeEnumSHI,
  _$gLanguageCodeEnumSHI_LATN,
  _$gLanguageCodeEnumSHI_LATN_MA,
  _$gLanguageCodeEnumSHI_TFNG,
  _$gLanguageCodeEnumSHI_TFNG_MA,
  _$gLanguageCodeEnumSI,
  _$gLanguageCodeEnumSI_LK,
  _$gLanguageCodeEnumSK,
  _$gLanguageCodeEnumSK_SK,
  _$gLanguageCodeEnumSL,
  _$gLanguageCodeEnumSL_SI,
  _$gLanguageCodeEnumSMN,
  _$gLanguageCodeEnumSMN_FI,
  _$gLanguageCodeEnumSN,
  _$gLanguageCodeEnumSN_ZW,
  _$gLanguageCodeEnumSO,
  _$gLanguageCodeEnumSO_DJ,
  _$gLanguageCodeEnumSO_ET,
  _$gLanguageCodeEnumSO_KE,
  _$gLanguageCodeEnumSO_SO,
  _$gLanguageCodeEnumSQ,
  _$gLanguageCodeEnumSQ_AL,
  _$gLanguageCodeEnumSQ_MK,
  _$gLanguageCodeEnumSQ_XK,
  _$gLanguageCodeEnumSR,
  _$gLanguageCodeEnumSR_CYRL,
  _$gLanguageCodeEnumSR_CYRL_BA,
  _$gLanguageCodeEnumSR_CYRL_ME,
  _$gLanguageCodeEnumSR_CYRL_RS,
  _$gLanguageCodeEnumSR_CYRL_XK,
  _$gLanguageCodeEnumSR_LATN,
  _$gLanguageCodeEnumSR_LATN_BA,
  _$gLanguageCodeEnumSR_LATN_ME,
  _$gLanguageCodeEnumSR_LATN_RS,
  _$gLanguageCodeEnumSR_LATN_XK,
  _$gLanguageCodeEnumSU,
  _$gLanguageCodeEnumSU_LATN,
  _$gLanguageCodeEnumSU_LATN_ID,
  _$gLanguageCodeEnumSV,
  _$gLanguageCodeEnumSV_AX,
  _$gLanguageCodeEnumSV_FI,
  _$gLanguageCodeEnumSV_SE,
  _$gLanguageCodeEnumSW,
  _$gLanguageCodeEnumSW_CD,
  _$gLanguageCodeEnumSW_KE,
  _$gLanguageCodeEnumSW_TZ,
  _$gLanguageCodeEnumSW_UG,
  _$gLanguageCodeEnumTA,
  _$gLanguageCodeEnumTA_IN,
  _$gLanguageCodeEnumTA_LK,
  _$gLanguageCodeEnumTA_MY,
  _$gLanguageCodeEnumTA_SG,
  _$gLanguageCodeEnumTE,
  _$gLanguageCodeEnumTE_IN,
  _$gLanguageCodeEnumTEO,
  _$gLanguageCodeEnumTEO_KE,
  _$gLanguageCodeEnumTEO_UG,
  _$gLanguageCodeEnumTG,
  _$gLanguageCodeEnumTG_TJ,
  _$gLanguageCodeEnumTH,
  _$gLanguageCodeEnumTH_TH,
  _$gLanguageCodeEnumTI,
  _$gLanguageCodeEnumTI_ER,
  _$gLanguageCodeEnumTI_ET,
  _$gLanguageCodeEnumTK,
  _$gLanguageCodeEnumTK_TM,
  _$gLanguageCodeEnumTO,
  _$gLanguageCodeEnumTO_TO,
  _$gLanguageCodeEnumTR,
  _$gLanguageCodeEnumTR_CY,
  _$gLanguageCodeEnumTR_TR,
  _$gLanguageCodeEnumTT,
  _$gLanguageCodeEnumTT_RU,
  _$gLanguageCodeEnumTWQ,
  _$gLanguageCodeEnumTWQ_NE,
  _$gLanguageCodeEnumTZM,
  _$gLanguageCodeEnumTZM_MA,
  _$gLanguageCodeEnumUG,
  _$gLanguageCodeEnumUG_CN,
  _$gLanguageCodeEnumUK,
  _$gLanguageCodeEnumUK_UA,
  _$gLanguageCodeEnumUR,
  _$gLanguageCodeEnumUR_IN,
  _$gLanguageCodeEnumUR_PK,
  _$gLanguageCodeEnumUZ,
  _$gLanguageCodeEnumUZ_ARAB,
  _$gLanguageCodeEnumUZ_ARAB_AF,
  _$gLanguageCodeEnumUZ_CYRL,
  _$gLanguageCodeEnumUZ_CYRL_UZ,
  _$gLanguageCodeEnumUZ_LATN,
  _$gLanguageCodeEnumUZ_LATN_UZ,
  _$gLanguageCodeEnumVAI,
  _$gLanguageCodeEnumVAI_LATN,
  _$gLanguageCodeEnumVAI_LATN_LR,
  _$gLanguageCodeEnumVAI_VAII,
  _$gLanguageCodeEnumVAI_VAII_LR,
  _$gLanguageCodeEnumVI,
  _$gLanguageCodeEnumVI_VN,
  _$gLanguageCodeEnumVO,
  _$gLanguageCodeEnumVUN,
  _$gLanguageCodeEnumVUN_TZ,
  _$gLanguageCodeEnumWAE,
  _$gLanguageCodeEnumWAE_CH,
  _$gLanguageCodeEnumWO,
  _$gLanguageCodeEnumWO_SN,
  _$gLanguageCodeEnumXH,
  _$gLanguageCodeEnumXH_ZA,
  _$gLanguageCodeEnumXOG,
  _$gLanguageCodeEnumXOG_UG,
  _$gLanguageCodeEnumYAV,
  _$gLanguageCodeEnumYAV_CM,
  _$gLanguageCodeEnumYI,
  _$gLanguageCodeEnumYO,
  _$gLanguageCodeEnumYO_BJ,
  _$gLanguageCodeEnumYO_NG,
  _$gLanguageCodeEnumYUE,
  _$gLanguageCodeEnumYUE_HANS,
  _$gLanguageCodeEnumYUE_HANS_CN,
  _$gLanguageCodeEnumYUE_HANT,
  _$gLanguageCodeEnumYUE_HANT_HK,
  _$gLanguageCodeEnumZGH,
  _$gLanguageCodeEnumZGH_MA,
  _$gLanguageCodeEnumZH,
  _$gLanguageCodeEnumZH_HANS,
  _$gLanguageCodeEnumZH_HANS_CN,
  _$gLanguageCodeEnumZH_HANS_HK,
  _$gLanguageCodeEnumZH_HANS_MO,
  _$gLanguageCodeEnumZH_HANS_SG,
  _$gLanguageCodeEnumZH_HANT,
  _$gLanguageCodeEnumZH_HANT_HK,
  _$gLanguageCodeEnumZH_HANT_MO,
  _$gLanguageCodeEnumZH_HANT_TW,
  _$gLanguageCodeEnumZU,
  _$gLanguageCodeEnumZU_ZA,
]);

const GMeasurementUnitsEnum _$gMeasurementUnitsEnumCM =
    const GMeasurementUnitsEnum._('CM');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumM =
    const GMeasurementUnitsEnum._('M');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumKM =
    const GMeasurementUnitsEnum._('KM');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumFT =
    const GMeasurementUnitsEnum._('FT');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumYD =
    const GMeasurementUnitsEnum._('YD');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumINCH =
    const GMeasurementUnitsEnum._('INCH');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumSQ_CM =
    const GMeasurementUnitsEnum._('SQ_CM');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumSQ_M =
    const GMeasurementUnitsEnum._('SQ_M');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumSQ_KM =
    const GMeasurementUnitsEnum._('SQ_KM');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumSQ_FT =
    const GMeasurementUnitsEnum._('SQ_FT');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumSQ_YD =
    const GMeasurementUnitsEnum._('SQ_YD');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumSQ_INCH =
    const GMeasurementUnitsEnum._('SQ_INCH');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumCUBIC_MILLIMETER =
    const GMeasurementUnitsEnum._('CUBIC_MILLIMETER');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumCUBIC_CENTIMETER =
    const GMeasurementUnitsEnum._('CUBIC_CENTIMETER');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumCUBIC_DECIMETER =
    const GMeasurementUnitsEnum._('CUBIC_DECIMETER');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumCUBIC_METER =
    const GMeasurementUnitsEnum._('CUBIC_METER');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumLITER =
    const GMeasurementUnitsEnum._('LITER');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumCUBIC_FOOT =
    const GMeasurementUnitsEnum._('CUBIC_FOOT');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumCUBIC_INCH =
    const GMeasurementUnitsEnum._('CUBIC_INCH');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumCUBIC_YARD =
    const GMeasurementUnitsEnum._('CUBIC_YARD');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumQT =
    const GMeasurementUnitsEnum._('QT');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumPINT =
    const GMeasurementUnitsEnum._('PINT');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumFL_OZ =
    const GMeasurementUnitsEnum._('FL_OZ');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumACRE_IN =
    const GMeasurementUnitsEnum._('ACRE_IN');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumACRE_FT =
    const GMeasurementUnitsEnum._('ACRE_FT');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumG =
    const GMeasurementUnitsEnum._('G');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumLB =
    const GMeasurementUnitsEnum._('LB');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumOZ =
    const GMeasurementUnitsEnum._('OZ');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumKG =
    const GMeasurementUnitsEnum._('KG');
const GMeasurementUnitsEnum _$gMeasurementUnitsEnumTONNE =
    const GMeasurementUnitsEnum._('TONNE');

GMeasurementUnitsEnum _$gMeasurementUnitsEnumValueOf(String name) {
  switch (name) {
    case 'CM':
      return _$gMeasurementUnitsEnumCM;
    case 'M':
      return _$gMeasurementUnitsEnumM;
    case 'KM':
      return _$gMeasurementUnitsEnumKM;
    case 'FT':
      return _$gMeasurementUnitsEnumFT;
    case 'YD':
      return _$gMeasurementUnitsEnumYD;
    case 'INCH':
      return _$gMeasurementUnitsEnumINCH;
    case 'SQ_CM':
      return _$gMeasurementUnitsEnumSQ_CM;
    case 'SQ_M':
      return _$gMeasurementUnitsEnumSQ_M;
    case 'SQ_KM':
      return _$gMeasurementUnitsEnumSQ_KM;
    case 'SQ_FT':
      return _$gMeasurementUnitsEnumSQ_FT;
    case 'SQ_YD':
      return _$gMeasurementUnitsEnumSQ_YD;
    case 'SQ_INCH':
      return _$gMeasurementUnitsEnumSQ_INCH;
    case 'CUBIC_MILLIMETER':
      return _$gMeasurementUnitsEnumCUBIC_MILLIMETER;
    case 'CUBIC_CENTIMETER':
      return _$gMeasurementUnitsEnumCUBIC_CENTIMETER;
    case 'CUBIC_DECIMETER':
      return _$gMeasurementUnitsEnumCUBIC_DECIMETER;
    case 'CUBIC_METER':
      return _$gMeasurementUnitsEnumCUBIC_METER;
    case 'LITER':
      return _$gMeasurementUnitsEnumLITER;
    case 'CUBIC_FOOT':
      return _$gMeasurementUnitsEnumCUBIC_FOOT;
    case 'CUBIC_INCH':
      return _$gMeasurementUnitsEnumCUBIC_INCH;
    case 'CUBIC_YARD':
      return _$gMeasurementUnitsEnumCUBIC_YARD;
    case 'QT':
      return _$gMeasurementUnitsEnumQT;
    case 'PINT':
      return _$gMeasurementUnitsEnumPINT;
    case 'FL_OZ':
      return _$gMeasurementUnitsEnumFL_OZ;
    case 'ACRE_IN':
      return _$gMeasurementUnitsEnumACRE_IN;
    case 'ACRE_FT':
      return _$gMeasurementUnitsEnumACRE_FT;
    case 'G':
      return _$gMeasurementUnitsEnumG;
    case 'LB':
      return _$gMeasurementUnitsEnumLB;
    case 'OZ':
      return _$gMeasurementUnitsEnumOZ;
    case 'KG':
      return _$gMeasurementUnitsEnumKG;
    case 'TONNE':
      return _$gMeasurementUnitsEnumTONNE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMeasurementUnitsEnum> _$gMeasurementUnitsEnumValues =
    new BuiltSet<GMeasurementUnitsEnum>(const <GMeasurementUnitsEnum>[
  _$gMeasurementUnitsEnumCM,
  _$gMeasurementUnitsEnumM,
  _$gMeasurementUnitsEnumKM,
  _$gMeasurementUnitsEnumFT,
  _$gMeasurementUnitsEnumYD,
  _$gMeasurementUnitsEnumINCH,
  _$gMeasurementUnitsEnumSQ_CM,
  _$gMeasurementUnitsEnumSQ_M,
  _$gMeasurementUnitsEnumSQ_KM,
  _$gMeasurementUnitsEnumSQ_FT,
  _$gMeasurementUnitsEnumSQ_YD,
  _$gMeasurementUnitsEnumSQ_INCH,
  _$gMeasurementUnitsEnumCUBIC_MILLIMETER,
  _$gMeasurementUnitsEnumCUBIC_CENTIMETER,
  _$gMeasurementUnitsEnumCUBIC_DECIMETER,
  _$gMeasurementUnitsEnumCUBIC_METER,
  _$gMeasurementUnitsEnumLITER,
  _$gMeasurementUnitsEnumCUBIC_FOOT,
  _$gMeasurementUnitsEnumCUBIC_INCH,
  _$gMeasurementUnitsEnumCUBIC_YARD,
  _$gMeasurementUnitsEnumQT,
  _$gMeasurementUnitsEnumPINT,
  _$gMeasurementUnitsEnumFL_OZ,
  _$gMeasurementUnitsEnumACRE_IN,
  _$gMeasurementUnitsEnumACRE_FT,
  _$gMeasurementUnitsEnumG,
  _$gMeasurementUnitsEnumLB,
  _$gMeasurementUnitsEnumOZ,
  _$gMeasurementUnitsEnumKG,
  _$gMeasurementUnitsEnumTONNE,
]);

const GMenuErrorCode _$gMenuErrorCodeCANNOT_ASSIGN_NODE =
    const GMenuErrorCode._('CANNOT_ASSIGN_NODE');
const GMenuErrorCode _$gMenuErrorCodeGRAPHQL_ERROR =
    const GMenuErrorCode._('GRAPHQL_ERROR');
const GMenuErrorCode _$gMenuErrorCodeINVALID =
    const GMenuErrorCode._('INVALID');
const GMenuErrorCode _$gMenuErrorCodeINVALID_MENU_ITEM =
    const GMenuErrorCode._('INVALID_MENU_ITEM');
const GMenuErrorCode _$gMenuErrorCodeNO_MENU_ITEM_PROVIDED =
    const GMenuErrorCode._('NO_MENU_ITEM_PROVIDED');
const GMenuErrorCode _$gMenuErrorCodeNOT_FOUND =
    const GMenuErrorCode._('NOT_FOUND');
const GMenuErrorCode _$gMenuErrorCodeREQUIRED =
    const GMenuErrorCode._('REQUIRED');
const GMenuErrorCode _$gMenuErrorCodeTOO_MANY_MENU_ITEMS =
    const GMenuErrorCode._('TOO_MANY_MENU_ITEMS');
const GMenuErrorCode _$gMenuErrorCodeUNIQUE = const GMenuErrorCode._('UNIQUE');

GMenuErrorCode _$gMenuErrorCodeValueOf(String name) {
  switch (name) {
    case 'CANNOT_ASSIGN_NODE':
      return _$gMenuErrorCodeCANNOT_ASSIGN_NODE;
    case 'GRAPHQL_ERROR':
      return _$gMenuErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gMenuErrorCodeINVALID;
    case 'INVALID_MENU_ITEM':
      return _$gMenuErrorCodeINVALID_MENU_ITEM;
    case 'NO_MENU_ITEM_PROVIDED':
      return _$gMenuErrorCodeNO_MENU_ITEM_PROVIDED;
    case 'NOT_FOUND':
      return _$gMenuErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gMenuErrorCodeREQUIRED;
    case 'TOO_MANY_MENU_ITEMS':
      return _$gMenuErrorCodeTOO_MANY_MENU_ITEMS;
    case 'UNIQUE':
      return _$gMenuErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMenuErrorCode> _$gMenuErrorCodeValues =
    new BuiltSet<GMenuErrorCode>(const <GMenuErrorCode>[
  _$gMenuErrorCodeCANNOT_ASSIGN_NODE,
  _$gMenuErrorCodeGRAPHQL_ERROR,
  _$gMenuErrorCodeINVALID,
  _$gMenuErrorCodeINVALID_MENU_ITEM,
  _$gMenuErrorCodeNO_MENU_ITEM_PROVIDED,
  _$gMenuErrorCodeNOT_FOUND,
  _$gMenuErrorCodeREQUIRED,
  _$gMenuErrorCodeTOO_MANY_MENU_ITEMS,
  _$gMenuErrorCodeUNIQUE,
]);

const GMenuItemsSortField _$gMenuItemsSortFieldNAME =
    const GMenuItemsSortField._('NAME');

GMenuItemsSortField _$gMenuItemsSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gMenuItemsSortFieldNAME;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMenuItemsSortField> _$gMenuItemsSortFieldValues =
    new BuiltSet<GMenuItemsSortField>(const <GMenuItemsSortField>[
  _$gMenuItemsSortFieldNAME,
]);

const GMenuSortField _$gMenuSortFieldNAME = const GMenuSortField._('NAME');
const GMenuSortField _$gMenuSortFieldITEMS_COUNT =
    const GMenuSortField._('ITEMS_COUNT');

GMenuSortField _$gMenuSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gMenuSortFieldNAME;
    case 'ITEMS_COUNT':
      return _$gMenuSortFieldITEMS_COUNT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMenuSortField> _$gMenuSortFieldValues =
    new BuiltSet<GMenuSortField>(const <GMenuSortField>[
  _$gMenuSortFieldNAME,
  _$gMenuSortFieldITEMS_COUNT,
]);

const GMetadataErrorCode _$gMetadataErrorCodeGRAPHQL_ERROR =
    const GMetadataErrorCode._('GRAPHQL_ERROR');
const GMetadataErrorCode _$gMetadataErrorCodeINVALID =
    const GMetadataErrorCode._('INVALID');
const GMetadataErrorCode _$gMetadataErrorCodeNOT_FOUND =
    const GMetadataErrorCode._('NOT_FOUND');
const GMetadataErrorCode _$gMetadataErrorCodeREQUIRED =
    const GMetadataErrorCode._('REQUIRED');
const GMetadataErrorCode _$gMetadataErrorCodeNOT_UPDATED =
    const GMetadataErrorCode._('NOT_UPDATED');

GMetadataErrorCode _$gMetadataErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gMetadataErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gMetadataErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gMetadataErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gMetadataErrorCodeREQUIRED;
    case 'NOT_UPDATED':
      return _$gMetadataErrorCodeNOT_UPDATED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GMetadataErrorCode> _$gMetadataErrorCodeValues =
    new BuiltSet<GMetadataErrorCode>(const <GMetadataErrorCode>[
  _$gMetadataErrorCodeGRAPHQL_ERROR,
  _$gMetadataErrorCodeINVALID,
  _$gMetadataErrorCodeNOT_FOUND,
  _$gMetadataErrorCodeREQUIRED,
  _$gMetadataErrorCodeNOT_UPDATED,
]);

const GNavigationType _$gNavigationTypeMAIN = const GNavigationType._('MAIN');
const GNavigationType _$gNavigationTypeSECONDARY =
    const GNavigationType._('SECONDARY');

GNavigationType _$gNavigationTypeValueOf(String name) {
  switch (name) {
    case 'MAIN':
      return _$gNavigationTypeMAIN;
    case 'SECONDARY':
      return _$gNavigationTypeSECONDARY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GNavigationType> _$gNavigationTypeValues =
    new BuiltSet<GNavigationType>(const <GNavigationType>[
  _$gNavigationTypeMAIN,
  _$gNavigationTypeSECONDARY,
]);

const GOrderAction _$gOrderActionCAPTURE = const GOrderAction._('CAPTURE');
const GOrderAction _$gOrderActionMARK_AS_PAID =
    const GOrderAction._('MARK_AS_PAID');
const GOrderAction _$gOrderActionREFUND = const GOrderAction._('REFUND');
const GOrderAction _$gOrderActionVOID = const GOrderAction._('VOID');

GOrderAction _$gOrderActionValueOf(String name) {
  switch (name) {
    case 'CAPTURE':
      return _$gOrderActionCAPTURE;
    case 'MARK_AS_PAID':
      return _$gOrderActionMARK_AS_PAID;
    case 'REFUND':
      return _$gOrderActionREFUND;
    case 'VOID':
      return _$gOrderActionVOID;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderAction> _$gOrderActionValues =
    new BuiltSet<GOrderAction>(const <GOrderAction>[
  _$gOrderActionCAPTURE,
  _$gOrderActionMARK_AS_PAID,
  _$gOrderActionREFUND,
  _$gOrderActionVOID,
]);

const GOrderAuthorizeStatusEnum _$gOrderAuthorizeStatusEnumNONE =
    const GOrderAuthorizeStatusEnum._('NONE');
const GOrderAuthorizeStatusEnum _$gOrderAuthorizeStatusEnumPARTIAL =
    const GOrderAuthorizeStatusEnum._('PARTIAL');
const GOrderAuthorizeStatusEnum _$gOrderAuthorizeStatusEnumFULL =
    const GOrderAuthorizeStatusEnum._('FULL');

GOrderAuthorizeStatusEnum _$gOrderAuthorizeStatusEnumValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gOrderAuthorizeStatusEnumNONE;
    case 'PARTIAL':
      return _$gOrderAuthorizeStatusEnumPARTIAL;
    case 'FULL':
      return _$gOrderAuthorizeStatusEnumFULL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderAuthorizeStatusEnum> _$gOrderAuthorizeStatusEnumValues =
    new BuiltSet<GOrderAuthorizeStatusEnum>(const <GOrderAuthorizeStatusEnum>[
  _$gOrderAuthorizeStatusEnumNONE,
  _$gOrderAuthorizeStatusEnumPARTIAL,
  _$gOrderAuthorizeStatusEnumFULL,
]);

const GOrderChargeStatusEnum _$gOrderChargeStatusEnumNONE =
    const GOrderChargeStatusEnum._('NONE');
const GOrderChargeStatusEnum _$gOrderChargeStatusEnumPARTIAL =
    const GOrderChargeStatusEnum._('PARTIAL');
const GOrderChargeStatusEnum _$gOrderChargeStatusEnumFULL =
    const GOrderChargeStatusEnum._('FULL');
const GOrderChargeStatusEnum _$gOrderChargeStatusEnumOVERCHARGED =
    const GOrderChargeStatusEnum._('OVERCHARGED');

GOrderChargeStatusEnum _$gOrderChargeStatusEnumValueOf(String name) {
  switch (name) {
    case 'NONE':
      return _$gOrderChargeStatusEnumNONE;
    case 'PARTIAL':
      return _$gOrderChargeStatusEnumPARTIAL;
    case 'FULL':
      return _$gOrderChargeStatusEnumFULL;
    case 'OVERCHARGED':
      return _$gOrderChargeStatusEnumOVERCHARGED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderChargeStatusEnum> _$gOrderChargeStatusEnumValues =
    new BuiltSet<GOrderChargeStatusEnum>(const <GOrderChargeStatusEnum>[
  _$gOrderChargeStatusEnumNONE,
  _$gOrderChargeStatusEnumPARTIAL,
  _$gOrderChargeStatusEnumFULL,
  _$gOrderChargeStatusEnumOVERCHARGED,
]);

const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeGRAPHQL_ERROR =
    const GOrderCreateFromCheckoutErrorCode._('GRAPHQL_ERROR');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeCHECKOUT_NOT_FOUND =
    const GOrderCreateFromCheckoutErrorCode._('CHECKOUT_NOT_FOUND');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeCHANNEL_INACTIVE =
    const GOrderCreateFromCheckoutErrorCode._('CHANNEL_INACTIVE');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeINSUFFICIENT_STOCK =
    const GOrderCreateFromCheckoutErrorCode._('INSUFFICIENT_STOCK');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeVOUCHER_NOT_APPLICABLE =
    const GOrderCreateFromCheckoutErrorCode._('VOUCHER_NOT_APPLICABLE');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeGIFT_CARD_NOT_APPLICABLE =
    const GOrderCreateFromCheckoutErrorCode._('GIFT_CARD_NOT_APPLICABLE');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeTAX_ERROR =
    const GOrderCreateFromCheckoutErrorCode._('TAX_ERROR');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeSHIPPING_METHOD_NOT_SET =
    const GOrderCreateFromCheckoutErrorCode._('SHIPPING_METHOD_NOT_SET');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeBILLING_ADDRESS_NOT_SET =
    const GOrderCreateFromCheckoutErrorCode._('BILLING_ADDRESS_NOT_SET');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET =
    const GOrderCreateFromCheckoutErrorCode._('SHIPPING_ADDRESS_NOT_SET');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeINVALID_SHIPPING_METHOD =
    const GOrderCreateFromCheckoutErrorCode._('INVALID_SHIPPING_METHOD');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeNO_LINES =
    const GOrderCreateFromCheckoutErrorCode._('NO_LINES');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeEMAIL_NOT_SET =
    const GOrderCreateFromCheckoutErrorCode._('EMAIL_NOT_SET');
const GOrderCreateFromCheckoutErrorCode
    _$gOrderCreateFromCheckoutErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL =
    const GOrderCreateFromCheckoutErrorCode._('UNAVAILABLE_VARIANT_IN_CHANNEL');

GOrderCreateFromCheckoutErrorCode _$gOrderCreateFromCheckoutErrorCodeValueOf(
    String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gOrderCreateFromCheckoutErrorCodeGRAPHQL_ERROR;
    case 'CHECKOUT_NOT_FOUND':
      return _$gOrderCreateFromCheckoutErrorCodeCHECKOUT_NOT_FOUND;
    case 'CHANNEL_INACTIVE':
      return _$gOrderCreateFromCheckoutErrorCodeCHANNEL_INACTIVE;
    case 'INSUFFICIENT_STOCK':
      return _$gOrderCreateFromCheckoutErrorCodeINSUFFICIENT_STOCK;
    case 'VOUCHER_NOT_APPLICABLE':
      return _$gOrderCreateFromCheckoutErrorCodeVOUCHER_NOT_APPLICABLE;
    case 'GIFT_CARD_NOT_APPLICABLE':
      return _$gOrderCreateFromCheckoutErrorCodeGIFT_CARD_NOT_APPLICABLE;
    case 'TAX_ERROR':
      return _$gOrderCreateFromCheckoutErrorCodeTAX_ERROR;
    case 'SHIPPING_METHOD_NOT_SET':
      return _$gOrderCreateFromCheckoutErrorCodeSHIPPING_METHOD_NOT_SET;
    case 'BILLING_ADDRESS_NOT_SET':
      return _$gOrderCreateFromCheckoutErrorCodeBILLING_ADDRESS_NOT_SET;
    case 'SHIPPING_ADDRESS_NOT_SET':
      return _$gOrderCreateFromCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET;
    case 'INVALID_SHIPPING_METHOD':
      return _$gOrderCreateFromCheckoutErrorCodeINVALID_SHIPPING_METHOD;
    case 'NO_LINES':
      return _$gOrderCreateFromCheckoutErrorCodeNO_LINES;
    case 'EMAIL_NOT_SET':
      return _$gOrderCreateFromCheckoutErrorCodeEMAIL_NOT_SET;
    case 'UNAVAILABLE_VARIANT_IN_CHANNEL':
      return _$gOrderCreateFromCheckoutErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderCreateFromCheckoutErrorCode>
    _$gOrderCreateFromCheckoutErrorCodeValues =
    new BuiltSet<GOrderCreateFromCheckoutErrorCode>(const <
        GOrderCreateFromCheckoutErrorCode>[
  _$gOrderCreateFromCheckoutErrorCodeGRAPHQL_ERROR,
  _$gOrderCreateFromCheckoutErrorCodeCHECKOUT_NOT_FOUND,
  _$gOrderCreateFromCheckoutErrorCodeCHANNEL_INACTIVE,
  _$gOrderCreateFromCheckoutErrorCodeINSUFFICIENT_STOCK,
  _$gOrderCreateFromCheckoutErrorCodeVOUCHER_NOT_APPLICABLE,
  _$gOrderCreateFromCheckoutErrorCodeGIFT_CARD_NOT_APPLICABLE,
  _$gOrderCreateFromCheckoutErrorCodeTAX_ERROR,
  _$gOrderCreateFromCheckoutErrorCodeSHIPPING_METHOD_NOT_SET,
  _$gOrderCreateFromCheckoutErrorCodeBILLING_ADDRESS_NOT_SET,
  _$gOrderCreateFromCheckoutErrorCodeSHIPPING_ADDRESS_NOT_SET,
  _$gOrderCreateFromCheckoutErrorCodeINVALID_SHIPPING_METHOD,
  _$gOrderCreateFromCheckoutErrorCodeNO_LINES,
  _$gOrderCreateFromCheckoutErrorCodeEMAIL_NOT_SET,
  _$gOrderCreateFromCheckoutErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL,
]);

const GOrderDirection _$gOrderDirectionASC = const GOrderDirection._('ASC');
const GOrderDirection _$gOrderDirectionDESC = const GOrderDirection._('DESC');

GOrderDirection _$gOrderDirectionValueOf(String name) {
  switch (name) {
    case 'ASC':
      return _$gOrderDirectionASC;
    case 'DESC':
      return _$gOrderDirectionDESC;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderDirection> _$gOrderDirectionValues =
    new BuiltSet<GOrderDirection>(const <GOrderDirection>[
  _$gOrderDirectionASC,
  _$gOrderDirectionDESC,
]);

const GOrderDiscountType _$gOrderDiscountTypeVOUCHER =
    const GOrderDiscountType._('VOUCHER');
const GOrderDiscountType _$gOrderDiscountTypeMANUAL =
    const GOrderDiscountType._('MANUAL');

GOrderDiscountType _$gOrderDiscountTypeValueOf(String name) {
  switch (name) {
    case 'VOUCHER':
      return _$gOrderDiscountTypeVOUCHER;
    case 'MANUAL':
      return _$gOrderDiscountTypeMANUAL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderDiscountType> _$gOrderDiscountTypeValues =
    new BuiltSet<GOrderDiscountType>(const <GOrderDiscountType>[
  _$gOrderDiscountTypeVOUCHER,
  _$gOrderDiscountTypeMANUAL,
]);

const GOrderErrorCode _$gOrderErrorCodeBILLING_ADDRESS_NOT_SET =
    const GOrderErrorCode._('BILLING_ADDRESS_NOT_SET');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_CANCEL_FULFILLMENT =
    const GOrderErrorCode._('CANNOT_CANCEL_FULFILLMENT');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_CANCEL_ORDER =
    const GOrderErrorCode._('CANNOT_CANCEL_ORDER');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_DELETE =
    const GOrderErrorCode._('CANNOT_DELETE');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_DISCOUNT =
    const GOrderErrorCode._('CANNOT_DISCOUNT');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_REFUND =
    const GOrderErrorCode._('CANNOT_REFUND');
const GOrderErrorCode _$gOrderErrorCodeCANNOT_FULFILL_UNPAID_ORDER =
    const GOrderErrorCode._('CANNOT_FULFILL_UNPAID_ORDER');
const GOrderErrorCode _$gOrderErrorCodeCAPTURE_INACTIVE_PAYMENT =
    const GOrderErrorCode._('CAPTURE_INACTIVE_PAYMENT');
const GOrderErrorCode _$gOrderErrorCodeGIFT_CARD_LINE =
    const GOrderErrorCode._('GIFT_CARD_LINE');
const GOrderErrorCode _$gOrderErrorCodeNOT_EDITABLE =
    const GOrderErrorCode._('NOT_EDITABLE');
const GOrderErrorCode _$gOrderErrorCodeFULFILL_ORDER_LINE =
    const GOrderErrorCode._('FULFILL_ORDER_LINE');
const GOrderErrorCode _$gOrderErrorCodeGRAPHQL_ERROR =
    const GOrderErrorCode._('GRAPHQL_ERROR');
const GOrderErrorCode _$gOrderErrorCodeINVALID =
    const GOrderErrorCode._('INVALID');
const GOrderErrorCode _$gOrderErrorCodePRODUCT_NOT_PUBLISHED =
    const GOrderErrorCode._('PRODUCT_NOT_PUBLISHED');
const GOrderErrorCode _$gOrderErrorCodePRODUCT_UNAVAILABLE_FOR_PURCHASE =
    const GOrderErrorCode._('PRODUCT_UNAVAILABLE_FOR_PURCHASE');
const GOrderErrorCode _$gOrderErrorCodeNOT_FOUND =
    const GOrderErrorCode._('NOT_FOUND');
const GOrderErrorCode _$gOrderErrorCodeORDER_NO_SHIPPING_ADDRESS =
    const GOrderErrorCode._('ORDER_NO_SHIPPING_ADDRESS');
const GOrderErrorCode _$gOrderErrorCodePAYMENT_ERROR =
    const GOrderErrorCode._('PAYMENT_ERROR');
const GOrderErrorCode _$gOrderErrorCodePAYMENT_MISSING =
    const GOrderErrorCode._('PAYMENT_MISSING');
const GOrderErrorCode _$gOrderErrorCodeREQUIRED =
    const GOrderErrorCode._('REQUIRED');
const GOrderErrorCode _$gOrderErrorCodeSHIPPING_METHOD_NOT_APPLICABLE =
    const GOrderErrorCode._('SHIPPING_METHOD_NOT_APPLICABLE');
const GOrderErrorCode _$gOrderErrorCodeSHIPPING_METHOD_REQUIRED =
    const GOrderErrorCode._('SHIPPING_METHOD_REQUIRED');
const GOrderErrorCode _$gOrderErrorCodeTAX_ERROR =
    const GOrderErrorCode._('TAX_ERROR');
const GOrderErrorCode _$gOrderErrorCodeUNIQUE =
    const GOrderErrorCode._('UNIQUE');
const GOrderErrorCode _$gOrderErrorCodeVOID_INACTIVE_PAYMENT =
    const GOrderErrorCode._('VOID_INACTIVE_PAYMENT');
const GOrderErrorCode _$gOrderErrorCodeZERO_QUANTITY =
    const GOrderErrorCode._('ZERO_QUANTITY');
const GOrderErrorCode _$gOrderErrorCodeINVALID_QUANTITY =
    const GOrderErrorCode._('INVALID_QUANTITY');
const GOrderErrorCode _$gOrderErrorCodeINSUFFICIENT_STOCK =
    const GOrderErrorCode._('INSUFFICIENT_STOCK');
const GOrderErrorCode _$gOrderErrorCodeDUPLICATED_INPUT_ITEM =
    const GOrderErrorCode._('DUPLICATED_INPUT_ITEM');
const GOrderErrorCode _$gOrderErrorCodeNOT_AVAILABLE_IN_CHANNEL =
    const GOrderErrorCode._('NOT_AVAILABLE_IN_CHANNEL');
const GOrderErrorCode _$gOrderErrorCodeCHANNEL_INACTIVE =
    const GOrderErrorCode._('CHANNEL_INACTIVE');
const GOrderErrorCode
    _$gOrderErrorCodeMISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK =
    const GOrderErrorCode._('MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK');

GOrderErrorCode _$gOrderErrorCodeValueOf(String name) {
  switch (name) {
    case 'BILLING_ADDRESS_NOT_SET':
      return _$gOrderErrorCodeBILLING_ADDRESS_NOT_SET;
    case 'CANNOT_CANCEL_FULFILLMENT':
      return _$gOrderErrorCodeCANNOT_CANCEL_FULFILLMENT;
    case 'CANNOT_CANCEL_ORDER':
      return _$gOrderErrorCodeCANNOT_CANCEL_ORDER;
    case 'CANNOT_DELETE':
      return _$gOrderErrorCodeCANNOT_DELETE;
    case 'CANNOT_DISCOUNT':
      return _$gOrderErrorCodeCANNOT_DISCOUNT;
    case 'CANNOT_REFUND':
      return _$gOrderErrorCodeCANNOT_REFUND;
    case 'CANNOT_FULFILL_UNPAID_ORDER':
      return _$gOrderErrorCodeCANNOT_FULFILL_UNPAID_ORDER;
    case 'CAPTURE_INACTIVE_PAYMENT':
      return _$gOrderErrorCodeCAPTURE_INACTIVE_PAYMENT;
    case 'GIFT_CARD_LINE':
      return _$gOrderErrorCodeGIFT_CARD_LINE;
    case 'NOT_EDITABLE':
      return _$gOrderErrorCodeNOT_EDITABLE;
    case 'FULFILL_ORDER_LINE':
      return _$gOrderErrorCodeFULFILL_ORDER_LINE;
    case 'GRAPHQL_ERROR':
      return _$gOrderErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gOrderErrorCodeINVALID;
    case 'PRODUCT_NOT_PUBLISHED':
      return _$gOrderErrorCodePRODUCT_NOT_PUBLISHED;
    case 'PRODUCT_UNAVAILABLE_FOR_PURCHASE':
      return _$gOrderErrorCodePRODUCT_UNAVAILABLE_FOR_PURCHASE;
    case 'NOT_FOUND':
      return _$gOrderErrorCodeNOT_FOUND;
    case 'ORDER_NO_SHIPPING_ADDRESS':
      return _$gOrderErrorCodeORDER_NO_SHIPPING_ADDRESS;
    case 'PAYMENT_ERROR':
      return _$gOrderErrorCodePAYMENT_ERROR;
    case 'PAYMENT_MISSING':
      return _$gOrderErrorCodePAYMENT_MISSING;
    case 'REQUIRED':
      return _$gOrderErrorCodeREQUIRED;
    case 'SHIPPING_METHOD_NOT_APPLICABLE':
      return _$gOrderErrorCodeSHIPPING_METHOD_NOT_APPLICABLE;
    case 'SHIPPING_METHOD_REQUIRED':
      return _$gOrderErrorCodeSHIPPING_METHOD_REQUIRED;
    case 'TAX_ERROR':
      return _$gOrderErrorCodeTAX_ERROR;
    case 'UNIQUE':
      return _$gOrderErrorCodeUNIQUE;
    case 'VOID_INACTIVE_PAYMENT':
      return _$gOrderErrorCodeVOID_INACTIVE_PAYMENT;
    case 'ZERO_QUANTITY':
      return _$gOrderErrorCodeZERO_QUANTITY;
    case 'INVALID_QUANTITY':
      return _$gOrderErrorCodeINVALID_QUANTITY;
    case 'INSUFFICIENT_STOCK':
      return _$gOrderErrorCodeINSUFFICIENT_STOCK;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gOrderErrorCodeDUPLICATED_INPUT_ITEM;
    case 'NOT_AVAILABLE_IN_CHANNEL':
      return _$gOrderErrorCodeNOT_AVAILABLE_IN_CHANNEL;
    case 'CHANNEL_INACTIVE':
      return _$gOrderErrorCodeCHANNEL_INACTIVE;
    case 'MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK':
      return _$gOrderErrorCodeMISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderErrorCode> _$gOrderErrorCodeValues =
    new BuiltSet<GOrderErrorCode>(const <GOrderErrorCode>[
  _$gOrderErrorCodeBILLING_ADDRESS_NOT_SET,
  _$gOrderErrorCodeCANNOT_CANCEL_FULFILLMENT,
  _$gOrderErrorCodeCANNOT_CANCEL_ORDER,
  _$gOrderErrorCodeCANNOT_DELETE,
  _$gOrderErrorCodeCANNOT_DISCOUNT,
  _$gOrderErrorCodeCANNOT_REFUND,
  _$gOrderErrorCodeCANNOT_FULFILL_UNPAID_ORDER,
  _$gOrderErrorCodeCAPTURE_INACTIVE_PAYMENT,
  _$gOrderErrorCodeGIFT_CARD_LINE,
  _$gOrderErrorCodeNOT_EDITABLE,
  _$gOrderErrorCodeFULFILL_ORDER_LINE,
  _$gOrderErrorCodeGRAPHQL_ERROR,
  _$gOrderErrorCodeINVALID,
  _$gOrderErrorCodePRODUCT_NOT_PUBLISHED,
  _$gOrderErrorCodePRODUCT_UNAVAILABLE_FOR_PURCHASE,
  _$gOrderErrorCodeNOT_FOUND,
  _$gOrderErrorCodeORDER_NO_SHIPPING_ADDRESS,
  _$gOrderErrorCodePAYMENT_ERROR,
  _$gOrderErrorCodePAYMENT_MISSING,
  _$gOrderErrorCodeREQUIRED,
  _$gOrderErrorCodeSHIPPING_METHOD_NOT_APPLICABLE,
  _$gOrderErrorCodeSHIPPING_METHOD_REQUIRED,
  _$gOrderErrorCodeTAX_ERROR,
  _$gOrderErrorCodeUNIQUE,
  _$gOrderErrorCodeVOID_INACTIVE_PAYMENT,
  _$gOrderErrorCodeZERO_QUANTITY,
  _$gOrderErrorCodeINVALID_QUANTITY,
  _$gOrderErrorCodeINSUFFICIENT_STOCK,
  _$gOrderErrorCodeDUPLICATED_INPUT_ITEM,
  _$gOrderErrorCodeNOT_AVAILABLE_IN_CHANNEL,
  _$gOrderErrorCodeCHANNEL_INACTIVE,
  _$gOrderErrorCodeMISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK,
]);

const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumPAYMENT_CONFIRMATION =
    const GOrderEventsEmailsEnum._('PAYMENT_CONFIRMATION');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumCONFIRMED =
    const GOrderEventsEmailsEnum._('CONFIRMED');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumSHIPPING_CONFIRMATION =
    const GOrderEventsEmailsEnum._('SHIPPING_CONFIRMATION');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumTRACKING_UPDATED =
    const GOrderEventsEmailsEnum._('TRACKING_UPDATED');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumORDER_CONFIRMATION =
    const GOrderEventsEmailsEnum._('ORDER_CONFIRMATION');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumORDER_CANCEL =
    const GOrderEventsEmailsEnum._('ORDER_CANCEL');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumORDER_REFUND =
    const GOrderEventsEmailsEnum._('ORDER_REFUND');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumFULFILLMENT_CONFIRMATION =
    const GOrderEventsEmailsEnum._('FULFILLMENT_CONFIRMATION');
const GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumDIGITAL_LINKS =
    const GOrderEventsEmailsEnum._('DIGITAL_LINKS');

GOrderEventsEmailsEnum _$gOrderEventsEmailsEnumValueOf(String name) {
  switch (name) {
    case 'PAYMENT_CONFIRMATION':
      return _$gOrderEventsEmailsEnumPAYMENT_CONFIRMATION;
    case 'CONFIRMED':
      return _$gOrderEventsEmailsEnumCONFIRMED;
    case 'SHIPPING_CONFIRMATION':
      return _$gOrderEventsEmailsEnumSHIPPING_CONFIRMATION;
    case 'TRACKING_UPDATED':
      return _$gOrderEventsEmailsEnumTRACKING_UPDATED;
    case 'ORDER_CONFIRMATION':
      return _$gOrderEventsEmailsEnumORDER_CONFIRMATION;
    case 'ORDER_CANCEL':
      return _$gOrderEventsEmailsEnumORDER_CANCEL;
    case 'ORDER_REFUND':
      return _$gOrderEventsEmailsEnumORDER_REFUND;
    case 'FULFILLMENT_CONFIRMATION':
      return _$gOrderEventsEmailsEnumFULFILLMENT_CONFIRMATION;
    case 'DIGITAL_LINKS':
      return _$gOrderEventsEmailsEnumDIGITAL_LINKS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderEventsEmailsEnum> _$gOrderEventsEmailsEnumValues =
    new BuiltSet<GOrderEventsEmailsEnum>(const <GOrderEventsEmailsEnum>[
  _$gOrderEventsEmailsEnumPAYMENT_CONFIRMATION,
  _$gOrderEventsEmailsEnumCONFIRMED,
  _$gOrderEventsEmailsEnumSHIPPING_CONFIRMATION,
  _$gOrderEventsEmailsEnumTRACKING_UPDATED,
  _$gOrderEventsEmailsEnumORDER_CONFIRMATION,
  _$gOrderEventsEmailsEnumORDER_CANCEL,
  _$gOrderEventsEmailsEnumORDER_REFUND,
  _$gOrderEventsEmailsEnumFULFILLMENT_CONFIRMATION,
  _$gOrderEventsEmailsEnumDIGITAL_LINKS,
]);

const GOrderEventsEnum _$gOrderEventsEnumDRAFT_CREATED =
    const GOrderEventsEnum._('DRAFT_CREATED');
const GOrderEventsEnum _$gOrderEventsEnumDRAFT_CREATED_FROM_REPLACE =
    const GOrderEventsEnum._('DRAFT_CREATED_FROM_REPLACE');
const GOrderEventsEnum _$gOrderEventsEnumADDED_PRODUCTS =
    const GOrderEventsEnum._('ADDED_PRODUCTS');
const GOrderEventsEnum _$gOrderEventsEnumREMOVED_PRODUCTS =
    const GOrderEventsEnum._('REMOVED_PRODUCTS');
const GOrderEventsEnum _$gOrderEventsEnumPLACED =
    const GOrderEventsEnum._('PLACED');
const GOrderEventsEnum _$gOrderEventsEnumPLACED_FROM_DRAFT =
    const GOrderEventsEnum._('PLACED_FROM_DRAFT');
const GOrderEventsEnum _$gOrderEventsEnumOVERSOLD_ITEMS =
    const GOrderEventsEnum._('OVERSOLD_ITEMS');
const GOrderEventsEnum _$gOrderEventsEnumCANCELED =
    const GOrderEventsEnum._('CANCELED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_MARKED_AS_PAID =
    const GOrderEventsEnum._('ORDER_MARKED_AS_PAID');
const GOrderEventsEnum _$gOrderEventsEnumORDER_FULLY_PAID =
    const GOrderEventsEnum._('ORDER_FULLY_PAID');
const GOrderEventsEnum _$gOrderEventsEnumORDER_REPLACEMENT_CREATED =
    const GOrderEventsEnum._('ORDER_REPLACEMENT_CREATED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_DISCOUNT_ADDED =
    const GOrderEventsEnum._('ORDER_DISCOUNT_ADDED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_DISCOUNT_AUTOMATICALLY_UPDATED =
    const GOrderEventsEnum._('ORDER_DISCOUNT_AUTOMATICALLY_UPDATED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_DISCOUNT_UPDATED =
    const GOrderEventsEnum._('ORDER_DISCOUNT_UPDATED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_DISCOUNT_DELETED =
    const GOrderEventsEnum._('ORDER_DISCOUNT_DELETED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_LINE_DISCOUNT_UPDATED =
    const GOrderEventsEnum._('ORDER_LINE_DISCOUNT_UPDATED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_LINE_DISCOUNT_REMOVED =
    const GOrderEventsEnum._('ORDER_LINE_DISCOUNT_REMOVED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_LINE_PRODUCT_DELETED =
    const GOrderEventsEnum._('ORDER_LINE_PRODUCT_DELETED');
const GOrderEventsEnum _$gOrderEventsEnumORDER_LINE_VARIANT_DELETED =
    const GOrderEventsEnum._('ORDER_LINE_VARIANT_DELETED');
const GOrderEventsEnum _$gOrderEventsEnumUPDATED_ADDRESS =
    const GOrderEventsEnum._('UPDATED_ADDRESS');
const GOrderEventsEnum _$gOrderEventsEnumEMAIL_SENT =
    const GOrderEventsEnum._('EMAIL_SENT');
const GOrderEventsEnum _$gOrderEventsEnumCONFIRMED =
    const GOrderEventsEnum._('CONFIRMED');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_AUTHORIZED =
    const GOrderEventsEnum._('PAYMENT_AUTHORIZED');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_CAPTURED =
    const GOrderEventsEnum._('PAYMENT_CAPTURED');
const GOrderEventsEnum _$gOrderEventsEnumEXTERNAL_SERVICE_NOTIFICATION =
    const GOrderEventsEnum._('EXTERNAL_SERVICE_NOTIFICATION');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_REFUNDED =
    const GOrderEventsEnum._('PAYMENT_REFUNDED');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_VOIDED =
    const GOrderEventsEnum._('PAYMENT_VOIDED');
const GOrderEventsEnum _$gOrderEventsEnumPAYMENT_FAILED =
    const GOrderEventsEnum._('PAYMENT_FAILED');
const GOrderEventsEnum _$gOrderEventsEnumTRANSACTION_EVENT =
    const GOrderEventsEnum._('TRANSACTION_EVENT');
const GOrderEventsEnum _$gOrderEventsEnumTRANSACTION_CAPTURE_REQUESTED =
    const GOrderEventsEnum._('TRANSACTION_CAPTURE_REQUESTED');
const GOrderEventsEnum _$gOrderEventsEnumTRANSACTION_REFUND_REQUESTED =
    const GOrderEventsEnum._('TRANSACTION_REFUND_REQUESTED');
const GOrderEventsEnum _$gOrderEventsEnumTRANSACTION_VOID_REQUESTED =
    const GOrderEventsEnum._('TRANSACTION_VOID_REQUESTED');
const GOrderEventsEnum _$gOrderEventsEnumINVOICE_REQUESTED =
    const GOrderEventsEnum._('INVOICE_REQUESTED');
const GOrderEventsEnum _$gOrderEventsEnumINVOICE_GENERATED =
    const GOrderEventsEnum._('INVOICE_GENERATED');
const GOrderEventsEnum _$gOrderEventsEnumINVOICE_UPDATED =
    const GOrderEventsEnum._('INVOICE_UPDATED');
const GOrderEventsEnum _$gOrderEventsEnumINVOICE_SENT =
    const GOrderEventsEnum._('INVOICE_SENT');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_CANCELED =
    const GOrderEventsEnum._('FULFILLMENT_CANCELED');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_RESTOCKED_ITEMS =
    const GOrderEventsEnum._('FULFILLMENT_RESTOCKED_ITEMS');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_FULFILLED_ITEMS =
    const GOrderEventsEnum._('FULFILLMENT_FULFILLED_ITEMS');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_REFUNDED =
    const GOrderEventsEnum._('FULFILLMENT_REFUNDED');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_RETURNED =
    const GOrderEventsEnum._('FULFILLMENT_RETURNED');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_REPLACED =
    const GOrderEventsEnum._('FULFILLMENT_REPLACED');
const GOrderEventsEnum _$gOrderEventsEnumFULFILLMENT_AWAITS_APPROVAL =
    const GOrderEventsEnum._('FULFILLMENT_AWAITS_APPROVAL');
const GOrderEventsEnum _$gOrderEventsEnumTRACKING_UPDATED =
    const GOrderEventsEnum._('TRACKING_UPDATED');
const GOrderEventsEnum _$gOrderEventsEnumNOTE_ADDED =
    const GOrderEventsEnum._('NOTE_ADDED');
const GOrderEventsEnum _$gOrderEventsEnumOTHER =
    const GOrderEventsEnum._('OTHER');

GOrderEventsEnum _$gOrderEventsEnumValueOf(String name) {
  switch (name) {
    case 'DRAFT_CREATED':
      return _$gOrderEventsEnumDRAFT_CREATED;
    case 'DRAFT_CREATED_FROM_REPLACE':
      return _$gOrderEventsEnumDRAFT_CREATED_FROM_REPLACE;
    case 'ADDED_PRODUCTS':
      return _$gOrderEventsEnumADDED_PRODUCTS;
    case 'REMOVED_PRODUCTS':
      return _$gOrderEventsEnumREMOVED_PRODUCTS;
    case 'PLACED':
      return _$gOrderEventsEnumPLACED;
    case 'PLACED_FROM_DRAFT':
      return _$gOrderEventsEnumPLACED_FROM_DRAFT;
    case 'OVERSOLD_ITEMS':
      return _$gOrderEventsEnumOVERSOLD_ITEMS;
    case 'CANCELED':
      return _$gOrderEventsEnumCANCELED;
    case 'ORDER_MARKED_AS_PAID':
      return _$gOrderEventsEnumORDER_MARKED_AS_PAID;
    case 'ORDER_FULLY_PAID':
      return _$gOrderEventsEnumORDER_FULLY_PAID;
    case 'ORDER_REPLACEMENT_CREATED':
      return _$gOrderEventsEnumORDER_REPLACEMENT_CREATED;
    case 'ORDER_DISCOUNT_ADDED':
      return _$gOrderEventsEnumORDER_DISCOUNT_ADDED;
    case 'ORDER_DISCOUNT_AUTOMATICALLY_UPDATED':
      return _$gOrderEventsEnumORDER_DISCOUNT_AUTOMATICALLY_UPDATED;
    case 'ORDER_DISCOUNT_UPDATED':
      return _$gOrderEventsEnumORDER_DISCOUNT_UPDATED;
    case 'ORDER_DISCOUNT_DELETED':
      return _$gOrderEventsEnumORDER_DISCOUNT_DELETED;
    case 'ORDER_LINE_DISCOUNT_UPDATED':
      return _$gOrderEventsEnumORDER_LINE_DISCOUNT_UPDATED;
    case 'ORDER_LINE_DISCOUNT_REMOVED':
      return _$gOrderEventsEnumORDER_LINE_DISCOUNT_REMOVED;
    case 'ORDER_LINE_PRODUCT_DELETED':
      return _$gOrderEventsEnumORDER_LINE_PRODUCT_DELETED;
    case 'ORDER_LINE_VARIANT_DELETED':
      return _$gOrderEventsEnumORDER_LINE_VARIANT_DELETED;
    case 'UPDATED_ADDRESS':
      return _$gOrderEventsEnumUPDATED_ADDRESS;
    case 'EMAIL_SENT':
      return _$gOrderEventsEnumEMAIL_SENT;
    case 'CONFIRMED':
      return _$gOrderEventsEnumCONFIRMED;
    case 'PAYMENT_AUTHORIZED':
      return _$gOrderEventsEnumPAYMENT_AUTHORIZED;
    case 'PAYMENT_CAPTURED':
      return _$gOrderEventsEnumPAYMENT_CAPTURED;
    case 'EXTERNAL_SERVICE_NOTIFICATION':
      return _$gOrderEventsEnumEXTERNAL_SERVICE_NOTIFICATION;
    case 'PAYMENT_REFUNDED':
      return _$gOrderEventsEnumPAYMENT_REFUNDED;
    case 'PAYMENT_VOIDED':
      return _$gOrderEventsEnumPAYMENT_VOIDED;
    case 'PAYMENT_FAILED':
      return _$gOrderEventsEnumPAYMENT_FAILED;
    case 'TRANSACTION_EVENT':
      return _$gOrderEventsEnumTRANSACTION_EVENT;
    case 'TRANSACTION_CAPTURE_REQUESTED':
      return _$gOrderEventsEnumTRANSACTION_CAPTURE_REQUESTED;
    case 'TRANSACTION_REFUND_REQUESTED':
      return _$gOrderEventsEnumTRANSACTION_REFUND_REQUESTED;
    case 'TRANSACTION_VOID_REQUESTED':
      return _$gOrderEventsEnumTRANSACTION_VOID_REQUESTED;
    case 'INVOICE_REQUESTED':
      return _$gOrderEventsEnumINVOICE_REQUESTED;
    case 'INVOICE_GENERATED':
      return _$gOrderEventsEnumINVOICE_GENERATED;
    case 'INVOICE_UPDATED':
      return _$gOrderEventsEnumINVOICE_UPDATED;
    case 'INVOICE_SENT':
      return _$gOrderEventsEnumINVOICE_SENT;
    case 'FULFILLMENT_CANCELED':
      return _$gOrderEventsEnumFULFILLMENT_CANCELED;
    case 'FULFILLMENT_RESTOCKED_ITEMS':
      return _$gOrderEventsEnumFULFILLMENT_RESTOCKED_ITEMS;
    case 'FULFILLMENT_FULFILLED_ITEMS':
      return _$gOrderEventsEnumFULFILLMENT_FULFILLED_ITEMS;
    case 'FULFILLMENT_REFUNDED':
      return _$gOrderEventsEnumFULFILLMENT_REFUNDED;
    case 'FULFILLMENT_RETURNED':
      return _$gOrderEventsEnumFULFILLMENT_RETURNED;
    case 'FULFILLMENT_REPLACED':
      return _$gOrderEventsEnumFULFILLMENT_REPLACED;
    case 'FULFILLMENT_AWAITS_APPROVAL':
      return _$gOrderEventsEnumFULFILLMENT_AWAITS_APPROVAL;
    case 'TRACKING_UPDATED':
      return _$gOrderEventsEnumTRACKING_UPDATED;
    case 'NOTE_ADDED':
      return _$gOrderEventsEnumNOTE_ADDED;
    case 'OTHER':
      return _$gOrderEventsEnumOTHER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderEventsEnum> _$gOrderEventsEnumValues =
    new BuiltSet<GOrderEventsEnum>(const <GOrderEventsEnum>[
  _$gOrderEventsEnumDRAFT_CREATED,
  _$gOrderEventsEnumDRAFT_CREATED_FROM_REPLACE,
  _$gOrderEventsEnumADDED_PRODUCTS,
  _$gOrderEventsEnumREMOVED_PRODUCTS,
  _$gOrderEventsEnumPLACED,
  _$gOrderEventsEnumPLACED_FROM_DRAFT,
  _$gOrderEventsEnumOVERSOLD_ITEMS,
  _$gOrderEventsEnumCANCELED,
  _$gOrderEventsEnumORDER_MARKED_AS_PAID,
  _$gOrderEventsEnumORDER_FULLY_PAID,
  _$gOrderEventsEnumORDER_REPLACEMENT_CREATED,
  _$gOrderEventsEnumORDER_DISCOUNT_ADDED,
  _$gOrderEventsEnumORDER_DISCOUNT_AUTOMATICALLY_UPDATED,
  _$gOrderEventsEnumORDER_DISCOUNT_UPDATED,
  _$gOrderEventsEnumORDER_DISCOUNT_DELETED,
  _$gOrderEventsEnumORDER_LINE_DISCOUNT_UPDATED,
  _$gOrderEventsEnumORDER_LINE_DISCOUNT_REMOVED,
  _$gOrderEventsEnumORDER_LINE_PRODUCT_DELETED,
  _$gOrderEventsEnumORDER_LINE_VARIANT_DELETED,
  _$gOrderEventsEnumUPDATED_ADDRESS,
  _$gOrderEventsEnumEMAIL_SENT,
  _$gOrderEventsEnumCONFIRMED,
  _$gOrderEventsEnumPAYMENT_AUTHORIZED,
  _$gOrderEventsEnumPAYMENT_CAPTURED,
  _$gOrderEventsEnumEXTERNAL_SERVICE_NOTIFICATION,
  _$gOrderEventsEnumPAYMENT_REFUNDED,
  _$gOrderEventsEnumPAYMENT_VOIDED,
  _$gOrderEventsEnumPAYMENT_FAILED,
  _$gOrderEventsEnumTRANSACTION_EVENT,
  _$gOrderEventsEnumTRANSACTION_CAPTURE_REQUESTED,
  _$gOrderEventsEnumTRANSACTION_REFUND_REQUESTED,
  _$gOrderEventsEnumTRANSACTION_VOID_REQUESTED,
  _$gOrderEventsEnumINVOICE_REQUESTED,
  _$gOrderEventsEnumINVOICE_GENERATED,
  _$gOrderEventsEnumINVOICE_UPDATED,
  _$gOrderEventsEnumINVOICE_SENT,
  _$gOrderEventsEnumFULFILLMENT_CANCELED,
  _$gOrderEventsEnumFULFILLMENT_RESTOCKED_ITEMS,
  _$gOrderEventsEnumFULFILLMENT_FULFILLED_ITEMS,
  _$gOrderEventsEnumFULFILLMENT_REFUNDED,
  _$gOrderEventsEnumFULFILLMENT_RETURNED,
  _$gOrderEventsEnumFULFILLMENT_REPLACED,
  _$gOrderEventsEnumFULFILLMENT_AWAITS_APPROVAL,
  _$gOrderEventsEnumTRACKING_UPDATED,
  _$gOrderEventsEnumNOTE_ADDED,
  _$gOrderEventsEnumOTHER,
]);

const GOrderOriginEnum _$gOrderOriginEnumCHECKOUT =
    const GOrderOriginEnum._('CHECKOUT');
const GOrderOriginEnum _$gOrderOriginEnumDRAFT =
    const GOrderOriginEnum._('DRAFT');
const GOrderOriginEnum _$gOrderOriginEnumREISSUE =
    const GOrderOriginEnum._('REISSUE');

GOrderOriginEnum _$gOrderOriginEnumValueOf(String name) {
  switch (name) {
    case 'CHECKOUT':
      return _$gOrderOriginEnumCHECKOUT;
    case 'DRAFT':
      return _$gOrderOriginEnumDRAFT;
    case 'REISSUE':
      return _$gOrderOriginEnumREISSUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderOriginEnum> _$gOrderOriginEnumValues =
    new BuiltSet<GOrderOriginEnum>(const <GOrderOriginEnum>[
  _$gOrderOriginEnumCHECKOUT,
  _$gOrderOriginEnumDRAFT,
  _$gOrderOriginEnumREISSUE,
]);

const GOrderSettingsErrorCode _$gOrderSettingsErrorCodeINVALID =
    const GOrderSettingsErrorCode._('INVALID');

GOrderSettingsErrorCode _$gOrderSettingsErrorCodeValueOf(String name) {
  switch (name) {
    case 'INVALID':
      return _$gOrderSettingsErrorCodeINVALID;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderSettingsErrorCode> _$gOrderSettingsErrorCodeValues =
    new BuiltSet<GOrderSettingsErrorCode>(const <GOrderSettingsErrorCode>[
  _$gOrderSettingsErrorCodeINVALID,
]);

const GOrderSortField _$gOrderSortFieldNUMBER =
    const GOrderSortField._('NUMBER');
const GOrderSortField _$gOrderSortFieldRANK = const GOrderSortField._('RANK');
const GOrderSortField _$gOrderSortFieldCREATION_DATE =
    const GOrderSortField._('CREATION_DATE');
const GOrderSortField _$gOrderSortFieldCREATED_AT =
    const GOrderSortField._('CREATED_AT');
const GOrderSortField _$gOrderSortFieldLAST_MODIFIED_AT =
    const GOrderSortField._('LAST_MODIFIED_AT');
const GOrderSortField _$gOrderSortFieldCUSTOMER =
    const GOrderSortField._('CUSTOMER');
const GOrderSortField _$gOrderSortFieldPAYMENT =
    const GOrderSortField._('PAYMENT');
const GOrderSortField _$gOrderSortFieldFULFILLMENT_STATUS =
    const GOrderSortField._('FULFILLMENT_STATUS');

GOrderSortField _$gOrderSortFieldValueOf(String name) {
  switch (name) {
    case 'NUMBER':
      return _$gOrderSortFieldNUMBER;
    case 'RANK':
      return _$gOrderSortFieldRANK;
    case 'CREATION_DATE':
      return _$gOrderSortFieldCREATION_DATE;
    case 'CREATED_AT':
      return _$gOrderSortFieldCREATED_AT;
    case 'LAST_MODIFIED_AT':
      return _$gOrderSortFieldLAST_MODIFIED_AT;
    case 'CUSTOMER':
      return _$gOrderSortFieldCUSTOMER;
    case 'PAYMENT':
      return _$gOrderSortFieldPAYMENT;
    case 'FULFILLMENT_STATUS':
      return _$gOrderSortFieldFULFILLMENT_STATUS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderSortField> _$gOrderSortFieldValues =
    new BuiltSet<GOrderSortField>(const <GOrderSortField>[
  _$gOrderSortFieldNUMBER,
  _$gOrderSortFieldRANK,
  _$gOrderSortFieldCREATION_DATE,
  _$gOrderSortFieldCREATED_AT,
  _$gOrderSortFieldLAST_MODIFIED_AT,
  _$gOrderSortFieldCUSTOMER,
  _$gOrderSortFieldPAYMENT,
  _$gOrderSortFieldFULFILLMENT_STATUS,
]);

const GOrderStatus _$gOrderStatusDRAFT = const GOrderStatus._('DRAFT');
const GOrderStatus _$gOrderStatusUNCONFIRMED =
    const GOrderStatus._('UNCONFIRMED');
const GOrderStatus _$gOrderStatusUNFULFILLED =
    const GOrderStatus._('UNFULFILLED');
const GOrderStatus _$gOrderStatusPARTIALLY_FULFILLED =
    const GOrderStatus._('PARTIALLY_FULFILLED');
const GOrderStatus _$gOrderStatusPARTIALLY_RETURNED =
    const GOrderStatus._('PARTIALLY_RETURNED');
const GOrderStatus _$gOrderStatusRETURNED = const GOrderStatus._('RETURNED');
const GOrderStatus _$gOrderStatusFULFILLED = const GOrderStatus._('FULFILLED');
const GOrderStatus _$gOrderStatusCANCELED = const GOrderStatus._('CANCELED');

GOrderStatus _$gOrderStatusValueOf(String name) {
  switch (name) {
    case 'DRAFT':
      return _$gOrderStatusDRAFT;
    case 'UNCONFIRMED':
      return _$gOrderStatusUNCONFIRMED;
    case 'UNFULFILLED':
      return _$gOrderStatusUNFULFILLED;
    case 'PARTIALLY_FULFILLED':
      return _$gOrderStatusPARTIALLY_FULFILLED;
    case 'PARTIALLY_RETURNED':
      return _$gOrderStatusPARTIALLY_RETURNED;
    case 'RETURNED':
      return _$gOrderStatusRETURNED;
    case 'FULFILLED':
      return _$gOrderStatusFULFILLED;
    case 'CANCELED':
      return _$gOrderStatusCANCELED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderStatus> _$gOrderStatusValues =
    new BuiltSet<GOrderStatus>(const <GOrderStatus>[
  _$gOrderStatusDRAFT,
  _$gOrderStatusUNCONFIRMED,
  _$gOrderStatusUNFULFILLED,
  _$gOrderStatusPARTIALLY_FULFILLED,
  _$gOrderStatusPARTIALLY_RETURNED,
  _$gOrderStatusRETURNED,
  _$gOrderStatusFULFILLED,
  _$gOrderStatusCANCELED,
]);

const GOrderStatusFilter _$gOrderStatusFilterREADY_TO_FULFILL =
    const GOrderStatusFilter._('READY_TO_FULFILL');
const GOrderStatusFilter _$gOrderStatusFilterREADY_TO_CAPTURE =
    const GOrderStatusFilter._('READY_TO_CAPTURE');
const GOrderStatusFilter _$gOrderStatusFilterUNFULFILLED =
    const GOrderStatusFilter._('UNFULFILLED');
const GOrderStatusFilter _$gOrderStatusFilterUNCONFIRMED =
    const GOrderStatusFilter._('UNCONFIRMED');
const GOrderStatusFilter _$gOrderStatusFilterPARTIALLY_FULFILLED =
    const GOrderStatusFilter._('PARTIALLY_FULFILLED');
const GOrderStatusFilter _$gOrderStatusFilterFULFILLED =
    const GOrderStatusFilter._('FULFILLED');
const GOrderStatusFilter _$gOrderStatusFilterCANCELED =
    const GOrderStatusFilter._('CANCELED');

GOrderStatusFilter _$gOrderStatusFilterValueOf(String name) {
  switch (name) {
    case 'READY_TO_FULFILL':
      return _$gOrderStatusFilterREADY_TO_FULFILL;
    case 'READY_TO_CAPTURE':
      return _$gOrderStatusFilterREADY_TO_CAPTURE;
    case 'UNFULFILLED':
      return _$gOrderStatusFilterUNFULFILLED;
    case 'UNCONFIRMED':
      return _$gOrderStatusFilterUNCONFIRMED;
    case 'PARTIALLY_FULFILLED':
      return _$gOrderStatusFilterPARTIALLY_FULFILLED;
    case 'FULFILLED':
      return _$gOrderStatusFilterFULFILLED;
    case 'CANCELED':
      return _$gOrderStatusFilterCANCELED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GOrderStatusFilter> _$gOrderStatusFilterValues =
    new BuiltSet<GOrderStatusFilter>(const <GOrderStatusFilter>[
  _$gOrderStatusFilterREADY_TO_FULFILL,
  _$gOrderStatusFilterREADY_TO_CAPTURE,
  _$gOrderStatusFilterUNFULFILLED,
  _$gOrderStatusFilterUNCONFIRMED,
  _$gOrderStatusFilterPARTIALLY_FULFILLED,
  _$gOrderStatusFilterFULFILLED,
  _$gOrderStatusFilterCANCELED,
]);

const GPageErrorCode _$gPageErrorCodeGRAPHQL_ERROR =
    const GPageErrorCode._('GRAPHQL_ERROR');
const GPageErrorCode _$gPageErrorCodeINVALID =
    const GPageErrorCode._('INVALID');
const GPageErrorCode _$gPageErrorCodeNOT_FOUND =
    const GPageErrorCode._('NOT_FOUND');
const GPageErrorCode _$gPageErrorCodeREQUIRED =
    const GPageErrorCode._('REQUIRED');
const GPageErrorCode _$gPageErrorCodeUNIQUE = const GPageErrorCode._('UNIQUE');
const GPageErrorCode _$gPageErrorCodeDUPLICATED_INPUT_ITEM =
    const GPageErrorCode._('DUPLICATED_INPUT_ITEM');
const GPageErrorCode _$gPageErrorCodeATTRIBUTE_ALREADY_ASSIGNED =
    const GPageErrorCode._('ATTRIBUTE_ALREADY_ASSIGNED');

GPageErrorCode _$gPageErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gPageErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gPageErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gPageErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gPageErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gPageErrorCodeUNIQUE;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gPageErrorCodeDUPLICATED_INPUT_ITEM;
    case 'ATTRIBUTE_ALREADY_ASSIGNED':
      return _$gPageErrorCodeATTRIBUTE_ALREADY_ASSIGNED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPageErrorCode> _$gPageErrorCodeValues =
    new BuiltSet<GPageErrorCode>(const <GPageErrorCode>[
  _$gPageErrorCodeGRAPHQL_ERROR,
  _$gPageErrorCodeINVALID,
  _$gPageErrorCodeNOT_FOUND,
  _$gPageErrorCodeREQUIRED,
  _$gPageErrorCodeUNIQUE,
  _$gPageErrorCodeDUPLICATED_INPUT_ITEM,
  _$gPageErrorCodeATTRIBUTE_ALREADY_ASSIGNED,
]);

const GPageSortField _$gPageSortFieldTITLE = const GPageSortField._('TITLE');
const GPageSortField _$gPageSortFieldSLUG = const GPageSortField._('SLUG');
const GPageSortField _$gPageSortFieldVISIBILITY =
    const GPageSortField._('VISIBILITY');
const GPageSortField _$gPageSortFieldCREATION_DATE =
    const GPageSortField._('CREATION_DATE');
const GPageSortField _$gPageSortFieldPUBLICATION_DATE =
    const GPageSortField._('PUBLICATION_DATE');
const GPageSortField _$gPageSortFieldPUBLISHED_AT =
    const GPageSortField._('PUBLISHED_AT');
const GPageSortField _$gPageSortFieldCREATED_AT =
    const GPageSortField._('CREATED_AT');

GPageSortField _$gPageSortFieldValueOf(String name) {
  switch (name) {
    case 'TITLE':
      return _$gPageSortFieldTITLE;
    case 'SLUG':
      return _$gPageSortFieldSLUG;
    case 'VISIBILITY':
      return _$gPageSortFieldVISIBILITY;
    case 'CREATION_DATE':
      return _$gPageSortFieldCREATION_DATE;
    case 'PUBLICATION_DATE':
      return _$gPageSortFieldPUBLICATION_DATE;
    case 'PUBLISHED_AT':
      return _$gPageSortFieldPUBLISHED_AT;
    case 'CREATED_AT':
      return _$gPageSortFieldCREATED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPageSortField> _$gPageSortFieldValues =
    new BuiltSet<GPageSortField>(const <GPageSortField>[
  _$gPageSortFieldTITLE,
  _$gPageSortFieldSLUG,
  _$gPageSortFieldVISIBILITY,
  _$gPageSortFieldCREATION_DATE,
  _$gPageSortFieldPUBLICATION_DATE,
  _$gPageSortFieldPUBLISHED_AT,
  _$gPageSortFieldCREATED_AT,
]);

const GPageTypeSortField _$gPageTypeSortFieldNAME =
    const GPageTypeSortField._('NAME');
const GPageTypeSortField _$gPageTypeSortFieldSLUG =
    const GPageTypeSortField._('SLUG');

GPageTypeSortField _$gPageTypeSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gPageTypeSortFieldNAME;
    case 'SLUG':
      return _$gPageTypeSortFieldSLUG;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPageTypeSortField> _$gPageTypeSortFieldValues =
    new BuiltSet<GPageTypeSortField>(const <GPageTypeSortField>[
  _$gPageTypeSortFieldNAME,
  _$gPageTypeSortFieldSLUG,
]);

const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumNOT_CHARGED =
    const GPaymentChargeStatusEnum._('NOT_CHARGED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumPENDING =
    const GPaymentChargeStatusEnum._('PENDING');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumPARTIALLY_CHARGED =
    const GPaymentChargeStatusEnum._('PARTIALLY_CHARGED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumFULLY_CHARGED =
    const GPaymentChargeStatusEnum._('FULLY_CHARGED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumPARTIALLY_REFUNDED =
    const GPaymentChargeStatusEnum._('PARTIALLY_REFUNDED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumFULLY_REFUNDED =
    const GPaymentChargeStatusEnum._('FULLY_REFUNDED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumREFUSED =
    const GPaymentChargeStatusEnum._('REFUSED');
const GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumCANCELLED =
    const GPaymentChargeStatusEnum._('CANCELLED');

GPaymentChargeStatusEnum _$gPaymentChargeStatusEnumValueOf(String name) {
  switch (name) {
    case 'NOT_CHARGED':
      return _$gPaymentChargeStatusEnumNOT_CHARGED;
    case 'PENDING':
      return _$gPaymentChargeStatusEnumPENDING;
    case 'PARTIALLY_CHARGED':
      return _$gPaymentChargeStatusEnumPARTIALLY_CHARGED;
    case 'FULLY_CHARGED':
      return _$gPaymentChargeStatusEnumFULLY_CHARGED;
    case 'PARTIALLY_REFUNDED':
      return _$gPaymentChargeStatusEnumPARTIALLY_REFUNDED;
    case 'FULLY_REFUNDED':
      return _$gPaymentChargeStatusEnumFULLY_REFUNDED;
    case 'REFUSED':
      return _$gPaymentChargeStatusEnumREFUSED;
    case 'CANCELLED':
      return _$gPaymentChargeStatusEnumCANCELLED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPaymentChargeStatusEnum> _$gPaymentChargeStatusEnumValues =
    new BuiltSet<GPaymentChargeStatusEnum>(const <GPaymentChargeStatusEnum>[
  _$gPaymentChargeStatusEnumNOT_CHARGED,
  _$gPaymentChargeStatusEnumPENDING,
  _$gPaymentChargeStatusEnumPARTIALLY_CHARGED,
  _$gPaymentChargeStatusEnumFULLY_CHARGED,
  _$gPaymentChargeStatusEnumPARTIALLY_REFUNDED,
  _$gPaymentChargeStatusEnumFULLY_REFUNDED,
  _$gPaymentChargeStatusEnumREFUSED,
  _$gPaymentChargeStatusEnumCANCELLED,
]);

const GPaymentErrorCode _$gPaymentErrorCodeBILLING_ADDRESS_NOT_SET =
    const GPaymentErrorCode._('BILLING_ADDRESS_NOT_SET');
const GPaymentErrorCode _$gPaymentErrorCodeGRAPHQL_ERROR =
    const GPaymentErrorCode._('GRAPHQL_ERROR');
const GPaymentErrorCode _$gPaymentErrorCodeINVALID =
    const GPaymentErrorCode._('INVALID');
const GPaymentErrorCode _$gPaymentErrorCodeNOT_FOUND =
    const GPaymentErrorCode._('NOT_FOUND');
const GPaymentErrorCode _$gPaymentErrorCodeREQUIRED =
    const GPaymentErrorCode._('REQUIRED');
const GPaymentErrorCode _$gPaymentErrorCodeUNIQUE =
    const GPaymentErrorCode._('UNIQUE');
const GPaymentErrorCode _$gPaymentErrorCodePARTIAL_PAYMENT_NOT_ALLOWED =
    const GPaymentErrorCode._('PARTIAL_PAYMENT_NOT_ALLOWED');
const GPaymentErrorCode _$gPaymentErrorCodeSHIPPING_ADDRESS_NOT_SET =
    const GPaymentErrorCode._('SHIPPING_ADDRESS_NOT_SET');
const GPaymentErrorCode _$gPaymentErrorCodeINVALID_SHIPPING_METHOD =
    const GPaymentErrorCode._('INVALID_SHIPPING_METHOD');
const GPaymentErrorCode _$gPaymentErrorCodeSHIPPING_METHOD_NOT_SET =
    const GPaymentErrorCode._('SHIPPING_METHOD_NOT_SET');
const GPaymentErrorCode _$gPaymentErrorCodePAYMENT_ERROR =
    const GPaymentErrorCode._('PAYMENT_ERROR');
const GPaymentErrorCode _$gPaymentErrorCodeNOT_SUPPORTED_GATEWAY =
    const GPaymentErrorCode._('NOT_SUPPORTED_GATEWAY');
const GPaymentErrorCode _$gPaymentErrorCodeCHANNEL_INACTIVE =
    const GPaymentErrorCode._('CHANNEL_INACTIVE');
const GPaymentErrorCode _$gPaymentErrorCodeBALANCE_CHECK_ERROR =
    const GPaymentErrorCode._('BALANCE_CHECK_ERROR');
const GPaymentErrorCode _$gPaymentErrorCodeCHECKOUT_EMAIL_NOT_SET =
    const GPaymentErrorCode._('CHECKOUT_EMAIL_NOT_SET');
const GPaymentErrorCode _$gPaymentErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL =
    const GPaymentErrorCode._('UNAVAILABLE_VARIANT_IN_CHANNEL');
const GPaymentErrorCode _$gPaymentErrorCodeNO_CHECKOUT_LINES =
    const GPaymentErrorCode._('NO_CHECKOUT_LINES');

GPaymentErrorCode _$gPaymentErrorCodeValueOf(String name) {
  switch (name) {
    case 'BILLING_ADDRESS_NOT_SET':
      return _$gPaymentErrorCodeBILLING_ADDRESS_NOT_SET;
    case 'GRAPHQL_ERROR':
      return _$gPaymentErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gPaymentErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gPaymentErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gPaymentErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gPaymentErrorCodeUNIQUE;
    case 'PARTIAL_PAYMENT_NOT_ALLOWED':
      return _$gPaymentErrorCodePARTIAL_PAYMENT_NOT_ALLOWED;
    case 'SHIPPING_ADDRESS_NOT_SET':
      return _$gPaymentErrorCodeSHIPPING_ADDRESS_NOT_SET;
    case 'INVALID_SHIPPING_METHOD':
      return _$gPaymentErrorCodeINVALID_SHIPPING_METHOD;
    case 'SHIPPING_METHOD_NOT_SET':
      return _$gPaymentErrorCodeSHIPPING_METHOD_NOT_SET;
    case 'PAYMENT_ERROR':
      return _$gPaymentErrorCodePAYMENT_ERROR;
    case 'NOT_SUPPORTED_GATEWAY':
      return _$gPaymentErrorCodeNOT_SUPPORTED_GATEWAY;
    case 'CHANNEL_INACTIVE':
      return _$gPaymentErrorCodeCHANNEL_INACTIVE;
    case 'BALANCE_CHECK_ERROR':
      return _$gPaymentErrorCodeBALANCE_CHECK_ERROR;
    case 'CHECKOUT_EMAIL_NOT_SET':
      return _$gPaymentErrorCodeCHECKOUT_EMAIL_NOT_SET;
    case 'UNAVAILABLE_VARIANT_IN_CHANNEL':
      return _$gPaymentErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL;
    case 'NO_CHECKOUT_LINES':
      return _$gPaymentErrorCodeNO_CHECKOUT_LINES;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPaymentErrorCode> _$gPaymentErrorCodeValues =
    new BuiltSet<GPaymentErrorCode>(const <GPaymentErrorCode>[
  _$gPaymentErrorCodeBILLING_ADDRESS_NOT_SET,
  _$gPaymentErrorCodeGRAPHQL_ERROR,
  _$gPaymentErrorCodeINVALID,
  _$gPaymentErrorCodeNOT_FOUND,
  _$gPaymentErrorCodeREQUIRED,
  _$gPaymentErrorCodeUNIQUE,
  _$gPaymentErrorCodePARTIAL_PAYMENT_NOT_ALLOWED,
  _$gPaymentErrorCodeSHIPPING_ADDRESS_NOT_SET,
  _$gPaymentErrorCodeINVALID_SHIPPING_METHOD,
  _$gPaymentErrorCodeSHIPPING_METHOD_NOT_SET,
  _$gPaymentErrorCodePAYMENT_ERROR,
  _$gPaymentErrorCodeNOT_SUPPORTED_GATEWAY,
  _$gPaymentErrorCodeCHANNEL_INACTIVE,
  _$gPaymentErrorCodeBALANCE_CHECK_ERROR,
  _$gPaymentErrorCodeCHECKOUT_EMAIL_NOT_SET,
  _$gPaymentErrorCodeUNAVAILABLE_VARIANT_IN_CHANNEL,
  _$gPaymentErrorCodeNO_CHECKOUT_LINES,
]);

const GPermissionEnum _$gPermissionEnumMANAGE_USERS =
    const GPermissionEnum._('MANAGE_USERS');
const GPermissionEnum _$gPermissionEnumMANAGE_STAFF =
    const GPermissionEnum._('MANAGE_STAFF');
const GPermissionEnum _$gPermissionEnumIMPERSONATE_USER =
    const GPermissionEnum._('IMPERSONATE_USER');
const GPermissionEnum _$gPermissionEnumMANAGE_APPS =
    const GPermissionEnum._('MANAGE_APPS');
const GPermissionEnum _$gPermissionEnumMANAGE_OBSERVABILITY =
    const GPermissionEnum._('MANAGE_OBSERVABILITY');
const GPermissionEnum _$gPermissionEnumMANAGE_CHECKOUTS =
    const GPermissionEnum._('MANAGE_CHECKOUTS');
const GPermissionEnum _$gPermissionEnumHANDLE_CHECKOUTS =
    const GPermissionEnum._('HANDLE_CHECKOUTS');
const GPermissionEnum _$gPermissionEnumHANDLE_TAXES =
    const GPermissionEnum._('HANDLE_TAXES');
const GPermissionEnum _$gPermissionEnumMANAGE_TAXES =
    const GPermissionEnum._('MANAGE_TAXES');
const GPermissionEnum _$gPermissionEnumMANAGE_CHANNELS =
    const GPermissionEnum._('MANAGE_CHANNELS');
const GPermissionEnum _$gPermissionEnumMANAGE_DISCOUNTS =
    const GPermissionEnum._('MANAGE_DISCOUNTS');
const GPermissionEnum _$gPermissionEnumMANAGE_PLUGINS =
    const GPermissionEnum._('MANAGE_PLUGINS');
const GPermissionEnum _$gPermissionEnumMANAGE_GIFT_CARD =
    const GPermissionEnum._('MANAGE_GIFT_CARD');
const GPermissionEnum _$gPermissionEnumMANAGE_MENUS =
    const GPermissionEnum._('MANAGE_MENUS');
const GPermissionEnum _$gPermissionEnumMANAGE_ORDERS =
    const GPermissionEnum._('MANAGE_ORDERS');
const GPermissionEnum _$gPermissionEnumMANAGE_PAGES =
    const GPermissionEnum._('MANAGE_PAGES');
const GPermissionEnum _$gPermissionEnumMANAGE_PAGE_TYPES_AND_ATTRIBUTES =
    const GPermissionEnum._('MANAGE_PAGE_TYPES_AND_ATTRIBUTES');
const GPermissionEnum _$gPermissionEnumHANDLE_PAYMENTS =
    const GPermissionEnum._('HANDLE_PAYMENTS');
const GPermissionEnum _$gPermissionEnumMANAGE_PRODUCTS =
    const GPermissionEnum._('MANAGE_PRODUCTS');
const GPermissionEnum _$gPermissionEnumMANAGE_PRODUCT_TYPES_AND_ATTRIBUTES =
    const GPermissionEnum._('MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES');
const GPermissionEnum _$gPermissionEnumMANAGE_SHIPPING =
    const GPermissionEnum._('MANAGE_SHIPPING');
const GPermissionEnum _$gPermissionEnumMANAGE_SETTINGS =
    const GPermissionEnum._('MANAGE_SETTINGS');
const GPermissionEnum _$gPermissionEnumMANAGE_TRANSLATIONS =
    const GPermissionEnum._('MANAGE_TRANSLATIONS');

GPermissionEnum _$gPermissionEnumValueOf(String name) {
  switch (name) {
    case 'MANAGE_USERS':
      return _$gPermissionEnumMANAGE_USERS;
    case 'MANAGE_STAFF':
      return _$gPermissionEnumMANAGE_STAFF;
    case 'IMPERSONATE_USER':
      return _$gPermissionEnumIMPERSONATE_USER;
    case 'MANAGE_APPS':
      return _$gPermissionEnumMANAGE_APPS;
    case 'MANAGE_OBSERVABILITY':
      return _$gPermissionEnumMANAGE_OBSERVABILITY;
    case 'MANAGE_CHECKOUTS':
      return _$gPermissionEnumMANAGE_CHECKOUTS;
    case 'HANDLE_CHECKOUTS':
      return _$gPermissionEnumHANDLE_CHECKOUTS;
    case 'HANDLE_TAXES':
      return _$gPermissionEnumHANDLE_TAXES;
    case 'MANAGE_TAXES':
      return _$gPermissionEnumMANAGE_TAXES;
    case 'MANAGE_CHANNELS':
      return _$gPermissionEnumMANAGE_CHANNELS;
    case 'MANAGE_DISCOUNTS':
      return _$gPermissionEnumMANAGE_DISCOUNTS;
    case 'MANAGE_PLUGINS':
      return _$gPermissionEnumMANAGE_PLUGINS;
    case 'MANAGE_GIFT_CARD':
      return _$gPermissionEnumMANAGE_GIFT_CARD;
    case 'MANAGE_MENUS':
      return _$gPermissionEnumMANAGE_MENUS;
    case 'MANAGE_ORDERS':
      return _$gPermissionEnumMANAGE_ORDERS;
    case 'MANAGE_PAGES':
      return _$gPermissionEnumMANAGE_PAGES;
    case 'MANAGE_PAGE_TYPES_AND_ATTRIBUTES':
      return _$gPermissionEnumMANAGE_PAGE_TYPES_AND_ATTRIBUTES;
    case 'HANDLE_PAYMENTS':
      return _$gPermissionEnumHANDLE_PAYMENTS;
    case 'MANAGE_PRODUCTS':
      return _$gPermissionEnumMANAGE_PRODUCTS;
    case 'MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES':
      return _$gPermissionEnumMANAGE_PRODUCT_TYPES_AND_ATTRIBUTES;
    case 'MANAGE_SHIPPING':
      return _$gPermissionEnumMANAGE_SHIPPING;
    case 'MANAGE_SETTINGS':
      return _$gPermissionEnumMANAGE_SETTINGS;
    case 'MANAGE_TRANSLATIONS':
      return _$gPermissionEnumMANAGE_TRANSLATIONS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPermissionEnum> _$gPermissionEnumValues =
    new BuiltSet<GPermissionEnum>(const <GPermissionEnum>[
  _$gPermissionEnumMANAGE_USERS,
  _$gPermissionEnumMANAGE_STAFF,
  _$gPermissionEnumIMPERSONATE_USER,
  _$gPermissionEnumMANAGE_APPS,
  _$gPermissionEnumMANAGE_OBSERVABILITY,
  _$gPermissionEnumMANAGE_CHECKOUTS,
  _$gPermissionEnumHANDLE_CHECKOUTS,
  _$gPermissionEnumHANDLE_TAXES,
  _$gPermissionEnumMANAGE_TAXES,
  _$gPermissionEnumMANAGE_CHANNELS,
  _$gPermissionEnumMANAGE_DISCOUNTS,
  _$gPermissionEnumMANAGE_PLUGINS,
  _$gPermissionEnumMANAGE_GIFT_CARD,
  _$gPermissionEnumMANAGE_MENUS,
  _$gPermissionEnumMANAGE_ORDERS,
  _$gPermissionEnumMANAGE_PAGES,
  _$gPermissionEnumMANAGE_PAGE_TYPES_AND_ATTRIBUTES,
  _$gPermissionEnumHANDLE_PAYMENTS,
  _$gPermissionEnumMANAGE_PRODUCTS,
  _$gPermissionEnumMANAGE_PRODUCT_TYPES_AND_ATTRIBUTES,
  _$gPermissionEnumMANAGE_SHIPPING,
  _$gPermissionEnumMANAGE_SETTINGS,
  _$gPermissionEnumMANAGE_TRANSLATIONS,
]);

const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeASSIGN_NON_STAFF_MEMBER =
    const GPermissionGroupErrorCode._('ASSIGN_NON_STAFF_MEMBER');
const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeDUPLICATED_INPUT_ITEM =
    const GPermissionGroupErrorCode._('DUPLICATED_INPUT_ITEM');
const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeCANNOT_REMOVE_FROM_LAST_GROUP =
    const GPermissionGroupErrorCode._('CANNOT_REMOVE_FROM_LAST_GROUP');
const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION =
    const GPermissionGroupErrorCode._('LEFT_NOT_MANAGEABLE_PERMISSION');
const GPermissionGroupErrorCode
    _$gPermissionGroupErrorCodeOUT_OF_SCOPE_PERMISSION =
    const GPermissionGroupErrorCode._('OUT_OF_SCOPE_PERMISSION');
const GPermissionGroupErrorCode _$gPermissionGroupErrorCodeOUT_OF_SCOPE_USER =
    const GPermissionGroupErrorCode._('OUT_OF_SCOPE_USER');
const GPermissionGroupErrorCode _$gPermissionGroupErrorCodeREQUIRED =
    const GPermissionGroupErrorCode._('REQUIRED');
const GPermissionGroupErrorCode _$gPermissionGroupErrorCodeUNIQUE =
    const GPermissionGroupErrorCode._('UNIQUE');

GPermissionGroupErrorCode _$gPermissionGroupErrorCodeValueOf(String name) {
  switch (name) {
    case 'ASSIGN_NON_STAFF_MEMBER':
      return _$gPermissionGroupErrorCodeASSIGN_NON_STAFF_MEMBER;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gPermissionGroupErrorCodeDUPLICATED_INPUT_ITEM;
    case 'CANNOT_REMOVE_FROM_LAST_GROUP':
      return _$gPermissionGroupErrorCodeCANNOT_REMOVE_FROM_LAST_GROUP;
    case 'LEFT_NOT_MANAGEABLE_PERMISSION':
      return _$gPermissionGroupErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION;
    case 'OUT_OF_SCOPE_PERMISSION':
      return _$gPermissionGroupErrorCodeOUT_OF_SCOPE_PERMISSION;
    case 'OUT_OF_SCOPE_USER':
      return _$gPermissionGroupErrorCodeOUT_OF_SCOPE_USER;
    case 'REQUIRED':
      return _$gPermissionGroupErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gPermissionGroupErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPermissionGroupErrorCode> _$gPermissionGroupErrorCodeValues =
    new BuiltSet<GPermissionGroupErrorCode>(const <GPermissionGroupErrorCode>[
  _$gPermissionGroupErrorCodeASSIGN_NON_STAFF_MEMBER,
  _$gPermissionGroupErrorCodeDUPLICATED_INPUT_ITEM,
  _$gPermissionGroupErrorCodeCANNOT_REMOVE_FROM_LAST_GROUP,
  _$gPermissionGroupErrorCodeLEFT_NOT_MANAGEABLE_PERMISSION,
  _$gPermissionGroupErrorCodeOUT_OF_SCOPE_PERMISSION,
  _$gPermissionGroupErrorCodeOUT_OF_SCOPE_USER,
  _$gPermissionGroupErrorCodeREQUIRED,
  _$gPermissionGroupErrorCodeUNIQUE,
]);

const GPermissionGroupSortField _$gPermissionGroupSortFieldNAME =
    const GPermissionGroupSortField._('NAME');

GPermissionGroupSortField _$gPermissionGroupSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gPermissionGroupSortFieldNAME;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPermissionGroupSortField> _$gPermissionGroupSortFieldValues =
    new BuiltSet<GPermissionGroupSortField>(const <GPermissionGroupSortField>[
  _$gPermissionGroupSortFieldNAME,
]);

const GPluginConfigurationType _$gPluginConfigurationTypePER_CHANNEL =
    const GPluginConfigurationType._('PER_CHANNEL');
const GPluginConfigurationType _$gPluginConfigurationTypeGLOBAL =
    const GPluginConfigurationType._('GLOBAL');

GPluginConfigurationType _$gPluginConfigurationTypeValueOf(String name) {
  switch (name) {
    case 'PER_CHANNEL':
      return _$gPluginConfigurationTypePER_CHANNEL;
    case 'GLOBAL':
      return _$gPluginConfigurationTypeGLOBAL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPluginConfigurationType> _$gPluginConfigurationTypeValues =
    new BuiltSet<GPluginConfigurationType>(const <GPluginConfigurationType>[
  _$gPluginConfigurationTypePER_CHANNEL,
  _$gPluginConfigurationTypeGLOBAL,
]);

const GPluginErrorCode _$gPluginErrorCodeGRAPHQL_ERROR =
    const GPluginErrorCode._('GRAPHQL_ERROR');
const GPluginErrorCode _$gPluginErrorCodeINVALID =
    const GPluginErrorCode._('INVALID');
const GPluginErrorCode _$gPluginErrorCodePLUGIN_MISCONFIGURED =
    const GPluginErrorCode._('PLUGIN_MISCONFIGURED');
const GPluginErrorCode _$gPluginErrorCodeNOT_FOUND =
    const GPluginErrorCode._('NOT_FOUND');
const GPluginErrorCode _$gPluginErrorCodeREQUIRED =
    const GPluginErrorCode._('REQUIRED');
const GPluginErrorCode _$gPluginErrorCodeUNIQUE =
    const GPluginErrorCode._('UNIQUE');

GPluginErrorCode _$gPluginErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gPluginErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gPluginErrorCodeINVALID;
    case 'PLUGIN_MISCONFIGURED':
      return _$gPluginErrorCodePLUGIN_MISCONFIGURED;
    case 'NOT_FOUND':
      return _$gPluginErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gPluginErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gPluginErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPluginErrorCode> _$gPluginErrorCodeValues =
    new BuiltSet<GPluginErrorCode>(const <GPluginErrorCode>[
  _$gPluginErrorCodeGRAPHQL_ERROR,
  _$gPluginErrorCodeINVALID,
  _$gPluginErrorCodePLUGIN_MISCONFIGURED,
  _$gPluginErrorCodeNOT_FOUND,
  _$gPluginErrorCodeREQUIRED,
  _$gPluginErrorCodeUNIQUE,
]);

const GPluginSortField _$gPluginSortFieldNAME =
    const GPluginSortField._('NAME');
const GPluginSortField _$gPluginSortFieldIS_ACTIVE =
    const GPluginSortField._('IS_ACTIVE');

GPluginSortField _$gPluginSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gPluginSortFieldNAME;
    case 'IS_ACTIVE':
      return _$gPluginSortFieldIS_ACTIVE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPluginSortField> _$gPluginSortFieldValues =
    new BuiltSet<GPluginSortField>(const <GPluginSortField>[
  _$gPluginSortFieldNAME,
  _$gPluginSortFieldIS_ACTIVE,
]);

const GPostalCodeRuleInclusionTypeEnum
    _$gPostalCodeRuleInclusionTypeEnumINCLUDE =
    const GPostalCodeRuleInclusionTypeEnum._('INCLUDE');
const GPostalCodeRuleInclusionTypeEnum
    _$gPostalCodeRuleInclusionTypeEnumEXCLUDE =
    const GPostalCodeRuleInclusionTypeEnum._('EXCLUDE');

GPostalCodeRuleInclusionTypeEnum _$gPostalCodeRuleInclusionTypeEnumValueOf(
    String name) {
  switch (name) {
    case 'INCLUDE':
      return _$gPostalCodeRuleInclusionTypeEnumINCLUDE;
    case 'EXCLUDE':
      return _$gPostalCodeRuleInclusionTypeEnumEXCLUDE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GPostalCodeRuleInclusionTypeEnum>
    _$gPostalCodeRuleInclusionTypeEnumValues =
    new BuiltSet<GPostalCodeRuleInclusionTypeEnum>(const <
        GPostalCodeRuleInclusionTypeEnum>[
  _$gPostalCodeRuleInclusionTypeEnumINCLUDE,
  _$gPostalCodeRuleInclusionTypeEnumEXCLUDE,
]);

const GProductAttributeType _$gProductAttributeTypePRODUCT =
    const GProductAttributeType._('PRODUCT');
const GProductAttributeType _$gProductAttributeTypeVARIANT =
    const GProductAttributeType._('VARIANT');

GProductAttributeType _$gProductAttributeTypeValueOf(String name) {
  switch (name) {
    case 'PRODUCT':
      return _$gProductAttributeTypePRODUCT;
    case 'VARIANT':
      return _$gProductAttributeTypeVARIANT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductAttributeType> _$gProductAttributeTypeValues =
    new BuiltSet<GProductAttributeType>(const <GProductAttributeType>[
  _$gProductAttributeTypePRODUCT,
  _$gProductAttributeTypeVARIANT,
]);

const GProductErrorCode _$gProductErrorCodeALREADY_EXISTS =
    const GProductErrorCode._('ALREADY_EXISTS');
const GProductErrorCode _$gProductErrorCodeATTRIBUTE_ALREADY_ASSIGNED =
    const GProductErrorCode._('ATTRIBUTE_ALREADY_ASSIGNED');
const GProductErrorCode _$gProductErrorCodeATTRIBUTE_CANNOT_BE_ASSIGNED =
    const GProductErrorCode._('ATTRIBUTE_CANNOT_BE_ASSIGNED');
const GProductErrorCode _$gProductErrorCodeATTRIBUTE_VARIANTS_DISABLED =
    const GProductErrorCode._('ATTRIBUTE_VARIANTS_DISABLED');
const GProductErrorCode _$gProductErrorCodeMEDIA_ALREADY_ASSIGNED =
    const GProductErrorCode._('MEDIA_ALREADY_ASSIGNED');
const GProductErrorCode _$gProductErrorCodeDUPLICATED_INPUT_ITEM =
    const GProductErrorCode._('DUPLICATED_INPUT_ITEM');
const GProductErrorCode _$gProductErrorCodeGRAPHQL_ERROR =
    const GProductErrorCode._('GRAPHQL_ERROR');
const GProductErrorCode _$gProductErrorCodeINVALID =
    const GProductErrorCode._('INVALID');
const GProductErrorCode _$gProductErrorCodePRODUCT_WITHOUT_CATEGORY =
    const GProductErrorCode._('PRODUCT_WITHOUT_CATEGORY');
const GProductErrorCode _$gProductErrorCodeNOT_PRODUCTS_IMAGE =
    const GProductErrorCode._('NOT_PRODUCTS_IMAGE');
const GProductErrorCode _$gProductErrorCodeNOT_PRODUCTS_VARIANT =
    const GProductErrorCode._('NOT_PRODUCTS_VARIANT');
const GProductErrorCode _$gProductErrorCodeNOT_FOUND =
    const GProductErrorCode._('NOT_FOUND');
const GProductErrorCode _$gProductErrorCodeREQUIRED =
    const GProductErrorCode._('REQUIRED');
const GProductErrorCode _$gProductErrorCodeUNIQUE =
    const GProductErrorCode._('UNIQUE');
const GProductErrorCode _$gProductErrorCodeVARIANT_NO_DIGITAL_CONTENT =
    const GProductErrorCode._('VARIANT_NO_DIGITAL_CONTENT');
const GProductErrorCode
    _$gProductErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT =
    const GProductErrorCode._('CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT');
const GProductErrorCode _$gProductErrorCodePRODUCT_NOT_ASSIGNED_TO_CHANNEL =
    const GProductErrorCode._('PRODUCT_NOT_ASSIGNED_TO_CHANNEL');
const GProductErrorCode _$gProductErrorCodeUNSUPPORTED_MEDIA_PROVIDER =
    const GProductErrorCode._('UNSUPPORTED_MEDIA_PROVIDER');
const GProductErrorCode
    _$gProductErrorCodePREORDER_VARIANT_CANNOT_BE_DEACTIVATED =
    const GProductErrorCode._('PREORDER_VARIANT_CANNOT_BE_DEACTIVATED');

GProductErrorCode _$gProductErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gProductErrorCodeALREADY_EXISTS;
    case 'ATTRIBUTE_ALREADY_ASSIGNED':
      return _$gProductErrorCodeATTRIBUTE_ALREADY_ASSIGNED;
    case 'ATTRIBUTE_CANNOT_BE_ASSIGNED':
      return _$gProductErrorCodeATTRIBUTE_CANNOT_BE_ASSIGNED;
    case 'ATTRIBUTE_VARIANTS_DISABLED':
      return _$gProductErrorCodeATTRIBUTE_VARIANTS_DISABLED;
    case 'MEDIA_ALREADY_ASSIGNED':
      return _$gProductErrorCodeMEDIA_ALREADY_ASSIGNED;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gProductErrorCodeDUPLICATED_INPUT_ITEM;
    case 'GRAPHQL_ERROR':
      return _$gProductErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gProductErrorCodeINVALID;
    case 'PRODUCT_WITHOUT_CATEGORY':
      return _$gProductErrorCodePRODUCT_WITHOUT_CATEGORY;
    case 'NOT_PRODUCTS_IMAGE':
      return _$gProductErrorCodeNOT_PRODUCTS_IMAGE;
    case 'NOT_PRODUCTS_VARIANT':
      return _$gProductErrorCodeNOT_PRODUCTS_VARIANT;
    case 'NOT_FOUND':
      return _$gProductErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gProductErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gProductErrorCodeUNIQUE;
    case 'VARIANT_NO_DIGITAL_CONTENT':
      return _$gProductErrorCodeVARIANT_NO_DIGITAL_CONTENT;
    case 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT':
      return _$gProductErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT;
    case 'PRODUCT_NOT_ASSIGNED_TO_CHANNEL':
      return _$gProductErrorCodePRODUCT_NOT_ASSIGNED_TO_CHANNEL;
    case 'UNSUPPORTED_MEDIA_PROVIDER':
      return _$gProductErrorCodeUNSUPPORTED_MEDIA_PROVIDER;
    case 'PREORDER_VARIANT_CANNOT_BE_DEACTIVATED':
      return _$gProductErrorCodePREORDER_VARIANT_CANNOT_BE_DEACTIVATED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductErrorCode> _$gProductErrorCodeValues =
    new BuiltSet<GProductErrorCode>(const <GProductErrorCode>[
  _$gProductErrorCodeALREADY_EXISTS,
  _$gProductErrorCodeATTRIBUTE_ALREADY_ASSIGNED,
  _$gProductErrorCodeATTRIBUTE_CANNOT_BE_ASSIGNED,
  _$gProductErrorCodeATTRIBUTE_VARIANTS_DISABLED,
  _$gProductErrorCodeMEDIA_ALREADY_ASSIGNED,
  _$gProductErrorCodeDUPLICATED_INPUT_ITEM,
  _$gProductErrorCodeGRAPHQL_ERROR,
  _$gProductErrorCodeINVALID,
  _$gProductErrorCodePRODUCT_WITHOUT_CATEGORY,
  _$gProductErrorCodeNOT_PRODUCTS_IMAGE,
  _$gProductErrorCodeNOT_PRODUCTS_VARIANT,
  _$gProductErrorCodeNOT_FOUND,
  _$gProductErrorCodeREQUIRED,
  _$gProductErrorCodeUNIQUE,
  _$gProductErrorCodeVARIANT_NO_DIGITAL_CONTENT,
  _$gProductErrorCodeCANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT,
  _$gProductErrorCodePRODUCT_NOT_ASSIGNED_TO_CHANNEL,
  _$gProductErrorCodeUNSUPPORTED_MEDIA_PROVIDER,
  _$gProductErrorCodePREORDER_VARIANT_CANNOT_BE_DEACTIVATED,
]);

const GProductFieldEnum _$gProductFieldEnumNAME =
    const GProductFieldEnum._('NAME');
const GProductFieldEnum _$gProductFieldEnumDESCRIPTION =
    const GProductFieldEnum._('DESCRIPTION');
const GProductFieldEnum _$gProductFieldEnumPRODUCT_TYPE =
    const GProductFieldEnum._('PRODUCT_TYPE');
const GProductFieldEnum _$gProductFieldEnumCATEGORY =
    const GProductFieldEnum._('CATEGORY');
const GProductFieldEnum _$gProductFieldEnumPRODUCT_WEIGHT =
    const GProductFieldEnum._('PRODUCT_WEIGHT');
const GProductFieldEnum _$gProductFieldEnumCOLLECTIONS =
    const GProductFieldEnum._('COLLECTIONS');
const GProductFieldEnum _$gProductFieldEnumCHARGE_TAXES =
    const GProductFieldEnum._('CHARGE_TAXES');
const GProductFieldEnum _$gProductFieldEnumPRODUCT_MEDIA =
    const GProductFieldEnum._('PRODUCT_MEDIA');
const GProductFieldEnum _$gProductFieldEnumVARIANT_ID =
    const GProductFieldEnum._('VARIANT_ID');
const GProductFieldEnum _$gProductFieldEnumVARIANT_SKU =
    const GProductFieldEnum._('VARIANT_SKU');
const GProductFieldEnum _$gProductFieldEnumVARIANT_WEIGHT =
    const GProductFieldEnum._('VARIANT_WEIGHT');
const GProductFieldEnum _$gProductFieldEnumVARIANT_MEDIA =
    const GProductFieldEnum._('VARIANT_MEDIA');

GProductFieldEnum _$gProductFieldEnumValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gProductFieldEnumNAME;
    case 'DESCRIPTION':
      return _$gProductFieldEnumDESCRIPTION;
    case 'PRODUCT_TYPE':
      return _$gProductFieldEnumPRODUCT_TYPE;
    case 'CATEGORY':
      return _$gProductFieldEnumCATEGORY;
    case 'PRODUCT_WEIGHT':
      return _$gProductFieldEnumPRODUCT_WEIGHT;
    case 'COLLECTIONS':
      return _$gProductFieldEnumCOLLECTIONS;
    case 'CHARGE_TAXES':
      return _$gProductFieldEnumCHARGE_TAXES;
    case 'PRODUCT_MEDIA':
      return _$gProductFieldEnumPRODUCT_MEDIA;
    case 'VARIANT_ID':
      return _$gProductFieldEnumVARIANT_ID;
    case 'VARIANT_SKU':
      return _$gProductFieldEnumVARIANT_SKU;
    case 'VARIANT_WEIGHT':
      return _$gProductFieldEnumVARIANT_WEIGHT;
    case 'VARIANT_MEDIA':
      return _$gProductFieldEnumVARIANT_MEDIA;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductFieldEnum> _$gProductFieldEnumValues =
    new BuiltSet<GProductFieldEnum>(const <GProductFieldEnum>[
  _$gProductFieldEnumNAME,
  _$gProductFieldEnumDESCRIPTION,
  _$gProductFieldEnumPRODUCT_TYPE,
  _$gProductFieldEnumCATEGORY,
  _$gProductFieldEnumPRODUCT_WEIGHT,
  _$gProductFieldEnumCOLLECTIONS,
  _$gProductFieldEnumCHARGE_TAXES,
  _$gProductFieldEnumPRODUCT_MEDIA,
  _$gProductFieldEnumVARIANT_ID,
  _$gProductFieldEnumVARIANT_SKU,
  _$gProductFieldEnumVARIANT_WEIGHT,
  _$gProductFieldEnumVARIANT_MEDIA,
]);

const GProductMediaType _$gProductMediaTypeIMAGE =
    const GProductMediaType._('IMAGE');
const GProductMediaType _$gProductMediaTypeVIDEO =
    const GProductMediaType._('VIDEO');

GProductMediaType _$gProductMediaTypeValueOf(String name) {
  switch (name) {
    case 'IMAGE':
      return _$gProductMediaTypeIMAGE;
    case 'VIDEO':
      return _$gProductMediaTypeVIDEO;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductMediaType> _$gProductMediaTypeValues =
    new BuiltSet<GProductMediaType>(const <GProductMediaType>[
  _$gProductMediaTypeIMAGE,
  _$gProductMediaTypeVIDEO,
]);

const GProductOrderField _$gProductOrderFieldNAME =
    const GProductOrderField._('NAME');
const GProductOrderField _$gProductOrderFieldRANK =
    const GProductOrderField._('RANK');
const GProductOrderField _$gProductOrderFieldPRICE =
    const GProductOrderField._('PRICE');
const GProductOrderField _$gProductOrderFieldMINIMAL_PRICE =
    const GProductOrderField._('MINIMAL_PRICE');
const GProductOrderField _$gProductOrderFieldLAST_MODIFIED =
    const GProductOrderField._('LAST_MODIFIED');
const GProductOrderField _$gProductOrderFieldDATE =
    const GProductOrderField._('DATE');
const GProductOrderField _$gProductOrderFieldTYPE =
    const GProductOrderField._('TYPE');
const GProductOrderField _$gProductOrderFieldPUBLISHED =
    const GProductOrderField._('PUBLISHED');
const GProductOrderField _$gProductOrderFieldPUBLICATION_DATE =
    const GProductOrderField._('PUBLICATION_DATE');
const GProductOrderField _$gProductOrderFieldPUBLISHED_AT =
    const GProductOrderField._('PUBLISHED_AT');
const GProductOrderField _$gProductOrderFieldLAST_MODIFIED_AT =
    const GProductOrderField._('LAST_MODIFIED_AT');
const GProductOrderField _$gProductOrderFieldCOLLECTION =
    const GProductOrderField._('COLLECTION');
const GProductOrderField _$gProductOrderFieldRATING =
    const GProductOrderField._('RATING');
const GProductOrderField _$gProductOrderFieldCREATED_AT =
    const GProductOrderField._('CREATED_AT');

GProductOrderField _$gProductOrderFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gProductOrderFieldNAME;
    case 'RANK':
      return _$gProductOrderFieldRANK;
    case 'PRICE':
      return _$gProductOrderFieldPRICE;
    case 'MINIMAL_PRICE':
      return _$gProductOrderFieldMINIMAL_PRICE;
    case 'LAST_MODIFIED':
      return _$gProductOrderFieldLAST_MODIFIED;
    case 'DATE':
      return _$gProductOrderFieldDATE;
    case 'TYPE':
      return _$gProductOrderFieldTYPE;
    case 'PUBLISHED':
      return _$gProductOrderFieldPUBLISHED;
    case 'PUBLICATION_DATE':
      return _$gProductOrderFieldPUBLICATION_DATE;
    case 'PUBLISHED_AT':
      return _$gProductOrderFieldPUBLISHED_AT;
    case 'LAST_MODIFIED_AT':
      return _$gProductOrderFieldLAST_MODIFIED_AT;
    case 'COLLECTION':
      return _$gProductOrderFieldCOLLECTION;
    case 'RATING':
      return _$gProductOrderFieldRATING;
    case 'CREATED_AT':
      return _$gProductOrderFieldCREATED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductOrderField> _$gProductOrderFieldValues =
    new BuiltSet<GProductOrderField>(const <GProductOrderField>[
  _$gProductOrderFieldNAME,
  _$gProductOrderFieldRANK,
  _$gProductOrderFieldPRICE,
  _$gProductOrderFieldMINIMAL_PRICE,
  _$gProductOrderFieldLAST_MODIFIED,
  _$gProductOrderFieldDATE,
  _$gProductOrderFieldTYPE,
  _$gProductOrderFieldPUBLISHED,
  _$gProductOrderFieldPUBLICATION_DATE,
  _$gProductOrderFieldPUBLISHED_AT,
  _$gProductOrderFieldLAST_MODIFIED_AT,
  _$gProductOrderFieldCOLLECTION,
  _$gProductOrderFieldRATING,
  _$gProductOrderFieldCREATED_AT,
]);

const GProductTypeConfigurable _$gProductTypeConfigurableCONFIGURABLE =
    const GProductTypeConfigurable._('CONFIGURABLE');
const GProductTypeConfigurable _$gProductTypeConfigurableSIMPLE =
    const GProductTypeConfigurable._('SIMPLE');

GProductTypeConfigurable _$gProductTypeConfigurableValueOf(String name) {
  switch (name) {
    case 'CONFIGURABLE':
      return _$gProductTypeConfigurableCONFIGURABLE;
    case 'SIMPLE':
      return _$gProductTypeConfigurableSIMPLE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductTypeConfigurable> _$gProductTypeConfigurableValues =
    new BuiltSet<GProductTypeConfigurable>(const <GProductTypeConfigurable>[
  _$gProductTypeConfigurableCONFIGURABLE,
  _$gProductTypeConfigurableSIMPLE,
]);

const GProductTypeEnum _$gProductTypeEnumDIGITAL =
    const GProductTypeEnum._('DIGITAL');
const GProductTypeEnum _$gProductTypeEnumSHIPPABLE =
    const GProductTypeEnum._('SHIPPABLE');

GProductTypeEnum _$gProductTypeEnumValueOf(String name) {
  switch (name) {
    case 'DIGITAL':
      return _$gProductTypeEnumDIGITAL;
    case 'SHIPPABLE':
      return _$gProductTypeEnumSHIPPABLE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductTypeEnum> _$gProductTypeEnumValues =
    new BuiltSet<GProductTypeEnum>(const <GProductTypeEnum>[
  _$gProductTypeEnumDIGITAL,
  _$gProductTypeEnumSHIPPABLE,
]);

const GProductTypeKindEnum _$gProductTypeKindEnumNORMAL =
    const GProductTypeKindEnum._('NORMAL');
const GProductTypeKindEnum _$gProductTypeKindEnumGIFT_CARD =
    const GProductTypeKindEnum._('GIFT_CARD');

GProductTypeKindEnum _$gProductTypeKindEnumValueOf(String name) {
  switch (name) {
    case 'NORMAL':
      return _$gProductTypeKindEnumNORMAL;
    case 'GIFT_CARD':
      return _$gProductTypeKindEnumGIFT_CARD;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductTypeKindEnum> _$gProductTypeKindEnumValues =
    new BuiltSet<GProductTypeKindEnum>(const <GProductTypeKindEnum>[
  _$gProductTypeKindEnumNORMAL,
  _$gProductTypeKindEnumGIFT_CARD,
]);

const GProductTypeSortField _$gProductTypeSortFieldNAME =
    const GProductTypeSortField._('NAME');
const GProductTypeSortField _$gProductTypeSortFieldDIGITAL =
    const GProductTypeSortField._('DIGITAL');
const GProductTypeSortField _$gProductTypeSortFieldSHIPPING_REQUIRED =
    const GProductTypeSortField._('SHIPPING_REQUIRED');

GProductTypeSortField _$gProductTypeSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gProductTypeSortFieldNAME;
    case 'DIGITAL':
      return _$gProductTypeSortFieldDIGITAL;
    case 'SHIPPING_REQUIRED':
      return _$gProductTypeSortFieldSHIPPING_REQUIRED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductTypeSortField> _$gProductTypeSortFieldValues =
    new BuiltSet<GProductTypeSortField>(const <GProductTypeSortField>[
  _$gProductTypeSortFieldNAME,
  _$gProductTypeSortFieldDIGITAL,
  _$gProductTypeSortFieldSHIPPING_REQUIRED,
]);

const GProductVariantSortField _$gProductVariantSortFieldLAST_MODIFIED_AT =
    const GProductVariantSortField._('LAST_MODIFIED_AT');

GProductVariantSortField _$gProductVariantSortFieldValueOf(String name) {
  switch (name) {
    case 'LAST_MODIFIED_AT':
      return _$gProductVariantSortFieldLAST_MODIFIED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GProductVariantSortField> _$gProductVariantSortFieldValues =
    new BuiltSet<GProductVariantSortField>(const <GProductVariantSortField>[
  _$gProductVariantSortFieldLAST_MODIFIED_AT,
]);

const GReportingPeriod _$gReportingPeriodTODAY =
    const GReportingPeriod._('TODAY');
const GReportingPeriod _$gReportingPeriodTHIS_MONTH =
    const GReportingPeriod._('THIS_MONTH');

GReportingPeriod _$gReportingPeriodValueOf(String name) {
  switch (name) {
    case 'TODAY':
      return _$gReportingPeriodTODAY;
    case 'THIS_MONTH':
      return _$gReportingPeriodTHIS_MONTH;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GReportingPeriod> _$gReportingPeriodValues =
    new BuiltSet<GReportingPeriod>(const <GReportingPeriod>[
  _$gReportingPeriodTODAY,
  _$gReportingPeriodTHIS_MONTH,
]);

const GSaleSortField _$gSaleSortFieldNAME = const GSaleSortField._('NAME');
const GSaleSortField _$gSaleSortFieldSTART_DATE =
    const GSaleSortField._('START_DATE');
const GSaleSortField _$gSaleSortFieldEND_DATE =
    const GSaleSortField._('END_DATE');
const GSaleSortField _$gSaleSortFieldVALUE = const GSaleSortField._('VALUE');
const GSaleSortField _$gSaleSortFieldTYPE = const GSaleSortField._('TYPE');
const GSaleSortField _$gSaleSortFieldCREATED_AT =
    const GSaleSortField._('CREATED_AT');
const GSaleSortField _$gSaleSortFieldLAST_MODIFIED_AT =
    const GSaleSortField._('LAST_MODIFIED_AT');

GSaleSortField _$gSaleSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gSaleSortFieldNAME;
    case 'START_DATE':
      return _$gSaleSortFieldSTART_DATE;
    case 'END_DATE':
      return _$gSaleSortFieldEND_DATE;
    case 'VALUE':
      return _$gSaleSortFieldVALUE;
    case 'TYPE':
      return _$gSaleSortFieldTYPE;
    case 'CREATED_AT':
      return _$gSaleSortFieldCREATED_AT;
    case 'LAST_MODIFIED_AT':
      return _$gSaleSortFieldLAST_MODIFIED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSaleSortField> _$gSaleSortFieldValues =
    new BuiltSet<GSaleSortField>(const <GSaleSortField>[
  _$gSaleSortFieldNAME,
  _$gSaleSortFieldSTART_DATE,
  _$gSaleSortFieldEND_DATE,
  _$gSaleSortFieldVALUE,
  _$gSaleSortFieldTYPE,
  _$gSaleSortFieldCREATED_AT,
  _$gSaleSortFieldLAST_MODIFIED_AT,
]);

const GSaleType _$gSaleTypeFIXED = const GSaleType._('FIXED');
const GSaleType _$gSaleTypePERCENTAGE = const GSaleType._('PERCENTAGE');

GSaleType _$gSaleTypeValueOf(String name) {
  switch (name) {
    case 'FIXED':
      return _$gSaleTypeFIXED;
    case 'PERCENTAGE':
      return _$gSaleTypePERCENTAGE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GSaleType> _$gSaleTypeValues =
    new BuiltSet<GSaleType>(const <GSaleType>[
  _$gSaleTypeFIXED,
  _$gSaleTypePERCENTAGE,
]);

const GShippingErrorCode _$gShippingErrorCodeALREADY_EXISTS =
    const GShippingErrorCode._('ALREADY_EXISTS');
const GShippingErrorCode _$gShippingErrorCodeGRAPHQL_ERROR =
    const GShippingErrorCode._('GRAPHQL_ERROR');
const GShippingErrorCode _$gShippingErrorCodeINVALID =
    const GShippingErrorCode._('INVALID');
const GShippingErrorCode _$gShippingErrorCodeMAX_LESS_THAN_MIN =
    const GShippingErrorCode._('MAX_LESS_THAN_MIN');
const GShippingErrorCode _$gShippingErrorCodeNOT_FOUND =
    const GShippingErrorCode._('NOT_FOUND');
const GShippingErrorCode _$gShippingErrorCodeREQUIRED =
    const GShippingErrorCode._('REQUIRED');
const GShippingErrorCode _$gShippingErrorCodeUNIQUE =
    const GShippingErrorCode._('UNIQUE');
const GShippingErrorCode _$gShippingErrorCodeDUPLICATED_INPUT_ITEM =
    const GShippingErrorCode._('DUPLICATED_INPUT_ITEM');

GShippingErrorCode _$gShippingErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gShippingErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gShippingErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gShippingErrorCodeINVALID;
    case 'MAX_LESS_THAN_MIN':
      return _$gShippingErrorCodeMAX_LESS_THAN_MIN;
    case 'NOT_FOUND':
      return _$gShippingErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gShippingErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gShippingErrorCodeUNIQUE;
    case 'DUPLICATED_INPUT_ITEM':
      return _$gShippingErrorCodeDUPLICATED_INPUT_ITEM;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GShippingErrorCode> _$gShippingErrorCodeValues =
    new BuiltSet<GShippingErrorCode>(const <GShippingErrorCode>[
  _$gShippingErrorCodeALREADY_EXISTS,
  _$gShippingErrorCodeGRAPHQL_ERROR,
  _$gShippingErrorCodeINVALID,
  _$gShippingErrorCodeMAX_LESS_THAN_MIN,
  _$gShippingErrorCodeNOT_FOUND,
  _$gShippingErrorCodeREQUIRED,
  _$gShippingErrorCodeUNIQUE,
  _$gShippingErrorCodeDUPLICATED_INPUT_ITEM,
]);

const GShippingMethodTypeEnum _$gShippingMethodTypeEnumPRICE =
    const GShippingMethodTypeEnum._('PRICE');
const GShippingMethodTypeEnum _$gShippingMethodTypeEnumWEIGHT =
    const GShippingMethodTypeEnum._('WEIGHT');

GShippingMethodTypeEnum _$gShippingMethodTypeEnumValueOf(String name) {
  switch (name) {
    case 'PRICE':
      return _$gShippingMethodTypeEnumPRICE;
    case 'WEIGHT':
      return _$gShippingMethodTypeEnumWEIGHT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GShippingMethodTypeEnum> _$gShippingMethodTypeEnumValues =
    new BuiltSet<GShippingMethodTypeEnum>(const <GShippingMethodTypeEnum>[
  _$gShippingMethodTypeEnumPRICE,
  _$gShippingMethodTypeEnumWEIGHT,
]);

const GShopErrorCode _$gShopErrorCodeALREADY_EXISTS =
    const GShopErrorCode._('ALREADY_EXISTS');
const GShopErrorCode _$gShopErrorCodeCANNOT_FETCH_TAX_RATES =
    const GShopErrorCode._('CANNOT_FETCH_TAX_RATES');
const GShopErrorCode _$gShopErrorCodeGRAPHQL_ERROR =
    const GShopErrorCode._('GRAPHQL_ERROR');
const GShopErrorCode _$gShopErrorCodeINVALID =
    const GShopErrorCode._('INVALID');
const GShopErrorCode _$gShopErrorCodeNOT_FOUND =
    const GShopErrorCode._('NOT_FOUND');
const GShopErrorCode _$gShopErrorCodeREQUIRED =
    const GShopErrorCode._('REQUIRED');
const GShopErrorCode _$gShopErrorCodeUNIQUE = const GShopErrorCode._('UNIQUE');

GShopErrorCode _$gShopErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gShopErrorCodeALREADY_EXISTS;
    case 'CANNOT_FETCH_TAX_RATES':
      return _$gShopErrorCodeCANNOT_FETCH_TAX_RATES;
    case 'GRAPHQL_ERROR':
      return _$gShopErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gShopErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gShopErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gShopErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gShopErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GShopErrorCode> _$gShopErrorCodeValues =
    new BuiltSet<GShopErrorCode>(const <GShopErrorCode>[
  _$gShopErrorCodeALREADY_EXISTS,
  _$gShopErrorCodeCANNOT_FETCH_TAX_RATES,
  _$gShopErrorCodeGRAPHQL_ERROR,
  _$gShopErrorCodeINVALID,
  _$gShopErrorCodeNOT_FOUND,
  _$gShopErrorCodeREQUIRED,
  _$gShopErrorCodeUNIQUE,
]);

const GStaffMemberStatus _$gStaffMemberStatusACTIVE =
    const GStaffMemberStatus._('ACTIVE');
const GStaffMemberStatus _$gStaffMemberStatusDEACTIVATED =
    const GStaffMemberStatus._('DEACTIVATED');

GStaffMemberStatus _$gStaffMemberStatusValueOf(String name) {
  switch (name) {
    case 'ACTIVE':
      return _$gStaffMemberStatusACTIVE;
    case 'DEACTIVATED':
      return _$gStaffMemberStatusDEACTIVATED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GStaffMemberStatus> _$gStaffMemberStatusValues =
    new BuiltSet<GStaffMemberStatus>(const <GStaffMemberStatus>[
  _$gStaffMemberStatusACTIVE,
  _$gStaffMemberStatusDEACTIVATED,
]);

const GStockAvailability _$gStockAvailabilityIN_STOCK =
    const GStockAvailability._('IN_STOCK');
const GStockAvailability _$gStockAvailabilityOUT_OF_STOCK =
    const GStockAvailability._('OUT_OF_STOCK');

GStockAvailability _$gStockAvailabilityValueOf(String name) {
  switch (name) {
    case 'IN_STOCK':
      return _$gStockAvailabilityIN_STOCK;
    case 'OUT_OF_STOCK':
      return _$gStockAvailabilityOUT_OF_STOCK;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GStockAvailability> _$gStockAvailabilityValues =
    new BuiltSet<GStockAvailability>(const <GStockAvailability>[
  _$gStockAvailabilityIN_STOCK,
  _$gStockAvailabilityOUT_OF_STOCK,
]);

const GStockErrorCode _$gStockErrorCodeALREADY_EXISTS =
    const GStockErrorCode._('ALREADY_EXISTS');
const GStockErrorCode _$gStockErrorCodeGRAPHQL_ERROR =
    const GStockErrorCode._('GRAPHQL_ERROR');
const GStockErrorCode _$gStockErrorCodeINVALID =
    const GStockErrorCode._('INVALID');
const GStockErrorCode _$gStockErrorCodeNOT_FOUND =
    const GStockErrorCode._('NOT_FOUND');
const GStockErrorCode _$gStockErrorCodeREQUIRED =
    const GStockErrorCode._('REQUIRED');
const GStockErrorCode _$gStockErrorCodeUNIQUE =
    const GStockErrorCode._('UNIQUE');

GStockErrorCode _$gStockErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gStockErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gStockErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gStockErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gStockErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gStockErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gStockErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GStockErrorCode> _$gStockErrorCodeValues =
    new BuiltSet<GStockErrorCode>(const <GStockErrorCode>[
  _$gStockErrorCodeALREADY_EXISTS,
  _$gStockErrorCodeGRAPHQL_ERROR,
  _$gStockErrorCodeINVALID,
  _$gStockErrorCodeNOT_FOUND,
  _$gStockErrorCodeREQUIRED,
  _$gStockErrorCodeUNIQUE,
]);

const GStorePaymentMethodEnum _$gStorePaymentMethodEnumON_SESSION =
    const GStorePaymentMethodEnum._('ON_SESSION');
const GStorePaymentMethodEnum _$gStorePaymentMethodEnumOFF_SESSION =
    const GStorePaymentMethodEnum._('OFF_SESSION');
const GStorePaymentMethodEnum _$gStorePaymentMethodEnumNONE =
    const GStorePaymentMethodEnum._('NONE');

GStorePaymentMethodEnum _$gStorePaymentMethodEnumValueOf(String name) {
  switch (name) {
    case 'ON_SESSION':
      return _$gStorePaymentMethodEnumON_SESSION;
    case 'OFF_SESSION':
      return _$gStorePaymentMethodEnumOFF_SESSION;
    case 'NONE':
      return _$gStorePaymentMethodEnumNONE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GStorePaymentMethodEnum> _$gStorePaymentMethodEnumValues =
    new BuiltSet<GStorePaymentMethodEnum>(const <GStorePaymentMethodEnum>[
  _$gStorePaymentMethodEnumON_SESSION,
  _$gStorePaymentMethodEnumOFF_SESSION,
  _$gStorePaymentMethodEnumNONE,
]);

const GTaxExemptionManageErrorCode _$gTaxExemptionManageErrorCodeGRAPHQL_ERROR =
    const GTaxExemptionManageErrorCode._('GRAPHQL_ERROR');
const GTaxExemptionManageErrorCode _$gTaxExemptionManageErrorCodeINVALID =
    const GTaxExemptionManageErrorCode._('INVALID');
const GTaxExemptionManageErrorCode _$gTaxExemptionManageErrorCodeNOT_FOUND =
    const GTaxExemptionManageErrorCode._('NOT_FOUND');
const GTaxExemptionManageErrorCode
    _$gTaxExemptionManageErrorCodeNOT_EDITABLE_ORDER =
    const GTaxExemptionManageErrorCode._('NOT_EDITABLE_ORDER');

GTaxExemptionManageErrorCode _$gTaxExemptionManageErrorCodeValueOf(
    String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gTaxExemptionManageErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gTaxExemptionManageErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gTaxExemptionManageErrorCodeNOT_FOUND;
    case 'NOT_EDITABLE_ORDER':
      return _$gTaxExemptionManageErrorCodeNOT_EDITABLE_ORDER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTaxExemptionManageErrorCode>
    _$gTaxExemptionManageErrorCodeValues = new BuiltSet<
        GTaxExemptionManageErrorCode>(const <GTaxExemptionManageErrorCode>[
  _$gTaxExemptionManageErrorCodeGRAPHQL_ERROR,
  _$gTaxExemptionManageErrorCodeINVALID,
  _$gTaxExemptionManageErrorCodeNOT_FOUND,
  _$gTaxExemptionManageErrorCodeNOT_EDITABLE_ORDER,
]);

const GThumbnailFormatEnum _$gThumbnailFormatEnumWEBP =
    const GThumbnailFormatEnum._('WEBP');

GThumbnailFormatEnum _$gThumbnailFormatEnumValueOf(String name) {
  switch (name) {
    case 'WEBP':
      return _$gThumbnailFormatEnumWEBP;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GThumbnailFormatEnum> _$gThumbnailFormatEnumValues =
    new BuiltSet<GThumbnailFormatEnum>(const <GThumbnailFormatEnum>[
  _$gThumbnailFormatEnumWEBP,
]);

const GTimePeriodTypeEnum _$gTimePeriodTypeEnumDAY =
    const GTimePeriodTypeEnum._('DAY');
const GTimePeriodTypeEnum _$gTimePeriodTypeEnumWEEK =
    const GTimePeriodTypeEnum._('WEEK');
const GTimePeriodTypeEnum _$gTimePeriodTypeEnumMONTH =
    const GTimePeriodTypeEnum._('MONTH');
const GTimePeriodTypeEnum _$gTimePeriodTypeEnumYEAR =
    const GTimePeriodTypeEnum._('YEAR');

GTimePeriodTypeEnum _$gTimePeriodTypeEnumValueOf(String name) {
  switch (name) {
    case 'DAY':
      return _$gTimePeriodTypeEnumDAY;
    case 'WEEK':
      return _$gTimePeriodTypeEnumWEEK;
    case 'MONTH':
      return _$gTimePeriodTypeEnumMONTH;
    case 'YEAR':
      return _$gTimePeriodTypeEnumYEAR;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTimePeriodTypeEnum> _$gTimePeriodTypeEnumValues =
    new BuiltSet<GTimePeriodTypeEnum>(const <GTimePeriodTypeEnum>[
  _$gTimePeriodTypeEnumDAY,
  _$gTimePeriodTypeEnumWEEK,
  _$gTimePeriodTypeEnumMONTH,
  _$gTimePeriodTypeEnumYEAR,
]);

const GTransactionActionEnum _$gTransactionActionEnumCHARGE =
    const GTransactionActionEnum._('CHARGE');
const GTransactionActionEnum _$gTransactionActionEnumREFUND =
    const GTransactionActionEnum._('REFUND');
const GTransactionActionEnum _$gTransactionActionEnumVOID =
    const GTransactionActionEnum._('VOID');

GTransactionActionEnum _$gTransactionActionEnumValueOf(String name) {
  switch (name) {
    case 'CHARGE':
      return _$gTransactionActionEnumCHARGE;
    case 'REFUND':
      return _$gTransactionActionEnumREFUND;
    case 'VOID':
      return _$gTransactionActionEnumVOID;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTransactionActionEnum> _$gTransactionActionEnumValues =
    new BuiltSet<GTransactionActionEnum>(const <GTransactionActionEnum>[
  _$gTransactionActionEnumCHARGE,
  _$gTransactionActionEnumREFUND,
  _$gTransactionActionEnumVOID,
]);

const GTransactionCreateErrorCode _$gTransactionCreateErrorCodeINVALID =
    const GTransactionCreateErrorCode._('INVALID');
const GTransactionCreateErrorCode _$gTransactionCreateErrorCodeGRAPHQL_ERROR =
    const GTransactionCreateErrorCode._('GRAPHQL_ERROR');
const GTransactionCreateErrorCode _$gTransactionCreateErrorCodeNOT_FOUND =
    const GTransactionCreateErrorCode._('NOT_FOUND');
const GTransactionCreateErrorCode
    _$gTransactionCreateErrorCodeINCORRECT_CURRENCY =
    const GTransactionCreateErrorCode._('INCORRECT_CURRENCY');
const GTransactionCreateErrorCode
    _$gTransactionCreateErrorCodeMETADATA_KEY_REQUIRED =
    const GTransactionCreateErrorCode._('METADATA_KEY_REQUIRED');

GTransactionCreateErrorCode _$gTransactionCreateErrorCodeValueOf(String name) {
  switch (name) {
    case 'INVALID':
      return _$gTransactionCreateErrorCodeINVALID;
    case 'GRAPHQL_ERROR':
      return _$gTransactionCreateErrorCodeGRAPHQL_ERROR;
    case 'NOT_FOUND':
      return _$gTransactionCreateErrorCodeNOT_FOUND;
    case 'INCORRECT_CURRENCY':
      return _$gTransactionCreateErrorCodeINCORRECT_CURRENCY;
    case 'METADATA_KEY_REQUIRED':
      return _$gTransactionCreateErrorCodeMETADATA_KEY_REQUIRED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTransactionCreateErrorCode>
    _$gTransactionCreateErrorCodeValues = new BuiltSet<
        GTransactionCreateErrorCode>(const <GTransactionCreateErrorCode>[
  _$gTransactionCreateErrorCodeINVALID,
  _$gTransactionCreateErrorCodeGRAPHQL_ERROR,
  _$gTransactionCreateErrorCodeNOT_FOUND,
  _$gTransactionCreateErrorCodeINCORRECT_CURRENCY,
  _$gTransactionCreateErrorCodeMETADATA_KEY_REQUIRED,
]);

const GTransactionKind _$gTransactionKindEXTERNAL =
    const GTransactionKind._('EXTERNAL');
const GTransactionKind _$gTransactionKindAUTH =
    const GTransactionKind._('AUTH');
const GTransactionKind _$gTransactionKindPENDING =
    const GTransactionKind._('PENDING');
const GTransactionKind _$gTransactionKindACTION_TO_CONFIRM =
    const GTransactionKind._('ACTION_TO_CONFIRM');
const GTransactionKind _$gTransactionKindREFUND =
    const GTransactionKind._('REFUND');
const GTransactionKind _$gTransactionKindREFUND_ONGOING =
    const GTransactionKind._('REFUND_ONGOING');
const GTransactionKind _$gTransactionKindCAPTURE =
    const GTransactionKind._('CAPTURE');
const GTransactionKind _$gTransactionKindVOID =
    const GTransactionKind._('VOID');
const GTransactionKind _$gTransactionKindCONFIRM =
    const GTransactionKind._('CONFIRM');
const GTransactionKind _$gTransactionKindCANCEL =
    const GTransactionKind._('CANCEL');

GTransactionKind _$gTransactionKindValueOf(String name) {
  switch (name) {
    case 'EXTERNAL':
      return _$gTransactionKindEXTERNAL;
    case 'AUTH':
      return _$gTransactionKindAUTH;
    case 'PENDING':
      return _$gTransactionKindPENDING;
    case 'ACTION_TO_CONFIRM':
      return _$gTransactionKindACTION_TO_CONFIRM;
    case 'REFUND':
      return _$gTransactionKindREFUND;
    case 'REFUND_ONGOING':
      return _$gTransactionKindREFUND_ONGOING;
    case 'CAPTURE':
      return _$gTransactionKindCAPTURE;
    case 'VOID':
      return _$gTransactionKindVOID;
    case 'CONFIRM':
      return _$gTransactionKindCONFIRM;
    case 'CANCEL':
      return _$gTransactionKindCANCEL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTransactionKind> _$gTransactionKindValues =
    new BuiltSet<GTransactionKind>(const <GTransactionKind>[
  _$gTransactionKindEXTERNAL,
  _$gTransactionKindAUTH,
  _$gTransactionKindPENDING,
  _$gTransactionKindACTION_TO_CONFIRM,
  _$gTransactionKindREFUND,
  _$gTransactionKindREFUND_ONGOING,
  _$gTransactionKindCAPTURE,
  _$gTransactionKindVOID,
  _$gTransactionKindCONFIRM,
  _$gTransactionKindCANCEL,
]);

const GTransactionRequestActionErrorCode
    _$gTransactionRequestActionErrorCodeINVALID =
    const GTransactionRequestActionErrorCode._('INVALID');
const GTransactionRequestActionErrorCode
    _$gTransactionRequestActionErrorCodeGRAPHQL_ERROR =
    const GTransactionRequestActionErrorCode._('GRAPHQL_ERROR');
const GTransactionRequestActionErrorCode
    _$gTransactionRequestActionErrorCodeNOT_FOUND =
    const GTransactionRequestActionErrorCode._('NOT_FOUND');
const GTransactionRequestActionErrorCode
    _$gTransactionRequestActionErrorCodeMISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK =
    const GTransactionRequestActionErrorCode._(
        'MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK');

GTransactionRequestActionErrorCode _$gTransactionRequestActionErrorCodeValueOf(
    String name) {
  switch (name) {
    case 'INVALID':
      return _$gTransactionRequestActionErrorCodeINVALID;
    case 'GRAPHQL_ERROR':
      return _$gTransactionRequestActionErrorCodeGRAPHQL_ERROR;
    case 'NOT_FOUND':
      return _$gTransactionRequestActionErrorCodeNOT_FOUND;
    case 'MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK':
      return _$gTransactionRequestActionErrorCodeMISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTransactionRequestActionErrorCode>
    _$gTransactionRequestActionErrorCodeValues =
    new BuiltSet<GTransactionRequestActionErrorCode>(const <
        GTransactionRequestActionErrorCode>[
  _$gTransactionRequestActionErrorCodeINVALID,
  _$gTransactionRequestActionErrorCodeGRAPHQL_ERROR,
  _$gTransactionRequestActionErrorCodeNOT_FOUND,
  _$gTransactionRequestActionErrorCodeMISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK,
]);

const GTransactionStatus _$gTransactionStatusPENDING =
    const GTransactionStatus._('PENDING');
const GTransactionStatus _$gTransactionStatusSUCCESS =
    const GTransactionStatus._('SUCCESS');
const GTransactionStatus _$gTransactionStatusFAILURE =
    const GTransactionStatus._('FAILURE');

GTransactionStatus _$gTransactionStatusValueOf(String name) {
  switch (name) {
    case 'PENDING':
      return _$gTransactionStatusPENDING;
    case 'SUCCESS':
      return _$gTransactionStatusSUCCESS;
    case 'FAILURE':
      return _$gTransactionStatusFAILURE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTransactionStatus> _$gTransactionStatusValues =
    new BuiltSet<GTransactionStatus>(const <GTransactionStatus>[
  _$gTransactionStatusPENDING,
  _$gTransactionStatusSUCCESS,
  _$gTransactionStatusFAILURE,
]);

const GTransactionUpdateErrorCode _$gTransactionUpdateErrorCodeINVALID =
    const GTransactionUpdateErrorCode._('INVALID');
const GTransactionUpdateErrorCode _$gTransactionUpdateErrorCodeGRAPHQL_ERROR =
    const GTransactionUpdateErrorCode._('GRAPHQL_ERROR');
const GTransactionUpdateErrorCode _$gTransactionUpdateErrorCodeNOT_FOUND =
    const GTransactionUpdateErrorCode._('NOT_FOUND');
const GTransactionUpdateErrorCode
    _$gTransactionUpdateErrorCodeINCORRECT_CURRENCY =
    const GTransactionUpdateErrorCode._('INCORRECT_CURRENCY');
const GTransactionUpdateErrorCode
    _$gTransactionUpdateErrorCodeMETADATA_KEY_REQUIRED =
    const GTransactionUpdateErrorCode._('METADATA_KEY_REQUIRED');

GTransactionUpdateErrorCode _$gTransactionUpdateErrorCodeValueOf(String name) {
  switch (name) {
    case 'INVALID':
      return _$gTransactionUpdateErrorCodeINVALID;
    case 'GRAPHQL_ERROR':
      return _$gTransactionUpdateErrorCodeGRAPHQL_ERROR;
    case 'NOT_FOUND':
      return _$gTransactionUpdateErrorCodeNOT_FOUND;
    case 'INCORRECT_CURRENCY':
      return _$gTransactionUpdateErrorCodeINCORRECT_CURRENCY;
    case 'METADATA_KEY_REQUIRED':
      return _$gTransactionUpdateErrorCodeMETADATA_KEY_REQUIRED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTransactionUpdateErrorCode>
    _$gTransactionUpdateErrorCodeValues = new BuiltSet<
        GTransactionUpdateErrorCode>(const <GTransactionUpdateErrorCode>[
  _$gTransactionUpdateErrorCodeINVALID,
  _$gTransactionUpdateErrorCodeGRAPHQL_ERROR,
  _$gTransactionUpdateErrorCodeNOT_FOUND,
  _$gTransactionUpdateErrorCodeINCORRECT_CURRENCY,
  _$gTransactionUpdateErrorCodeMETADATA_KEY_REQUIRED,
]);

const GTranslatableKinds _$gTranslatableKindsATTRIBUTE =
    const GTranslatableKinds._('ATTRIBUTE');
const GTranslatableKinds _$gTranslatableKindsATTRIBUTE_VALUE =
    const GTranslatableKinds._('ATTRIBUTE_VALUE');
const GTranslatableKinds _$gTranslatableKindsCATEGORY =
    const GTranslatableKinds._('CATEGORY');
const GTranslatableKinds _$gTranslatableKindsCOLLECTION =
    const GTranslatableKinds._('COLLECTION');
const GTranslatableKinds _$gTranslatableKindsMENU_ITEM =
    const GTranslatableKinds._('MENU_ITEM');
const GTranslatableKinds _$gTranslatableKindsPAGE =
    const GTranslatableKinds._('PAGE');
const GTranslatableKinds _$gTranslatableKindsPRODUCT =
    const GTranslatableKinds._('PRODUCT');
const GTranslatableKinds _$gTranslatableKindsSALE =
    const GTranslatableKinds._('SALE');
const GTranslatableKinds _$gTranslatableKindsSHIPPING_METHOD =
    const GTranslatableKinds._('SHIPPING_METHOD');
const GTranslatableKinds _$gTranslatableKindsVARIANT =
    const GTranslatableKinds._('VARIANT');
const GTranslatableKinds _$gTranslatableKindsVOUCHER =
    const GTranslatableKinds._('VOUCHER');

GTranslatableKinds _$gTranslatableKindsValueOf(String name) {
  switch (name) {
    case 'ATTRIBUTE':
      return _$gTranslatableKindsATTRIBUTE;
    case 'ATTRIBUTE_VALUE':
      return _$gTranslatableKindsATTRIBUTE_VALUE;
    case 'CATEGORY':
      return _$gTranslatableKindsCATEGORY;
    case 'COLLECTION':
      return _$gTranslatableKindsCOLLECTION;
    case 'MENU_ITEM':
      return _$gTranslatableKindsMENU_ITEM;
    case 'PAGE':
      return _$gTranslatableKindsPAGE;
    case 'PRODUCT':
      return _$gTranslatableKindsPRODUCT;
    case 'SALE':
      return _$gTranslatableKindsSALE;
    case 'SHIPPING_METHOD':
      return _$gTranslatableKindsSHIPPING_METHOD;
    case 'VARIANT':
      return _$gTranslatableKindsVARIANT;
    case 'VOUCHER':
      return _$gTranslatableKindsVOUCHER;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTranslatableKinds> _$gTranslatableKindsValues =
    new BuiltSet<GTranslatableKinds>(const <GTranslatableKinds>[
  _$gTranslatableKindsATTRIBUTE,
  _$gTranslatableKindsATTRIBUTE_VALUE,
  _$gTranslatableKindsCATEGORY,
  _$gTranslatableKindsCOLLECTION,
  _$gTranslatableKindsMENU_ITEM,
  _$gTranslatableKindsPAGE,
  _$gTranslatableKindsPRODUCT,
  _$gTranslatableKindsSALE,
  _$gTranslatableKindsSHIPPING_METHOD,
  _$gTranslatableKindsVARIANT,
  _$gTranslatableKindsVOUCHER,
]);

const GTranslationErrorCode _$gTranslationErrorCodeGRAPHQL_ERROR =
    const GTranslationErrorCode._('GRAPHQL_ERROR');
const GTranslationErrorCode _$gTranslationErrorCodeINVALID =
    const GTranslationErrorCode._('INVALID');
const GTranslationErrorCode _$gTranslationErrorCodeNOT_FOUND =
    const GTranslationErrorCode._('NOT_FOUND');
const GTranslationErrorCode _$gTranslationErrorCodeREQUIRED =
    const GTranslationErrorCode._('REQUIRED');

GTranslationErrorCode _$gTranslationErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gTranslationErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gTranslationErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gTranslationErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gTranslationErrorCodeREQUIRED;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GTranslationErrorCode> _$gTranslationErrorCodeValues =
    new BuiltSet<GTranslationErrorCode>(const <GTranslationErrorCode>[
  _$gTranslationErrorCodeGRAPHQL_ERROR,
  _$gTranslationErrorCodeINVALID,
  _$gTranslationErrorCodeNOT_FOUND,
  _$gTranslationErrorCodeREQUIRED,
]);

const GUploadErrorCode _$gUploadErrorCodeGRAPHQL_ERROR =
    const GUploadErrorCode._('GRAPHQL_ERROR');

GUploadErrorCode _$gUploadErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gUploadErrorCodeGRAPHQL_ERROR;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GUploadErrorCode> _$gUploadErrorCodeValues =
    new BuiltSet<GUploadErrorCode>(const <GUploadErrorCode>[
  _$gUploadErrorCodeGRAPHQL_ERROR,
]);

const GUserSortField _$gUserSortFieldFIRST_NAME =
    const GUserSortField._('FIRST_NAME');
const GUserSortField _$gUserSortFieldLAST_NAME =
    const GUserSortField._('LAST_NAME');
const GUserSortField _$gUserSortFieldEMAIL = const GUserSortField._('EMAIL');
const GUserSortField _$gUserSortFieldORDER_COUNT =
    const GUserSortField._('ORDER_COUNT');
const GUserSortField _$gUserSortFieldCREATED_AT =
    const GUserSortField._('CREATED_AT');
const GUserSortField _$gUserSortFieldLAST_MODIFIED_AT =
    const GUserSortField._('LAST_MODIFIED_AT');

GUserSortField _$gUserSortFieldValueOf(String name) {
  switch (name) {
    case 'FIRST_NAME':
      return _$gUserSortFieldFIRST_NAME;
    case 'LAST_NAME':
      return _$gUserSortFieldLAST_NAME;
    case 'EMAIL':
      return _$gUserSortFieldEMAIL;
    case 'ORDER_COUNT':
      return _$gUserSortFieldORDER_COUNT;
    case 'CREATED_AT':
      return _$gUserSortFieldCREATED_AT;
    case 'LAST_MODIFIED_AT':
      return _$gUserSortFieldLAST_MODIFIED_AT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GUserSortField> _$gUserSortFieldValues =
    new BuiltSet<GUserSortField>(const <GUserSortField>[
  _$gUserSortFieldFIRST_NAME,
  _$gUserSortFieldLAST_NAME,
  _$gUserSortFieldEMAIL,
  _$gUserSortFieldORDER_COUNT,
  _$gUserSortFieldCREATED_AT,
  _$gUserSortFieldLAST_MODIFIED_AT,
]);

const GVariantAttributeScope _$gVariantAttributeScopeALL =
    const GVariantAttributeScope._('ALL');
const GVariantAttributeScope _$gVariantAttributeScopeVARIANT_SELECTION =
    const GVariantAttributeScope._('VARIANT_SELECTION');
const GVariantAttributeScope _$gVariantAttributeScopeNOT_VARIANT_SELECTION =
    const GVariantAttributeScope._('NOT_VARIANT_SELECTION');

GVariantAttributeScope _$gVariantAttributeScopeValueOf(String name) {
  switch (name) {
    case 'ALL':
      return _$gVariantAttributeScopeALL;
    case 'VARIANT_SELECTION':
      return _$gVariantAttributeScopeVARIANT_SELECTION;
    case 'NOT_VARIANT_SELECTION':
      return _$gVariantAttributeScopeNOT_VARIANT_SELECTION;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVariantAttributeScope> _$gVariantAttributeScopeValues =
    new BuiltSet<GVariantAttributeScope>(const <GVariantAttributeScope>[
  _$gVariantAttributeScopeALL,
  _$gVariantAttributeScopeVARIANT_SELECTION,
  _$gVariantAttributeScopeNOT_VARIANT_SELECTION,
]);

const GVolumeUnitsEnum _$gVolumeUnitsEnumCUBIC_MILLIMETER =
    const GVolumeUnitsEnum._('CUBIC_MILLIMETER');
const GVolumeUnitsEnum _$gVolumeUnitsEnumCUBIC_CENTIMETER =
    const GVolumeUnitsEnum._('CUBIC_CENTIMETER');
const GVolumeUnitsEnum _$gVolumeUnitsEnumCUBIC_DECIMETER =
    const GVolumeUnitsEnum._('CUBIC_DECIMETER');
const GVolumeUnitsEnum _$gVolumeUnitsEnumCUBIC_METER =
    const GVolumeUnitsEnum._('CUBIC_METER');
const GVolumeUnitsEnum _$gVolumeUnitsEnumLITER =
    const GVolumeUnitsEnum._('LITER');
const GVolumeUnitsEnum _$gVolumeUnitsEnumCUBIC_FOOT =
    const GVolumeUnitsEnum._('CUBIC_FOOT');
const GVolumeUnitsEnum _$gVolumeUnitsEnumCUBIC_INCH =
    const GVolumeUnitsEnum._('CUBIC_INCH');
const GVolumeUnitsEnum _$gVolumeUnitsEnumCUBIC_YARD =
    const GVolumeUnitsEnum._('CUBIC_YARD');
const GVolumeUnitsEnum _$gVolumeUnitsEnumQT = const GVolumeUnitsEnum._('QT');
const GVolumeUnitsEnum _$gVolumeUnitsEnumPINT =
    const GVolumeUnitsEnum._('PINT');
const GVolumeUnitsEnum _$gVolumeUnitsEnumFL_OZ =
    const GVolumeUnitsEnum._('FL_OZ');
const GVolumeUnitsEnum _$gVolumeUnitsEnumACRE_IN =
    const GVolumeUnitsEnum._('ACRE_IN');
const GVolumeUnitsEnum _$gVolumeUnitsEnumACRE_FT =
    const GVolumeUnitsEnum._('ACRE_FT');

GVolumeUnitsEnum _$gVolumeUnitsEnumValueOf(String name) {
  switch (name) {
    case 'CUBIC_MILLIMETER':
      return _$gVolumeUnitsEnumCUBIC_MILLIMETER;
    case 'CUBIC_CENTIMETER':
      return _$gVolumeUnitsEnumCUBIC_CENTIMETER;
    case 'CUBIC_DECIMETER':
      return _$gVolumeUnitsEnumCUBIC_DECIMETER;
    case 'CUBIC_METER':
      return _$gVolumeUnitsEnumCUBIC_METER;
    case 'LITER':
      return _$gVolumeUnitsEnumLITER;
    case 'CUBIC_FOOT':
      return _$gVolumeUnitsEnumCUBIC_FOOT;
    case 'CUBIC_INCH':
      return _$gVolumeUnitsEnumCUBIC_INCH;
    case 'CUBIC_YARD':
      return _$gVolumeUnitsEnumCUBIC_YARD;
    case 'QT':
      return _$gVolumeUnitsEnumQT;
    case 'PINT':
      return _$gVolumeUnitsEnumPINT;
    case 'FL_OZ':
      return _$gVolumeUnitsEnumFL_OZ;
    case 'ACRE_IN':
      return _$gVolumeUnitsEnumACRE_IN;
    case 'ACRE_FT':
      return _$gVolumeUnitsEnumACRE_FT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVolumeUnitsEnum> _$gVolumeUnitsEnumValues =
    new BuiltSet<GVolumeUnitsEnum>(const <GVolumeUnitsEnum>[
  _$gVolumeUnitsEnumCUBIC_MILLIMETER,
  _$gVolumeUnitsEnumCUBIC_CENTIMETER,
  _$gVolumeUnitsEnumCUBIC_DECIMETER,
  _$gVolumeUnitsEnumCUBIC_METER,
  _$gVolumeUnitsEnumLITER,
  _$gVolumeUnitsEnumCUBIC_FOOT,
  _$gVolumeUnitsEnumCUBIC_INCH,
  _$gVolumeUnitsEnumCUBIC_YARD,
  _$gVolumeUnitsEnumQT,
  _$gVolumeUnitsEnumPINT,
  _$gVolumeUnitsEnumFL_OZ,
  _$gVolumeUnitsEnumACRE_IN,
  _$gVolumeUnitsEnumACRE_FT,
]);

const GVoucherDiscountType _$gVoucherDiscountTypeFIXED =
    const GVoucherDiscountType._('FIXED');
const GVoucherDiscountType _$gVoucherDiscountTypePERCENTAGE =
    const GVoucherDiscountType._('PERCENTAGE');
const GVoucherDiscountType _$gVoucherDiscountTypeSHIPPING =
    const GVoucherDiscountType._('SHIPPING');

GVoucherDiscountType _$gVoucherDiscountTypeValueOf(String name) {
  switch (name) {
    case 'FIXED':
      return _$gVoucherDiscountTypeFIXED;
    case 'PERCENTAGE':
      return _$gVoucherDiscountTypePERCENTAGE;
    case 'SHIPPING':
      return _$gVoucherDiscountTypeSHIPPING;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVoucherDiscountType> _$gVoucherDiscountTypeValues =
    new BuiltSet<GVoucherDiscountType>(const <GVoucherDiscountType>[
  _$gVoucherDiscountTypeFIXED,
  _$gVoucherDiscountTypePERCENTAGE,
  _$gVoucherDiscountTypeSHIPPING,
]);

const GVoucherSortField _$gVoucherSortFieldCODE =
    const GVoucherSortField._('CODE');
const GVoucherSortField _$gVoucherSortFieldSTART_DATE =
    const GVoucherSortField._('START_DATE');
const GVoucherSortField _$gVoucherSortFieldEND_DATE =
    const GVoucherSortField._('END_DATE');
const GVoucherSortField _$gVoucherSortFieldVALUE =
    const GVoucherSortField._('VALUE');
const GVoucherSortField _$gVoucherSortFieldTYPE =
    const GVoucherSortField._('TYPE');
const GVoucherSortField _$gVoucherSortFieldUSAGE_LIMIT =
    const GVoucherSortField._('USAGE_LIMIT');
const GVoucherSortField _$gVoucherSortFieldMINIMUM_SPENT_AMOUNT =
    const GVoucherSortField._('MINIMUM_SPENT_AMOUNT');

GVoucherSortField _$gVoucherSortFieldValueOf(String name) {
  switch (name) {
    case 'CODE':
      return _$gVoucherSortFieldCODE;
    case 'START_DATE':
      return _$gVoucherSortFieldSTART_DATE;
    case 'END_DATE':
      return _$gVoucherSortFieldEND_DATE;
    case 'VALUE':
      return _$gVoucherSortFieldVALUE;
    case 'TYPE':
      return _$gVoucherSortFieldTYPE;
    case 'USAGE_LIMIT':
      return _$gVoucherSortFieldUSAGE_LIMIT;
    case 'MINIMUM_SPENT_AMOUNT':
      return _$gVoucherSortFieldMINIMUM_SPENT_AMOUNT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVoucherSortField> _$gVoucherSortFieldValues =
    new BuiltSet<GVoucherSortField>(const <GVoucherSortField>[
  _$gVoucherSortFieldCODE,
  _$gVoucherSortFieldSTART_DATE,
  _$gVoucherSortFieldEND_DATE,
  _$gVoucherSortFieldVALUE,
  _$gVoucherSortFieldTYPE,
  _$gVoucherSortFieldUSAGE_LIMIT,
  _$gVoucherSortFieldMINIMUM_SPENT_AMOUNT,
]);

const GVoucherTypeEnum _$gVoucherTypeEnumSHIPPING =
    const GVoucherTypeEnum._('SHIPPING');
const GVoucherTypeEnum _$gVoucherTypeEnumENTIRE_ORDER =
    const GVoucherTypeEnum._('ENTIRE_ORDER');
const GVoucherTypeEnum _$gVoucherTypeEnumSPECIFIC_PRODUCT =
    const GVoucherTypeEnum._('SPECIFIC_PRODUCT');

GVoucherTypeEnum _$gVoucherTypeEnumValueOf(String name) {
  switch (name) {
    case 'SHIPPING':
      return _$gVoucherTypeEnumSHIPPING;
    case 'ENTIRE_ORDER':
      return _$gVoucherTypeEnumENTIRE_ORDER;
    case 'SPECIFIC_PRODUCT':
      return _$gVoucherTypeEnumSPECIFIC_PRODUCT;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GVoucherTypeEnum> _$gVoucherTypeEnumValues =
    new BuiltSet<GVoucherTypeEnum>(const <GVoucherTypeEnum>[
  _$gVoucherTypeEnumSHIPPING,
  _$gVoucherTypeEnumENTIRE_ORDER,
  _$gVoucherTypeEnumSPECIFIC_PRODUCT,
]);

const GWarehouseClickAndCollectOptionEnum
    _$gWarehouseClickAndCollectOptionEnumDISABLED =
    const GWarehouseClickAndCollectOptionEnum._('DISABLED');
const GWarehouseClickAndCollectOptionEnum
    _$gWarehouseClickAndCollectOptionEnumLOCAL =
    const GWarehouseClickAndCollectOptionEnum._('LOCAL');
const GWarehouseClickAndCollectOptionEnum
    _$gWarehouseClickAndCollectOptionEnumALL =
    const GWarehouseClickAndCollectOptionEnum._('ALL');

GWarehouseClickAndCollectOptionEnum
    _$gWarehouseClickAndCollectOptionEnumValueOf(String name) {
  switch (name) {
    case 'DISABLED':
      return _$gWarehouseClickAndCollectOptionEnumDISABLED;
    case 'LOCAL':
      return _$gWarehouseClickAndCollectOptionEnumLOCAL;
    case 'ALL':
      return _$gWarehouseClickAndCollectOptionEnumALL;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWarehouseClickAndCollectOptionEnum>
    _$gWarehouseClickAndCollectOptionEnumValues =
    new BuiltSet<GWarehouseClickAndCollectOptionEnum>(const <
        GWarehouseClickAndCollectOptionEnum>[
  _$gWarehouseClickAndCollectOptionEnumDISABLED,
  _$gWarehouseClickAndCollectOptionEnumLOCAL,
  _$gWarehouseClickAndCollectOptionEnumALL,
]);

const GWarehouseErrorCode _$gWarehouseErrorCodeALREADY_EXISTS =
    const GWarehouseErrorCode._('ALREADY_EXISTS');
const GWarehouseErrorCode _$gWarehouseErrorCodeGRAPHQL_ERROR =
    const GWarehouseErrorCode._('GRAPHQL_ERROR');
const GWarehouseErrorCode _$gWarehouseErrorCodeINVALID =
    const GWarehouseErrorCode._('INVALID');
const GWarehouseErrorCode _$gWarehouseErrorCodeNOT_FOUND =
    const GWarehouseErrorCode._('NOT_FOUND');
const GWarehouseErrorCode _$gWarehouseErrorCodeREQUIRED =
    const GWarehouseErrorCode._('REQUIRED');
const GWarehouseErrorCode _$gWarehouseErrorCodeUNIQUE =
    const GWarehouseErrorCode._('UNIQUE');

GWarehouseErrorCode _$gWarehouseErrorCodeValueOf(String name) {
  switch (name) {
    case 'ALREADY_EXISTS':
      return _$gWarehouseErrorCodeALREADY_EXISTS;
    case 'GRAPHQL_ERROR':
      return _$gWarehouseErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gWarehouseErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gWarehouseErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gWarehouseErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gWarehouseErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWarehouseErrorCode> _$gWarehouseErrorCodeValues =
    new BuiltSet<GWarehouseErrorCode>(const <GWarehouseErrorCode>[
  _$gWarehouseErrorCodeALREADY_EXISTS,
  _$gWarehouseErrorCodeGRAPHQL_ERROR,
  _$gWarehouseErrorCodeINVALID,
  _$gWarehouseErrorCodeNOT_FOUND,
  _$gWarehouseErrorCodeREQUIRED,
  _$gWarehouseErrorCodeUNIQUE,
]);

const GWarehouseSortField _$gWarehouseSortFieldNAME =
    const GWarehouseSortField._('NAME');

GWarehouseSortField _$gWarehouseSortFieldValueOf(String name) {
  switch (name) {
    case 'NAME':
      return _$gWarehouseSortFieldNAME;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWarehouseSortField> _$gWarehouseSortFieldValues =
    new BuiltSet<GWarehouseSortField>(const <GWarehouseSortField>[
  _$gWarehouseSortFieldNAME,
]);

const GWebhookErrorCode _$gWebhookErrorCodeGRAPHQL_ERROR =
    const GWebhookErrorCode._('GRAPHQL_ERROR');
const GWebhookErrorCode _$gWebhookErrorCodeINVALID =
    const GWebhookErrorCode._('INVALID');
const GWebhookErrorCode _$gWebhookErrorCodeNOT_FOUND =
    const GWebhookErrorCode._('NOT_FOUND');
const GWebhookErrorCode _$gWebhookErrorCodeREQUIRED =
    const GWebhookErrorCode._('REQUIRED');
const GWebhookErrorCode _$gWebhookErrorCodeUNIQUE =
    const GWebhookErrorCode._('UNIQUE');

GWebhookErrorCode _$gWebhookErrorCodeValueOf(String name) {
  switch (name) {
    case 'GRAPHQL_ERROR':
      return _$gWebhookErrorCodeGRAPHQL_ERROR;
    case 'INVALID':
      return _$gWebhookErrorCodeINVALID;
    case 'NOT_FOUND':
      return _$gWebhookErrorCodeNOT_FOUND;
    case 'REQUIRED':
      return _$gWebhookErrorCodeREQUIRED;
    case 'UNIQUE':
      return _$gWebhookErrorCodeUNIQUE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookErrorCode> _$gWebhookErrorCodeValues =
    new BuiltSet<GWebhookErrorCode>(const <GWebhookErrorCode>[
  _$gWebhookErrorCodeGRAPHQL_ERROR,
  _$gWebhookErrorCodeINVALID,
  _$gWebhookErrorCodeNOT_FOUND,
  _$gWebhookErrorCodeREQUIRED,
  _$gWebhookErrorCodeUNIQUE,
]);

const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumANY_EVENTS =
    const GWebhookEventTypeAsyncEnum._('ANY_EVENTS');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumADDRESS_CREATED =
    const GWebhookEventTypeAsyncEnum._('ADDRESS_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumADDRESS_UPDATED =
    const GWebhookEventTypeAsyncEnum._('ADDRESS_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumADDRESS_DELETED =
    const GWebhookEventTypeAsyncEnum._('ADDRESS_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumAPP_INSTALLED =
    const GWebhookEventTypeAsyncEnum._('APP_INSTALLED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumAPP_UPDATED =
    const GWebhookEventTypeAsyncEnum._('APP_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumAPP_DELETED =
    const GWebhookEventTypeAsyncEnum._('APP_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumAPP_STATUS_CHANGED =
    const GWebhookEventTypeAsyncEnum._('APP_STATUS_CHANGED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumATTRIBUTE_CREATED =
    const GWebhookEventTypeAsyncEnum._('ATTRIBUTE_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumATTRIBUTE_UPDATED =
    const GWebhookEventTypeAsyncEnum._('ATTRIBUTE_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumATTRIBUTE_DELETED =
    const GWebhookEventTypeAsyncEnum._('ATTRIBUTE_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_CREATED =
    const GWebhookEventTypeAsyncEnum._('ATTRIBUTE_VALUE_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_UPDATED =
    const GWebhookEventTypeAsyncEnum._('ATTRIBUTE_VALUE_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_DELETED =
    const GWebhookEventTypeAsyncEnum._('ATTRIBUTE_VALUE_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCATEGORY_CREATED =
    const GWebhookEventTypeAsyncEnum._('CATEGORY_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCATEGORY_UPDATED =
    const GWebhookEventTypeAsyncEnum._('CATEGORY_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCATEGORY_DELETED =
    const GWebhookEventTypeAsyncEnum._('CATEGORY_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCHANNEL_CREATED =
    const GWebhookEventTypeAsyncEnum._('CHANNEL_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCHANNEL_UPDATED =
    const GWebhookEventTypeAsyncEnum._('CHANNEL_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCHANNEL_DELETED =
    const GWebhookEventTypeAsyncEnum._('CHANNEL_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumCHANNEL_STATUS_CHANGED =
    const GWebhookEventTypeAsyncEnum._('CHANNEL_STATUS_CHANGED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumGIFT_CARD_CREATED =
    const GWebhookEventTypeAsyncEnum._('GIFT_CARD_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumGIFT_CARD_UPDATED =
    const GWebhookEventTypeAsyncEnum._('GIFT_CARD_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumGIFT_CARD_DELETED =
    const GWebhookEventTypeAsyncEnum._('GIFT_CARD_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumGIFT_CARD_STATUS_CHANGED =
    const GWebhookEventTypeAsyncEnum._('GIFT_CARD_STATUS_CHANGED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumGIFT_CARD_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('GIFT_CARD_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumMENU_CREATED =
    const GWebhookEventTypeAsyncEnum._('MENU_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumMENU_UPDATED =
    const GWebhookEventTypeAsyncEnum._('MENU_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumMENU_DELETED =
    const GWebhookEventTypeAsyncEnum._('MENU_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumMENU_ITEM_CREATED =
    const GWebhookEventTypeAsyncEnum._('MENU_ITEM_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumMENU_ITEM_UPDATED =
    const GWebhookEventTypeAsyncEnum._('MENU_ITEM_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumMENU_ITEM_DELETED =
    const GWebhookEventTypeAsyncEnum._('MENU_ITEM_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumORDER_CREATED =
    const GWebhookEventTypeAsyncEnum._('ORDER_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumORDER_CONFIRMED =
    const GWebhookEventTypeAsyncEnum._('ORDER_CONFIRMED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumORDER_FULLY_PAID =
    const GWebhookEventTypeAsyncEnum._('ORDER_FULLY_PAID');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumORDER_UPDATED =
    const GWebhookEventTypeAsyncEnum._('ORDER_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumORDER_CANCELLED =
    const GWebhookEventTypeAsyncEnum._('ORDER_CANCELLED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumORDER_FULFILLED =
    const GWebhookEventTypeAsyncEnum._('ORDER_FULFILLED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumORDER_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('ORDER_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_CREATED =
    const GWebhookEventTypeAsyncEnum._('DRAFT_ORDER_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_UPDATED =
    const GWebhookEventTypeAsyncEnum._('DRAFT_ORDER_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_DELETED =
    const GWebhookEventTypeAsyncEnum._('DRAFT_ORDER_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumSALE_CREATED =
    const GWebhookEventTypeAsyncEnum._('SALE_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumSALE_UPDATED =
    const GWebhookEventTypeAsyncEnum._('SALE_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumSALE_DELETED =
    const GWebhookEventTypeAsyncEnum._('SALE_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumSALE_TOGGLE =
    const GWebhookEventTypeAsyncEnum._('SALE_TOGGLE');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumINVOICE_REQUESTED =
    const GWebhookEventTypeAsyncEnum._('INVOICE_REQUESTED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumINVOICE_DELETED =
    const GWebhookEventTypeAsyncEnum._('INVOICE_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumINVOICE_SENT =
    const GWebhookEventTypeAsyncEnum._('INVOICE_SENT');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCUSTOMER_CREATED =
    const GWebhookEventTypeAsyncEnum._('CUSTOMER_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCUSTOMER_UPDATED =
    const GWebhookEventTypeAsyncEnum._('CUSTOMER_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCUSTOMER_DELETED =
    const GWebhookEventTypeAsyncEnum._('CUSTOMER_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumCUSTOMER_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('CUSTOMER_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumCOLLECTION_CREATED =
    const GWebhookEventTypeAsyncEnum._('COLLECTION_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumCOLLECTION_UPDATED =
    const GWebhookEventTypeAsyncEnum._('COLLECTION_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumCOLLECTION_DELETED =
    const GWebhookEventTypeAsyncEnum._('COLLECTION_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumCOLLECTION_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('COLLECTION_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPRODUCT_CREATED =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPRODUCT_UPDATED =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPRODUCT_DELETED =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPRODUCT_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_CREATED =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_VARIANT_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_UPDATED =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_VARIANT_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_DELETED =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_VARIANT_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_OUT_OF_STOCK =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_VARIANT_OUT_OF_STOCK');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_BACK_IN_STOCK =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_VARIANT_BACK_IN_STOCK');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('PRODUCT_VARIANT_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCHECKOUT_CREATED =
    const GWebhookEventTypeAsyncEnum._('CHECKOUT_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumCHECKOUT_UPDATED =
    const GWebhookEventTypeAsyncEnum._('CHECKOUT_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumCHECKOUT_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('CHECKOUT_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumFULFILLMENT_CREATED =
    const GWebhookEventTypeAsyncEnum._('FULFILLMENT_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumFULFILLMENT_CANCELED =
    const GWebhookEventTypeAsyncEnum._('FULFILLMENT_CANCELED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumFULFILLMENT_APPROVED =
    const GWebhookEventTypeAsyncEnum._('FULFILLMENT_APPROVED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumFULFILLMENT_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('FULFILLMENT_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumNOTIFY_USER =
    const GWebhookEventTypeAsyncEnum._('NOTIFY_USER');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPAGE_CREATED =
    const GWebhookEventTypeAsyncEnum._('PAGE_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPAGE_UPDATED =
    const GWebhookEventTypeAsyncEnum._('PAGE_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPAGE_DELETED =
    const GWebhookEventTypeAsyncEnum._('PAGE_DELETED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPAGE_TYPE_CREATED =
    const GWebhookEventTypeAsyncEnum._('PAGE_TYPE_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPAGE_TYPE_UPDATED =
    const GWebhookEventTypeAsyncEnum._('PAGE_TYPE_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumPAGE_TYPE_DELETED =
    const GWebhookEventTypeAsyncEnum._('PAGE_TYPE_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_CREATED =
    const GWebhookEventTypeAsyncEnum._('PERMISSION_GROUP_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_UPDATED =
    const GWebhookEventTypeAsyncEnum._('PERMISSION_GROUP_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_DELETED =
    const GWebhookEventTypeAsyncEnum._('PERMISSION_GROUP_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_CREATED =
    const GWebhookEventTypeAsyncEnum._('SHIPPING_PRICE_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_UPDATED =
    const GWebhookEventTypeAsyncEnum._('SHIPPING_PRICE_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_DELETED =
    const GWebhookEventTypeAsyncEnum._('SHIPPING_PRICE_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_CREATED =
    const GWebhookEventTypeAsyncEnum._('SHIPPING_ZONE_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_UPDATED =
    const GWebhookEventTypeAsyncEnum._('SHIPPING_ZONE_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_DELETED =
    const GWebhookEventTypeAsyncEnum._('SHIPPING_ZONE_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('SHIPPING_ZONE_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumSTAFF_CREATED =
    const GWebhookEventTypeAsyncEnum._('STAFF_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumSTAFF_UPDATED =
    const GWebhookEventTypeAsyncEnum._('STAFF_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumSTAFF_DELETED =
    const GWebhookEventTypeAsyncEnum._('STAFF_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumTRANSACTION_ACTION_REQUEST =
    const GWebhookEventTypeAsyncEnum._('TRANSACTION_ACTION_REQUEST');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumTRANSACTION_ITEM_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('TRANSACTION_ITEM_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumTRANSLATION_CREATED =
    const GWebhookEventTypeAsyncEnum._('TRANSLATION_CREATED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumTRANSLATION_UPDATED =
    const GWebhookEventTypeAsyncEnum._('TRANSLATION_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumWAREHOUSE_CREATED =
    const GWebhookEventTypeAsyncEnum._('WAREHOUSE_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumWAREHOUSE_UPDATED =
    const GWebhookEventTypeAsyncEnum._('WAREHOUSE_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumWAREHOUSE_DELETED =
    const GWebhookEventTypeAsyncEnum._('WAREHOUSE_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumWAREHOUSE_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('WAREHOUSE_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumVOUCHER_CREATED =
    const GWebhookEventTypeAsyncEnum._('VOUCHER_CREATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumVOUCHER_UPDATED =
    const GWebhookEventTypeAsyncEnum._('VOUCHER_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumVOUCHER_DELETED =
    const GWebhookEventTypeAsyncEnum._('VOUCHER_DELETED');
const GWebhookEventTypeAsyncEnum
    _$gWebhookEventTypeAsyncEnumVOUCHER_METADATA_UPDATED =
    const GWebhookEventTypeAsyncEnum._('VOUCHER_METADATA_UPDATED');
const GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumOBSERVABILITY =
    const GWebhookEventTypeAsyncEnum._('OBSERVABILITY');

GWebhookEventTypeAsyncEnum _$gWebhookEventTypeAsyncEnumValueOf(String name) {
  switch (name) {
    case 'ANY_EVENTS':
      return _$gWebhookEventTypeAsyncEnumANY_EVENTS;
    case 'ADDRESS_CREATED':
      return _$gWebhookEventTypeAsyncEnumADDRESS_CREATED;
    case 'ADDRESS_UPDATED':
      return _$gWebhookEventTypeAsyncEnumADDRESS_UPDATED;
    case 'ADDRESS_DELETED':
      return _$gWebhookEventTypeAsyncEnumADDRESS_DELETED;
    case 'APP_INSTALLED':
      return _$gWebhookEventTypeAsyncEnumAPP_INSTALLED;
    case 'APP_UPDATED':
      return _$gWebhookEventTypeAsyncEnumAPP_UPDATED;
    case 'APP_DELETED':
      return _$gWebhookEventTypeAsyncEnumAPP_DELETED;
    case 'APP_STATUS_CHANGED':
      return _$gWebhookEventTypeAsyncEnumAPP_STATUS_CHANGED;
    case 'ATTRIBUTE_CREATED':
      return _$gWebhookEventTypeAsyncEnumATTRIBUTE_CREATED;
    case 'ATTRIBUTE_UPDATED':
      return _$gWebhookEventTypeAsyncEnumATTRIBUTE_UPDATED;
    case 'ATTRIBUTE_DELETED':
      return _$gWebhookEventTypeAsyncEnumATTRIBUTE_DELETED;
    case 'ATTRIBUTE_VALUE_CREATED':
      return _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_CREATED;
    case 'ATTRIBUTE_VALUE_UPDATED':
      return _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_UPDATED;
    case 'ATTRIBUTE_VALUE_DELETED':
      return _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_DELETED;
    case 'CATEGORY_CREATED':
      return _$gWebhookEventTypeAsyncEnumCATEGORY_CREATED;
    case 'CATEGORY_UPDATED':
      return _$gWebhookEventTypeAsyncEnumCATEGORY_UPDATED;
    case 'CATEGORY_DELETED':
      return _$gWebhookEventTypeAsyncEnumCATEGORY_DELETED;
    case 'CHANNEL_CREATED':
      return _$gWebhookEventTypeAsyncEnumCHANNEL_CREATED;
    case 'CHANNEL_UPDATED':
      return _$gWebhookEventTypeAsyncEnumCHANNEL_UPDATED;
    case 'CHANNEL_DELETED':
      return _$gWebhookEventTypeAsyncEnumCHANNEL_DELETED;
    case 'CHANNEL_STATUS_CHANGED':
      return _$gWebhookEventTypeAsyncEnumCHANNEL_STATUS_CHANGED;
    case 'GIFT_CARD_CREATED':
      return _$gWebhookEventTypeAsyncEnumGIFT_CARD_CREATED;
    case 'GIFT_CARD_UPDATED':
      return _$gWebhookEventTypeAsyncEnumGIFT_CARD_UPDATED;
    case 'GIFT_CARD_DELETED':
      return _$gWebhookEventTypeAsyncEnumGIFT_CARD_DELETED;
    case 'GIFT_CARD_STATUS_CHANGED':
      return _$gWebhookEventTypeAsyncEnumGIFT_CARD_STATUS_CHANGED;
    case 'GIFT_CARD_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumGIFT_CARD_METADATA_UPDATED;
    case 'MENU_CREATED':
      return _$gWebhookEventTypeAsyncEnumMENU_CREATED;
    case 'MENU_UPDATED':
      return _$gWebhookEventTypeAsyncEnumMENU_UPDATED;
    case 'MENU_DELETED':
      return _$gWebhookEventTypeAsyncEnumMENU_DELETED;
    case 'MENU_ITEM_CREATED':
      return _$gWebhookEventTypeAsyncEnumMENU_ITEM_CREATED;
    case 'MENU_ITEM_UPDATED':
      return _$gWebhookEventTypeAsyncEnumMENU_ITEM_UPDATED;
    case 'MENU_ITEM_DELETED':
      return _$gWebhookEventTypeAsyncEnumMENU_ITEM_DELETED;
    case 'ORDER_CREATED':
      return _$gWebhookEventTypeAsyncEnumORDER_CREATED;
    case 'ORDER_CONFIRMED':
      return _$gWebhookEventTypeAsyncEnumORDER_CONFIRMED;
    case 'ORDER_FULLY_PAID':
      return _$gWebhookEventTypeAsyncEnumORDER_FULLY_PAID;
    case 'ORDER_UPDATED':
      return _$gWebhookEventTypeAsyncEnumORDER_UPDATED;
    case 'ORDER_CANCELLED':
      return _$gWebhookEventTypeAsyncEnumORDER_CANCELLED;
    case 'ORDER_FULFILLED':
      return _$gWebhookEventTypeAsyncEnumORDER_FULFILLED;
    case 'ORDER_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumORDER_METADATA_UPDATED;
    case 'DRAFT_ORDER_CREATED':
      return _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_CREATED;
    case 'DRAFT_ORDER_UPDATED':
      return _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_UPDATED;
    case 'DRAFT_ORDER_DELETED':
      return _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_DELETED;
    case 'SALE_CREATED':
      return _$gWebhookEventTypeAsyncEnumSALE_CREATED;
    case 'SALE_UPDATED':
      return _$gWebhookEventTypeAsyncEnumSALE_UPDATED;
    case 'SALE_DELETED':
      return _$gWebhookEventTypeAsyncEnumSALE_DELETED;
    case 'SALE_TOGGLE':
      return _$gWebhookEventTypeAsyncEnumSALE_TOGGLE;
    case 'INVOICE_REQUESTED':
      return _$gWebhookEventTypeAsyncEnumINVOICE_REQUESTED;
    case 'INVOICE_DELETED':
      return _$gWebhookEventTypeAsyncEnumINVOICE_DELETED;
    case 'INVOICE_SENT':
      return _$gWebhookEventTypeAsyncEnumINVOICE_SENT;
    case 'CUSTOMER_CREATED':
      return _$gWebhookEventTypeAsyncEnumCUSTOMER_CREATED;
    case 'CUSTOMER_UPDATED':
      return _$gWebhookEventTypeAsyncEnumCUSTOMER_UPDATED;
    case 'CUSTOMER_DELETED':
      return _$gWebhookEventTypeAsyncEnumCUSTOMER_DELETED;
    case 'CUSTOMER_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumCUSTOMER_METADATA_UPDATED;
    case 'COLLECTION_CREATED':
      return _$gWebhookEventTypeAsyncEnumCOLLECTION_CREATED;
    case 'COLLECTION_UPDATED':
      return _$gWebhookEventTypeAsyncEnumCOLLECTION_UPDATED;
    case 'COLLECTION_DELETED':
      return _$gWebhookEventTypeAsyncEnumCOLLECTION_DELETED;
    case 'COLLECTION_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumCOLLECTION_METADATA_UPDATED;
    case 'PRODUCT_CREATED':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_CREATED;
    case 'PRODUCT_UPDATED':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_UPDATED;
    case 'PRODUCT_DELETED':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_DELETED;
    case 'PRODUCT_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_METADATA_UPDATED;
    case 'PRODUCT_VARIANT_CREATED':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_CREATED;
    case 'PRODUCT_VARIANT_UPDATED':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_UPDATED;
    case 'PRODUCT_VARIANT_DELETED':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_DELETED;
    case 'PRODUCT_VARIANT_OUT_OF_STOCK':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_OUT_OF_STOCK;
    case 'PRODUCT_VARIANT_BACK_IN_STOCK':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_BACK_IN_STOCK;
    case 'PRODUCT_VARIANT_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_METADATA_UPDATED;
    case 'CHECKOUT_CREATED':
      return _$gWebhookEventTypeAsyncEnumCHECKOUT_CREATED;
    case 'CHECKOUT_UPDATED':
      return _$gWebhookEventTypeAsyncEnumCHECKOUT_UPDATED;
    case 'CHECKOUT_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumCHECKOUT_METADATA_UPDATED;
    case 'FULFILLMENT_CREATED':
      return _$gWebhookEventTypeAsyncEnumFULFILLMENT_CREATED;
    case 'FULFILLMENT_CANCELED':
      return _$gWebhookEventTypeAsyncEnumFULFILLMENT_CANCELED;
    case 'FULFILLMENT_APPROVED':
      return _$gWebhookEventTypeAsyncEnumFULFILLMENT_APPROVED;
    case 'FULFILLMENT_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumFULFILLMENT_METADATA_UPDATED;
    case 'NOTIFY_USER':
      return _$gWebhookEventTypeAsyncEnumNOTIFY_USER;
    case 'PAGE_CREATED':
      return _$gWebhookEventTypeAsyncEnumPAGE_CREATED;
    case 'PAGE_UPDATED':
      return _$gWebhookEventTypeAsyncEnumPAGE_UPDATED;
    case 'PAGE_DELETED':
      return _$gWebhookEventTypeAsyncEnumPAGE_DELETED;
    case 'PAGE_TYPE_CREATED':
      return _$gWebhookEventTypeAsyncEnumPAGE_TYPE_CREATED;
    case 'PAGE_TYPE_UPDATED':
      return _$gWebhookEventTypeAsyncEnumPAGE_TYPE_UPDATED;
    case 'PAGE_TYPE_DELETED':
      return _$gWebhookEventTypeAsyncEnumPAGE_TYPE_DELETED;
    case 'PERMISSION_GROUP_CREATED':
      return _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_CREATED;
    case 'PERMISSION_GROUP_UPDATED':
      return _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_UPDATED;
    case 'PERMISSION_GROUP_DELETED':
      return _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_DELETED;
    case 'SHIPPING_PRICE_CREATED':
      return _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_CREATED;
    case 'SHIPPING_PRICE_UPDATED':
      return _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_UPDATED;
    case 'SHIPPING_PRICE_DELETED':
      return _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_DELETED;
    case 'SHIPPING_ZONE_CREATED':
      return _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_CREATED;
    case 'SHIPPING_ZONE_UPDATED':
      return _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_UPDATED;
    case 'SHIPPING_ZONE_DELETED':
      return _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_DELETED;
    case 'SHIPPING_ZONE_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_METADATA_UPDATED;
    case 'STAFF_CREATED':
      return _$gWebhookEventTypeAsyncEnumSTAFF_CREATED;
    case 'STAFF_UPDATED':
      return _$gWebhookEventTypeAsyncEnumSTAFF_UPDATED;
    case 'STAFF_DELETED':
      return _$gWebhookEventTypeAsyncEnumSTAFF_DELETED;
    case 'TRANSACTION_ACTION_REQUEST':
      return _$gWebhookEventTypeAsyncEnumTRANSACTION_ACTION_REQUEST;
    case 'TRANSACTION_ITEM_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumTRANSACTION_ITEM_METADATA_UPDATED;
    case 'TRANSLATION_CREATED':
      return _$gWebhookEventTypeAsyncEnumTRANSLATION_CREATED;
    case 'TRANSLATION_UPDATED':
      return _$gWebhookEventTypeAsyncEnumTRANSLATION_UPDATED;
    case 'WAREHOUSE_CREATED':
      return _$gWebhookEventTypeAsyncEnumWAREHOUSE_CREATED;
    case 'WAREHOUSE_UPDATED':
      return _$gWebhookEventTypeAsyncEnumWAREHOUSE_UPDATED;
    case 'WAREHOUSE_DELETED':
      return _$gWebhookEventTypeAsyncEnumWAREHOUSE_DELETED;
    case 'WAREHOUSE_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumWAREHOUSE_METADATA_UPDATED;
    case 'VOUCHER_CREATED':
      return _$gWebhookEventTypeAsyncEnumVOUCHER_CREATED;
    case 'VOUCHER_UPDATED':
      return _$gWebhookEventTypeAsyncEnumVOUCHER_UPDATED;
    case 'VOUCHER_DELETED':
      return _$gWebhookEventTypeAsyncEnumVOUCHER_DELETED;
    case 'VOUCHER_METADATA_UPDATED':
      return _$gWebhookEventTypeAsyncEnumVOUCHER_METADATA_UPDATED;
    case 'OBSERVABILITY':
      return _$gWebhookEventTypeAsyncEnumOBSERVABILITY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookEventTypeAsyncEnum> _$gWebhookEventTypeAsyncEnumValues =
    new BuiltSet<GWebhookEventTypeAsyncEnum>(const <GWebhookEventTypeAsyncEnum>[
  _$gWebhookEventTypeAsyncEnumANY_EVENTS,
  _$gWebhookEventTypeAsyncEnumADDRESS_CREATED,
  _$gWebhookEventTypeAsyncEnumADDRESS_UPDATED,
  _$gWebhookEventTypeAsyncEnumADDRESS_DELETED,
  _$gWebhookEventTypeAsyncEnumAPP_INSTALLED,
  _$gWebhookEventTypeAsyncEnumAPP_UPDATED,
  _$gWebhookEventTypeAsyncEnumAPP_DELETED,
  _$gWebhookEventTypeAsyncEnumAPP_STATUS_CHANGED,
  _$gWebhookEventTypeAsyncEnumATTRIBUTE_CREATED,
  _$gWebhookEventTypeAsyncEnumATTRIBUTE_UPDATED,
  _$gWebhookEventTypeAsyncEnumATTRIBUTE_DELETED,
  _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_CREATED,
  _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_UPDATED,
  _$gWebhookEventTypeAsyncEnumATTRIBUTE_VALUE_DELETED,
  _$gWebhookEventTypeAsyncEnumCATEGORY_CREATED,
  _$gWebhookEventTypeAsyncEnumCATEGORY_UPDATED,
  _$gWebhookEventTypeAsyncEnumCATEGORY_DELETED,
  _$gWebhookEventTypeAsyncEnumCHANNEL_CREATED,
  _$gWebhookEventTypeAsyncEnumCHANNEL_UPDATED,
  _$gWebhookEventTypeAsyncEnumCHANNEL_DELETED,
  _$gWebhookEventTypeAsyncEnumCHANNEL_STATUS_CHANGED,
  _$gWebhookEventTypeAsyncEnumGIFT_CARD_CREATED,
  _$gWebhookEventTypeAsyncEnumGIFT_CARD_UPDATED,
  _$gWebhookEventTypeAsyncEnumGIFT_CARD_DELETED,
  _$gWebhookEventTypeAsyncEnumGIFT_CARD_STATUS_CHANGED,
  _$gWebhookEventTypeAsyncEnumGIFT_CARD_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumMENU_CREATED,
  _$gWebhookEventTypeAsyncEnumMENU_UPDATED,
  _$gWebhookEventTypeAsyncEnumMENU_DELETED,
  _$gWebhookEventTypeAsyncEnumMENU_ITEM_CREATED,
  _$gWebhookEventTypeAsyncEnumMENU_ITEM_UPDATED,
  _$gWebhookEventTypeAsyncEnumMENU_ITEM_DELETED,
  _$gWebhookEventTypeAsyncEnumORDER_CREATED,
  _$gWebhookEventTypeAsyncEnumORDER_CONFIRMED,
  _$gWebhookEventTypeAsyncEnumORDER_FULLY_PAID,
  _$gWebhookEventTypeAsyncEnumORDER_UPDATED,
  _$gWebhookEventTypeAsyncEnumORDER_CANCELLED,
  _$gWebhookEventTypeAsyncEnumORDER_FULFILLED,
  _$gWebhookEventTypeAsyncEnumORDER_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_CREATED,
  _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_UPDATED,
  _$gWebhookEventTypeAsyncEnumDRAFT_ORDER_DELETED,
  _$gWebhookEventTypeAsyncEnumSALE_CREATED,
  _$gWebhookEventTypeAsyncEnumSALE_UPDATED,
  _$gWebhookEventTypeAsyncEnumSALE_DELETED,
  _$gWebhookEventTypeAsyncEnumSALE_TOGGLE,
  _$gWebhookEventTypeAsyncEnumINVOICE_REQUESTED,
  _$gWebhookEventTypeAsyncEnumINVOICE_DELETED,
  _$gWebhookEventTypeAsyncEnumINVOICE_SENT,
  _$gWebhookEventTypeAsyncEnumCUSTOMER_CREATED,
  _$gWebhookEventTypeAsyncEnumCUSTOMER_UPDATED,
  _$gWebhookEventTypeAsyncEnumCUSTOMER_DELETED,
  _$gWebhookEventTypeAsyncEnumCUSTOMER_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumCOLLECTION_CREATED,
  _$gWebhookEventTypeAsyncEnumCOLLECTION_UPDATED,
  _$gWebhookEventTypeAsyncEnumCOLLECTION_DELETED,
  _$gWebhookEventTypeAsyncEnumCOLLECTION_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumPRODUCT_CREATED,
  _$gWebhookEventTypeAsyncEnumPRODUCT_UPDATED,
  _$gWebhookEventTypeAsyncEnumPRODUCT_DELETED,
  _$gWebhookEventTypeAsyncEnumPRODUCT_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_CREATED,
  _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_UPDATED,
  _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_DELETED,
  _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_OUT_OF_STOCK,
  _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_BACK_IN_STOCK,
  _$gWebhookEventTypeAsyncEnumPRODUCT_VARIANT_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumCHECKOUT_CREATED,
  _$gWebhookEventTypeAsyncEnumCHECKOUT_UPDATED,
  _$gWebhookEventTypeAsyncEnumCHECKOUT_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumFULFILLMENT_CREATED,
  _$gWebhookEventTypeAsyncEnumFULFILLMENT_CANCELED,
  _$gWebhookEventTypeAsyncEnumFULFILLMENT_APPROVED,
  _$gWebhookEventTypeAsyncEnumFULFILLMENT_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumNOTIFY_USER,
  _$gWebhookEventTypeAsyncEnumPAGE_CREATED,
  _$gWebhookEventTypeAsyncEnumPAGE_UPDATED,
  _$gWebhookEventTypeAsyncEnumPAGE_DELETED,
  _$gWebhookEventTypeAsyncEnumPAGE_TYPE_CREATED,
  _$gWebhookEventTypeAsyncEnumPAGE_TYPE_UPDATED,
  _$gWebhookEventTypeAsyncEnumPAGE_TYPE_DELETED,
  _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_CREATED,
  _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_UPDATED,
  _$gWebhookEventTypeAsyncEnumPERMISSION_GROUP_DELETED,
  _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_CREATED,
  _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_UPDATED,
  _$gWebhookEventTypeAsyncEnumSHIPPING_PRICE_DELETED,
  _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_CREATED,
  _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_UPDATED,
  _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_DELETED,
  _$gWebhookEventTypeAsyncEnumSHIPPING_ZONE_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumSTAFF_CREATED,
  _$gWebhookEventTypeAsyncEnumSTAFF_UPDATED,
  _$gWebhookEventTypeAsyncEnumSTAFF_DELETED,
  _$gWebhookEventTypeAsyncEnumTRANSACTION_ACTION_REQUEST,
  _$gWebhookEventTypeAsyncEnumTRANSACTION_ITEM_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumTRANSLATION_CREATED,
  _$gWebhookEventTypeAsyncEnumTRANSLATION_UPDATED,
  _$gWebhookEventTypeAsyncEnumWAREHOUSE_CREATED,
  _$gWebhookEventTypeAsyncEnumWAREHOUSE_UPDATED,
  _$gWebhookEventTypeAsyncEnumWAREHOUSE_DELETED,
  _$gWebhookEventTypeAsyncEnumWAREHOUSE_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumVOUCHER_CREATED,
  _$gWebhookEventTypeAsyncEnumVOUCHER_UPDATED,
  _$gWebhookEventTypeAsyncEnumVOUCHER_DELETED,
  _$gWebhookEventTypeAsyncEnumVOUCHER_METADATA_UPDATED,
  _$gWebhookEventTypeAsyncEnumOBSERVABILITY,
]);

const GWebhookEventTypeEnum _$gWebhookEventTypeEnumANY_EVENTS =
    const GWebhookEventTypeEnum._('ANY_EVENTS');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumADDRESS_CREATED =
    const GWebhookEventTypeEnum._('ADDRESS_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumADDRESS_UPDATED =
    const GWebhookEventTypeEnum._('ADDRESS_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumADDRESS_DELETED =
    const GWebhookEventTypeEnum._('ADDRESS_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumAPP_INSTALLED =
    const GWebhookEventTypeEnum._('APP_INSTALLED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumAPP_UPDATED =
    const GWebhookEventTypeEnum._('APP_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumAPP_DELETED =
    const GWebhookEventTypeEnum._('APP_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumAPP_STATUS_CHANGED =
    const GWebhookEventTypeEnum._('APP_STATUS_CHANGED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumATTRIBUTE_CREATED =
    const GWebhookEventTypeEnum._('ATTRIBUTE_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumATTRIBUTE_UPDATED =
    const GWebhookEventTypeEnum._('ATTRIBUTE_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumATTRIBUTE_DELETED =
    const GWebhookEventTypeEnum._('ATTRIBUTE_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumATTRIBUTE_VALUE_CREATED =
    const GWebhookEventTypeEnum._('ATTRIBUTE_VALUE_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumATTRIBUTE_VALUE_UPDATED =
    const GWebhookEventTypeEnum._('ATTRIBUTE_VALUE_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumATTRIBUTE_VALUE_DELETED =
    const GWebhookEventTypeEnum._('ATTRIBUTE_VALUE_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCATEGORY_CREATED =
    const GWebhookEventTypeEnum._('CATEGORY_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCATEGORY_UPDATED =
    const GWebhookEventTypeEnum._('CATEGORY_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCATEGORY_DELETED =
    const GWebhookEventTypeEnum._('CATEGORY_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHANNEL_CREATED =
    const GWebhookEventTypeEnum._('CHANNEL_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHANNEL_UPDATED =
    const GWebhookEventTypeEnum._('CHANNEL_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHANNEL_DELETED =
    const GWebhookEventTypeEnum._('CHANNEL_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHANNEL_STATUS_CHANGED =
    const GWebhookEventTypeEnum._('CHANNEL_STATUS_CHANGED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumGIFT_CARD_CREATED =
    const GWebhookEventTypeEnum._('GIFT_CARD_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumGIFT_CARD_UPDATED =
    const GWebhookEventTypeEnum._('GIFT_CARD_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumGIFT_CARD_DELETED =
    const GWebhookEventTypeEnum._('GIFT_CARD_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumGIFT_CARD_STATUS_CHANGED =
    const GWebhookEventTypeEnum._('GIFT_CARD_STATUS_CHANGED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumGIFT_CARD_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('GIFT_CARD_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumMENU_CREATED =
    const GWebhookEventTypeEnum._('MENU_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumMENU_UPDATED =
    const GWebhookEventTypeEnum._('MENU_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumMENU_DELETED =
    const GWebhookEventTypeEnum._('MENU_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumMENU_ITEM_CREATED =
    const GWebhookEventTypeEnum._('MENU_ITEM_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumMENU_ITEM_UPDATED =
    const GWebhookEventTypeEnum._('MENU_ITEM_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumMENU_ITEM_DELETED =
    const GWebhookEventTypeEnum._('MENU_ITEM_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_CREATED =
    const GWebhookEventTypeEnum._('ORDER_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_CONFIRMED =
    const GWebhookEventTypeEnum._('ORDER_CONFIRMED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_FULLY_PAID =
    const GWebhookEventTypeEnum._('ORDER_FULLY_PAID');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_UPDATED =
    const GWebhookEventTypeEnum._('ORDER_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_CANCELLED =
    const GWebhookEventTypeEnum._('ORDER_CANCELLED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_FULFILLED =
    const GWebhookEventTypeEnum._('ORDER_FULFILLED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('ORDER_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumDRAFT_ORDER_CREATED =
    const GWebhookEventTypeEnum._('DRAFT_ORDER_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumDRAFT_ORDER_UPDATED =
    const GWebhookEventTypeEnum._('DRAFT_ORDER_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumDRAFT_ORDER_DELETED =
    const GWebhookEventTypeEnum._('DRAFT_ORDER_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSALE_CREATED =
    const GWebhookEventTypeEnum._('SALE_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSALE_UPDATED =
    const GWebhookEventTypeEnum._('SALE_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSALE_DELETED =
    const GWebhookEventTypeEnum._('SALE_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSALE_TOGGLE =
    const GWebhookEventTypeEnum._('SALE_TOGGLE');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumINVOICE_REQUESTED =
    const GWebhookEventTypeEnum._('INVOICE_REQUESTED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumINVOICE_DELETED =
    const GWebhookEventTypeEnum._('INVOICE_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumINVOICE_SENT =
    const GWebhookEventTypeEnum._('INVOICE_SENT');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCUSTOMER_CREATED =
    const GWebhookEventTypeEnum._('CUSTOMER_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCUSTOMER_UPDATED =
    const GWebhookEventTypeEnum._('CUSTOMER_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCUSTOMER_DELETED =
    const GWebhookEventTypeEnum._('CUSTOMER_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCUSTOMER_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('CUSTOMER_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCOLLECTION_CREATED =
    const GWebhookEventTypeEnum._('COLLECTION_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCOLLECTION_UPDATED =
    const GWebhookEventTypeEnum._('COLLECTION_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCOLLECTION_DELETED =
    const GWebhookEventTypeEnum._('COLLECTION_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCOLLECTION_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('COLLECTION_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPRODUCT_CREATED =
    const GWebhookEventTypeEnum._('PRODUCT_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPRODUCT_UPDATED =
    const GWebhookEventTypeEnum._('PRODUCT_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPRODUCT_DELETED =
    const GWebhookEventTypeEnum._('PRODUCT_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPRODUCT_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('PRODUCT_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPRODUCT_VARIANT_CREATED =
    const GWebhookEventTypeEnum._('PRODUCT_VARIANT_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPRODUCT_VARIANT_UPDATED =
    const GWebhookEventTypeEnum._('PRODUCT_VARIANT_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPRODUCT_VARIANT_DELETED =
    const GWebhookEventTypeEnum._('PRODUCT_VARIANT_DELETED');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumPRODUCT_VARIANT_OUT_OF_STOCK =
    const GWebhookEventTypeEnum._('PRODUCT_VARIANT_OUT_OF_STOCK');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumPRODUCT_VARIANT_BACK_IN_STOCK =
    const GWebhookEventTypeEnum._('PRODUCT_VARIANT_BACK_IN_STOCK');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumPRODUCT_VARIANT_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('PRODUCT_VARIANT_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHECKOUT_CREATED =
    const GWebhookEventTypeEnum._('CHECKOUT_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHECKOUT_UPDATED =
    const GWebhookEventTypeEnum._('CHECKOUT_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHECKOUT_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('CHECKOUT_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumFULFILLMENT_CREATED =
    const GWebhookEventTypeEnum._('FULFILLMENT_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumFULFILLMENT_CANCELED =
    const GWebhookEventTypeEnum._('FULFILLMENT_CANCELED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumFULFILLMENT_APPROVED =
    const GWebhookEventTypeEnum._('FULFILLMENT_APPROVED');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumFULFILLMENT_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('FULFILLMENT_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumNOTIFY_USER =
    const GWebhookEventTypeEnum._('NOTIFY_USER');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAGE_CREATED =
    const GWebhookEventTypeEnum._('PAGE_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAGE_UPDATED =
    const GWebhookEventTypeEnum._('PAGE_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAGE_DELETED =
    const GWebhookEventTypeEnum._('PAGE_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAGE_TYPE_CREATED =
    const GWebhookEventTypeEnum._('PAGE_TYPE_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAGE_TYPE_UPDATED =
    const GWebhookEventTypeEnum._('PAGE_TYPE_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAGE_TYPE_DELETED =
    const GWebhookEventTypeEnum._('PAGE_TYPE_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPERMISSION_GROUP_CREATED =
    const GWebhookEventTypeEnum._('PERMISSION_GROUP_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPERMISSION_GROUP_UPDATED =
    const GWebhookEventTypeEnum._('PERMISSION_GROUP_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPERMISSION_GROUP_DELETED =
    const GWebhookEventTypeEnum._('PERMISSION_GROUP_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSHIPPING_PRICE_CREATED =
    const GWebhookEventTypeEnum._('SHIPPING_PRICE_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSHIPPING_PRICE_UPDATED =
    const GWebhookEventTypeEnum._('SHIPPING_PRICE_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSHIPPING_PRICE_DELETED =
    const GWebhookEventTypeEnum._('SHIPPING_PRICE_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSHIPPING_ZONE_CREATED =
    const GWebhookEventTypeEnum._('SHIPPING_ZONE_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSHIPPING_ZONE_UPDATED =
    const GWebhookEventTypeEnum._('SHIPPING_ZONE_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSHIPPING_ZONE_DELETED =
    const GWebhookEventTypeEnum._('SHIPPING_ZONE_DELETED');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumSHIPPING_ZONE_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('SHIPPING_ZONE_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSTAFF_CREATED =
    const GWebhookEventTypeEnum._('STAFF_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSTAFF_UPDATED =
    const GWebhookEventTypeEnum._('STAFF_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumSTAFF_DELETED =
    const GWebhookEventTypeEnum._('STAFF_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumTRANSACTION_ACTION_REQUEST =
    const GWebhookEventTypeEnum._('TRANSACTION_ACTION_REQUEST');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumTRANSACTION_ITEM_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('TRANSACTION_ITEM_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumTRANSLATION_CREATED =
    const GWebhookEventTypeEnum._('TRANSLATION_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumTRANSLATION_UPDATED =
    const GWebhookEventTypeEnum._('TRANSLATION_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumWAREHOUSE_CREATED =
    const GWebhookEventTypeEnum._('WAREHOUSE_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumWAREHOUSE_UPDATED =
    const GWebhookEventTypeEnum._('WAREHOUSE_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumWAREHOUSE_DELETED =
    const GWebhookEventTypeEnum._('WAREHOUSE_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumWAREHOUSE_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('WAREHOUSE_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumVOUCHER_CREATED =
    const GWebhookEventTypeEnum._('VOUCHER_CREATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumVOUCHER_UPDATED =
    const GWebhookEventTypeEnum._('VOUCHER_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumVOUCHER_DELETED =
    const GWebhookEventTypeEnum._('VOUCHER_DELETED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumVOUCHER_METADATA_UPDATED =
    const GWebhookEventTypeEnum._('VOUCHER_METADATA_UPDATED');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumOBSERVABILITY =
    const GWebhookEventTypeEnum._('OBSERVABILITY');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAYMENT_AUTHORIZE =
    const GWebhookEventTypeEnum._('PAYMENT_AUTHORIZE');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAYMENT_CAPTURE =
    const GWebhookEventTypeEnum._('PAYMENT_CAPTURE');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAYMENT_CONFIRM =
    const GWebhookEventTypeEnum._('PAYMENT_CONFIRM');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAYMENT_LIST_GATEWAYS =
    const GWebhookEventTypeEnum._('PAYMENT_LIST_GATEWAYS');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAYMENT_PROCESS =
    const GWebhookEventTypeEnum._('PAYMENT_PROCESS');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAYMENT_REFUND =
    const GWebhookEventTypeEnum._('PAYMENT_REFUND');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumPAYMENT_VOID =
    const GWebhookEventTypeEnum._('PAYMENT_VOID');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumCHECKOUT_CALCULATE_TAXES =
    const GWebhookEventTypeEnum._('CHECKOUT_CALCULATE_TAXES');
const GWebhookEventTypeEnum _$gWebhookEventTypeEnumORDER_CALCULATE_TAXES =
    const GWebhookEventTypeEnum._('ORDER_CALCULATE_TAXES');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumSHIPPING_LIST_METHODS_FOR_CHECKOUT =
    const GWebhookEventTypeEnum._('SHIPPING_LIST_METHODS_FOR_CHECKOUT');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumORDER_FILTER_SHIPPING_METHODS =
    const GWebhookEventTypeEnum._('ORDER_FILTER_SHIPPING_METHODS');
const GWebhookEventTypeEnum
    _$gWebhookEventTypeEnumCHECKOUT_FILTER_SHIPPING_METHODS =
    const GWebhookEventTypeEnum._('CHECKOUT_FILTER_SHIPPING_METHODS');

GWebhookEventTypeEnum _$gWebhookEventTypeEnumValueOf(String name) {
  switch (name) {
    case 'ANY_EVENTS':
      return _$gWebhookEventTypeEnumANY_EVENTS;
    case 'ADDRESS_CREATED':
      return _$gWebhookEventTypeEnumADDRESS_CREATED;
    case 'ADDRESS_UPDATED':
      return _$gWebhookEventTypeEnumADDRESS_UPDATED;
    case 'ADDRESS_DELETED':
      return _$gWebhookEventTypeEnumADDRESS_DELETED;
    case 'APP_INSTALLED':
      return _$gWebhookEventTypeEnumAPP_INSTALLED;
    case 'APP_UPDATED':
      return _$gWebhookEventTypeEnumAPP_UPDATED;
    case 'APP_DELETED':
      return _$gWebhookEventTypeEnumAPP_DELETED;
    case 'APP_STATUS_CHANGED':
      return _$gWebhookEventTypeEnumAPP_STATUS_CHANGED;
    case 'ATTRIBUTE_CREATED':
      return _$gWebhookEventTypeEnumATTRIBUTE_CREATED;
    case 'ATTRIBUTE_UPDATED':
      return _$gWebhookEventTypeEnumATTRIBUTE_UPDATED;
    case 'ATTRIBUTE_DELETED':
      return _$gWebhookEventTypeEnumATTRIBUTE_DELETED;
    case 'ATTRIBUTE_VALUE_CREATED':
      return _$gWebhookEventTypeEnumATTRIBUTE_VALUE_CREATED;
    case 'ATTRIBUTE_VALUE_UPDATED':
      return _$gWebhookEventTypeEnumATTRIBUTE_VALUE_UPDATED;
    case 'ATTRIBUTE_VALUE_DELETED':
      return _$gWebhookEventTypeEnumATTRIBUTE_VALUE_DELETED;
    case 'CATEGORY_CREATED':
      return _$gWebhookEventTypeEnumCATEGORY_CREATED;
    case 'CATEGORY_UPDATED':
      return _$gWebhookEventTypeEnumCATEGORY_UPDATED;
    case 'CATEGORY_DELETED':
      return _$gWebhookEventTypeEnumCATEGORY_DELETED;
    case 'CHANNEL_CREATED':
      return _$gWebhookEventTypeEnumCHANNEL_CREATED;
    case 'CHANNEL_UPDATED':
      return _$gWebhookEventTypeEnumCHANNEL_UPDATED;
    case 'CHANNEL_DELETED':
      return _$gWebhookEventTypeEnumCHANNEL_DELETED;
    case 'CHANNEL_STATUS_CHANGED':
      return _$gWebhookEventTypeEnumCHANNEL_STATUS_CHANGED;
    case 'GIFT_CARD_CREATED':
      return _$gWebhookEventTypeEnumGIFT_CARD_CREATED;
    case 'GIFT_CARD_UPDATED':
      return _$gWebhookEventTypeEnumGIFT_CARD_UPDATED;
    case 'GIFT_CARD_DELETED':
      return _$gWebhookEventTypeEnumGIFT_CARD_DELETED;
    case 'GIFT_CARD_STATUS_CHANGED':
      return _$gWebhookEventTypeEnumGIFT_CARD_STATUS_CHANGED;
    case 'GIFT_CARD_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumGIFT_CARD_METADATA_UPDATED;
    case 'MENU_CREATED':
      return _$gWebhookEventTypeEnumMENU_CREATED;
    case 'MENU_UPDATED':
      return _$gWebhookEventTypeEnumMENU_UPDATED;
    case 'MENU_DELETED':
      return _$gWebhookEventTypeEnumMENU_DELETED;
    case 'MENU_ITEM_CREATED':
      return _$gWebhookEventTypeEnumMENU_ITEM_CREATED;
    case 'MENU_ITEM_UPDATED':
      return _$gWebhookEventTypeEnumMENU_ITEM_UPDATED;
    case 'MENU_ITEM_DELETED':
      return _$gWebhookEventTypeEnumMENU_ITEM_DELETED;
    case 'ORDER_CREATED':
      return _$gWebhookEventTypeEnumORDER_CREATED;
    case 'ORDER_CONFIRMED':
      return _$gWebhookEventTypeEnumORDER_CONFIRMED;
    case 'ORDER_FULLY_PAID':
      return _$gWebhookEventTypeEnumORDER_FULLY_PAID;
    case 'ORDER_UPDATED':
      return _$gWebhookEventTypeEnumORDER_UPDATED;
    case 'ORDER_CANCELLED':
      return _$gWebhookEventTypeEnumORDER_CANCELLED;
    case 'ORDER_FULFILLED':
      return _$gWebhookEventTypeEnumORDER_FULFILLED;
    case 'ORDER_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumORDER_METADATA_UPDATED;
    case 'DRAFT_ORDER_CREATED':
      return _$gWebhookEventTypeEnumDRAFT_ORDER_CREATED;
    case 'DRAFT_ORDER_UPDATED':
      return _$gWebhookEventTypeEnumDRAFT_ORDER_UPDATED;
    case 'DRAFT_ORDER_DELETED':
      return _$gWebhookEventTypeEnumDRAFT_ORDER_DELETED;
    case 'SALE_CREATED':
      return _$gWebhookEventTypeEnumSALE_CREATED;
    case 'SALE_UPDATED':
      return _$gWebhookEventTypeEnumSALE_UPDATED;
    case 'SALE_DELETED':
      return _$gWebhookEventTypeEnumSALE_DELETED;
    case 'SALE_TOGGLE':
      return _$gWebhookEventTypeEnumSALE_TOGGLE;
    case 'INVOICE_REQUESTED':
      return _$gWebhookEventTypeEnumINVOICE_REQUESTED;
    case 'INVOICE_DELETED':
      return _$gWebhookEventTypeEnumINVOICE_DELETED;
    case 'INVOICE_SENT':
      return _$gWebhookEventTypeEnumINVOICE_SENT;
    case 'CUSTOMER_CREATED':
      return _$gWebhookEventTypeEnumCUSTOMER_CREATED;
    case 'CUSTOMER_UPDATED':
      return _$gWebhookEventTypeEnumCUSTOMER_UPDATED;
    case 'CUSTOMER_DELETED':
      return _$gWebhookEventTypeEnumCUSTOMER_DELETED;
    case 'CUSTOMER_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumCUSTOMER_METADATA_UPDATED;
    case 'COLLECTION_CREATED':
      return _$gWebhookEventTypeEnumCOLLECTION_CREATED;
    case 'COLLECTION_UPDATED':
      return _$gWebhookEventTypeEnumCOLLECTION_UPDATED;
    case 'COLLECTION_DELETED':
      return _$gWebhookEventTypeEnumCOLLECTION_DELETED;
    case 'COLLECTION_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumCOLLECTION_METADATA_UPDATED;
    case 'PRODUCT_CREATED':
      return _$gWebhookEventTypeEnumPRODUCT_CREATED;
    case 'PRODUCT_UPDATED':
      return _$gWebhookEventTypeEnumPRODUCT_UPDATED;
    case 'PRODUCT_DELETED':
      return _$gWebhookEventTypeEnumPRODUCT_DELETED;
    case 'PRODUCT_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumPRODUCT_METADATA_UPDATED;
    case 'PRODUCT_VARIANT_CREATED':
      return _$gWebhookEventTypeEnumPRODUCT_VARIANT_CREATED;
    case 'PRODUCT_VARIANT_UPDATED':
      return _$gWebhookEventTypeEnumPRODUCT_VARIANT_UPDATED;
    case 'PRODUCT_VARIANT_DELETED':
      return _$gWebhookEventTypeEnumPRODUCT_VARIANT_DELETED;
    case 'PRODUCT_VARIANT_OUT_OF_STOCK':
      return _$gWebhookEventTypeEnumPRODUCT_VARIANT_OUT_OF_STOCK;
    case 'PRODUCT_VARIANT_BACK_IN_STOCK':
      return _$gWebhookEventTypeEnumPRODUCT_VARIANT_BACK_IN_STOCK;
    case 'PRODUCT_VARIANT_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumPRODUCT_VARIANT_METADATA_UPDATED;
    case 'CHECKOUT_CREATED':
      return _$gWebhookEventTypeEnumCHECKOUT_CREATED;
    case 'CHECKOUT_UPDATED':
      return _$gWebhookEventTypeEnumCHECKOUT_UPDATED;
    case 'CHECKOUT_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumCHECKOUT_METADATA_UPDATED;
    case 'FULFILLMENT_CREATED':
      return _$gWebhookEventTypeEnumFULFILLMENT_CREATED;
    case 'FULFILLMENT_CANCELED':
      return _$gWebhookEventTypeEnumFULFILLMENT_CANCELED;
    case 'FULFILLMENT_APPROVED':
      return _$gWebhookEventTypeEnumFULFILLMENT_APPROVED;
    case 'FULFILLMENT_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumFULFILLMENT_METADATA_UPDATED;
    case 'NOTIFY_USER':
      return _$gWebhookEventTypeEnumNOTIFY_USER;
    case 'PAGE_CREATED':
      return _$gWebhookEventTypeEnumPAGE_CREATED;
    case 'PAGE_UPDATED':
      return _$gWebhookEventTypeEnumPAGE_UPDATED;
    case 'PAGE_DELETED':
      return _$gWebhookEventTypeEnumPAGE_DELETED;
    case 'PAGE_TYPE_CREATED':
      return _$gWebhookEventTypeEnumPAGE_TYPE_CREATED;
    case 'PAGE_TYPE_UPDATED':
      return _$gWebhookEventTypeEnumPAGE_TYPE_UPDATED;
    case 'PAGE_TYPE_DELETED':
      return _$gWebhookEventTypeEnumPAGE_TYPE_DELETED;
    case 'PERMISSION_GROUP_CREATED':
      return _$gWebhookEventTypeEnumPERMISSION_GROUP_CREATED;
    case 'PERMISSION_GROUP_UPDATED':
      return _$gWebhookEventTypeEnumPERMISSION_GROUP_UPDATED;
    case 'PERMISSION_GROUP_DELETED':
      return _$gWebhookEventTypeEnumPERMISSION_GROUP_DELETED;
    case 'SHIPPING_PRICE_CREATED':
      return _$gWebhookEventTypeEnumSHIPPING_PRICE_CREATED;
    case 'SHIPPING_PRICE_UPDATED':
      return _$gWebhookEventTypeEnumSHIPPING_PRICE_UPDATED;
    case 'SHIPPING_PRICE_DELETED':
      return _$gWebhookEventTypeEnumSHIPPING_PRICE_DELETED;
    case 'SHIPPING_ZONE_CREATED':
      return _$gWebhookEventTypeEnumSHIPPING_ZONE_CREATED;
    case 'SHIPPING_ZONE_UPDATED':
      return _$gWebhookEventTypeEnumSHIPPING_ZONE_UPDATED;
    case 'SHIPPING_ZONE_DELETED':
      return _$gWebhookEventTypeEnumSHIPPING_ZONE_DELETED;
    case 'SHIPPING_ZONE_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumSHIPPING_ZONE_METADATA_UPDATED;
    case 'STAFF_CREATED':
      return _$gWebhookEventTypeEnumSTAFF_CREATED;
    case 'STAFF_UPDATED':
      return _$gWebhookEventTypeEnumSTAFF_UPDATED;
    case 'STAFF_DELETED':
      return _$gWebhookEventTypeEnumSTAFF_DELETED;
    case 'TRANSACTION_ACTION_REQUEST':
      return _$gWebhookEventTypeEnumTRANSACTION_ACTION_REQUEST;
    case 'TRANSACTION_ITEM_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumTRANSACTION_ITEM_METADATA_UPDATED;
    case 'TRANSLATION_CREATED':
      return _$gWebhookEventTypeEnumTRANSLATION_CREATED;
    case 'TRANSLATION_UPDATED':
      return _$gWebhookEventTypeEnumTRANSLATION_UPDATED;
    case 'WAREHOUSE_CREATED':
      return _$gWebhookEventTypeEnumWAREHOUSE_CREATED;
    case 'WAREHOUSE_UPDATED':
      return _$gWebhookEventTypeEnumWAREHOUSE_UPDATED;
    case 'WAREHOUSE_DELETED':
      return _$gWebhookEventTypeEnumWAREHOUSE_DELETED;
    case 'WAREHOUSE_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumWAREHOUSE_METADATA_UPDATED;
    case 'VOUCHER_CREATED':
      return _$gWebhookEventTypeEnumVOUCHER_CREATED;
    case 'VOUCHER_UPDATED':
      return _$gWebhookEventTypeEnumVOUCHER_UPDATED;
    case 'VOUCHER_DELETED':
      return _$gWebhookEventTypeEnumVOUCHER_DELETED;
    case 'VOUCHER_METADATA_UPDATED':
      return _$gWebhookEventTypeEnumVOUCHER_METADATA_UPDATED;
    case 'OBSERVABILITY':
      return _$gWebhookEventTypeEnumOBSERVABILITY;
    case 'PAYMENT_AUTHORIZE':
      return _$gWebhookEventTypeEnumPAYMENT_AUTHORIZE;
    case 'PAYMENT_CAPTURE':
      return _$gWebhookEventTypeEnumPAYMENT_CAPTURE;
    case 'PAYMENT_CONFIRM':
      return _$gWebhookEventTypeEnumPAYMENT_CONFIRM;
    case 'PAYMENT_LIST_GATEWAYS':
      return _$gWebhookEventTypeEnumPAYMENT_LIST_GATEWAYS;
    case 'PAYMENT_PROCESS':
      return _$gWebhookEventTypeEnumPAYMENT_PROCESS;
    case 'PAYMENT_REFUND':
      return _$gWebhookEventTypeEnumPAYMENT_REFUND;
    case 'PAYMENT_VOID':
      return _$gWebhookEventTypeEnumPAYMENT_VOID;
    case 'CHECKOUT_CALCULATE_TAXES':
      return _$gWebhookEventTypeEnumCHECKOUT_CALCULATE_TAXES;
    case 'ORDER_CALCULATE_TAXES':
      return _$gWebhookEventTypeEnumORDER_CALCULATE_TAXES;
    case 'SHIPPING_LIST_METHODS_FOR_CHECKOUT':
      return _$gWebhookEventTypeEnumSHIPPING_LIST_METHODS_FOR_CHECKOUT;
    case 'ORDER_FILTER_SHIPPING_METHODS':
      return _$gWebhookEventTypeEnumORDER_FILTER_SHIPPING_METHODS;
    case 'CHECKOUT_FILTER_SHIPPING_METHODS':
      return _$gWebhookEventTypeEnumCHECKOUT_FILTER_SHIPPING_METHODS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookEventTypeEnum> _$gWebhookEventTypeEnumValues =
    new BuiltSet<GWebhookEventTypeEnum>(const <GWebhookEventTypeEnum>[
  _$gWebhookEventTypeEnumANY_EVENTS,
  _$gWebhookEventTypeEnumADDRESS_CREATED,
  _$gWebhookEventTypeEnumADDRESS_UPDATED,
  _$gWebhookEventTypeEnumADDRESS_DELETED,
  _$gWebhookEventTypeEnumAPP_INSTALLED,
  _$gWebhookEventTypeEnumAPP_UPDATED,
  _$gWebhookEventTypeEnumAPP_DELETED,
  _$gWebhookEventTypeEnumAPP_STATUS_CHANGED,
  _$gWebhookEventTypeEnumATTRIBUTE_CREATED,
  _$gWebhookEventTypeEnumATTRIBUTE_UPDATED,
  _$gWebhookEventTypeEnumATTRIBUTE_DELETED,
  _$gWebhookEventTypeEnumATTRIBUTE_VALUE_CREATED,
  _$gWebhookEventTypeEnumATTRIBUTE_VALUE_UPDATED,
  _$gWebhookEventTypeEnumATTRIBUTE_VALUE_DELETED,
  _$gWebhookEventTypeEnumCATEGORY_CREATED,
  _$gWebhookEventTypeEnumCATEGORY_UPDATED,
  _$gWebhookEventTypeEnumCATEGORY_DELETED,
  _$gWebhookEventTypeEnumCHANNEL_CREATED,
  _$gWebhookEventTypeEnumCHANNEL_UPDATED,
  _$gWebhookEventTypeEnumCHANNEL_DELETED,
  _$gWebhookEventTypeEnumCHANNEL_STATUS_CHANGED,
  _$gWebhookEventTypeEnumGIFT_CARD_CREATED,
  _$gWebhookEventTypeEnumGIFT_CARD_UPDATED,
  _$gWebhookEventTypeEnumGIFT_CARD_DELETED,
  _$gWebhookEventTypeEnumGIFT_CARD_STATUS_CHANGED,
  _$gWebhookEventTypeEnumGIFT_CARD_METADATA_UPDATED,
  _$gWebhookEventTypeEnumMENU_CREATED,
  _$gWebhookEventTypeEnumMENU_UPDATED,
  _$gWebhookEventTypeEnumMENU_DELETED,
  _$gWebhookEventTypeEnumMENU_ITEM_CREATED,
  _$gWebhookEventTypeEnumMENU_ITEM_UPDATED,
  _$gWebhookEventTypeEnumMENU_ITEM_DELETED,
  _$gWebhookEventTypeEnumORDER_CREATED,
  _$gWebhookEventTypeEnumORDER_CONFIRMED,
  _$gWebhookEventTypeEnumORDER_FULLY_PAID,
  _$gWebhookEventTypeEnumORDER_UPDATED,
  _$gWebhookEventTypeEnumORDER_CANCELLED,
  _$gWebhookEventTypeEnumORDER_FULFILLED,
  _$gWebhookEventTypeEnumORDER_METADATA_UPDATED,
  _$gWebhookEventTypeEnumDRAFT_ORDER_CREATED,
  _$gWebhookEventTypeEnumDRAFT_ORDER_UPDATED,
  _$gWebhookEventTypeEnumDRAFT_ORDER_DELETED,
  _$gWebhookEventTypeEnumSALE_CREATED,
  _$gWebhookEventTypeEnumSALE_UPDATED,
  _$gWebhookEventTypeEnumSALE_DELETED,
  _$gWebhookEventTypeEnumSALE_TOGGLE,
  _$gWebhookEventTypeEnumINVOICE_REQUESTED,
  _$gWebhookEventTypeEnumINVOICE_DELETED,
  _$gWebhookEventTypeEnumINVOICE_SENT,
  _$gWebhookEventTypeEnumCUSTOMER_CREATED,
  _$gWebhookEventTypeEnumCUSTOMER_UPDATED,
  _$gWebhookEventTypeEnumCUSTOMER_DELETED,
  _$gWebhookEventTypeEnumCUSTOMER_METADATA_UPDATED,
  _$gWebhookEventTypeEnumCOLLECTION_CREATED,
  _$gWebhookEventTypeEnumCOLLECTION_UPDATED,
  _$gWebhookEventTypeEnumCOLLECTION_DELETED,
  _$gWebhookEventTypeEnumCOLLECTION_METADATA_UPDATED,
  _$gWebhookEventTypeEnumPRODUCT_CREATED,
  _$gWebhookEventTypeEnumPRODUCT_UPDATED,
  _$gWebhookEventTypeEnumPRODUCT_DELETED,
  _$gWebhookEventTypeEnumPRODUCT_METADATA_UPDATED,
  _$gWebhookEventTypeEnumPRODUCT_VARIANT_CREATED,
  _$gWebhookEventTypeEnumPRODUCT_VARIANT_UPDATED,
  _$gWebhookEventTypeEnumPRODUCT_VARIANT_DELETED,
  _$gWebhookEventTypeEnumPRODUCT_VARIANT_OUT_OF_STOCK,
  _$gWebhookEventTypeEnumPRODUCT_VARIANT_BACK_IN_STOCK,
  _$gWebhookEventTypeEnumPRODUCT_VARIANT_METADATA_UPDATED,
  _$gWebhookEventTypeEnumCHECKOUT_CREATED,
  _$gWebhookEventTypeEnumCHECKOUT_UPDATED,
  _$gWebhookEventTypeEnumCHECKOUT_METADATA_UPDATED,
  _$gWebhookEventTypeEnumFULFILLMENT_CREATED,
  _$gWebhookEventTypeEnumFULFILLMENT_CANCELED,
  _$gWebhookEventTypeEnumFULFILLMENT_APPROVED,
  _$gWebhookEventTypeEnumFULFILLMENT_METADATA_UPDATED,
  _$gWebhookEventTypeEnumNOTIFY_USER,
  _$gWebhookEventTypeEnumPAGE_CREATED,
  _$gWebhookEventTypeEnumPAGE_UPDATED,
  _$gWebhookEventTypeEnumPAGE_DELETED,
  _$gWebhookEventTypeEnumPAGE_TYPE_CREATED,
  _$gWebhookEventTypeEnumPAGE_TYPE_UPDATED,
  _$gWebhookEventTypeEnumPAGE_TYPE_DELETED,
  _$gWebhookEventTypeEnumPERMISSION_GROUP_CREATED,
  _$gWebhookEventTypeEnumPERMISSION_GROUP_UPDATED,
  _$gWebhookEventTypeEnumPERMISSION_GROUP_DELETED,
  _$gWebhookEventTypeEnumSHIPPING_PRICE_CREATED,
  _$gWebhookEventTypeEnumSHIPPING_PRICE_UPDATED,
  _$gWebhookEventTypeEnumSHIPPING_PRICE_DELETED,
  _$gWebhookEventTypeEnumSHIPPING_ZONE_CREATED,
  _$gWebhookEventTypeEnumSHIPPING_ZONE_UPDATED,
  _$gWebhookEventTypeEnumSHIPPING_ZONE_DELETED,
  _$gWebhookEventTypeEnumSHIPPING_ZONE_METADATA_UPDATED,
  _$gWebhookEventTypeEnumSTAFF_CREATED,
  _$gWebhookEventTypeEnumSTAFF_UPDATED,
  _$gWebhookEventTypeEnumSTAFF_DELETED,
  _$gWebhookEventTypeEnumTRANSACTION_ACTION_REQUEST,
  _$gWebhookEventTypeEnumTRANSACTION_ITEM_METADATA_UPDATED,
  _$gWebhookEventTypeEnumTRANSLATION_CREATED,
  _$gWebhookEventTypeEnumTRANSLATION_UPDATED,
  _$gWebhookEventTypeEnumWAREHOUSE_CREATED,
  _$gWebhookEventTypeEnumWAREHOUSE_UPDATED,
  _$gWebhookEventTypeEnumWAREHOUSE_DELETED,
  _$gWebhookEventTypeEnumWAREHOUSE_METADATA_UPDATED,
  _$gWebhookEventTypeEnumVOUCHER_CREATED,
  _$gWebhookEventTypeEnumVOUCHER_UPDATED,
  _$gWebhookEventTypeEnumVOUCHER_DELETED,
  _$gWebhookEventTypeEnumVOUCHER_METADATA_UPDATED,
  _$gWebhookEventTypeEnumOBSERVABILITY,
  _$gWebhookEventTypeEnumPAYMENT_AUTHORIZE,
  _$gWebhookEventTypeEnumPAYMENT_CAPTURE,
  _$gWebhookEventTypeEnumPAYMENT_CONFIRM,
  _$gWebhookEventTypeEnumPAYMENT_LIST_GATEWAYS,
  _$gWebhookEventTypeEnumPAYMENT_PROCESS,
  _$gWebhookEventTypeEnumPAYMENT_REFUND,
  _$gWebhookEventTypeEnumPAYMENT_VOID,
  _$gWebhookEventTypeEnumCHECKOUT_CALCULATE_TAXES,
  _$gWebhookEventTypeEnumORDER_CALCULATE_TAXES,
  _$gWebhookEventTypeEnumSHIPPING_LIST_METHODS_FOR_CHECKOUT,
  _$gWebhookEventTypeEnumORDER_FILTER_SHIPPING_METHODS,
  _$gWebhookEventTypeEnumCHECKOUT_FILTER_SHIPPING_METHODS,
]);

const GWebhookEventTypeSyncEnum _$gWebhookEventTypeSyncEnumPAYMENT_AUTHORIZE =
    const GWebhookEventTypeSyncEnum._('PAYMENT_AUTHORIZE');
const GWebhookEventTypeSyncEnum _$gWebhookEventTypeSyncEnumPAYMENT_CAPTURE =
    const GWebhookEventTypeSyncEnum._('PAYMENT_CAPTURE');
const GWebhookEventTypeSyncEnum _$gWebhookEventTypeSyncEnumPAYMENT_CONFIRM =
    const GWebhookEventTypeSyncEnum._('PAYMENT_CONFIRM');
const GWebhookEventTypeSyncEnum
    _$gWebhookEventTypeSyncEnumPAYMENT_LIST_GATEWAYS =
    const GWebhookEventTypeSyncEnum._('PAYMENT_LIST_GATEWAYS');
const GWebhookEventTypeSyncEnum _$gWebhookEventTypeSyncEnumPAYMENT_PROCESS =
    const GWebhookEventTypeSyncEnum._('PAYMENT_PROCESS');
const GWebhookEventTypeSyncEnum _$gWebhookEventTypeSyncEnumPAYMENT_REFUND =
    const GWebhookEventTypeSyncEnum._('PAYMENT_REFUND');
const GWebhookEventTypeSyncEnum _$gWebhookEventTypeSyncEnumPAYMENT_VOID =
    const GWebhookEventTypeSyncEnum._('PAYMENT_VOID');
const GWebhookEventTypeSyncEnum
    _$gWebhookEventTypeSyncEnumCHECKOUT_CALCULATE_TAXES =
    const GWebhookEventTypeSyncEnum._('CHECKOUT_CALCULATE_TAXES');
const GWebhookEventTypeSyncEnum
    _$gWebhookEventTypeSyncEnumORDER_CALCULATE_TAXES =
    const GWebhookEventTypeSyncEnum._('ORDER_CALCULATE_TAXES');
const GWebhookEventTypeSyncEnum
    _$gWebhookEventTypeSyncEnumSHIPPING_LIST_METHODS_FOR_CHECKOUT =
    const GWebhookEventTypeSyncEnum._('SHIPPING_LIST_METHODS_FOR_CHECKOUT');
const GWebhookEventTypeSyncEnum
    _$gWebhookEventTypeSyncEnumORDER_FILTER_SHIPPING_METHODS =
    const GWebhookEventTypeSyncEnum._('ORDER_FILTER_SHIPPING_METHODS');
const GWebhookEventTypeSyncEnum
    _$gWebhookEventTypeSyncEnumCHECKOUT_FILTER_SHIPPING_METHODS =
    const GWebhookEventTypeSyncEnum._('CHECKOUT_FILTER_SHIPPING_METHODS');

GWebhookEventTypeSyncEnum _$gWebhookEventTypeSyncEnumValueOf(String name) {
  switch (name) {
    case 'PAYMENT_AUTHORIZE':
      return _$gWebhookEventTypeSyncEnumPAYMENT_AUTHORIZE;
    case 'PAYMENT_CAPTURE':
      return _$gWebhookEventTypeSyncEnumPAYMENT_CAPTURE;
    case 'PAYMENT_CONFIRM':
      return _$gWebhookEventTypeSyncEnumPAYMENT_CONFIRM;
    case 'PAYMENT_LIST_GATEWAYS':
      return _$gWebhookEventTypeSyncEnumPAYMENT_LIST_GATEWAYS;
    case 'PAYMENT_PROCESS':
      return _$gWebhookEventTypeSyncEnumPAYMENT_PROCESS;
    case 'PAYMENT_REFUND':
      return _$gWebhookEventTypeSyncEnumPAYMENT_REFUND;
    case 'PAYMENT_VOID':
      return _$gWebhookEventTypeSyncEnumPAYMENT_VOID;
    case 'CHECKOUT_CALCULATE_TAXES':
      return _$gWebhookEventTypeSyncEnumCHECKOUT_CALCULATE_TAXES;
    case 'ORDER_CALCULATE_TAXES':
      return _$gWebhookEventTypeSyncEnumORDER_CALCULATE_TAXES;
    case 'SHIPPING_LIST_METHODS_FOR_CHECKOUT':
      return _$gWebhookEventTypeSyncEnumSHIPPING_LIST_METHODS_FOR_CHECKOUT;
    case 'ORDER_FILTER_SHIPPING_METHODS':
      return _$gWebhookEventTypeSyncEnumORDER_FILTER_SHIPPING_METHODS;
    case 'CHECKOUT_FILTER_SHIPPING_METHODS':
      return _$gWebhookEventTypeSyncEnumCHECKOUT_FILTER_SHIPPING_METHODS;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookEventTypeSyncEnum> _$gWebhookEventTypeSyncEnumValues =
    new BuiltSet<GWebhookEventTypeSyncEnum>(const <GWebhookEventTypeSyncEnum>[
  _$gWebhookEventTypeSyncEnumPAYMENT_AUTHORIZE,
  _$gWebhookEventTypeSyncEnumPAYMENT_CAPTURE,
  _$gWebhookEventTypeSyncEnumPAYMENT_CONFIRM,
  _$gWebhookEventTypeSyncEnumPAYMENT_LIST_GATEWAYS,
  _$gWebhookEventTypeSyncEnumPAYMENT_PROCESS,
  _$gWebhookEventTypeSyncEnumPAYMENT_REFUND,
  _$gWebhookEventTypeSyncEnumPAYMENT_VOID,
  _$gWebhookEventTypeSyncEnumCHECKOUT_CALCULATE_TAXES,
  _$gWebhookEventTypeSyncEnumORDER_CALCULATE_TAXES,
  _$gWebhookEventTypeSyncEnumSHIPPING_LIST_METHODS_FOR_CHECKOUT,
  _$gWebhookEventTypeSyncEnumORDER_FILTER_SHIPPING_METHODS,
  _$gWebhookEventTypeSyncEnumCHECKOUT_FILTER_SHIPPING_METHODS,
]);

const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumADDRESS_CREATED =
    const GWebhookSampleEventTypeEnum._('ADDRESS_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumADDRESS_UPDATED =
    const GWebhookSampleEventTypeEnum._('ADDRESS_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumADDRESS_DELETED =
    const GWebhookSampleEventTypeEnum._('ADDRESS_DELETED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumAPP_INSTALLED =
    const GWebhookSampleEventTypeEnum._('APP_INSTALLED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumAPP_UPDATED =
    const GWebhookSampleEventTypeEnum._('APP_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumAPP_DELETED =
    const GWebhookSampleEventTypeEnum._('APP_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumAPP_STATUS_CHANGED =
    const GWebhookSampleEventTypeEnum._('APP_STATUS_CHANGED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumATTRIBUTE_CREATED =
    const GWebhookSampleEventTypeEnum._('ATTRIBUTE_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumATTRIBUTE_UPDATED =
    const GWebhookSampleEventTypeEnum._('ATTRIBUTE_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumATTRIBUTE_DELETED =
    const GWebhookSampleEventTypeEnum._('ATTRIBUTE_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_CREATED =
    const GWebhookSampleEventTypeEnum._('ATTRIBUTE_VALUE_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_UPDATED =
    const GWebhookSampleEventTypeEnum._('ATTRIBUTE_VALUE_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_DELETED =
    const GWebhookSampleEventTypeEnum._('ATTRIBUTE_VALUE_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCATEGORY_CREATED =
    const GWebhookSampleEventTypeEnum._('CATEGORY_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCATEGORY_UPDATED =
    const GWebhookSampleEventTypeEnum._('CATEGORY_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCATEGORY_DELETED =
    const GWebhookSampleEventTypeEnum._('CATEGORY_DELETED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumCHANNEL_CREATED =
    const GWebhookSampleEventTypeEnum._('CHANNEL_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumCHANNEL_UPDATED =
    const GWebhookSampleEventTypeEnum._('CHANNEL_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumCHANNEL_DELETED =
    const GWebhookSampleEventTypeEnum._('CHANNEL_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCHANNEL_STATUS_CHANGED =
    const GWebhookSampleEventTypeEnum._('CHANNEL_STATUS_CHANGED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumGIFT_CARD_CREATED =
    const GWebhookSampleEventTypeEnum._('GIFT_CARD_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumGIFT_CARD_UPDATED =
    const GWebhookSampleEventTypeEnum._('GIFT_CARD_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumGIFT_CARD_DELETED =
    const GWebhookSampleEventTypeEnum._('GIFT_CARD_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumGIFT_CARD_STATUS_CHANGED =
    const GWebhookSampleEventTypeEnum._('GIFT_CARD_STATUS_CHANGED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumGIFT_CARD_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('GIFT_CARD_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumMENU_CREATED =
    const GWebhookSampleEventTypeEnum._('MENU_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumMENU_UPDATED =
    const GWebhookSampleEventTypeEnum._('MENU_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumMENU_DELETED =
    const GWebhookSampleEventTypeEnum._('MENU_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumMENU_ITEM_CREATED =
    const GWebhookSampleEventTypeEnum._('MENU_ITEM_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumMENU_ITEM_UPDATED =
    const GWebhookSampleEventTypeEnum._('MENU_ITEM_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumMENU_ITEM_DELETED =
    const GWebhookSampleEventTypeEnum._('MENU_ITEM_DELETED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_CREATED =
    const GWebhookSampleEventTypeEnum._('ORDER_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_CONFIRMED =
    const GWebhookSampleEventTypeEnum._('ORDER_CONFIRMED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumORDER_FULLY_PAID =
    const GWebhookSampleEventTypeEnum._('ORDER_FULLY_PAID');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_UPDATED =
    const GWebhookSampleEventTypeEnum._('ORDER_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_CANCELLED =
    const GWebhookSampleEventTypeEnum._('ORDER_CANCELLED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumORDER_FULFILLED =
    const GWebhookSampleEventTypeEnum._('ORDER_FULFILLED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumORDER_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('ORDER_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumDRAFT_ORDER_CREATED =
    const GWebhookSampleEventTypeEnum._('DRAFT_ORDER_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumDRAFT_ORDER_UPDATED =
    const GWebhookSampleEventTypeEnum._('DRAFT_ORDER_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumDRAFT_ORDER_DELETED =
    const GWebhookSampleEventTypeEnum._('DRAFT_ORDER_DELETED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumSALE_CREATED =
    const GWebhookSampleEventTypeEnum._('SALE_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumSALE_UPDATED =
    const GWebhookSampleEventTypeEnum._('SALE_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumSALE_DELETED =
    const GWebhookSampleEventTypeEnum._('SALE_DELETED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumSALE_TOGGLE =
    const GWebhookSampleEventTypeEnum._('SALE_TOGGLE');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumINVOICE_REQUESTED =
    const GWebhookSampleEventTypeEnum._('INVOICE_REQUESTED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumINVOICE_DELETED =
    const GWebhookSampleEventTypeEnum._('INVOICE_DELETED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumINVOICE_SENT =
    const GWebhookSampleEventTypeEnum._('INVOICE_SENT');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCUSTOMER_CREATED =
    const GWebhookSampleEventTypeEnum._('CUSTOMER_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCUSTOMER_UPDATED =
    const GWebhookSampleEventTypeEnum._('CUSTOMER_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCUSTOMER_DELETED =
    const GWebhookSampleEventTypeEnum._('CUSTOMER_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCUSTOMER_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('CUSTOMER_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCOLLECTION_CREATED =
    const GWebhookSampleEventTypeEnum._('COLLECTION_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCOLLECTION_UPDATED =
    const GWebhookSampleEventTypeEnum._('COLLECTION_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCOLLECTION_DELETED =
    const GWebhookSampleEventTypeEnum._('COLLECTION_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCOLLECTION_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('COLLECTION_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumPRODUCT_CREATED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumPRODUCT_UPDATED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumPRODUCT_DELETED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPRODUCT_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_CREATED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_VARIANT_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_UPDATED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_VARIANT_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_DELETED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_VARIANT_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_OUT_OF_STOCK =
    const GWebhookSampleEventTypeEnum._('PRODUCT_VARIANT_OUT_OF_STOCK');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_BACK_IN_STOCK =
    const GWebhookSampleEventTypeEnum._('PRODUCT_VARIANT_BACK_IN_STOCK');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('PRODUCT_VARIANT_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCHECKOUT_CREATED =
    const GWebhookSampleEventTypeEnum._('CHECKOUT_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCHECKOUT_UPDATED =
    const GWebhookSampleEventTypeEnum._('CHECKOUT_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumCHECKOUT_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('CHECKOUT_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumFULFILLMENT_CREATED =
    const GWebhookSampleEventTypeEnum._('FULFILLMENT_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumFULFILLMENT_CANCELED =
    const GWebhookSampleEventTypeEnum._('FULFILLMENT_CANCELED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumFULFILLMENT_APPROVED =
    const GWebhookSampleEventTypeEnum._('FULFILLMENT_APPROVED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumFULFILLMENT_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('FULFILLMENT_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumNOTIFY_USER =
    const GWebhookSampleEventTypeEnum._('NOTIFY_USER');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumPAGE_CREATED =
    const GWebhookSampleEventTypeEnum._('PAGE_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumPAGE_UPDATED =
    const GWebhookSampleEventTypeEnum._('PAGE_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumPAGE_DELETED =
    const GWebhookSampleEventTypeEnum._('PAGE_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPAGE_TYPE_CREATED =
    const GWebhookSampleEventTypeEnum._('PAGE_TYPE_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPAGE_TYPE_UPDATED =
    const GWebhookSampleEventTypeEnum._('PAGE_TYPE_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPAGE_TYPE_DELETED =
    const GWebhookSampleEventTypeEnum._('PAGE_TYPE_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_CREATED =
    const GWebhookSampleEventTypeEnum._('PERMISSION_GROUP_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_UPDATED =
    const GWebhookSampleEventTypeEnum._('PERMISSION_GROUP_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_DELETED =
    const GWebhookSampleEventTypeEnum._('PERMISSION_GROUP_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_CREATED =
    const GWebhookSampleEventTypeEnum._('SHIPPING_PRICE_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_UPDATED =
    const GWebhookSampleEventTypeEnum._('SHIPPING_PRICE_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_DELETED =
    const GWebhookSampleEventTypeEnum._('SHIPPING_PRICE_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_CREATED =
    const GWebhookSampleEventTypeEnum._('SHIPPING_ZONE_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_UPDATED =
    const GWebhookSampleEventTypeEnum._('SHIPPING_ZONE_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_DELETED =
    const GWebhookSampleEventTypeEnum._('SHIPPING_ZONE_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('SHIPPING_ZONE_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumSTAFF_CREATED =
    const GWebhookSampleEventTypeEnum._('STAFF_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumSTAFF_UPDATED =
    const GWebhookSampleEventTypeEnum._('STAFF_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumSTAFF_DELETED =
    const GWebhookSampleEventTypeEnum._('STAFF_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumTRANSACTION_ACTION_REQUEST =
    const GWebhookSampleEventTypeEnum._('TRANSACTION_ACTION_REQUEST');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumTRANSACTION_ITEM_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('TRANSACTION_ITEM_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumTRANSLATION_CREATED =
    const GWebhookSampleEventTypeEnum._('TRANSLATION_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumTRANSLATION_UPDATED =
    const GWebhookSampleEventTypeEnum._('TRANSLATION_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumWAREHOUSE_CREATED =
    const GWebhookSampleEventTypeEnum._('WAREHOUSE_CREATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumWAREHOUSE_UPDATED =
    const GWebhookSampleEventTypeEnum._('WAREHOUSE_UPDATED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumWAREHOUSE_DELETED =
    const GWebhookSampleEventTypeEnum._('WAREHOUSE_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumWAREHOUSE_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('WAREHOUSE_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumVOUCHER_CREATED =
    const GWebhookSampleEventTypeEnum._('VOUCHER_CREATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumVOUCHER_UPDATED =
    const GWebhookSampleEventTypeEnum._('VOUCHER_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumVOUCHER_DELETED =
    const GWebhookSampleEventTypeEnum._('VOUCHER_DELETED');
const GWebhookSampleEventTypeEnum
    _$gWebhookSampleEventTypeEnumVOUCHER_METADATA_UPDATED =
    const GWebhookSampleEventTypeEnum._('VOUCHER_METADATA_UPDATED');
const GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumOBSERVABILITY =
    const GWebhookSampleEventTypeEnum._('OBSERVABILITY');

GWebhookSampleEventTypeEnum _$gWebhookSampleEventTypeEnumValueOf(String name) {
  switch (name) {
    case 'ADDRESS_CREATED':
      return _$gWebhookSampleEventTypeEnumADDRESS_CREATED;
    case 'ADDRESS_UPDATED':
      return _$gWebhookSampleEventTypeEnumADDRESS_UPDATED;
    case 'ADDRESS_DELETED':
      return _$gWebhookSampleEventTypeEnumADDRESS_DELETED;
    case 'APP_INSTALLED':
      return _$gWebhookSampleEventTypeEnumAPP_INSTALLED;
    case 'APP_UPDATED':
      return _$gWebhookSampleEventTypeEnumAPP_UPDATED;
    case 'APP_DELETED':
      return _$gWebhookSampleEventTypeEnumAPP_DELETED;
    case 'APP_STATUS_CHANGED':
      return _$gWebhookSampleEventTypeEnumAPP_STATUS_CHANGED;
    case 'ATTRIBUTE_CREATED':
      return _$gWebhookSampleEventTypeEnumATTRIBUTE_CREATED;
    case 'ATTRIBUTE_UPDATED':
      return _$gWebhookSampleEventTypeEnumATTRIBUTE_UPDATED;
    case 'ATTRIBUTE_DELETED':
      return _$gWebhookSampleEventTypeEnumATTRIBUTE_DELETED;
    case 'ATTRIBUTE_VALUE_CREATED':
      return _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_CREATED;
    case 'ATTRIBUTE_VALUE_UPDATED':
      return _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_UPDATED;
    case 'ATTRIBUTE_VALUE_DELETED':
      return _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_DELETED;
    case 'CATEGORY_CREATED':
      return _$gWebhookSampleEventTypeEnumCATEGORY_CREATED;
    case 'CATEGORY_UPDATED':
      return _$gWebhookSampleEventTypeEnumCATEGORY_UPDATED;
    case 'CATEGORY_DELETED':
      return _$gWebhookSampleEventTypeEnumCATEGORY_DELETED;
    case 'CHANNEL_CREATED':
      return _$gWebhookSampleEventTypeEnumCHANNEL_CREATED;
    case 'CHANNEL_UPDATED':
      return _$gWebhookSampleEventTypeEnumCHANNEL_UPDATED;
    case 'CHANNEL_DELETED':
      return _$gWebhookSampleEventTypeEnumCHANNEL_DELETED;
    case 'CHANNEL_STATUS_CHANGED':
      return _$gWebhookSampleEventTypeEnumCHANNEL_STATUS_CHANGED;
    case 'GIFT_CARD_CREATED':
      return _$gWebhookSampleEventTypeEnumGIFT_CARD_CREATED;
    case 'GIFT_CARD_UPDATED':
      return _$gWebhookSampleEventTypeEnumGIFT_CARD_UPDATED;
    case 'GIFT_CARD_DELETED':
      return _$gWebhookSampleEventTypeEnumGIFT_CARD_DELETED;
    case 'GIFT_CARD_STATUS_CHANGED':
      return _$gWebhookSampleEventTypeEnumGIFT_CARD_STATUS_CHANGED;
    case 'GIFT_CARD_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumGIFT_CARD_METADATA_UPDATED;
    case 'MENU_CREATED':
      return _$gWebhookSampleEventTypeEnumMENU_CREATED;
    case 'MENU_UPDATED':
      return _$gWebhookSampleEventTypeEnumMENU_UPDATED;
    case 'MENU_DELETED':
      return _$gWebhookSampleEventTypeEnumMENU_DELETED;
    case 'MENU_ITEM_CREATED':
      return _$gWebhookSampleEventTypeEnumMENU_ITEM_CREATED;
    case 'MENU_ITEM_UPDATED':
      return _$gWebhookSampleEventTypeEnumMENU_ITEM_UPDATED;
    case 'MENU_ITEM_DELETED':
      return _$gWebhookSampleEventTypeEnumMENU_ITEM_DELETED;
    case 'ORDER_CREATED':
      return _$gWebhookSampleEventTypeEnumORDER_CREATED;
    case 'ORDER_CONFIRMED':
      return _$gWebhookSampleEventTypeEnumORDER_CONFIRMED;
    case 'ORDER_FULLY_PAID':
      return _$gWebhookSampleEventTypeEnumORDER_FULLY_PAID;
    case 'ORDER_UPDATED':
      return _$gWebhookSampleEventTypeEnumORDER_UPDATED;
    case 'ORDER_CANCELLED':
      return _$gWebhookSampleEventTypeEnumORDER_CANCELLED;
    case 'ORDER_FULFILLED':
      return _$gWebhookSampleEventTypeEnumORDER_FULFILLED;
    case 'ORDER_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumORDER_METADATA_UPDATED;
    case 'DRAFT_ORDER_CREATED':
      return _$gWebhookSampleEventTypeEnumDRAFT_ORDER_CREATED;
    case 'DRAFT_ORDER_UPDATED':
      return _$gWebhookSampleEventTypeEnumDRAFT_ORDER_UPDATED;
    case 'DRAFT_ORDER_DELETED':
      return _$gWebhookSampleEventTypeEnumDRAFT_ORDER_DELETED;
    case 'SALE_CREATED':
      return _$gWebhookSampleEventTypeEnumSALE_CREATED;
    case 'SALE_UPDATED':
      return _$gWebhookSampleEventTypeEnumSALE_UPDATED;
    case 'SALE_DELETED':
      return _$gWebhookSampleEventTypeEnumSALE_DELETED;
    case 'SALE_TOGGLE':
      return _$gWebhookSampleEventTypeEnumSALE_TOGGLE;
    case 'INVOICE_REQUESTED':
      return _$gWebhookSampleEventTypeEnumINVOICE_REQUESTED;
    case 'INVOICE_DELETED':
      return _$gWebhookSampleEventTypeEnumINVOICE_DELETED;
    case 'INVOICE_SENT':
      return _$gWebhookSampleEventTypeEnumINVOICE_SENT;
    case 'CUSTOMER_CREATED':
      return _$gWebhookSampleEventTypeEnumCUSTOMER_CREATED;
    case 'CUSTOMER_UPDATED':
      return _$gWebhookSampleEventTypeEnumCUSTOMER_UPDATED;
    case 'CUSTOMER_DELETED':
      return _$gWebhookSampleEventTypeEnumCUSTOMER_DELETED;
    case 'CUSTOMER_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumCUSTOMER_METADATA_UPDATED;
    case 'COLLECTION_CREATED':
      return _$gWebhookSampleEventTypeEnumCOLLECTION_CREATED;
    case 'COLLECTION_UPDATED':
      return _$gWebhookSampleEventTypeEnumCOLLECTION_UPDATED;
    case 'COLLECTION_DELETED':
      return _$gWebhookSampleEventTypeEnumCOLLECTION_DELETED;
    case 'COLLECTION_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumCOLLECTION_METADATA_UPDATED;
    case 'PRODUCT_CREATED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_CREATED;
    case 'PRODUCT_UPDATED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_UPDATED;
    case 'PRODUCT_DELETED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_DELETED;
    case 'PRODUCT_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_METADATA_UPDATED;
    case 'PRODUCT_VARIANT_CREATED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_CREATED;
    case 'PRODUCT_VARIANT_UPDATED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_UPDATED;
    case 'PRODUCT_VARIANT_DELETED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_DELETED;
    case 'PRODUCT_VARIANT_OUT_OF_STOCK':
      return _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_OUT_OF_STOCK;
    case 'PRODUCT_VARIANT_BACK_IN_STOCK':
      return _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_BACK_IN_STOCK;
    case 'PRODUCT_VARIANT_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_METADATA_UPDATED;
    case 'CHECKOUT_CREATED':
      return _$gWebhookSampleEventTypeEnumCHECKOUT_CREATED;
    case 'CHECKOUT_UPDATED':
      return _$gWebhookSampleEventTypeEnumCHECKOUT_UPDATED;
    case 'CHECKOUT_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumCHECKOUT_METADATA_UPDATED;
    case 'FULFILLMENT_CREATED':
      return _$gWebhookSampleEventTypeEnumFULFILLMENT_CREATED;
    case 'FULFILLMENT_CANCELED':
      return _$gWebhookSampleEventTypeEnumFULFILLMENT_CANCELED;
    case 'FULFILLMENT_APPROVED':
      return _$gWebhookSampleEventTypeEnumFULFILLMENT_APPROVED;
    case 'FULFILLMENT_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumFULFILLMENT_METADATA_UPDATED;
    case 'NOTIFY_USER':
      return _$gWebhookSampleEventTypeEnumNOTIFY_USER;
    case 'PAGE_CREATED':
      return _$gWebhookSampleEventTypeEnumPAGE_CREATED;
    case 'PAGE_UPDATED':
      return _$gWebhookSampleEventTypeEnumPAGE_UPDATED;
    case 'PAGE_DELETED':
      return _$gWebhookSampleEventTypeEnumPAGE_DELETED;
    case 'PAGE_TYPE_CREATED':
      return _$gWebhookSampleEventTypeEnumPAGE_TYPE_CREATED;
    case 'PAGE_TYPE_UPDATED':
      return _$gWebhookSampleEventTypeEnumPAGE_TYPE_UPDATED;
    case 'PAGE_TYPE_DELETED':
      return _$gWebhookSampleEventTypeEnumPAGE_TYPE_DELETED;
    case 'PERMISSION_GROUP_CREATED':
      return _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_CREATED;
    case 'PERMISSION_GROUP_UPDATED':
      return _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_UPDATED;
    case 'PERMISSION_GROUP_DELETED':
      return _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_DELETED;
    case 'SHIPPING_PRICE_CREATED':
      return _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_CREATED;
    case 'SHIPPING_PRICE_UPDATED':
      return _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_UPDATED;
    case 'SHIPPING_PRICE_DELETED':
      return _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_DELETED;
    case 'SHIPPING_ZONE_CREATED':
      return _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_CREATED;
    case 'SHIPPING_ZONE_UPDATED':
      return _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_UPDATED;
    case 'SHIPPING_ZONE_DELETED':
      return _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_DELETED;
    case 'SHIPPING_ZONE_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_METADATA_UPDATED;
    case 'STAFF_CREATED':
      return _$gWebhookSampleEventTypeEnumSTAFF_CREATED;
    case 'STAFF_UPDATED':
      return _$gWebhookSampleEventTypeEnumSTAFF_UPDATED;
    case 'STAFF_DELETED':
      return _$gWebhookSampleEventTypeEnumSTAFF_DELETED;
    case 'TRANSACTION_ACTION_REQUEST':
      return _$gWebhookSampleEventTypeEnumTRANSACTION_ACTION_REQUEST;
    case 'TRANSACTION_ITEM_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumTRANSACTION_ITEM_METADATA_UPDATED;
    case 'TRANSLATION_CREATED':
      return _$gWebhookSampleEventTypeEnumTRANSLATION_CREATED;
    case 'TRANSLATION_UPDATED':
      return _$gWebhookSampleEventTypeEnumTRANSLATION_UPDATED;
    case 'WAREHOUSE_CREATED':
      return _$gWebhookSampleEventTypeEnumWAREHOUSE_CREATED;
    case 'WAREHOUSE_UPDATED':
      return _$gWebhookSampleEventTypeEnumWAREHOUSE_UPDATED;
    case 'WAREHOUSE_DELETED':
      return _$gWebhookSampleEventTypeEnumWAREHOUSE_DELETED;
    case 'WAREHOUSE_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumWAREHOUSE_METADATA_UPDATED;
    case 'VOUCHER_CREATED':
      return _$gWebhookSampleEventTypeEnumVOUCHER_CREATED;
    case 'VOUCHER_UPDATED':
      return _$gWebhookSampleEventTypeEnumVOUCHER_UPDATED;
    case 'VOUCHER_DELETED':
      return _$gWebhookSampleEventTypeEnumVOUCHER_DELETED;
    case 'VOUCHER_METADATA_UPDATED':
      return _$gWebhookSampleEventTypeEnumVOUCHER_METADATA_UPDATED;
    case 'OBSERVABILITY':
      return _$gWebhookSampleEventTypeEnumOBSERVABILITY;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWebhookSampleEventTypeEnum>
    _$gWebhookSampleEventTypeEnumValues = new BuiltSet<
        GWebhookSampleEventTypeEnum>(const <GWebhookSampleEventTypeEnum>[
  _$gWebhookSampleEventTypeEnumADDRESS_CREATED,
  _$gWebhookSampleEventTypeEnumADDRESS_UPDATED,
  _$gWebhookSampleEventTypeEnumADDRESS_DELETED,
  _$gWebhookSampleEventTypeEnumAPP_INSTALLED,
  _$gWebhookSampleEventTypeEnumAPP_UPDATED,
  _$gWebhookSampleEventTypeEnumAPP_DELETED,
  _$gWebhookSampleEventTypeEnumAPP_STATUS_CHANGED,
  _$gWebhookSampleEventTypeEnumATTRIBUTE_CREATED,
  _$gWebhookSampleEventTypeEnumATTRIBUTE_UPDATED,
  _$gWebhookSampleEventTypeEnumATTRIBUTE_DELETED,
  _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_CREATED,
  _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_UPDATED,
  _$gWebhookSampleEventTypeEnumATTRIBUTE_VALUE_DELETED,
  _$gWebhookSampleEventTypeEnumCATEGORY_CREATED,
  _$gWebhookSampleEventTypeEnumCATEGORY_UPDATED,
  _$gWebhookSampleEventTypeEnumCATEGORY_DELETED,
  _$gWebhookSampleEventTypeEnumCHANNEL_CREATED,
  _$gWebhookSampleEventTypeEnumCHANNEL_UPDATED,
  _$gWebhookSampleEventTypeEnumCHANNEL_DELETED,
  _$gWebhookSampleEventTypeEnumCHANNEL_STATUS_CHANGED,
  _$gWebhookSampleEventTypeEnumGIFT_CARD_CREATED,
  _$gWebhookSampleEventTypeEnumGIFT_CARD_UPDATED,
  _$gWebhookSampleEventTypeEnumGIFT_CARD_DELETED,
  _$gWebhookSampleEventTypeEnumGIFT_CARD_STATUS_CHANGED,
  _$gWebhookSampleEventTypeEnumGIFT_CARD_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumMENU_CREATED,
  _$gWebhookSampleEventTypeEnumMENU_UPDATED,
  _$gWebhookSampleEventTypeEnumMENU_DELETED,
  _$gWebhookSampleEventTypeEnumMENU_ITEM_CREATED,
  _$gWebhookSampleEventTypeEnumMENU_ITEM_UPDATED,
  _$gWebhookSampleEventTypeEnumMENU_ITEM_DELETED,
  _$gWebhookSampleEventTypeEnumORDER_CREATED,
  _$gWebhookSampleEventTypeEnumORDER_CONFIRMED,
  _$gWebhookSampleEventTypeEnumORDER_FULLY_PAID,
  _$gWebhookSampleEventTypeEnumORDER_UPDATED,
  _$gWebhookSampleEventTypeEnumORDER_CANCELLED,
  _$gWebhookSampleEventTypeEnumORDER_FULFILLED,
  _$gWebhookSampleEventTypeEnumORDER_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumDRAFT_ORDER_CREATED,
  _$gWebhookSampleEventTypeEnumDRAFT_ORDER_UPDATED,
  _$gWebhookSampleEventTypeEnumDRAFT_ORDER_DELETED,
  _$gWebhookSampleEventTypeEnumSALE_CREATED,
  _$gWebhookSampleEventTypeEnumSALE_UPDATED,
  _$gWebhookSampleEventTypeEnumSALE_DELETED,
  _$gWebhookSampleEventTypeEnumSALE_TOGGLE,
  _$gWebhookSampleEventTypeEnumINVOICE_REQUESTED,
  _$gWebhookSampleEventTypeEnumINVOICE_DELETED,
  _$gWebhookSampleEventTypeEnumINVOICE_SENT,
  _$gWebhookSampleEventTypeEnumCUSTOMER_CREATED,
  _$gWebhookSampleEventTypeEnumCUSTOMER_UPDATED,
  _$gWebhookSampleEventTypeEnumCUSTOMER_DELETED,
  _$gWebhookSampleEventTypeEnumCUSTOMER_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumCOLLECTION_CREATED,
  _$gWebhookSampleEventTypeEnumCOLLECTION_UPDATED,
  _$gWebhookSampleEventTypeEnumCOLLECTION_DELETED,
  _$gWebhookSampleEventTypeEnumCOLLECTION_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumPRODUCT_CREATED,
  _$gWebhookSampleEventTypeEnumPRODUCT_UPDATED,
  _$gWebhookSampleEventTypeEnumPRODUCT_DELETED,
  _$gWebhookSampleEventTypeEnumPRODUCT_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_CREATED,
  _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_UPDATED,
  _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_DELETED,
  _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_OUT_OF_STOCK,
  _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_BACK_IN_STOCK,
  _$gWebhookSampleEventTypeEnumPRODUCT_VARIANT_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumCHECKOUT_CREATED,
  _$gWebhookSampleEventTypeEnumCHECKOUT_UPDATED,
  _$gWebhookSampleEventTypeEnumCHECKOUT_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumFULFILLMENT_CREATED,
  _$gWebhookSampleEventTypeEnumFULFILLMENT_CANCELED,
  _$gWebhookSampleEventTypeEnumFULFILLMENT_APPROVED,
  _$gWebhookSampleEventTypeEnumFULFILLMENT_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumNOTIFY_USER,
  _$gWebhookSampleEventTypeEnumPAGE_CREATED,
  _$gWebhookSampleEventTypeEnumPAGE_UPDATED,
  _$gWebhookSampleEventTypeEnumPAGE_DELETED,
  _$gWebhookSampleEventTypeEnumPAGE_TYPE_CREATED,
  _$gWebhookSampleEventTypeEnumPAGE_TYPE_UPDATED,
  _$gWebhookSampleEventTypeEnumPAGE_TYPE_DELETED,
  _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_CREATED,
  _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_UPDATED,
  _$gWebhookSampleEventTypeEnumPERMISSION_GROUP_DELETED,
  _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_CREATED,
  _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_UPDATED,
  _$gWebhookSampleEventTypeEnumSHIPPING_PRICE_DELETED,
  _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_CREATED,
  _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_UPDATED,
  _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_DELETED,
  _$gWebhookSampleEventTypeEnumSHIPPING_ZONE_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumSTAFF_CREATED,
  _$gWebhookSampleEventTypeEnumSTAFF_UPDATED,
  _$gWebhookSampleEventTypeEnumSTAFF_DELETED,
  _$gWebhookSampleEventTypeEnumTRANSACTION_ACTION_REQUEST,
  _$gWebhookSampleEventTypeEnumTRANSACTION_ITEM_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumTRANSLATION_CREATED,
  _$gWebhookSampleEventTypeEnumTRANSLATION_UPDATED,
  _$gWebhookSampleEventTypeEnumWAREHOUSE_CREATED,
  _$gWebhookSampleEventTypeEnumWAREHOUSE_UPDATED,
  _$gWebhookSampleEventTypeEnumWAREHOUSE_DELETED,
  _$gWebhookSampleEventTypeEnumWAREHOUSE_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumVOUCHER_CREATED,
  _$gWebhookSampleEventTypeEnumVOUCHER_UPDATED,
  _$gWebhookSampleEventTypeEnumVOUCHER_DELETED,
  _$gWebhookSampleEventTypeEnumVOUCHER_METADATA_UPDATED,
  _$gWebhookSampleEventTypeEnumOBSERVABILITY,
]);

const GWeightUnitsEnum _$gWeightUnitsEnumG = const GWeightUnitsEnum._('G');
const GWeightUnitsEnum _$gWeightUnitsEnumLB = const GWeightUnitsEnum._('LB');
const GWeightUnitsEnum _$gWeightUnitsEnumOZ = const GWeightUnitsEnum._('OZ');
const GWeightUnitsEnum _$gWeightUnitsEnumKG = const GWeightUnitsEnum._('KG');
const GWeightUnitsEnum _$gWeightUnitsEnumTONNE =
    const GWeightUnitsEnum._('TONNE');

GWeightUnitsEnum _$gWeightUnitsEnumValueOf(String name) {
  switch (name) {
    case 'G':
      return _$gWeightUnitsEnumG;
    case 'LB':
      return _$gWeightUnitsEnumLB;
    case 'OZ':
      return _$gWeightUnitsEnumOZ;
    case 'KG':
      return _$gWeightUnitsEnumKG;
    case 'TONNE':
      return _$gWeightUnitsEnumTONNE;
    default:
      throw new ArgumentError(name);
  }
}

final BuiltSet<GWeightUnitsEnum> _$gWeightUnitsEnumValues =
    new BuiltSet<GWeightUnitsEnum>(const <GWeightUnitsEnum>[
  _$gWeightUnitsEnumG,
  _$gWeightUnitsEnumLB,
  _$gWeightUnitsEnumOZ,
  _$gWeightUnitsEnumKG,
  _$gWeightUnitsEnumTONNE,
]);

Serializer<GAccountErrorCode> _$gAccountErrorCodeSerializer =
    new _$GAccountErrorCodeSerializer();
Serializer<GAccountInput> _$gAccountInputSerializer =
    new _$GAccountInputSerializer();
Serializer<GAccountRegisterInput> _$gAccountRegisterInputSerializer =
    new _$GAccountRegisterInputSerializer();
Serializer<GAccountRegisterInputWithPhone>
    _$gAccountRegisterInputWithPhoneSerializer =
    new _$GAccountRegisterInputWithPhoneSerializer();
Serializer<GAddressInput> _$gAddressInputSerializer =
    new _$GAddressInputSerializer();
Serializer<GAddressTypeEnum> _$gAddressTypeEnumSerializer =
    new _$GAddressTypeEnumSerializer();
Serializer<GAllocationStrategyEnum> _$gAllocationStrategyEnumSerializer =
    new _$GAllocationStrategyEnumSerializer();
Serializer<GAppErrorCode> _$gAppErrorCodeSerializer =
    new _$GAppErrorCodeSerializer();
Serializer<GAppExtensionFilterInput> _$gAppExtensionFilterInputSerializer =
    new _$GAppExtensionFilterInputSerializer();
Serializer<GAppExtensionMountEnum> _$gAppExtensionMountEnumSerializer =
    new _$GAppExtensionMountEnumSerializer();
Serializer<GAppExtensionTargetEnum> _$gAppExtensionTargetEnumSerializer =
    new _$GAppExtensionTargetEnumSerializer();
Serializer<GAppFilterInput> _$gAppFilterInputSerializer =
    new _$GAppFilterInputSerializer();
Serializer<GAppInput> _$gAppInputSerializer = new _$GAppInputSerializer();
Serializer<GAppInstallInput> _$gAppInstallInputSerializer =
    new _$GAppInstallInputSerializer();
Serializer<GAppSortField> _$gAppSortFieldSerializer =
    new _$GAppSortFieldSerializer();
Serializer<GAppSortingInput> _$gAppSortingInputSerializer =
    new _$GAppSortingInputSerializer();
Serializer<GAppTokenInput> _$gAppTokenInputSerializer =
    new _$GAppTokenInputSerializer();
Serializer<GAppTypeEnum> _$gAppTypeEnumSerializer =
    new _$GAppTypeEnumSerializer();
Serializer<GAreaUnitsEnum> _$gAreaUnitsEnumSerializer =
    new _$GAreaUnitsEnumSerializer();
Serializer<GAttributeChoicesSortField> _$gAttributeChoicesSortFieldSerializer =
    new _$GAttributeChoicesSortFieldSerializer();
Serializer<GAttributeChoicesSortingInput>
    _$gAttributeChoicesSortingInputSerializer =
    new _$GAttributeChoicesSortingInputSerializer();
Serializer<GAttributeCreateInput> _$gAttributeCreateInputSerializer =
    new _$GAttributeCreateInputSerializer();
Serializer<GAttributeEntityTypeEnum> _$gAttributeEntityTypeEnumSerializer =
    new _$GAttributeEntityTypeEnumSerializer();
Serializer<GAttributeErrorCode> _$gAttributeErrorCodeSerializer =
    new _$GAttributeErrorCodeSerializer();
Serializer<GAttributeFilterInput> _$gAttributeFilterInputSerializer =
    new _$GAttributeFilterInputSerializer();
Serializer<GAttributeInput> _$gAttributeInputSerializer =
    new _$GAttributeInputSerializer();
Serializer<GAttributeInputTypeEnum> _$gAttributeInputTypeEnumSerializer =
    new _$GAttributeInputTypeEnumSerializer();
Serializer<GAttributeSortField> _$gAttributeSortFieldSerializer =
    new _$GAttributeSortFieldSerializer();
Serializer<GAttributeSortingInput> _$gAttributeSortingInputSerializer =
    new _$GAttributeSortingInputSerializer();
Serializer<GAttributeTypeEnum> _$gAttributeTypeEnumSerializer =
    new _$GAttributeTypeEnumSerializer();
Serializer<GAttributeUpdateInput> _$gAttributeUpdateInputSerializer =
    new _$GAttributeUpdateInputSerializer();
Serializer<GAttributeValueCreateInput> _$gAttributeValueCreateInputSerializer =
    new _$GAttributeValueCreateInputSerializer();
Serializer<GAttributeValueFilterInput> _$gAttributeValueFilterInputSerializer =
    new _$GAttributeValueFilterInputSerializer();
Serializer<GAttributeValueInput> _$gAttributeValueInputSerializer =
    new _$GAttributeValueInputSerializer();
Serializer<GAttributeValueTranslationInput>
    _$gAttributeValueTranslationInputSerializer =
    new _$GAttributeValueTranslationInputSerializer();
Serializer<GAttributeValueUpdateInput> _$gAttributeValueUpdateInputSerializer =
    new _$GAttributeValueUpdateInputSerializer();
Serializer<GBulkAttributeValueInput> _$gBulkAttributeValueInputSerializer =
    new _$GBulkAttributeValueInputSerializer();
Serializer<GCardInput> _$gCardInputSerializer = new _$GCardInputSerializer();
Serializer<GCatalogueInput> _$gCatalogueInputSerializer =
    new _$GCatalogueInputSerializer();
Serializer<GCategoryFilterInput> _$gCategoryFilterInputSerializer =
    new _$GCategoryFilterInputSerializer();
Serializer<GCategoryInput> _$gCategoryInputSerializer =
    new _$GCategoryInputSerializer();
Serializer<GCategorySortField> _$gCategorySortFieldSerializer =
    new _$GCategorySortFieldSerializer();
Serializer<GCategorySortingInput> _$gCategorySortingInputSerializer =
    new _$GCategorySortingInputSerializer();
Serializer<GChannelCreateInput> _$gChannelCreateInputSerializer =
    new _$GChannelCreateInputSerializer();
Serializer<GChannelDeleteInput> _$gChannelDeleteInputSerializer =
    new _$GChannelDeleteInputSerializer();
Serializer<GChannelErrorCode> _$gChannelErrorCodeSerializer =
    new _$GChannelErrorCodeSerializer();
Serializer<GChannelUpdateInput> _$gChannelUpdateInputSerializer =
    new _$GChannelUpdateInputSerializer();
Serializer<GCheckoutAddressValidationRules>
    _$gCheckoutAddressValidationRulesSerializer =
    new _$GCheckoutAddressValidationRulesSerializer();
Serializer<GCheckoutCreateInput> _$gCheckoutCreateInputSerializer =
    new _$GCheckoutCreateInputSerializer();
Serializer<GCheckoutErrorCode> _$gCheckoutErrorCodeSerializer =
    new _$GCheckoutErrorCodeSerializer();
Serializer<GCheckoutFilterInput> _$gCheckoutFilterInputSerializer =
    new _$GCheckoutFilterInputSerializer();
Serializer<GCheckoutLineInput> _$gCheckoutLineInputSerializer =
    new _$GCheckoutLineInputSerializer();
Serializer<GCheckoutLineUpdateInput> _$gCheckoutLineUpdateInputSerializer =
    new _$GCheckoutLineUpdateInputSerializer();
Serializer<GCheckoutSortField> _$gCheckoutSortFieldSerializer =
    new _$GCheckoutSortFieldSerializer();
Serializer<GCheckoutSortingInput> _$gCheckoutSortingInputSerializer =
    new _$GCheckoutSortingInputSerializer();
Serializer<GCheckoutValidationRules> _$gCheckoutValidationRulesSerializer =
    new _$GCheckoutValidationRulesSerializer();
Serializer<GCollectionChannelListingUpdateInput>
    _$gCollectionChannelListingUpdateInputSerializer =
    new _$GCollectionChannelListingUpdateInputSerializer();
Serializer<GCollectionCreateInput> _$gCollectionCreateInputSerializer =
    new _$GCollectionCreateInputSerializer();
Serializer<GCollectionErrorCode> _$gCollectionErrorCodeSerializer =
    new _$GCollectionErrorCodeSerializer();
Serializer<GCollectionFilterInput> _$gCollectionFilterInputSerializer =
    new _$GCollectionFilterInputSerializer();
Serializer<GCollectionInput> _$gCollectionInputSerializer =
    new _$GCollectionInputSerializer();
Serializer<GCollectionPublished> _$gCollectionPublishedSerializer =
    new _$GCollectionPublishedSerializer();
Serializer<GCollectionSortField> _$gCollectionSortFieldSerializer =
    new _$GCollectionSortFieldSerializer();
Serializer<GCollectionSortingInput> _$gCollectionSortingInputSerializer =
    new _$GCollectionSortingInputSerializer();
Serializer<GConfigurationItemInput> _$gConfigurationItemInputSerializer =
    new _$GConfigurationItemInputSerializer();
Serializer<GConfigurationTypeFieldEnum>
    _$gConfigurationTypeFieldEnumSerializer =
    new _$GConfigurationTypeFieldEnumSerializer();
Serializer<GCountryCode> _$gCountryCodeSerializer =
    new _$GCountryCodeSerializer();
Serializer<GCountryFilterInput> _$gCountryFilterInputSerializer =
    new _$GCountryFilterInputSerializer();
Serializer<GCustomerEventsEnum> _$gCustomerEventsEnumSerializer =
    new _$GCustomerEventsEnumSerializer();
Serializer<GCustomerFilterInput> _$gCustomerFilterInputSerializer =
    new _$GCustomerFilterInputSerializer();
Serializer<GCustomerInput> _$gCustomerInputSerializer =
    new _$GCustomerInputSerializer();
Serializer<GDateRangeInput> _$gDateRangeInputSerializer =
    new _$GDateRangeInputSerializer();
Serializer<GDateTimeRangeInput> _$gDateTimeRangeInputSerializer =
    new _$GDateTimeRangeInputSerializer();
Serializer<GDigitalContentInput> _$gDigitalContentInputSerializer =
    new _$GDigitalContentInputSerializer();
Serializer<GDigitalContentUploadInput> _$gDigitalContentUploadInputSerializer =
    new _$GDigitalContentUploadInputSerializer();
Serializer<GDigitalContentUrlCreateInput>
    _$gDigitalContentUrlCreateInputSerializer =
    new _$GDigitalContentUrlCreateInputSerializer();
Serializer<GDiscountErrorCode> _$gDiscountErrorCodeSerializer =
    new _$GDiscountErrorCodeSerializer();
Serializer<GDiscountStatusEnum> _$gDiscountStatusEnumSerializer =
    new _$GDiscountStatusEnumSerializer();
Serializer<GDiscountValueTypeEnum> _$gDiscountValueTypeEnumSerializer =
    new _$GDiscountValueTypeEnumSerializer();
Serializer<GDistanceUnitsEnum> _$gDistanceUnitsEnumSerializer =
    new _$GDistanceUnitsEnumSerializer();
Serializer<GDraftOrderCreateInput> _$gDraftOrderCreateInputSerializer =
    new _$GDraftOrderCreateInputSerializer();
Serializer<GDraftOrderInput> _$gDraftOrderInputSerializer =
    new _$GDraftOrderInputSerializer();
Serializer<GEventDeliveryAttemptSortField>
    _$gEventDeliveryAttemptSortFieldSerializer =
    new _$GEventDeliveryAttemptSortFieldSerializer();
Serializer<GEventDeliveryAttemptSortingInput>
    _$gEventDeliveryAttemptSortingInputSerializer =
    new _$GEventDeliveryAttemptSortingInputSerializer();
Serializer<GEventDeliveryFilterInput> _$gEventDeliveryFilterInputSerializer =
    new _$GEventDeliveryFilterInputSerializer();
Serializer<GEventDeliverySortField> _$gEventDeliverySortFieldSerializer =
    new _$GEventDeliverySortFieldSerializer();
Serializer<GEventDeliverySortingInput> _$gEventDeliverySortingInputSerializer =
    new _$GEventDeliverySortingInputSerializer();
Serializer<GEventDeliveryStatusEnum> _$gEventDeliveryStatusEnumSerializer =
    new _$GEventDeliveryStatusEnumSerializer();
Serializer<GExportErrorCode> _$gExportErrorCodeSerializer =
    new _$GExportErrorCodeSerializer();
Serializer<GExportEventsEnum> _$gExportEventsEnumSerializer =
    new _$GExportEventsEnumSerializer();
Serializer<GExportFileFilterInput> _$gExportFileFilterInputSerializer =
    new _$GExportFileFilterInputSerializer();
Serializer<GExportFileSortField> _$gExportFileSortFieldSerializer =
    new _$GExportFileSortFieldSerializer();
Serializer<GExportFileSortingInput> _$gExportFileSortingInputSerializer =
    new _$GExportFileSortingInputSerializer();
Serializer<GExportGiftCardsInput> _$gExportGiftCardsInputSerializer =
    new _$GExportGiftCardsInputSerializer();
Serializer<GExportInfoInput> _$gExportInfoInputSerializer =
    new _$GExportInfoInputSerializer();
Serializer<GExportProductsInput> _$gExportProductsInputSerializer =
    new _$GExportProductsInputSerializer();
Serializer<GExportScope> _$gExportScopeSerializer =
    new _$GExportScopeSerializer();
Serializer<GExternalNotificationErrorCodes>
    _$gExternalNotificationErrorCodesSerializer =
    new _$GExternalNotificationErrorCodesSerializer();
Serializer<GExternalNotificationTriggerInput>
    _$gExternalNotificationTriggerInputSerializer =
    new _$GExternalNotificationTriggerInputSerializer();
Serializer<GFileTypesEnum> _$gFileTypesEnumSerializer =
    new _$GFileTypesEnumSerializer();
Serializer<GFulfillmentCancelInput> _$gFulfillmentCancelInputSerializer =
    new _$GFulfillmentCancelInputSerializer();
Serializer<GFulfillmentStatus> _$gFulfillmentStatusSerializer =
    new _$GFulfillmentStatusSerializer();
Serializer<GFulfillmentUpdateTrackingInput>
    _$gFulfillmentUpdateTrackingInputSerializer =
    new _$GFulfillmentUpdateTrackingInputSerializer();
Serializer<GGiftCardAddNoteInput> _$gGiftCardAddNoteInputSerializer =
    new _$GGiftCardAddNoteInputSerializer();
Serializer<GGiftCardBulkCreateInput> _$gGiftCardBulkCreateInputSerializer =
    new _$GGiftCardBulkCreateInputSerializer();
Serializer<GGiftCardCreateInput> _$gGiftCardCreateInputSerializer =
    new _$GGiftCardCreateInputSerializer();
Serializer<GGiftCardErrorCode> _$gGiftCardErrorCodeSerializer =
    new _$GGiftCardErrorCodeSerializer();
Serializer<GGiftCardEventFilterInput> _$gGiftCardEventFilterInputSerializer =
    new _$GGiftCardEventFilterInputSerializer();
Serializer<GGiftCardEventsEnum> _$gGiftCardEventsEnumSerializer =
    new _$GGiftCardEventsEnumSerializer();
Serializer<GGiftCardFilterInput> _$gGiftCardFilterInputSerializer =
    new _$GGiftCardFilterInputSerializer();
Serializer<GGiftCardResendInput> _$gGiftCardResendInputSerializer =
    new _$GGiftCardResendInputSerializer();
Serializer<GGiftCardSettingsErrorCode> _$gGiftCardSettingsErrorCodeSerializer =
    new _$GGiftCardSettingsErrorCodeSerializer();
Serializer<GGiftCardSettingsExpiryTypeEnum>
    _$gGiftCardSettingsExpiryTypeEnumSerializer =
    new _$GGiftCardSettingsExpiryTypeEnumSerializer();
Serializer<GGiftCardSettingsUpdateInput>
    _$gGiftCardSettingsUpdateInputSerializer =
    new _$GGiftCardSettingsUpdateInputSerializer();
Serializer<GGiftCardSortField> _$gGiftCardSortFieldSerializer =
    new _$GGiftCardSortFieldSerializer();
Serializer<GGiftCardSortingInput> _$gGiftCardSortingInputSerializer =
    new _$GGiftCardSortingInputSerializer();
Serializer<GGiftCardTagFilterInput> _$gGiftCardTagFilterInputSerializer =
    new _$GGiftCardTagFilterInputSerializer();
Serializer<GGiftCardUpdateInput> _$gGiftCardUpdateInputSerializer =
    new _$GGiftCardUpdateInputSerializer();
Serializer<GIntRangeInput> _$gIntRangeInputSerializer =
    new _$GIntRangeInputSerializer();
Serializer<GInvoiceCreateInput> _$gInvoiceCreateInputSerializer =
    new _$GInvoiceCreateInputSerializer();
Serializer<GInvoiceErrorCode> _$gInvoiceErrorCodeSerializer =
    new _$GInvoiceErrorCodeSerializer();
Serializer<GJobStatusEnum> _$gJobStatusEnumSerializer =
    new _$GJobStatusEnumSerializer();
Serializer<GLanguageCodeEnum> _$gLanguageCodeEnumSerializer =
    new _$GLanguageCodeEnumSerializer();
Serializer<GMeasurementUnitsEnum> _$gMeasurementUnitsEnumSerializer =
    new _$GMeasurementUnitsEnumSerializer();
Serializer<GMenuCreateInput> _$gMenuCreateInputSerializer =
    new _$GMenuCreateInputSerializer();
Serializer<GMenuErrorCode> _$gMenuErrorCodeSerializer =
    new _$GMenuErrorCodeSerializer();
Serializer<GMenuFilterInput> _$gMenuFilterInputSerializer =
    new _$GMenuFilterInputSerializer();
Serializer<GMenuInput> _$gMenuInputSerializer = new _$GMenuInputSerializer();
Serializer<GMenuItemCreateInput> _$gMenuItemCreateInputSerializer =
    new _$GMenuItemCreateInputSerializer();
Serializer<GMenuItemFilterInput> _$gMenuItemFilterInputSerializer =
    new _$GMenuItemFilterInputSerializer();
Serializer<GMenuItemInput> _$gMenuItemInputSerializer =
    new _$GMenuItemInputSerializer();
Serializer<GMenuItemMoveInput> _$gMenuItemMoveInputSerializer =
    new _$GMenuItemMoveInputSerializer();
Serializer<GMenuItemSortingInput> _$gMenuItemSortingInputSerializer =
    new _$GMenuItemSortingInputSerializer();
Serializer<GMenuItemsSortField> _$gMenuItemsSortFieldSerializer =
    new _$GMenuItemsSortFieldSerializer();
Serializer<GMenuSortField> _$gMenuSortFieldSerializer =
    new _$GMenuSortFieldSerializer();
Serializer<GMenuSortingInput> _$gMenuSortingInputSerializer =
    new _$GMenuSortingInputSerializer();
Serializer<GMetadataErrorCode> _$gMetadataErrorCodeSerializer =
    new _$GMetadataErrorCodeSerializer();
Serializer<GMetadataFilter> _$gMetadataFilterSerializer =
    new _$GMetadataFilterSerializer();
Serializer<GMetadataInput> _$gMetadataInputSerializer =
    new _$GMetadataInputSerializer();
Serializer<GMoneyInput> _$gMoneyInputSerializer = new _$GMoneyInputSerializer();
Serializer<GMoveProductInput> _$gMoveProductInputSerializer =
    new _$GMoveProductInputSerializer();
Serializer<GNameTranslationInput> _$gNameTranslationInputSerializer =
    new _$GNameTranslationInputSerializer();
Serializer<GNavigationType> _$gNavigationTypeSerializer =
    new _$GNavigationTypeSerializer();
Serializer<GOrderAction> _$gOrderActionSerializer =
    new _$GOrderActionSerializer();
Serializer<GOrderAddNoteInput> _$gOrderAddNoteInputSerializer =
    new _$GOrderAddNoteInputSerializer();
Serializer<GOrderAuthorizeStatusEnum> _$gOrderAuthorizeStatusEnumSerializer =
    new _$GOrderAuthorizeStatusEnumSerializer();
Serializer<GOrderChargeStatusEnum> _$gOrderChargeStatusEnumSerializer =
    new _$GOrderChargeStatusEnumSerializer();
Serializer<GOrderCreateFromCheckoutErrorCode>
    _$gOrderCreateFromCheckoutErrorCodeSerializer =
    new _$GOrderCreateFromCheckoutErrorCodeSerializer();
Serializer<GOrderDirection> _$gOrderDirectionSerializer =
    new _$GOrderDirectionSerializer();
Serializer<GOrderDiscountCommonInput> _$gOrderDiscountCommonInputSerializer =
    new _$GOrderDiscountCommonInputSerializer();
Serializer<GOrderDiscountType> _$gOrderDiscountTypeSerializer =
    new _$GOrderDiscountTypeSerializer();
Serializer<GOrderDraftFilterInput> _$gOrderDraftFilterInputSerializer =
    new _$GOrderDraftFilterInputSerializer();
Serializer<GOrderErrorCode> _$gOrderErrorCodeSerializer =
    new _$GOrderErrorCodeSerializer();
Serializer<GOrderEventsEmailsEnum> _$gOrderEventsEmailsEnumSerializer =
    new _$GOrderEventsEmailsEnumSerializer();
Serializer<GOrderEventsEnum> _$gOrderEventsEnumSerializer =
    new _$GOrderEventsEnumSerializer();
Serializer<GOrderFilterInput> _$gOrderFilterInputSerializer =
    new _$GOrderFilterInputSerializer();
Serializer<GOrderFulfillInput> _$gOrderFulfillInputSerializer =
    new _$GOrderFulfillInputSerializer();
Serializer<GOrderFulfillLineInput> _$gOrderFulfillLineInputSerializer =
    new _$GOrderFulfillLineInputSerializer();
Serializer<GOrderFulfillStockInput> _$gOrderFulfillStockInputSerializer =
    new _$GOrderFulfillStockInputSerializer();
Serializer<GOrderLineCreateInput> _$gOrderLineCreateInputSerializer =
    new _$GOrderLineCreateInputSerializer();
Serializer<GOrderLineInput> _$gOrderLineInputSerializer =
    new _$GOrderLineInputSerializer();
Serializer<GOrderOriginEnum> _$gOrderOriginEnumSerializer =
    new _$GOrderOriginEnumSerializer();
Serializer<GOrderRefundFulfillmentLineInput>
    _$gOrderRefundFulfillmentLineInputSerializer =
    new _$GOrderRefundFulfillmentLineInputSerializer();
Serializer<GOrderRefundLineInput> _$gOrderRefundLineInputSerializer =
    new _$GOrderRefundLineInputSerializer();
Serializer<GOrderRefundProductsInput> _$gOrderRefundProductsInputSerializer =
    new _$GOrderRefundProductsInputSerializer();
Serializer<GOrderReturnFulfillmentLineInput>
    _$gOrderReturnFulfillmentLineInputSerializer =
    new _$GOrderReturnFulfillmentLineInputSerializer();
Serializer<GOrderReturnLineInput> _$gOrderReturnLineInputSerializer =
    new _$GOrderReturnLineInputSerializer();
Serializer<GOrderReturnProductsInput> _$gOrderReturnProductsInputSerializer =
    new _$GOrderReturnProductsInputSerializer();
Serializer<GOrderSettingsErrorCode> _$gOrderSettingsErrorCodeSerializer =
    new _$GOrderSettingsErrorCodeSerializer();
Serializer<GOrderSettingsUpdateInput> _$gOrderSettingsUpdateInputSerializer =
    new _$GOrderSettingsUpdateInputSerializer();
Serializer<GOrderSortField> _$gOrderSortFieldSerializer =
    new _$GOrderSortFieldSerializer();
Serializer<GOrderSortingInput> _$gOrderSortingInputSerializer =
    new _$GOrderSortingInputSerializer();
Serializer<GOrderStatus> _$gOrderStatusSerializer =
    new _$GOrderStatusSerializer();
Serializer<GOrderStatusFilter> _$gOrderStatusFilterSerializer =
    new _$GOrderStatusFilterSerializer();
Serializer<GOrderUpdateInput> _$gOrderUpdateInputSerializer =
    new _$GOrderUpdateInputSerializer();
Serializer<GOrderUpdateShippingInput> _$gOrderUpdateShippingInputSerializer =
    new _$GOrderUpdateShippingInputSerializer();
Serializer<GPageCreateInput> _$gPageCreateInputSerializer =
    new _$GPageCreateInputSerializer();
Serializer<GPageErrorCode> _$gPageErrorCodeSerializer =
    new _$GPageErrorCodeSerializer();
Serializer<GPageFilterInput> _$gPageFilterInputSerializer =
    new _$GPageFilterInputSerializer();
Serializer<GPageInput> _$gPageInputSerializer = new _$GPageInputSerializer();
Serializer<GPageSortField> _$gPageSortFieldSerializer =
    new _$GPageSortFieldSerializer();
Serializer<GPageSortingInput> _$gPageSortingInputSerializer =
    new _$GPageSortingInputSerializer();
Serializer<GPageTranslationInput> _$gPageTranslationInputSerializer =
    new _$GPageTranslationInputSerializer();
Serializer<GPageTypeCreateInput> _$gPageTypeCreateInputSerializer =
    new _$GPageTypeCreateInputSerializer();
Serializer<GPageTypeFilterInput> _$gPageTypeFilterInputSerializer =
    new _$GPageTypeFilterInputSerializer();
Serializer<GPageTypeSortField> _$gPageTypeSortFieldSerializer =
    new _$GPageTypeSortFieldSerializer();
Serializer<GPageTypeSortingInput> _$gPageTypeSortingInputSerializer =
    new _$GPageTypeSortingInputSerializer();
Serializer<GPageTypeUpdateInput> _$gPageTypeUpdateInputSerializer =
    new _$GPageTypeUpdateInputSerializer();
Serializer<GPaymentChargeStatusEnum> _$gPaymentChargeStatusEnumSerializer =
    new _$GPaymentChargeStatusEnumSerializer();
Serializer<GPaymentCheckBalanceInput> _$gPaymentCheckBalanceInputSerializer =
    new _$GPaymentCheckBalanceInputSerializer();
Serializer<GPaymentErrorCode> _$gPaymentErrorCodeSerializer =
    new _$GPaymentErrorCodeSerializer();
Serializer<GPaymentFilterInput> _$gPaymentFilterInputSerializer =
    new _$GPaymentFilterInputSerializer();
Serializer<GPaymentInput> _$gPaymentInputSerializer =
    new _$GPaymentInputSerializer();
Serializer<GPermissionEnum> _$gPermissionEnumSerializer =
    new _$GPermissionEnumSerializer();
Serializer<GPermissionGroupCreateInput>
    _$gPermissionGroupCreateInputSerializer =
    new _$GPermissionGroupCreateInputSerializer();
Serializer<GPermissionGroupErrorCode> _$gPermissionGroupErrorCodeSerializer =
    new _$GPermissionGroupErrorCodeSerializer();
Serializer<GPermissionGroupFilterInput>
    _$gPermissionGroupFilterInputSerializer =
    new _$GPermissionGroupFilterInputSerializer();
Serializer<GPermissionGroupSortField> _$gPermissionGroupSortFieldSerializer =
    new _$GPermissionGroupSortFieldSerializer();
Serializer<GPermissionGroupSortingInput>
    _$gPermissionGroupSortingInputSerializer =
    new _$GPermissionGroupSortingInputSerializer();
Serializer<GPermissionGroupUpdateInput>
    _$gPermissionGroupUpdateInputSerializer =
    new _$GPermissionGroupUpdateInputSerializer();
Serializer<GPluginConfigurationType> _$gPluginConfigurationTypeSerializer =
    new _$GPluginConfigurationTypeSerializer();
Serializer<GPluginErrorCode> _$gPluginErrorCodeSerializer =
    new _$GPluginErrorCodeSerializer();
Serializer<GPluginFilterInput> _$gPluginFilterInputSerializer =
    new _$GPluginFilterInputSerializer();
Serializer<GPluginSortField> _$gPluginSortFieldSerializer =
    new _$GPluginSortFieldSerializer();
Serializer<GPluginSortingInput> _$gPluginSortingInputSerializer =
    new _$GPluginSortingInputSerializer();
Serializer<GPluginStatusInChannelsInput>
    _$gPluginStatusInChannelsInputSerializer =
    new _$GPluginStatusInChannelsInputSerializer();
Serializer<GPluginUpdateInput> _$gPluginUpdateInputSerializer =
    new _$GPluginUpdateInputSerializer();
Serializer<GPostalCodeRuleInclusionTypeEnum>
    _$gPostalCodeRuleInclusionTypeEnumSerializer =
    new _$GPostalCodeRuleInclusionTypeEnumSerializer();
Serializer<GPreorderSettingsInput> _$gPreorderSettingsInputSerializer =
    new _$GPreorderSettingsInputSerializer();
Serializer<GPriceInput> _$gPriceInputSerializer = new _$GPriceInputSerializer();
Serializer<GPriceRangeInput> _$gPriceRangeInputSerializer =
    new _$GPriceRangeInputSerializer();
Serializer<GProductAttributeAssignInput>
    _$gProductAttributeAssignInputSerializer =
    new _$GProductAttributeAssignInputSerializer();
Serializer<GProductAttributeAssignmentUpdateInput>
    _$gProductAttributeAssignmentUpdateInputSerializer =
    new _$GProductAttributeAssignmentUpdateInputSerializer();
Serializer<GProductAttributeType> _$gProductAttributeTypeSerializer =
    new _$GProductAttributeTypeSerializer();
Serializer<GProductChannelListingAddInput>
    _$gProductChannelListingAddInputSerializer =
    new _$GProductChannelListingAddInputSerializer();
Serializer<GProductChannelListingUpdateInput>
    _$gProductChannelListingUpdateInputSerializer =
    new _$GProductChannelListingUpdateInputSerializer();
Serializer<GProductCreateInput> _$gProductCreateInputSerializer =
    new _$GProductCreateInputSerializer();
Serializer<GProductErrorCode> _$gProductErrorCodeSerializer =
    new _$GProductErrorCodeSerializer();
Serializer<GProductFieldEnum> _$gProductFieldEnumSerializer =
    new _$GProductFieldEnumSerializer();
Serializer<GProductFilterInput> _$gProductFilterInputSerializer =
    new _$GProductFilterInputSerializer();
Serializer<GProductInput> _$gProductInputSerializer =
    new _$GProductInputSerializer();
Serializer<GProductMediaCreateInput> _$gProductMediaCreateInputSerializer =
    new _$GProductMediaCreateInputSerializer();
Serializer<GProductMediaType> _$gProductMediaTypeSerializer =
    new _$GProductMediaTypeSerializer();
Serializer<GProductMediaUpdateInput> _$gProductMediaUpdateInputSerializer =
    new _$GProductMediaUpdateInputSerializer();
Serializer<GProductOrder> _$gProductOrderSerializer =
    new _$GProductOrderSerializer();
Serializer<GProductOrderField> _$gProductOrderFieldSerializer =
    new _$GProductOrderFieldSerializer();
Serializer<GProductStockFilterInput> _$gProductStockFilterInputSerializer =
    new _$GProductStockFilterInputSerializer();
Serializer<GProductTypeConfigurable> _$gProductTypeConfigurableSerializer =
    new _$GProductTypeConfigurableSerializer();
Serializer<GProductTypeEnum> _$gProductTypeEnumSerializer =
    new _$GProductTypeEnumSerializer();
Serializer<GProductTypeFilterInput> _$gProductTypeFilterInputSerializer =
    new _$GProductTypeFilterInputSerializer();
Serializer<GProductTypeInput> _$gProductTypeInputSerializer =
    new _$GProductTypeInputSerializer();
Serializer<GProductTypeKindEnum> _$gProductTypeKindEnumSerializer =
    new _$GProductTypeKindEnumSerializer();
Serializer<GProductTypeSortField> _$gProductTypeSortFieldSerializer =
    new _$GProductTypeSortFieldSerializer();
Serializer<GProductTypeSortingInput> _$gProductTypeSortingInputSerializer =
    new _$GProductTypeSortingInputSerializer();
Serializer<GProductVariantBulkCreateInput>
    _$gProductVariantBulkCreateInputSerializer =
    new _$GProductVariantBulkCreateInputSerializer();
Serializer<GProductVariantChannelListingAddInput>
    _$gProductVariantChannelListingAddInputSerializer =
    new _$GProductVariantChannelListingAddInputSerializer();
Serializer<GProductVariantCreateInput> _$gProductVariantCreateInputSerializer =
    new _$GProductVariantCreateInputSerializer();
Serializer<GProductVariantFilterInput> _$gProductVariantFilterInputSerializer =
    new _$GProductVariantFilterInputSerializer();
Serializer<GProductVariantInput> _$gProductVariantInputSerializer =
    new _$GProductVariantInputSerializer();
Serializer<GProductVariantSortField> _$gProductVariantSortFieldSerializer =
    new _$GProductVariantSortFieldSerializer();
Serializer<GProductVariantSortingInput>
    _$gProductVariantSortingInputSerializer =
    new _$GProductVariantSortingInputSerializer();
Serializer<GPublishableChannelListingInput>
    _$gPublishableChannelListingInputSerializer =
    new _$GPublishableChannelListingInputSerializer();
Serializer<GReorderInput> _$gReorderInputSerializer =
    new _$GReorderInputSerializer();
Serializer<GReportingPeriod> _$gReportingPeriodSerializer =
    new _$GReportingPeriodSerializer();
Serializer<GSaleChannelListingAddInput>
    _$gSaleChannelListingAddInputSerializer =
    new _$GSaleChannelListingAddInputSerializer();
Serializer<GSaleChannelListingInput> _$gSaleChannelListingInputSerializer =
    new _$GSaleChannelListingInputSerializer();
Serializer<GSaleFilterInput> _$gSaleFilterInputSerializer =
    new _$GSaleFilterInputSerializer();
Serializer<GSaleInput> _$gSaleInputSerializer = new _$GSaleInputSerializer();
Serializer<GSaleSortField> _$gSaleSortFieldSerializer =
    new _$GSaleSortFieldSerializer();
Serializer<GSaleSortingInput> _$gSaleSortingInputSerializer =
    new _$GSaleSortingInputSerializer();
Serializer<GSaleType> _$gSaleTypeSerializer = new _$GSaleTypeSerializer();
Serializer<GSeoInput> _$gSeoInputSerializer = new _$GSeoInputSerializer();
Serializer<GShippingErrorCode> _$gShippingErrorCodeSerializer =
    new _$GShippingErrorCodeSerializer();
Serializer<GShippingMethodChannelListingAddInput>
    _$gShippingMethodChannelListingAddInputSerializer =
    new _$GShippingMethodChannelListingAddInputSerializer();
Serializer<GShippingMethodChannelListingInput>
    _$gShippingMethodChannelListingInputSerializer =
    new _$GShippingMethodChannelListingInputSerializer();
Serializer<GShippingMethodTypeEnum> _$gShippingMethodTypeEnumSerializer =
    new _$GShippingMethodTypeEnumSerializer();
Serializer<GShippingPostalCodeRulesCreateInputRange>
    _$gShippingPostalCodeRulesCreateInputRangeSerializer =
    new _$GShippingPostalCodeRulesCreateInputRangeSerializer();
Serializer<GShippingPriceExcludeProductsInput>
    _$gShippingPriceExcludeProductsInputSerializer =
    new _$GShippingPriceExcludeProductsInputSerializer();
Serializer<GShippingPriceInput> _$gShippingPriceInputSerializer =
    new _$GShippingPriceInputSerializer();
Serializer<GShippingPriceTranslationInput>
    _$gShippingPriceTranslationInputSerializer =
    new _$GShippingPriceTranslationInputSerializer();
Serializer<GShippingZoneCreateInput> _$gShippingZoneCreateInputSerializer =
    new _$GShippingZoneCreateInputSerializer();
Serializer<GShippingZoneFilterInput> _$gShippingZoneFilterInputSerializer =
    new _$GShippingZoneFilterInputSerializer();
Serializer<GShippingZoneUpdateInput> _$gShippingZoneUpdateInputSerializer =
    new _$GShippingZoneUpdateInputSerializer();
Serializer<GShopErrorCode> _$gShopErrorCodeSerializer =
    new _$GShopErrorCodeSerializer();
Serializer<GShopSettingsInput> _$gShopSettingsInputSerializer =
    new _$GShopSettingsInputSerializer();
Serializer<GShopSettingsTranslationInput>
    _$gShopSettingsTranslationInputSerializer =
    new _$GShopSettingsTranslationInputSerializer();
Serializer<GSiteDomainInput> _$gSiteDomainInputSerializer =
    new _$GSiteDomainInputSerializer();
Serializer<GStaffCreateInput> _$gStaffCreateInputSerializer =
    new _$GStaffCreateInputSerializer();
Serializer<GStaffMemberStatus> _$gStaffMemberStatusSerializer =
    new _$GStaffMemberStatusSerializer();
Serializer<GStaffNotificationRecipientInput>
    _$gStaffNotificationRecipientInputSerializer =
    new _$GStaffNotificationRecipientInputSerializer();
Serializer<GStaffUpdateInput> _$gStaffUpdateInputSerializer =
    new _$GStaffUpdateInputSerializer();
Serializer<GStaffUserInput> _$gStaffUserInputSerializer =
    new _$GStaffUserInputSerializer();
Serializer<GStockAvailability> _$gStockAvailabilitySerializer =
    new _$GStockAvailabilitySerializer();
Serializer<GStockErrorCode> _$gStockErrorCodeSerializer =
    new _$GStockErrorCodeSerializer();
Serializer<GStockFilterInput> _$gStockFilterInputSerializer =
    new _$GStockFilterInputSerializer();
Serializer<GStockInput> _$gStockInputSerializer = new _$GStockInputSerializer();
Serializer<GStockSettingsInput> _$gStockSettingsInputSerializer =
    new _$GStockSettingsInputSerializer();
Serializer<GStorePaymentMethodEnum> _$gStorePaymentMethodEnumSerializer =
    new _$GStorePaymentMethodEnumSerializer();
Serializer<GTaxExemptionManageErrorCode>
    _$gTaxExemptionManageErrorCodeSerializer =
    new _$GTaxExemptionManageErrorCodeSerializer();
Serializer<GThumbnailFormatEnum> _$gThumbnailFormatEnumSerializer =
    new _$GThumbnailFormatEnumSerializer();
Serializer<GTimePeriodInputType> _$gTimePeriodInputTypeSerializer =
    new _$GTimePeriodInputTypeSerializer();
Serializer<GTimePeriodTypeEnum> _$gTimePeriodTypeEnumSerializer =
    new _$GTimePeriodTypeEnumSerializer();
Serializer<GTransactionActionEnum> _$gTransactionActionEnumSerializer =
    new _$GTransactionActionEnumSerializer();
Serializer<GTransactionCreateErrorCode>
    _$gTransactionCreateErrorCodeSerializer =
    new _$GTransactionCreateErrorCodeSerializer();
Serializer<GTransactionCreateInput> _$gTransactionCreateInputSerializer =
    new _$GTransactionCreateInputSerializer();
Serializer<GTransactionEventInput> _$gTransactionEventInputSerializer =
    new _$GTransactionEventInputSerializer();
Serializer<GTransactionKind> _$gTransactionKindSerializer =
    new _$GTransactionKindSerializer();
Serializer<GTransactionRequestActionErrorCode>
    _$gTransactionRequestActionErrorCodeSerializer =
    new _$GTransactionRequestActionErrorCodeSerializer();
Serializer<GTransactionStatus> _$gTransactionStatusSerializer =
    new _$GTransactionStatusSerializer();
Serializer<GTransactionUpdateErrorCode>
    _$gTransactionUpdateErrorCodeSerializer =
    new _$GTransactionUpdateErrorCodeSerializer();
Serializer<GTransactionUpdateInput> _$gTransactionUpdateInputSerializer =
    new _$GTransactionUpdateInputSerializer();
Serializer<GTranslatableKinds> _$gTranslatableKindsSerializer =
    new _$GTranslatableKindsSerializer();
Serializer<GTranslationErrorCode> _$gTranslationErrorCodeSerializer =
    new _$GTranslationErrorCodeSerializer();
Serializer<GTranslationInput> _$gTranslationInputSerializer =
    new _$GTranslationInputSerializer();
Serializer<GUpdateInvoiceInput> _$gUpdateInvoiceInputSerializer =
    new _$GUpdateInvoiceInputSerializer();
Serializer<GUploadErrorCode> _$gUploadErrorCodeSerializer =
    new _$GUploadErrorCodeSerializer();
Serializer<GUserCreateInput> _$gUserCreateInputSerializer =
    new _$GUserCreateInputSerializer();
Serializer<GUserSortField> _$gUserSortFieldSerializer =
    new _$GUserSortFieldSerializer();
Serializer<GUserSortingInput> _$gUserSortingInputSerializer =
    new _$GUserSortingInputSerializer();
Serializer<GVariantAttributeScope> _$gVariantAttributeScopeSerializer =
    new _$GVariantAttributeScopeSerializer();
Serializer<GVolumeUnitsEnum> _$gVolumeUnitsEnumSerializer =
    new _$GVolumeUnitsEnumSerializer();
Serializer<GVoucherChannelListingAddInput>
    _$gVoucherChannelListingAddInputSerializer =
    new _$GVoucherChannelListingAddInputSerializer();
Serializer<GVoucherChannelListingInput>
    _$gVoucherChannelListingInputSerializer =
    new _$GVoucherChannelListingInputSerializer();
Serializer<GVoucherDiscountType> _$gVoucherDiscountTypeSerializer =
    new _$GVoucherDiscountTypeSerializer();
Serializer<GVoucherFilterInput> _$gVoucherFilterInputSerializer =
    new _$GVoucherFilterInputSerializer();
Serializer<GVoucherInput> _$gVoucherInputSerializer =
    new _$GVoucherInputSerializer();
Serializer<GVoucherSortField> _$gVoucherSortFieldSerializer =
    new _$GVoucherSortFieldSerializer();
Serializer<GVoucherSortingInput> _$gVoucherSortingInputSerializer =
    new _$GVoucherSortingInputSerializer();
Serializer<GVoucherTypeEnum> _$gVoucherTypeEnumSerializer =
    new _$GVoucherTypeEnumSerializer();
Serializer<GWarehouseClickAndCollectOptionEnum>
    _$gWarehouseClickAndCollectOptionEnumSerializer =
    new _$GWarehouseClickAndCollectOptionEnumSerializer();
Serializer<GWarehouseCreateInput> _$gWarehouseCreateInputSerializer =
    new _$GWarehouseCreateInputSerializer();
Serializer<GWarehouseErrorCode> _$gWarehouseErrorCodeSerializer =
    new _$GWarehouseErrorCodeSerializer();
Serializer<GWarehouseFilterInput> _$gWarehouseFilterInputSerializer =
    new _$GWarehouseFilterInputSerializer();
Serializer<GWarehouseSortField> _$gWarehouseSortFieldSerializer =
    new _$GWarehouseSortFieldSerializer();
Serializer<GWarehouseSortingInput> _$gWarehouseSortingInputSerializer =
    new _$GWarehouseSortingInputSerializer();
Serializer<GWarehouseUpdateInput> _$gWarehouseUpdateInputSerializer =
    new _$GWarehouseUpdateInputSerializer();
Serializer<GWebhookCreateInput> _$gWebhookCreateInputSerializer =
    new _$GWebhookCreateInputSerializer();
Serializer<GWebhookErrorCode> _$gWebhookErrorCodeSerializer =
    new _$GWebhookErrorCodeSerializer();
Serializer<GWebhookEventTypeAsyncEnum> _$gWebhookEventTypeAsyncEnumSerializer =
    new _$GWebhookEventTypeAsyncEnumSerializer();
Serializer<GWebhookEventTypeEnum> _$gWebhookEventTypeEnumSerializer =
    new _$GWebhookEventTypeEnumSerializer();
Serializer<GWebhookEventTypeSyncEnum> _$gWebhookEventTypeSyncEnumSerializer =
    new _$GWebhookEventTypeSyncEnumSerializer();
Serializer<GWebhookSampleEventTypeEnum>
    _$gWebhookSampleEventTypeEnumSerializer =
    new _$GWebhookSampleEventTypeEnumSerializer();
Serializer<GWebhookUpdateInput> _$gWebhookUpdateInputSerializer =
    new _$GWebhookUpdateInputSerializer();
Serializer<GWeightUnitsEnum> _$gWeightUnitsEnumSerializer =
    new _$GWeightUnitsEnumSerializer();

class _$GAccountErrorCodeSerializer
    implements PrimitiveSerializer<GAccountErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GAccountErrorCode];
  @override
  final String wireName = 'GAccountErrorCode';

  @override
  Object serialize(Serializers serializers, GAccountErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAccountErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAccountErrorCode.valueOf(serialized as String);
}

class _$GAccountInputSerializer implements StructuredSerializer<GAccountInput> {
  @override
  final Iterable<Type> types = const [GAccountInput, _$GAccountInput];
  @override
  final String wireName = 'GAccountInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAccountInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.languageCode;
    if (value != null) {
      result
        ..add('languageCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GLanguageCodeEnum)));
    }
    value = object.defaultBillingAddress;
    if (value != null) {
      result
        ..add('defaultBillingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.defaultShippingAddress;
    if (value != null) {
      result
        ..add('defaultShippingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    return result;
  }

  @override
  GAccountInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAccountInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'languageCode':
          result.languageCode = serializers.deserialize(value,
                  specifiedType: const FullType(GLanguageCodeEnum))
              as GLanguageCodeEnum?;
          break;
        case 'defaultBillingAddress':
          result.defaultBillingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'defaultShippingAddress':
          result.defaultShippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GAccountRegisterInputSerializer
    implements StructuredSerializer<GAccountRegisterInput> {
  @override
  final Iterable<Type> types = const [
    GAccountRegisterInput,
    _$GAccountRegisterInput
  ];
  @override
  final String wireName = 'GAccountRegisterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAccountRegisterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'email',
      serializers.serialize(object.email,
          specifiedType: const FullType(String)),
      'password',
      serializers.serialize(object.password,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.languageCode;
    if (value != null) {
      result
        ..add('languageCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GLanguageCodeEnum)));
    }
    value = object.redirectUrl;
    if (value != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAccountRegisterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAccountRegisterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'languageCode':
          result.languageCode = serializers.deserialize(value,
                  specifiedType: const FullType(GLanguageCodeEnum))
              as GLanguageCodeEnum?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'password':
          result.password = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAccountRegisterInputWithPhoneSerializer
    implements StructuredSerializer<GAccountRegisterInputWithPhone> {
  @override
  final Iterable<Type> types = const [
    GAccountRegisterInputWithPhone,
    _$GAccountRegisterInputWithPhone
  ];
  @override
  final String wireName = 'GAccountRegisterInputWithPhone';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAccountRegisterInputWithPhone object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'email',
      serializers.serialize(object.email,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.languageCode;
    if (value != null) {
      result
        ..add('languageCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GLanguageCodeEnum)));
    }
    value = object.redirectUrl;
    if (value != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAccountRegisterInputWithPhone deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAccountRegisterInputWithPhoneBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'languageCode':
          result.languageCode = serializers.deserialize(value,
                  specifiedType: const FullType(GLanguageCodeEnum))
              as GLanguageCodeEnum?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAddressInputSerializer implements StructuredSerializer<GAddressInput> {
  @override
  final Iterable<Type> types = const [GAddressInput, _$GAddressInput];
  @override
  final String wireName = 'GAddressInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAddressInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.companyName;
    if (value != null) {
      result
        ..add('companyName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.streetAddress1;
    if (value != null) {
      result
        ..add('streetAddress1')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.streetAddress2;
    if (value != null) {
      result
        ..add('streetAddress2')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.city;
    if (value != null) {
      result
        ..add('city')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.cityArea;
    if (value != null) {
      result
        ..add('cityArea')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.postalCode;
    if (value != null) {
      result
        ..add('postalCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCountryCode)));
    }
    value = object.countryArea;
    if (value != null) {
      result
        ..add('countryArea')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.phone;
    if (value != null) {
      result
        ..add('phone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAddressInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAddressInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'companyName':
          result.companyName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'streetAddress1':
          result.streetAddress1 = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'streetAddress2':
          result.streetAddress2 = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'city':
          result.city = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'cityArea':
          result.cityArea = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'postalCode':
          result.postalCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'country':
          result.country = serializers.deserialize(value,
              specifiedType: const FullType(GCountryCode)) as GCountryCode?;
          break;
        case 'countryArea':
          result.countryArea = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'phone':
          result.phone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAddressTypeEnumSerializer
    implements PrimitiveSerializer<GAddressTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAddressTypeEnum];
  @override
  final String wireName = 'GAddressTypeEnum';

  @override
  Object serialize(Serializers serializers, GAddressTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAddressTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAddressTypeEnum.valueOf(serialized as String);
}

class _$GAllocationStrategyEnumSerializer
    implements PrimitiveSerializer<GAllocationStrategyEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAllocationStrategyEnum];
  @override
  final String wireName = 'GAllocationStrategyEnum';

  @override
  Object serialize(Serializers serializers, GAllocationStrategyEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAllocationStrategyEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAllocationStrategyEnum.valueOf(serialized as String);
}

class _$GAppErrorCodeSerializer implements PrimitiveSerializer<GAppErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GAppErrorCode];
  @override
  final String wireName = 'GAppErrorCode';

  @override
  Object serialize(Serializers serializers, GAppErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAppErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAppErrorCode.valueOf(serialized as String);
}

class _$GAppExtensionFilterInputSerializer
    implements StructuredSerializer<GAppExtensionFilterInput> {
  @override
  final Iterable<Type> types = const [
    GAppExtensionFilterInput,
    _$GAppExtensionFilterInput
  ];
  @override
  final String wireName = 'GAppExtensionFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAppExtensionFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.mount;
    if (value != null) {
      result
        ..add('mount')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAppExtensionMountEnum)])));
    }
    value = object.target;
    if (value != null) {
      result
        ..add('target')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAppExtensionTargetEnum)));
    }
    return result;
  }

  @override
  GAppExtensionFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppExtensionFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'mount':
          result.mount.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GAppExtensionMountEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'target':
          result.target = serializers.deserialize(value,
                  specifiedType: const FullType(GAppExtensionTargetEnum))
              as GAppExtensionTargetEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAppExtensionMountEnumSerializer
    implements PrimitiveSerializer<GAppExtensionMountEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAppExtensionMountEnum];
  @override
  final String wireName = 'GAppExtensionMountEnum';

  @override
  Object serialize(Serializers serializers, GAppExtensionMountEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAppExtensionMountEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAppExtensionMountEnum.valueOf(serialized as String);
}

class _$GAppExtensionTargetEnumSerializer
    implements PrimitiveSerializer<GAppExtensionTargetEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAppExtensionTargetEnum];
  @override
  final String wireName = 'GAppExtensionTargetEnum';

  @override
  Object serialize(Serializers serializers, GAppExtensionTargetEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAppExtensionTargetEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAppExtensionTargetEnum.valueOf(serialized as String);
}

class _$GAppFilterInputSerializer
    implements StructuredSerializer<GAppFilterInput> {
  @override
  final Iterable<Type> types = const [GAppFilterInput, _$GAppFilterInput];
  @override
  final String wireName = 'GAppFilterInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAppFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAppTypeEnum)));
    }
    return result;
  }

  @override
  GAppFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(GAppTypeEnum)) as GAppTypeEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAppInputSerializer implements StructuredSerializer<GAppInput> {
  @override
  final Iterable<Type> types = const [GAppInput, _$GAppInput];
  @override
  final String wireName = 'GAppInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAppInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.permissions;
    if (value != null) {
      result
        ..add('permissions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPermissionEnum)])));
    }
    return result;
  }

  @override
  GAppInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'permissions':
          result.permissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GAppInstallInputSerializer
    implements StructuredSerializer<GAppInstallInput> {
  @override
  final Iterable<Type> types = const [GAppInstallInput, _$GAppInstallInput];
  @override
  final String wireName = 'GAppInstallInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAppInstallInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.appName;
    if (value != null) {
      result
        ..add('appName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.manifestUrl;
    if (value != null) {
      result
        ..add('manifestUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.activateAfterInstallation;
    if (value != null) {
      result
        ..add('activateAfterInstallation')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.permissions;
    if (value != null) {
      result
        ..add('permissions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPermissionEnum)])));
    }
    return result;
  }

  @override
  GAppInstallInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppInstallInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'appName':
          result.appName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'manifestUrl':
          result.manifestUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'activateAfterInstallation':
          result.activateAfterInstallation = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'permissions':
          result.permissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GAppSortFieldSerializer implements PrimitiveSerializer<GAppSortField> {
  @override
  final Iterable<Type> types = const <Type>[GAppSortField];
  @override
  final String wireName = 'GAppSortField';

  @override
  Object serialize(Serializers serializers, GAppSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAppSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAppSortField.valueOf(serialized as String);
}

class _$GAppSortingInputSerializer
    implements StructuredSerializer<GAppSortingInput> {
  @override
  final Iterable<Type> types = const [GAppSortingInput, _$GAppSortingInput];
  @override
  final String wireName = 'GAppSortingInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAppSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GAppSortField)),
    ];

    return result;
  }

  @override
  GAppSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GAppSortField))! as GAppSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GAppTokenInputSerializer
    implements StructuredSerializer<GAppTokenInput> {
  @override
  final Iterable<Type> types = const [GAppTokenInput, _$GAppTokenInput];
  @override
  final String wireName = 'GAppTokenInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAppTokenInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'app',
      serializers.serialize(object.app, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAppTokenInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppTokenInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'app':
          result.app = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAppTypeEnumSerializer implements PrimitiveSerializer<GAppTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAppTypeEnum];
  @override
  final String wireName = 'GAppTypeEnum';

  @override
  Object serialize(Serializers serializers, GAppTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAppTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAppTypeEnum.valueOf(serialized as String);
}

class _$GAreaUnitsEnumSerializer
    implements PrimitiveSerializer<GAreaUnitsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAreaUnitsEnum];
  @override
  final String wireName = 'GAreaUnitsEnum';

  @override
  Object serialize(Serializers serializers, GAreaUnitsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAreaUnitsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAreaUnitsEnum.valueOf(serialized as String);
}

class _$GAttributeChoicesSortFieldSerializer
    implements PrimitiveSerializer<GAttributeChoicesSortField> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeChoicesSortField];
  @override
  final String wireName = 'GAttributeChoicesSortField';

  @override
  Object serialize(Serializers serializers, GAttributeChoicesSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeChoicesSortField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeChoicesSortField.valueOf(serialized as String);
}

class _$GAttributeChoicesSortingInputSerializer
    implements StructuredSerializer<GAttributeChoicesSortingInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeChoicesSortingInput,
    _$GAttributeChoicesSortingInput
  ];
  @override
  final String wireName = 'GAttributeChoicesSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeChoicesSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GAttributeChoicesSortField)),
    ];

    return result;
  }

  @override
  GAttributeChoicesSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeChoicesSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeChoicesSortField))!
              as GAttributeChoicesSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeCreateInputSerializer
    implements StructuredSerializer<GAttributeCreateInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeCreateInput,
    _$GAttributeCreateInput
  ];
  @override
  final String wireName = 'GAttributeCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GAttributeTypeEnum)),
    ];
    Object? value;
    value = object.inputType;
    if (value != null) {
      result
        ..add('inputType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAttributeInputTypeEnum)));
    }
    value = object.entityType;
    if (value != null) {
      result
        ..add('entityType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAttributeEntityTypeEnum)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.unit;
    if (value != null) {
      result
        ..add('unit')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMeasurementUnitsEnum)));
    }
    value = object.Gvalues;
    if (value != null) {
      result
        ..add('values')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GAttributeValueCreateInput)])));
    }
    value = object.valueRequired;
    if (value != null) {
      result
        ..add('valueRequired')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.isVariantOnly;
    if (value != null) {
      result
        ..add('isVariantOnly')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.visibleInStorefront;
    if (value != null) {
      result
        ..add('visibleInStorefront')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filterableInStorefront;
    if (value != null) {
      result
        ..add('filterableInStorefront')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filterableInDashboard;
    if (value != null) {
      result
        ..add('filterableInDashboard')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.storefrontSearchPosition;
    if (value != null) {
      result
        ..add('storefrontSearchPosition')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.availableInGrid;
    if (value != null) {
      result
        ..add('availableInGrid')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GAttributeCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'inputType':
          result.inputType = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeInputTypeEnum))
              as GAttributeInputTypeEnum?;
          break;
        case 'entityType':
          result.entityType = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeEntityTypeEnum))
              as GAttributeEntityTypeEnum?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeTypeEnum))!
              as GAttributeTypeEnum;
          break;
        case 'unit':
          result.unit = serializers.deserialize(value,
                  specifiedType: const FullType(GMeasurementUnitsEnum))
              as GMeasurementUnitsEnum?;
          break;
        case 'values':
          result.Gvalues.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GAttributeValueCreateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'valueRequired':
          result.valueRequired = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'isVariantOnly':
          result.isVariantOnly = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'visibleInStorefront':
          result.visibleInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filterableInStorefront':
          result.filterableInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filterableInDashboard':
          result.filterableInDashboard = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'storefrontSearchPosition':
          result.storefrontSearchPosition = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'availableInGrid':
          result.availableInGrid = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeEntityTypeEnumSerializer
    implements PrimitiveSerializer<GAttributeEntityTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeEntityTypeEnum];
  @override
  final String wireName = 'GAttributeEntityTypeEnum';

  @override
  Object serialize(Serializers serializers, GAttributeEntityTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeEntityTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeEntityTypeEnum.valueOf(serialized as String);
}

class _$GAttributeErrorCodeSerializer
    implements PrimitiveSerializer<GAttributeErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeErrorCode];
  @override
  final String wireName = 'GAttributeErrorCode';

  @override
  Object serialize(Serializers serializers, GAttributeErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeErrorCode.valueOf(serialized as String);
}

class _$GAttributeFilterInputSerializer
    implements StructuredSerializer<GAttributeFilterInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeFilterInput,
    _$GAttributeFilterInput
  ];
  @override
  final String wireName = 'GAttributeFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.valueRequired;
    if (value != null) {
      result
        ..add('valueRequired')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.isVariantOnly;
    if (value != null) {
      result
        ..add('isVariantOnly')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.visibleInStorefront;
    if (value != null) {
      result
        ..add('visibleInStorefront')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filterableInStorefront;
    if (value != null) {
      result
        ..add('filterableInStorefront')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filterableInDashboard;
    if (value != null) {
      result
        ..add('filterableInDashboard')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.availableInGrid;
    if (value != null) {
      result
        ..add('availableInGrid')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAttributeTypeEnum)));
    }
    value = object.inCollection;
    if (value != null) {
      result
        ..add('inCollection')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.inCategory;
    if (value != null) {
      result
        ..add('inCategory')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAttributeFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'valueRequired':
          result.valueRequired = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'isVariantOnly':
          result.isVariantOnly = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'visibleInStorefront':
          result.visibleInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filterableInStorefront':
          result.filterableInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filterableInDashboard':
          result.filterableInDashboard = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'availableInGrid':
          result.availableInGrid = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeTypeEnum))
              as GAttributeTypeEnum?;
          break;
        case 'inCollection':
          result.inCollection = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'inCategory':
          result.inCategory = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeInputSerializer
    implements StructuredSerializer<GAttributeInput> {
  @override
  final Iterable<Type> types = const [GAttributeInput, _$GAttributeInput];
  @override
  final String wireName = 'GAttributeInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAttributeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'slug',
      serializers.serialize(object.slug, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.Gvalues;
    if (value != null) {
      result
        ..add('values')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.valuesRange;
    if (value != null) {
      result
        ..add('valuesRange')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIntRangeInput)));
    }
    value = object.dateTime;
    if (value != null) {
      result
        ..add('dateTime')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    value = object.date;
    if (value != null) {
      result
        ..add('date')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateRangeInput)));
    }
    value = object.boolean;
    if (value != null) {
      result
        ..add('boolean')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GAttributeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'values':
          result.Gvalues.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'valuesRange':
          result.valuesRange.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIntRangeInput))!
              as GIntRangeInput);
          break;
        case 'dateTime':
          result.dateTime.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
        case 'date':
          result.date.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))!
              as GDateRangeInput);
          break;
        case 'boolean':
          result.boolean = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeInputTypeEnumSerializer
    implements PrimitiveSerializer<GAttributeInputTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeInputTypeEnum];
  @override
  final String wireName = 'GAttributeInputTypeEnum';

  @override
  Object serialize(Serializers serializers, GAttributeInputTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeInputTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeInputTypeEnum.valueOf(serialized as String);
}

class _$GAttributeSortFieldSerializer
    implements PrimitiveSerializer<GAttributeSortField> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeSortField];
  @override
  final String wireName = 'GAttributeSortField';

  @override
  Object serialize(Serializers serializers, GAttributeSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeSortField.valueOf(serialized as String);
}

class _$GAttributeSortingInputSerializer
    implements StructuredSerializer<GAttributeSortingInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeSortingInput,
    _$GAttributeSortingInput
  ];
  @override
  final String wireName = 'GAttributeSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GAttributeSortField)),
    ];

    return result;
  }

  @override
  GAttributeSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GAttributeSortField))!
              as GAttributeSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeTypeEnumSerializer
    implements PrimitiveSerializer<GAttributeTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GAttributeTypeEnum];
  @override
  final String wireName = 'GAttributeTypeEnum';

  @override
  Object serialize(Serializers serializers, GAttributeTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GAttributeTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAttributeTypeEnum.valueOf(serialized as String);
}

class _$GAttributeUpdateInputSerializer
    implements StructuredSerializer<GAttributeUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeUpdateInput,
    _$GAttributeUpdateInput
  ];
  @override
  final String wireName = 'GAttributeUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.unit;
    if (value != null) {
      result
        ..add('unit')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMeasurementUnitsEnum)));
    }
    value = object.removeValues;
    if (value != null) {
      result
        ..add('removeValues')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.addValues;
    if (value != null) {
      result
        ..add('addValues')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GAttributeValueUpdateInput)])));
    }
    value = object.valueRequired;
    if (value != null) {
      result
        ..add('valueRequired')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.isVariantOnly;
    if (value != null) {
      result
        ..add('isVariantOnly')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.visibleInStorefront;
    if (value != null) {
      result
        ..add('visibleInStorefront')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filterableInStorefront;
    if (value != null) {
      result
        ..add('filterableInStorefront')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.filterableInDashboard;
    if (value != null) {
      result
        ..add('filterableInDashboard')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.storefrontSearchPosition;
    if (value != null) {
      result
        ..add('storefrontSearchPosition')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.availableInGrid;
    if (value != null) {
      result
        ..add('availableInGrid')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GAttributeUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'unit':
          result.unit = serializers.deserialize(value,
                  specifiedType: const FullType(GMeasurementUnitsEnum))
              as GMeasurementUnitsEnum?;
          break;
        case 'removeValues':
          result.removeValues.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'addValues':
          result.addValues.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GAttributeValueUpdateInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'valueRequired':
          result.valueRequired = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'isVariantOnly':
          result.isVariantOnly = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'visibleInStorefront':
          result.visibleInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filterableInStorefront':
          result.filterableInStorefront = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'filterableInDashboard':
          result.filterableInDashboard = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'storefrontSearchPosition':
          result.storefrontSearchPosition = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'availableInGrid':
          result.availableInGrid = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeValueCreateInputSerializer
    implements StructuredSerializer<GAttributeValueCreateInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeValueCreateInput,
    _$GAttributeValueCreateInput
  ];
  @override
  final String wireName = 'GAttributeValueCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeValueCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.richText;
    if (value != null) {
      result
        ..add('richText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.plainText;
    if (value != null) {
      result
        ..add('plainText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fileUrl;
    if (value != null) {
      result
        ..add('fileUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAttributeValueCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeValueCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'richText':
          result.richText.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'plainText':
          result.plainText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fileUrl':
          result.fileUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'contentType':
          result.contentType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeValueFilterInputSerializer
    implements StructuredSerializer<GAttributeValueFilterInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeValueFilterInput,
    _$GAttributeValueFilterInput
  ];
  @override
  final String wireName = 'GAttributeValueFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeValueFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GAttributeValueFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeValueFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeValueInputSerializer
    implements StructuredSerializer<GAttributeValueInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeValueInput,
    _$GAttributeValueInput
  ];
  @override
  final String wireName = 'GAttributeValueInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeValueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.Gvalues;
    if (value != null) {
      result
        ..add('values')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.file;
    if (value != null) {
      result
        ..add('file')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.references;
    if (value != null) {
      result
        ..add('references')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.richText;
    if (value != null) {
      result
        ..add('richText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.plainText;
    if (value != null) {
      result
        ..add('plainText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.boolean;
    if (value != null) {
      result
        ..add('boolean')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.date;
    if (value != null) {
      result
        ..add('date')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.dateTime;
    if (value != null) {
      result
        ..add('dateTime')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GAttributeValueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeValueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'values':
          result.Gvalues.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'file':
          result.file = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'contentType':
          result.contentType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'references':
          result.references.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'richText':
          result.richText.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'plainText':
          result.plainText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'boolean':
          result.boolean = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'date':
          result.date.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'dateTime':
          result.dateTime.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeValueTranslationInputSerializer
    implements StructuredSerializer<GAttributeValueTranslationInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeValueTranslationInput,
    _$GAttributeValueTranslationInput
  ];
  @override
  final String wireName = 'GAttributeValueTranslationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeValueTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.richText;
    if (value != null) {
      result
        ..add('richText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.plainText;
    if (value != null) {
      result
        ..add('plainText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAttributeValueTranslationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeValueTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'richText':
          result.richText.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'plainText':
          result.plainText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAttributeValueUpdateInputSerializer
    implements StructuredSerializer<GAttributeValueUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GAttributeValueUpdateInput,
    _$GAttributeValueUpdateInput
  ];
  @override
  final String wireName = 'GAttributeValueUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAttributeValueUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.richText;
    if (value != null) {
      result
        ..add('richText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.plainText;
    if (value != null) {
      result
        ..add('plainText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fileUrl;
    if (value != null) {
      result
        ..add('fileUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.contentType;
    if (value != null) {
      result
        ..add('contentType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAttributeValueUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAttributeValueUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'richText':
          result.richText.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'plainText':
          result.plainText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fileUrl':
          result.fileUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'contentType':
          result.contentType = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GBulkAttributeValueInputSerializer
    implements StructuredSerializer<GBulkAttributeValueInput> {
  @override
  final Iterable<Type> types = const [
    GBulkAttributeValueInput,
    _$GBulkAttributeValueInput
  ];
  @override
  final String wireName = 'GBulkAttributeValueInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GBulkAttributeValueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.Gvalues;
    if (value != null) {
      result
        ..add('values')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.boolean;
    if (value != null) {
      result
        ..add('boolean')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GBulkAttributeValueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBulkAttributeValueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'values':
          result.Gvalues.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'boolean':
          result.boolean = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCardInputSerializer implements StructuredSerializer<GCardInput> {
  @override
  final Iterable<Type> types = const [GCardInput, _$GCardInput];
  @override
  final String wireName = 'GCardInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCardInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'code',
      serializers.serialize(object.code, specifiedType: const FullType(String)),
      'money',
      serializers.serialize(object.money,
          specifiedType: const FullType(GMoneyInput)),
    ];
    Object? value;
    value = object.cvc;
    if (value != null) {
      result
        ..add('cvc')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCardInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCardInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'cvc':
          result.cvc = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'money':
          result.money.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GCatalogueInputSerializer
    implements StructuredSerializer<GCatalogueInput> {
  @override
  final Iterable<Type> types = const [GCatalogueInput, _$GCatalogueInput];
  @override
  final String wireName = 'GCatalogueInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCatalogueInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.products;
    if (value != null) {
      result
        ..add('products')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.categories;
    if (value != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.collections;
    if (value != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.variants;
    if (value != null) {
      result
        ..add('variants')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCatalogueInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCatalogueInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'variants':
          result.variants.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCategoryFilterInputSerializer
    implements StructuredSerializer<GCategoryFilterInput> {
  @override
  final Iterable<Type> types = const [
    GCategoryFilterInput,
    _$GCategoryFilterInput
  ];
  @override
  final String wireName = 'GCategoryFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCategoryFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCategoryFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCategoryFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCategoryInputSerializer
    implements StructuredSerializer<GCategoryInput> {
  @override
  final Iterable<Type> types = const [GCategoryInput, _$GCategoryInput];
  @override
  final String wireName = 'GCategoryInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCategoryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.seo;
    if (value != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSeoInput)));
    }
    value = object.backgroundImage;
    if (value != null) {
      result
        ..add('backgroundImage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUpload)));
    }
    value = object.backgroundImageAlt;
    if (value != null) {
      result
        ..add('backgroundImageAlt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GCategoryInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCategoryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'description':
          result.description.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput))! as GSeoInput);
          break;
        case 'backgroundImage':
          result.backgroundImage.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload))! as GUpload);
          break;
        case 'backgroundImageAlt':
          result.backgroundImageAlt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCategorySortFieldSerializer
    implements PrimitiveSerializer<GCategorySortField> {
  @override
  final Iterable<Type> types = const <Type>[GCategorySortField];
  @override
  final String wireName = 'GCategorySortField';

  @override
  Object serialize(Serializers serializers, GCategorySortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCategorySortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCategorySortField.valueOf(serialized as String);
}

class _$GCategorySortingInputSerializer
    implements StructuredSerializer<GCategorySortingInput> {
  @override
  final Iterable<Type> types = const [
    GCategorySortingInput,
    _$GCategorySortingInput
  ];
  @override
  final String wireName = 'GCategorySortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCategorySortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GCategorySortField)),
    ];
    Object? value;
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCategorySortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCategorySortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GCategorySortField))!
              as GCategorySortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GChannelCreateInputSerializer
    implements StructuredSerializer<GChannelCreateInput> {
  @override
  final Iterable<Type> types = const [
    GChannelCreateInput,
    _$GChannelCreateInput
  ];
  @override
  final String wireName = 'GChannelCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GChannelCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'slug',
      serializers.serialize(object.slug, specifiedType: const FullType(String)),
      'currencyCode',
      serializers.serialize(object.currencyCode,
          specifiedType: const FullType(String)),
      'defaultCountry',
      serializers.serialize(object.defaultCountry,
          specifiedType: const FullType(GCountryCode)),
    ];
    Object? value;
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.stockSettings;
    if (value != null) {
      result
        ..add('stockSettings')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GStockSettingsInput)));
    }
    value = object.addShippingZones;
    if (value != null) {
      result
        ..add('addShippingZones')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.addWarehouses;
    if (value != null) {
      result
        ..add('addWarehouses')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GChannelCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GChannelCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'stockSettings':
          result.stockSettings.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GStockSettingsInput))!
              as GStockSettingsInput);
          break;
        case 'addShippingZones':
          result.addShippingZones.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'addWarehouses':
          result.addWarehouses.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'currencyCode':
          result.currencyCode = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'defaultCountry':
          result.defaultCountry = serializers.deserialize(value,
              specifiedType: const FullType(GCountryCode))! as GCountryCode;
          break;
      }
    }

    return result.build();
  }
}

class _$GChannelDeleteInputSerializer
    implements StructuredSerializer<GChannelDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GChannelDeleteInput,
    _$GChannelDeleteInput
  ];
  @override
  final String wireName = 'GChannelDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GChannelDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'channelId',
      serializers.serialize(object.channelId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GChannelDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GChannelDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GChannelErrorCodeSerializer
    implements PrimitiveSerializer<GChannelErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GChannelErrorCode];
  @override
  final String wireName = 'GChannelErrorCode';

  @override
  Object serialize(Serializers serializers, GChannelErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GChannelErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GChannelErrorCode.valueOf(serialized as String);
}

class _$GChannelUpdateInputSerializer
    implements StructuredSerializer<GChannelUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GChannelUpdateInput,
    _$GChannelUpdateInput
  ];
  @override
  final String wireName = 'GChannelUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GChannelUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.stockSettings;
    if (value != null) {
      result
        ..add('stockSettings')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GStockSettingsInput)));
    }
    value = object.addShippingZones;
    if (value != null) {
      result
        ..add('addShippingZones')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.addWarehouses;
    if (value != null) {
      result
        ..add('addWarehouses')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.defaultCountry;
    if (value != null) {
      result
        ..add('defaultCountry')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCountryCode)));
    }
    value = object.removeShippingZones;
    if (value != null) {
      result
        ..add('removeShippingZones')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeWarehouses;
    if (value != null) {
      result
        ..add('removeWarehouses')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GChannelUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GChannelUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'stockSettings':
          result.stockSettings.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GStockSettingsInput))!
              as GStockSettingsInput);
          break;
        case 'addShippingZones':
          result.addShippingZones.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'addWarehouses':
          result.addWarehouses.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'defaultCountry':
          result.defaultCountry = serializers.deserialize(value,
              specifiedType: const FullType(GCountryCode)) as GCountryCode?;
          break;
        case 'removeShippingZones':
          result.removeShippingZones.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeWarehouses':
          result.removeWarehouses.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutAddressValidationRulesSerializer
    implements StructuredSerializer<GCheckoutAddressValidationRules> {
  @override
  final Iterable<Type> types = const [
    GCheckoutAddressValidationRules,
    _$GCheckoutAddressValidationRules
  ];
  @override
  final String wireName = 'GCheckoutAddressValidationRules';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCheckoutAddressValidationRules object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.checkRequiredFields;
    if (value != null) {
      result
        ..add('checkRequiredFields')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.checkFieldsFormat;
    if (value != null) {
      result
        ..add('checkFieldsFormat')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.enableFieldsNormalization;
    if (value != null) {
      result
        ..add('enableFieldsNormalization')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GCheckoutAddressValidationRules deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutAddressValidationRulesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'checkRequiredFields':
          result.checkRequiredFields = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'checkFieldsFormat':
          result.checkFieldsFormat = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'enableFieldsNormalization':
          result.enableFieldsNormalization = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutCreateInputSerializer
    implements StructuredSerializer<GCheckoutCreateInput> {
  @override
  final Iterable<Type> types = const [
    GCheckoutCreateInput,
    _$GCheckoutCreateInput
  ];
  @override
  final String wireName = 'GCheckoutCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCheckoutCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'lines',
      serializers.serialize(object.lines,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GCheckoutLineInput)])),
    ];
    Object? value;
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.shippingAddress;
    if (value != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.billingAddress;
    if (value != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.languageCode;
    if (value != null) {
      result
        ..add('languageCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GLanguageCodeEnum)));
    }
    value = object.validationRules;
    if (value != null) {
      result
        ..add('validationRules')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCheckoutValidationRules)));
    }
    return result;
  }

  @override
  GCheckoutCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lines':
          result.lines.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GCheckoutLineInput)]))!
              as BuiltList<Object?>);
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'languageCode':
          result.languageCode = serializers.deserialize(value,
                  specifiedType: const FullType(GLanguageCodeEnum))
              as GLanguageCodeEnum?;
          break;
        case 'validationRules':
          result.validationRules.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GCheckoutValidationRules))!
              as GCheckoutValidationRules);
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutErrorCodeSerializer
    implements PrimitiveSerializer<GCheckoutErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GCheckoutErrorCode];
  @override
  final String wireName = 'GCheckoutErrorCode';

  @override
  Object serialize(Serializers serializers, GCheckoutErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCheckoutErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCheckoutErrorCode.valueOf(serialized as String);
}

class _$GCheckoutFilterInputSerializer
    implements StructuredSerializer<GCheckoutFilterInput> {
  @override
  final Iterable<Type> types = const [
    GCheckoutFilterInput,
    _$GCheckoutFilterInput
  ];
  @override
  final String wireName = 'GCheckoutFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCheckoutFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.customer;
    if (value != null) {
      result
        ..add('customer')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.created;
    if (value != null) {
      result
        ..add('created')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateRangeInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.channels;
    if (value != null) {
      result
        ..add('channels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCheckoutFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'customer':
          result.customer = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'created':
          result.created.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))!
              as GDateRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'channels':
          result.channels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutLineInputSerializer
    implements StructuredSerializer<GCheckoutLineInput> {
  @override
  final Iterable<Type> types = const [GCheckoutLineInput, _$GCheckoutLineInput];
  @override
  final String wireName = 'GCheckoutLineInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCheckoutLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
      'variantId',
      serializers.serialize(object.variantId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.price;
    if (value != null) {
      result
        ..add('price')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.forceNewLine;
    if (value != null) {
      result
        ..add('forceNewLine')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GCheckoutLineInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'variantId':
          result.variantId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'price':
          result.price.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'forceNewLine':
          result.forceNewLine = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutLineUpdateInputSerializer
    implements StructuredSerializer<GCheckoutLineUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GCheckoutLineUpdateInput,
    _$GCheckoutLineUpdateInput
  ];
  @override
  final String wireName = 'GCheckoutLineUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCheckoutLineUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.variantId;
    if (value != null) {
      result
        ..add('variantId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.quantity;
    if (value != null) {
      result
        ..add('quantity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.price;
    if (value != null) {
      result
        ..add('price')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.lineId;
    if (value != null) {
      result
        ..add('lineId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCheckoutLineUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutLineUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'variantId':
          result.variantId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'price':
          result.price.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'lineId':
          result.lineId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutSortFieldSerializer
    implements PrimitiveSerializer<GCheckoutSortField> {
  @override
  final Iterable<Type> types = const <Type>[GCheckoutSortField];
  @override
  final String wireName = 'GCheckoutSortField';

  @override
  Object serialize(Serializers serializers, GCheckoutSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCheckoutSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCheckoutSortField.valueOf(serialized as String);
}

class _$GCheckoutSortingInputSerializer
    implements StructuredSerializer<GCheckoutSortingInput> {
  @override
  final Iterable<Type> types = const [
    GCheckoutSortingInput,
    _$GCheckoutSortingInput
  ];
  @override
  final String wireName = 'GCheckoutSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCheckoutSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GCheckoutSortField)),
    ];

    return result;
  }

  @override
  GCheckoutSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GCheckoutSortField))!
              as GCheckoutSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GCheckoutValidationRulesSerializer
    implements StructuredSerializer<GCheckoutValidationRules> {
  @override
  final Iterable<Type> types = const [
    GCheckoutValidationRules,
    _$GCheckoutValidationRules
  ];
  @override
  final String wireName = 'GCheckoutValidationRules';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCheckoutValidationRules object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.shippingAddress;
    if (value != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCheckoutAddressValidationRules)));
    }
    value = object.billingAddress;
    if (value != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCheckoutAddressValidationRules)));
    }
    return result;
  }

  @override
  GCheckoutValidationRules deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCheckoutValidationRulesBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GCheckoutAddressValidationRules))!
              as GCheckoutAddressValidationRules);
          break;
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(GCheckoutAddressValidationRules))!
              as GCheckoutAddressValidationRules);
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionChannelListingUpdateInputSerializer
    implements StructuredSerializer<GCollectionChannelListingUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GCollectionChannelListingUpdateInput,
    _$GCollectionChannelListingUpdateInput
  ];
  @override
  final String wireName = 'GCollectionChannelListingUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCollectionChannelListingUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.addChannels;
    if (value != null) {
      result
        ..add('addChannels')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GPublishableChannelListingInput)])));
    }
    value = object.removeChannels;
    if (value != null) {
      result
        ..add('removeChannels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCollectionChannelListingUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionChannelListingUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'addChannels':
          result.addChannels.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPublishableChannelListingInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'removeChannels':
          result.removeChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionCreateInputSerializer
    implements StructuredSerializer<GCollectionCreateInput> {
  @override
  final Iterable<Type> types = const [
    GCollectionCreateInput,
    _$GCollectionCreateInput
  ];
  @override
  final String wireName = 'GCollectionCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCollectionCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.isPublished;
    if (value != null) {
      result
        ..add('isPublished')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.backgroundImage;
    if (value != null) {
      result
        ..add('backgroundImage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUpload)));
    }
    value = object.backgroundImageAlt;
    if (value != null) {
      result
        ..add('backgroundImageAlt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.seo;
    if (value != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSeoInput)));
    }
    value = object.publicationDate;
    if (value != null) {
      result
        ..add('publicationDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.products;
    if (value != null) {
      result
        ..add('products')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GCollectionCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'backgroundImage':
          result.backgroundImage.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload))! as GUpload);
          break;
        case 'backgroundImageAlt':
          result.backgroundImageAlt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput))! as GSeoInput);
          break;
        case 'publicationDate':
          result.publicationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionErrorCodeSerializer
    implements PrimitiveSerializer<GCollectionErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GCollectionErrorCode];
  @override
  final String wireName = 'GCollectionErrorCode';

  @override
  Object serialize(Serializers serializers, GCollectionErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCollectionErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCollectionErrorCode.valueOf(serialized as String);
}

class _$GCollectionFilterInputSerializer
    implements StructuredSerializer<GCollectionFilterInput> {
  @override
  final Iterable<Type> types = const [
    GCollectionFilterInput,
    _$GCollectionFilterInput
  ];
  @override
  final String wireName = 'GCollectionFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCollectionFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.published;
    if (value != null) {
      result
        ..add('published')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GCollectionPublished)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCollectionFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'published':
          result.published = serializers.deserialize(value,
                  specifiedType: const FullType(GCollectionPublished))
              as GCollectionPublished?;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionInputSerializer
    implements StructuredSerializer<GCollectionInput> {
  @override
  final Iterable<Type> types = const [GCollectionInput, _$GCollectionInput];
  @override
  final String wireName = 'GCollectionInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCollectionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.isPublished;
    if (value != null) {
      result
        ..add('isPublished')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.backgroundImage;
    if (value != null) {
      result
        ..add('backgroundImage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUpload)));
    }
    value = object.backgroundImageAlt;
    if (value != null) {
      result
        ..add('backgroundImageAlt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.seo;
    if (value != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSeoInput)));
    }
    value = object.publicationDate;
    if (value != null) {
      result
        ..add('publicationDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GCollectionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'backgroundImage':
          result.backgroundImage.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload))! as GUpload);
          break;
        case 'backgroundImageAlt':
          result.backgroundImageAlt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput))! as GSeoInput);
          break;
        case 'publicationDate':
          result.publicationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCollectionPublishedSerializer
    implements PrimitiveSerializer<GCollectionPublished> {
  @override
  final Iterable<Type> types = const <Type>[GCollectionPublished];
  @override
  final String wireName = 'GCollectionPublished';

  @override
  Object serialize(Serializers serializers, GCollectionPublished object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCollectionPublished deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCollectionPublished.valueOf(serialized as String);
}

class _$GCollectionSortFieldSerializer
    implements PrimitiveSerializer<GCollectionSortField> {
  @override
  final Iterable<Type> types = const <Type>[GCollectionSortField];
  @override
  final String wireName = 'GCollectionSortField';

  @override
  Object serialize(Serializers serializers, GCollectionSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCollectionSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCollectionSortField.valueOf(serialized as String);
}

class _$GCollectionSortingInputSerializer
    implements StructuredSerializer<GCollectionSortingInput> {
  @override
  final Iterable<Type> types = const [
    GCollectionSortingInput,
    _$GCollectionSortingInput
  ];
  @override
  final String wireName = 'GCollectionSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCollectionSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GCollectionSortField)),
    ];
    Object? value;
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCollectionSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCollectionSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GCollectionSortField))!
              as GCollectionSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigurationItemInputSerializer
    implements StructuredSerializer<GConfigurationItemInput> {
  @override
  final Iterable<Type> types = const [
    GConfigurationItemInput,
    _$GConfigurationItemInput
  ];
  @override
  final String wireName = 'GConfigurationItemInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GConfigurationItemInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GConfigurationItemInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConfigurationItemInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GConfigurationTypeFieldEnumSerializer
    implements PrimitiveSerializer<GConfigurationTypeFieldEnum> {
  @override
  final Iterable<Type> types = const <Type>[GConfigurationTypeFieldEnum];
  @override
  final String wireName = 'GConfigurationTypeFieldEnum';

  @override
  Object serialize(Serializers serializers, GConfigurationTypeFieldEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GConfigurationTypeFieldEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GConfigurationTypeFieldEnum.valueOf(serialized as String);
}

class _$GCountryCodeSerializer implements PrimitiveSerializer<GCountryCode> {
  @override
  final Iterable<Type> types = const <Type>[GCountryCode];
  @override
  final String wireName = 'GCountryCode';

  @override
  Object serialize(Serializers serializers, GCountryCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCountryCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCountryCode.valueOf(serialized as String);
}

class _$GCountryFilterInputSerializer
    implements StructuredSerializer<GCountryFilterInput> {
  @override
  final Iterable<Type> types = const [
    GCountryFilterInput,
    _$GCountryFilterInput
  ];
  @override
  final String wireName = 'GCountryFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCountryFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.attachedToShippingZones;
    if (value != null) {
      result
        ..add('attachedToShippingZones')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GCountryFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCountryFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'attachedToShippingZones':
          result.attachedToShippingZones = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GCustomerEventsEnumSerializer
    implements PrimitiveSerializer<GCustomerEventsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GCustomerEventsEnum];
  @override
  final String wireName = 'GCustomerEventsEnum';

  @override
  Object serialize(Serializers serializers, GCustomerEventsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GCustomerEventsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCustomerEventsEnum.valueOf(serialized as String);
}

class _$GCustomerFilterInputSerializer
    implements StructuredSerializer<GCustomerFilterInput> {
  @override
  final Iterable<Type> types = const [
    GCustomerFilterInput,
    _$GCustomerFilterInput
  ];
  @override
  final String wireName = 'GCustomerFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCustomerFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.dateJoined;
    if (value != null) {
      result
        ..add('dateJoined')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateRangeInput)));
    }
    value = object.numberOfOrders;
    if (value != null) {
      result
        ..add('numberOfOrders')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIntRangeInput)));
    }
    value = object.placedOrders;
    if (value != null) {
      result
        ..add('placedOrders')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateRangeInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    return result;
  }

  @override
  GCustomerFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCustomerFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'dateJoined':
          result.dateJoined.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))!
              as GDateRangeInput);
          break;
        case 'numberOfOrders':
          result.numberOfOrders.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIntRangeInput))!
              as GIntRangeInput);
          break;
        case 'placedOrders':
          result.placedOrders.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))!
              as GDateRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GCustomerInputSerializer
    implements StructuredSerializer<GCustomerInput> {
  @override
  final Iterable<Type> types = const [GCustomerInput, _$GCustomerInput];
  @override
  final String wireName = 'GCustomerInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCustomerInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.defaultBillingAddress;
    if (value != null) {
      result
        ..add('defaultBillingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.defaultShippingAddress;
    if (value != null) {
      result
        ..add('defaultShippingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.languageCode;
    if (value != null) {
      result
        ..add('languageCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GLanguageCodeEnum)));
    }
    return result;
  }

  @override
  GCustomerInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCustomerInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'defaultBillingAddress':
          result.defaultBillingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'defaultShippingAddress':
          result.defaultShippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'languageCode':
          result.languageCode = serializers.deserialize(value,
                  specifiedType: const FullType(GLanguageCodeEnum))
              as GLanguageCodeEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDateRangeInputSerializer
    implements StructuredSerializer<GDateRangeInput> {
  @override
  final Iterable<Type> types = const [GDateRangeInput, _$GDateRangeInput];
  @override
  final String wireName = 'GDateRangeInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDateRangeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.gte;
    if (value != null) {
      result
        ..add('gte')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.lte;
    if (value != null) {
      result
        ..add('lte')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    return result;
  }

  @override
  GDateRangeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDateRangeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'gte':
          result.gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'lte':
          result.lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
      }
    }

    return result.build();
  }
}

class _$GDateTimeRangeInputSerializer
    implements StructuredSerializer<GDateTimeRangeInput> {
  @override
  final Iterable<Type> types = const [
    GDateTimeRangeInput,
    _$GDateTimeRangeInput
  ];
  @override
  final String wireName = 'GDateTimeRangeInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDateTimeRangeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.gte;
    if (value != null) {
      result
        ..add('gte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.lte;
    if (value != null) {
      result
        ..add('lte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GDateTimeRangeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDateTimeRangeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'gte':
          result.gte.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'lte':
          result.lte.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GDigitalContentInputSerializer
    implements StructuredSerializer<GDigitalContentInput> {
  @override
  final Iterable<Type> types = const [
    GDigitalContentInput,
    _$GDigitalContentInput
  ];
  @override
  final String wireName = 'GDigitalContentInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDigitalContentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'useDefaultSettings',
      serializers.serialize(object.useDefaultSettings,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.maxDownloads;
    if (value != null) {
      result
        ..add('maxDownloads')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.urlValidDays;
    if (value != null) {
      result
        ..add('urlValidDays')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.automaticFulfillment;
    if (value != null) {
      result
        ..add('automaticFulfillment')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GDigitalContentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDigitalContentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'useDefaultSettings':
          result.useDefaultSettings = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'maxDownloads':
          result.maxDownloads = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'urlValidDays':
          result.urlValidDays = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'automaticFulfillment':
          result.automaticFulfillment = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDigitalContentUploadInputSerializer
    implements StructuredSerializer<GDigitalContentUploadInput> {
  @override
  final Iterable<Type> types = const [
    GDigitalContentUploadInput,
    _$GDigitalContentUploadInput
  ];
  @override
  final String wireName = 'GDigitalContentUploadInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDigitalContentUploadInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'useDefaultSettings',
      serializers.serialize(object.useDefaultSettings,
          specifiedType: const FullType(bool)),
      'contentFile',
      serializers.serialize(object.contentFile,
          specifiedType: const FullType(GUpload)),
    ];
    Object? value;
    value = object.maxDownloads;
    if (value != null) {
      result
        ..add('maxDownloads')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.urlValidDays;
    if (value != null) {
      result
        ..add('urlValidDays')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.automaticFulfillment;
    if (value != null) {
      result
        ..add('automaticFulfillment')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GDigitalContentUploadInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDigitalContentUploadInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'useDefaultSettings':
          result.useDefaultSettings = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'maxDownloads':
          result.maxDownloads = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'urlValidDays':
          result.urlValidDays = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'automaticFulfillment':
          result.automaticFulfillment = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'contentFile':
          result.contentFile.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload))! as GUpload);
          break;
      }
    }

    return result.build();
  }
}

class _$GDigitalContentUrlCreateInputSerializer
    implements StructuredSerializer<GDigitalContentUrlCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDigitalContentUrlCreateInput,
    _$GDigitalContentUrlCreateInput
  ];
  @override
  final String wireName = 'GDigitalContentUrlCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDigitalContentUrlCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'content',
      serializers.serialize(object.content,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDigitalContentUrlCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDigitalContentUrlCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDiscountErrorCodeSerializer
    implements PrimitiveSerializer<GDiscountErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GDiscountErrorCode];
  @override
  final String wireName = 'GDiscountErrorCode';

  @override
  Object serialize(Serializers serializers, GDiscountErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDiscountErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDiscountErrorCode.valueOf(serialized as String);
}

class _$GDiscountStatusEnumSerializer
    implements PrimitiveSerializer<GDiscountStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDiscountStatusEnum];
  @override
  final String wireName = 'GDiscountStatusEnum';

  @override
  Object serialize(Serializers serializers, GDiscountStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDiscountStatusEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDiscountStatusEnum.valueOf(serialized as String);
}

class _$GDiscountValueTypeEnumSerializer
    implements PrimitiveSerializer<GDiscountValueTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDiscountValueTypeEnum];
  @override
  final String wireName = 'GDiscountValueTypeEnum';

  @override
  Object serialize(Serializers serializers, GDiscountValueTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDiscountValueTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDiscountValueTypeEnum.valueOf(serialized as String);
}

class _$GDistanceUnitsEnumSerializer
    implements PrimitiveSerializer<GDistanceUnitsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GDistanceUnitsEnum];
  @override
  final String wireName = 'GDistanceUnitsEnum';

  @override
  Object serialize(Serializers serializers, GDistanceUnitsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GDistanceUnitsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDistanceUnitsEnum.valueOf(serialized as String);
}

class _$GDraftOrderCreateInputSerializer
    implements StructuredSerializer<GDraftOrderCreateInput> {
  @override
  final Iterable<Type> types = const [
    GDraftOrderCreateInput,
    _$GDraftOrderCreateInput
  ];
  @override
  final String wireName = 'GDraftOrderCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDraftOrderCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.billingAddress;
    if (value != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.userEmail;
    if (value != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.discount;
    if (value != null) {
      result
        ..add('discount')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.shippingAddress;
    if (value != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.shippingMethod;
    if (value != null) {
      result
        ..add('shippingMethod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.voucher;
    if (value != null) {
      result
        ..add('voucher')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.customerNote;
    if (value != null) {
      result
        ..add('customerNote')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.channelId;
    if (value != null) {
      result
        ..add('channelId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.redirectUrl;
    if (value != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lines;
    if (value != null) {
      result
        ..add('lines')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOrderLineCreateInput)])));
    }
    return result;
  }

  @override
  GDraftOrderCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDraftOrderCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'discount':
          result.discount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'shippingMethod':
          result.shippingMethod = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'voucher':
          result.voucher = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'customerNote':
          result.customerNote = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lines':
          result.lines.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderLineCreateInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDraftOrderInputSerializer
    implements StructuredSerializer<GDraftOrderInput> {
  @override
  final Iterable<Type> types = const [GDraftOrderInput, _$GDraftOrderInput];
  @override
  final String wireName = 'GDraftOrderInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDraftOrderInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.billingAddress;
    if (value != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.userEmail;
    if (value != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.discount;
    if (value != null) {
      result
        ..add('discount')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.shippingAddress;
    if (value != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.shippingMethod;
    if (value != null) {
      result
        ..add('shippingMethod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.voucher;
    if (value != null) {
      result
        ..add('voucher')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.customerNote;
    if (value != null) {
      result
        ..add('customerNote')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.channelId;
    if (value != null) {
      result
        ..add('channelId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.redirectUrl;
    if (value != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDraftOrderInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDraftOrderInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'discount':
          result.discount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'shippingMethod':
          result.shippingMethod = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'voucher':
          result.voucher = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'customerNote':
          result.customerNote = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GEventDeliveryAttemptSortFieldSerializer
    implements PrimitiveSerializer<GEventDeliveryAttemptSortField> {
  @override
  final Iterable<Type> types = const <Type>[GEventDeliveryAttemptSortField];
  @override
  final String wireName = 'GEventDeliveryAttemptSortField';

  @override
  Object serialize(
          Serializers serializers, GEventDeliveryAttemptSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEventDeliveryAttemptSortField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEventDeliveryAttemptSortField.valueOf(serialized as String);
}

class _$GEventDeliveryAttemptSortingInputSerializer
    implements StructuredSerializer<GEventDeliveryAttemptSortingInput> {
  @override
  final Iterable<Type> types = const [
    GEventDeliveryAttemptSortingInput,
    _$GEventDeliveryAttemptSortingInput
  ];
  @override
  final String wireName = 'GEventDeliveryAttemptSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEventDeliveryAttemptSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GEventDeliveryAttemptSortField)),
    ];

    return result;
  }

  @override
  GEventDeliveryAttemptSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEventDeliveryAttemptSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GEventDeliveryAttemptSortField))!
              as GEventDeliveryAttemptSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GEventDeliveryFilterInputSerializer
    implements StructuredSerializer<GEventDeliveryFilterInput> {
  @override
  final Iterable<Type> types = const [
    GEventDeliveryFilterInput,
    _$GEventDeliveryFilterInput
  ];
  @override
  final String wireName = 'GEventDeliveryFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEventDeliveryFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEventDeliveryStatusEnum)));
    }
    value = object.eventType;
    if (value != null) {
      result
        ..add('eventType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWebhookEventTypeEnum)));
    }
    return result;
  }

  @override
  GEventDeliveryFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEventDeliveryFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GEventDeliveryStatusEnum))
              as GEventDeliveryStatusEnum?;
          break;
        case 'eventType':
          result.eventType = serializers.deserialize(value,
                  specifiedType: const FullType(GWebhookEventTypeEnum))
              as GWebhookEventTypeEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GEventDeliverySortFieldSerializer
    implements PrimitiveSerializer<GEventDeliverySortField> {
  @override
  final Iterable<Type> types = const <Type>[GEventDeliverySortField];
  @override
  final String wireName = 'GEventDeliverySortField';

  @override
  Object serialize(Serializers serializers, GEventDeliverySortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEventDeliverySortField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEventDeliverySortField.valueOf(serialized as String);
}

class _$GEventDeliverySortingInputSerializer
    implements StructuredSerializer<GEventDeliverySortingInput> {
  @override
  final Iterable<Type> types = const [
    GEventDeliverySortingInput,
    _$GEventDeliverySortingInput
  ];
  @override
  final String wireName = 'GEventDeliverySortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEventDeliverySortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GEventDeliverySortField)),
    ];

    return result;
  }

  @override
  GEventDeliverySortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEventDeliverySortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GEventDeliverySortField))!
              as GEventDeliverySortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GEventDeliveryStatusEnumSerializer
    implements PrimitiveSerializer<GEventDeliveryStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GEventDeliveryStatusEnum];
  @override
  final String wireName = 'GEventDeliveryStatusEnum';

  @override
  Object serialize(Serializers serializers, GEventDeliveryStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GEventDeliveryStatusEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEventDeliveryStatusEnum.valueOf(serialized as String);
}

class _$GExportErrorCodeSerializer
    implements PrimitiveSerializer<GExportErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GExportErrorCode];
  @override
  final String wireName = 'GExportErrorCode';

  @override
  Object serialize(Serializers serializers, GExportErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GExportErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GExportErrorCode.valueOf(serialized as String);
}

class _$GExportEventsEnumSerializer
    implements PrimitiveSerializer<GExportEventsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GExportEventsEnum];
  @override
  final String wireName = 'GExportEventsEnum';

  @override
  Object serialize(Serializers serializers, GExportEventsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GExportEventsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GExportEventsEnum.valueOf(serialized as String);
}

class _$GExportFileFilterInputSerializer
    implements StructuredSerializer<GExportFileFilterInput> {
  @override
  final Iterable<Type> types = const [
    GExportFileFilterInput,
    _$GExportFileFilterInput
  ];
  @override
  final String wireName = 'GExportFileFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExportFileFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJobStatusEnum)));
    }
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.app;
    if (value != null) {
      result
        ..add('app')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GExportFileFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExportFileFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'createdAt':
          result.createdAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
        case 'status':
          result.status = serializers.deserialize(value,
              specifiedType: const FullType(GJobStatusEnum)) as GJobStatusEnum?;
          break;
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'app':
          result.app = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GExportFileSortFieldSerializer
    implements PrimitiveSerializer<GExportFileSortField> {
  @override
  final Iterable<Type> types = const <Type>[GExportFileSortField];
  @override
  final String wireName = 'GExportFileSortField';

  @override
  Object serialize(Serializers serializers, GExportFileSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GExportFileSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GExportFileSortField.valueOf(serialized as String);
}

class _$GExportFileSortingInputSerializer
    implements StructuredSerializer<GExportFileSortingInput> {
  @override
  final Iterable<Type> types = const [
    GExportFileSortingInput,
    _$GExportFileSortingInput
  ];
  @override
  final String wireName = 'GExportFileSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExportFileSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GExportFileSortField)),
    ];

    return result;
  }

  @override
  GExportFileSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExportFileSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GExportFileSortField))!
              as GExportFileSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GExportGiftCardsInputSerializer
    implements StructuredSerializer<GExportGiftCardsInput> {
  @override
  final Iterable<Type> types = const [
    GExportGiftCardsInput,
    _$GExportGiftCardsInput
  ];
  @override
  final String wireName = 'GExportGiftCardsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExportGiftCardsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'scope',
      serializers.serialize(object.scope,
          specifiedType: const FullType(GExportScope)),
      'fileType',
      serializers.serialize(object.fileType,
          specifiedType: const FullType(GFileTypesEnum)),
    ];
    Object? value;
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GGiftCardFilterInput)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GExportGiftCardsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExportGiftCardsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'scope':
          result.scope = serializers.deserialize(value,
              specifiedType: const FullType(GExportScope))! as GExportScope;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GGiftCardFilterInput))!
              as GGiftCardFilterInput);
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'fileType':
          result.fileType = serializers.deserialize(value,
              specifiedType: const FullType(GFileTypesEnum))! as GFileTypesEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GExportInfoInputSerializer
    implements StructuredSerializer<GExportInfoInput> {
  @override
  final Iterable<Type> types = const [GExportInfoInput, _$GExportInfoInput];
  @override
  final String wireName = 'GExportInfoInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GExportInfoInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.attributes;
    if (value != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.warehouses;
    if (value != null) {
      result
        ..add('warehouses')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.channels;
    if (value != null) {
      result
        ..add('channels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.fields;
    if (value != null) {
      result
        ..add('fields')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GProductFieldEnum)])));
    }
    return result;
  }

  @override
  GExportInfoInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExportInfoInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'warehouses':
          result.warehouses.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'channels':
          result.channels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'fields':
          result.fields.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GProductFieldEnum)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GExportProductsInputSerializer
    implements StructuredSerializer<GExportProductsInput> {
  @override
  final Iterable<Type> types = const [
    GExportProductsInput,
    _$GExportProductsInput
  ];
  @override
  final String wireName = 'GExportProductsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExportProductsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'scope',
      serializers.serialize(object.scope,
          specifiedType: const FullType(GExportScope)),
      'fileType',
      serializers.serialize(object.fileType,
          specifiedType: const FullType(GFileTypesEnum)),
    ];
    Object? value;
    value = object.filter;
    if (value != null) {
      result
        ..add('filter')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProductFilterInput)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.exportInfo;
    if (value != null) {
      result
        ..add('exportInfo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GExportInfoInput)));
    }
    return result;
  }

  @override
  GExportProductsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExportProductsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'scope':
          result.scope = serializers.deserialize(value,
              specifiedType: const FullType(GExportScope))! as GExportScope;
          break;
        case 'filter':
          result.filter.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProductFilterInput))!
              as GProductFilterInput);
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'exportInfo':
          result.exportInfo.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GExportInfoInput))!
              as GExportInfoInput);
          break;
        case 'fileType':
          result.fileType = serializers.deserialize(value,
              specifiedType: const FullType(GFileTypesEnum))! as GFileTypesEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GExportScopeSerializer implements PrimitiveSerializer<GExportScope> {
  @override
  final Iterable<Type> types = const <Type>[GExportScope];
  @override
  final String wireName = 'GExportScope';

  @override
  Object serialize(Serializers serializers, GExportScope object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GExportScope deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GExportScope.valueOf(serialized as String);
}

class _$GExternalNotificationErrorCodesSerializer
    implements PrimitiveSerializer<GExternalNotificationErrorCodes> {
  @override
  final Iterable<Type> types = const <Type>[GExternalNotificationErrorCodes];
  @override
  final String wireName = 'GExternalNotificationErrorCodes';

  @override
  Object serialize(
          Serializers serializers, GExternalNotificationErrorCodes object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GExternalNotificationErrorCodes deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GExternalNotificationErrorCodes.valueOf(serialized as String);
}

class _$GExternalNotificationTriggerInputSerializer
    implements StructuredSerializer<GExternalNotificationTriggerInput> {
  @override
  final Iterable<Type> types = const [
    GExternalNotificationTriggerInput,
    _$GExternalNotificationTriggerInput
  ];
  @override
  final String wireName = 'GExternalNotificationTriggerInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GExternalNotificationTriggerInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'ids',
      serializers.serialize(object.ids,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
      'externalEventType',
      serializers.serialize(object.externalEventType,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.extraPayload;
    if (value != null) {
      result
        ..add('extraPayload')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    return result;
  }

  @override
  GExternalNotificationTriggerInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GExternalNotificationTriggerInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'extraPayload':
          result.extraPayload.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'externalEventType':
          result.externalEventType = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GFileTypesEnumSerializer
    implements PrimitiveSerializer<GFileTypesEnum> {
  @override
  final Iterable<Type> types = const <Type>[GFileTypesEnum];
  @override
  final String wireName = 'GFileTypesEnum';

  @override
  Object serialize(Serializers serializers, GFileTypesEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GFileTypesEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GFileTypesEnum.valueOf(serialized as String);
}

class _$GFulfillmentCancelInputSerializer
    implements StructuredSerializer<GFulfillmentCancelInput> {
  @override
  final Iterable<Type> types = const [
    GFulfillmentCancelInput,
    _$GFulfillmentCancelInput
  ];
  @override
  final String wireName = 'GFulfillmentCancelInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GFulfillmentCancelInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.warehouseId;
    if (value != null) {
      result
        ..add('warehouseId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GFulfillmentCancelInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFulfillmentCancelInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'warehouseId':
          result.warehouseId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GFulfillmentStatusSerializer
    implements PrimitiveSerializer<GFulfillmentStatus> {
  @override
  final Iterable<Type> types = const <Type>[GFulfillmentStatus];
  @override
  final String wireName = 'GFulfillmentStatus';

  @override
  Object serialize(Serializers serializers, GFulfillmentStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GFulfillmentStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GFulfillmentStatus.valueOf(serialized as String);
}

class _$GFulfillmentUpdateTrackingInputSerializer
    implements StructuredSerializer<GFulfillmentUpdateTrackingInput> {
  @override
  final Iterable<Type> types = const [
    GFulfillmentUpdateTrackingInput,
    _$GFulfillmentUpdateTrackingInput
  ];
  @override
  final String wireName = 'GFulfillmentUpdateTrackingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GFulfillmentUpdateTrackingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.trackingNumber;
    if (value != null) {
      result
        ..add('trackingNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.notifyCustomer;
    if (value != null) {
      result
        ..add('notifyCustomer')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GFulfillmentUpdateTrackingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFulfillmentUpdateTrackingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'trackingNumber':
          result.trackingNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'notifyCustomer':
          result.notifyCustomer = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardAddNoteInputSerializer
    implements StructuredSerializer<GGiftCardAddNoteInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardAddNoteInput,
    _$GGiftCardAddNoteInput
  ];
  @override
  final String wireName = 'GGiftCardAddNoteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardAddNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'message',
      serializers.serialize(object.message,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGiftCardAddNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardAddNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'message':
          result.message = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardBulkCreateInputSerializer
    implements StructuredSerializer<GGiftCardBulkCreateInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardBulkCreateInput,
    _$GGiftCardBulkCreateInput
  ];
  @override
  final String wireName = 'GGiftCardBulkCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardBulkCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'count',
      serializers.serialize(object.count, specifiedType: const FullType(int)),
      'balance',
      serializers.serialize(object.balance,
          specifiedType: const FullType(GPriceInput)),
      'isActive',
      serializers.serialize(object.isActive,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.expiryDate;
    if (value != null) {
      result
        ..add('expiryDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    return result;
  }

  @override
  GGiftCardBulkCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardBulkCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'balance':
          result.balance.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPriceInput))! as GPriceInput);
          break;
        case 'tags':
          result.tags.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'expiryDate':
          result.expiryDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardCreateInputSerializer
    implements StructuredSerializer<GGiftCardCreateInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardCreateInput,
    _$GGiftCardCreateInput
  ];
  @override
  final String wireName = 'GGiftCardCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'balance',
      serializers.serialize(object.balance,
          specifiedType: const FullType(GPriceInput)),
      'isActive',
      serializers.serialize(object.isActive,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.addTags;
    if (value != null) {
      result
        ..add('addTags')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.expiryDate;
    if (value != null) {
      result
        ..add('expiryDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.endDate;
    if (value != null) {
      result
        ..add('endDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.userEmail;
    if (value != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.code;
    if (value != null) {
      result
        ..add('code')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGiftCardCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'addTags':
          result.addTags.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'expiryDate':
          result.expiryDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'balance':
          result.balance.replace(serializers.deserialize(value,
              specifiedType: const FullType(GPriceInput))! as GPriceInput);
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardErrorCodeSerializer
    implements PrimitiveSerializer<GGiftCardErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GGiftCardErrorCode];
  @override
  final String wireName = 'GGiftCardErrorCode';

  @override
  Object serialize(Serializers serializers, GGiftCardErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GGiftCardErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGiftCardErrorCode.valueOf(serialized as String);
}

class _$GGiftCardEventFilterInputSerializer
    implements StructuredSerializer<GGiftCardEventFilterInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardEventFilterInput,
    _$GGiftCardEventFilterInput
  ];
  @override
  final String wireName = 'GGiftCardEventFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardEventFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GGiftCardEventsEnum)));
    }
    value = object.orders;
    if (value != null) {
      result
        ..add('orders')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GGiftCardEventFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardEventFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GGiftCardEventsEnum))
              as GGiftCardEventsEnum?;
          break;
        case 'orders':
          result.orders.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardEventsEnumSerializer
    implements PrimitiveSerializer<GGiftCardEventsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GGiftCardEventsEnum];
  @override
  final String wireName = 'GGiftCardEventsEnum';

  @override
  Object serialize(Serializers serializers, GGiftCardEventsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GGiftCardEventsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGiftCardEventsEnum.valueOf(serialized as String);
}

class _$GGiftCardFilterInputSerializer
    implements StructuredSerializer<GGiftCardFilterInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardFilterInput,
    _$GGiftCardFilterInput
  ];
  @override
  final String wireName = 'GGiftCardFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.tags;
    if (value != null) {
      result
        ..add('tags')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.products;
    if (value != null) {
      result
        ..add('products')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.usedBy;
    if (value != null) {
      result
        ..add('usedBy')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.used;
    if (value != null) {
      result
        ..add('used')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.currency;
    if (value != null) {
      result
        ..add('currency')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.currentBalance;
    if (value != null) {
      result
        ..add('currentBalance')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPriceRangeInput)));
    }
    value = object.initialBalance;
    if (value != null) {
      result
        ..add('initialBalance')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPriceRangeInput)));
    }
    value = object.code;
    if (value != null) {
      result
        ..add('code')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGiftCardFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'tags':
          result.tags.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'usedBy':
          result.usedBy.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'used':
          result.used = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'currency':
          result.currency = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'currentBalance':
          result.currentBalance.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPriceRangeInput))!
              as GPriceRangeInput);
          break;
        case 'initialBalance':
          result.initialBalance.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPriceRangeInput))!
              as GPriceRangeInput);
          break;
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardResendInputSerializer
    implements StructuredSerializer<GGiftCardResendInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardResendInput,
    _$GGiftCardResendInput
  ];
  @override
  final String wireName = 'GGiftCardResendInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardResendInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'channel',
      serializers.serialize(object.channel,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGiftCardResendInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardResendInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardSettingsErrorCodeSerializer
    implements PrimitiveSerializer<GGiftCardSettingsErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GGiftCardSettingsErrorCode];
  @override
  final String wireName = 'GGiftCardSettingsErrorCode';

  @override
  Object serialize(Serializers serializers, GGiftCardSettingsErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GGiftCardSettingsErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGiftCardSettingsErrorCode.valueOf(serialized as String);
}

class _$GGiftCardSettingsExpiryTypeEnumSerializer
    implements PrimitiveSerializer<GGiftCardSettingsExpiryTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GGiftCardSettingsExpiryTypeEnum];
  @override
  final String wireName = 'GGiftCardSettingsExpiryTypeEnum';

  @override
  Object serialize(
          Serializers serializers, GGiftCardSettingsExpiryTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GGiftCardSettingsExpiryTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGiftCardSettingsExpiryTypeEnum.valueOf(serialized as String);
}

class _$GGiftCardSettingsUpdateInputSerializer
    implements StructuredSerializer<GGiftCardSettingsUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardSettingsUpdateInput,
    _$GGiftCardSettingsUpdateInput
  ];
  @override
  final String wireName = 'GGiftCardSettingsUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardSettingsUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.expiryType;
    if (value != null) {
      result
        ..add('expiryType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GGiftCardSettingsExpiryTypeEnum)));
    }
    value = object.expiryPeriod;
    if (value != null) {
      result
        ..add('expiryPeriod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GTimePeriodInputType)));
    }
    return result;
  }

  @override
  GGiftCardSettingsUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardSettingsUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'expiryType':
          result.expiryType = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GGiftCardSettingsExpiryTypeEnum))
              as GGiftCardSettingsExpiryTypeEnum?;
          break;
        case 'expiryPeriod':
          result.expiryPeriod.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GTimePeriodInputType))!
              as GTimePeriodInputType);
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardSortFieldSerializer
    implements PrimitiveSerializer<GGiftCardSortField> {
  @override
  final Iterable<Type> types = const <Type>[GGiftCardSortField];
  @override
  final String wireName = 'GGiftCardSortField';

  @override
  Object serialize(Serializers serializers, GGiftCardSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GGiftCardSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGiftCardSortField.valueOf(serialized as String);
}

class _$GGiftCardSortingInputSerializer
    implements StructuredSerializer<GGiftCardSortingInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardSortingInput,
    _$GGiftCardSortingInput
  ];
  @override
  final String wireName = 'GGiftCardSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GGiftCardSortField)),
    ];

    return result;
  }

  @override
  GGiftCardSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GGiftCardSortField))!
              as GGiftCardSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardTagFilterInputSerializer
    implements StructuredSerializer<GGiftCardTagFilterInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardTagFilterInput,
    _$GGiftCardTagFilterInput
  ];
  @override
  final String wireName = 'GGiftCardTagFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardTagFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGiftCardTagFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardTagFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGiftCardUpdateInputSerializer
    implements StructuredSerializer<GGiftCardUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GGiftCardUpdateInput,
    _$GGiftCardUpdateInput
  ];
  @override
  final String wireName = 'GGiftCardUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGiftCardUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.addTags;
    if (value != null) {
      result
        ..add('addTags')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.expiryDate;
    if (value != null) {
      result
        ..add('expiryDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.endDate;
    if (value != null) {
      result
        ..add('endDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.removeTags;
    if (value != null) {
      result
        ..add('removeTags')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.balanceAmount;
    if (value != null) {
      result
        ..add('balanceAmount')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    return result;
  }

  @override
  GGiftCardUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGiftCardUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'addTags':
          result.addTags.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'expiryDate':
          result.expiryDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'removeTags':
          result.removeTags.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'balanceAmount':
          result.balanceAmount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
      }
    }

    return result.build();
  }
}

class _$GIntRangeInputSerializer
    implements StructuredSerializer<GIntRangeInput> {
  @override
  final Iterable<Type> types = const [GIntRangeInput, _$GIntRangeInput];
  @override
  final String wireName = 'GIntRangeInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GIntRangeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.gte;
    if (value != null) {
      result
        ..add('gte')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.lte;
    if (value != null) {
      result
        ..add('lte')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GIntRangeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GIntRangeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'gte':
          result.gte = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'lte':
          result.lte = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GInvoiceCreateInputSerializer
    implements StructuredSerializer<GInvoiceCreateInput> {
  @override
  final Iterable<Type> types = const [
    GInvoiceCreateInput,
    _$GInvoiceCreateInput
  ];
  @override
  final String wireName = 'GInvoiceCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GInvoiceCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'number',
      serializers.serialize(object.number,
          specifiedType: const FullType(String)),
      'url',
      serializers.serialize(object.url, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GInvoiceCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GInvoiceCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'number':
          result.number = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GInvoiceErrorCodeSerializer
    implements PrimitiveSerializer<GInvoiceErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GInvoiceErrorCode];
  @override
  final String wireName = 'GInvoiceErrorCode';

  @override
  Object serialize(Serializers serializers, GInvoiceErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GInvoiceErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GInvoiceErrorCode.valueOf(serialized as String);
}

class _$GJobStatusEnumSerializer
    implements PrimitiveSerializer<GJobStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GJobStatusEnum];
  @override
  final String wireName = 'GJobStatusEnum';

  @override
  Object serialize(Serializers serializers, GJobStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GJobStatusEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GJobStatusEnum.valueOf(serialized as String);
}

class _$GLanguageCodeEnumSerializer
    implements PrimitiveSerializer<GLanguageCodeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GLanguageCodeEnum];
  @override
  final String wireName = 'GLanguageCodeEnum';

  @override
  Object serialize(Serializers serializers, GLanguageCodeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GLanguageCodeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GLanguageCodeEnum.valueOf(serialized as String);
}

class _$GMeasurementUnitsEnumSerializer
    implements PrimitiveSerializer<GMeasurementUnitsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GMeasurementUnitsEnum];
  @override
  final String wireName = 'GMeasurementUnitsEnum';

  @override
  Object serialize(Serializers serializers, GMeasurementUnitsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMeasurementUnitsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMeasurementUnitsEnum.valueOf(serialized as String);
}

class _$GMenuCreateInputSerializer
    implements StructuredSerializer<GMenuCreateInput> {
  @override
  final Iterable<Type> types = const [GMenuCreateInput, _$GMenuCreateInput];
  @override
  final String wireName = 'GMenuCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMenuCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.items;
    if (value != null) {
      result
        ..add('items')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMenuItemInput)])));
    }
    return result;
  }

  @override
  GMenuCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'items':
          result.items.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMenuItemInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuErrorCodeSerializer
    implements PrimitiveSerializer<GMenuErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GMenuErrorCode];
  @override
  final String wireName = 'GMenuErrorCode';

  @override
  Object serialize(Serializers serializers, GMenuErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMenuErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMenuErrorCode.valueOf(serialized as String);
}

class _$GMenuFilterInputSerializer
    implements StructuredSerializer<GMenuFilterInput> {
  @override
  final Iterable<Type> types = const [GMenuFilterInput, _$GMenuFilterInput];
  @override
  final String wireName = 'GMenuFilterInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMenuFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GMenuFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuInputSerializer implements StructuredSerializer<GMenuInput> {
  @override
  final Iterable<Type> types = const [GMenuInput, _$GMenuInput];
  @override
  final String wireName = 'GMenuInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMenuInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMenuInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemCreateInputSerializer
    implements StructuredSerializer<GMenuItemCreateInput> {
  @override
  final Iterable<Type> types = const [
    GMenuItemCreateInput,
    _$GMenuItemCreateInput
  ];
  @override
  final String wireName = 'GMenuItemCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMenuItemCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'menu',
      serializers.serialize(object.menu, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.collection;
    if (value != null) {
      result
        ..add('collection')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.page;
    if (value != null) {
      result
        ..add('page')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.parent;
    if (value != null) {
      result
        ..add('parent')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMenuItemCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'collection':
          result.collection = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'page':
          result.page = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'menu':
          result.menu = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'parent':
          result.parent = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemFilterInputSerializer
    implements StructuredSerializer<GMenuItemFilterInput> {
  @override
  final Iterable<Type> types = const [
    GMenuItemFilterInput,
    _$GMenuItemFilterInput
  ];
  @override
  final String wireName = 'GMenuItemFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMenuItemFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    return result;
  }

  @override
  GMenuItemFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemInputSerializer
    implements StructuredSerializer<GMenuItemInput> {
  @override
  final Iterable<Type> types = const [GMenuItemInput, _$GMenuItemInput];
  @override
  final String wireName = 'GMenuItemInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMenuItemInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.collection;
    if (value != null) {
      result
        ..add('collection')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.page;
    if (value != null) {
      result
        ..add('page')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMenuItemInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'collection':
          result.collection = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'page':
          result.page = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemMoveInputSerializer
    implements StructuredSerializer<GMenuItemMoveInput> {
  @override
  final Iterable<Type> types = const [GMenuItemMoveInput, _$GMenuItemMoveInput];
  @override
  final String wireName = 'GMenuItemMoveInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMenuItemMoveInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'itemId',
      serializers.serialize(object.itemId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.parentId;
    if (value != null) {
      result
        ..add('parentId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.sortOrder;
    if (value != null) {
      result
        ..add('sortOrder')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GMenuItemMoveInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemMoveInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'itemId':
          result.itemId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'parentId':
          result.parentId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'sortOrder':
          result.sortOrder = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemSortingInputSerializer
    implements StructuredSerializer<GMenuItemSortingInput> {
  @override
  final Iterable<Type> types = const [
    GMenuItemSortingInput,
    _$GMenuItemSortingInput
  ];
  @override
  final String wireName = 'GMenuItemSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMenuItemSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GMenuItemsSortField)),
    ];

    return result;
  }

  @override
  GMenuItemSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuItemSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GMenuItemsSortField))!
              as GMenuItemsSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GMenuItemsSortFieldSerializer
    implements PrimitiveSerializer<GMenuItemsSortField> {
  @override
  final Iterable<Type> types = const <Type>[GMenuItemsSortField];
  @override
  final String wireName = 'GMenuItemsSortField';

  @override
  Object serialize(Serializers serializers, GMenuItemsSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMenuItemsSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMenuItemsSortField.valueOf(serialized as String);
}

class _$GMenuSortFieldSerializer
    implements PrimitiveSerializer<GMenuSortField> {
  @override
  final Iterable<Type> types = const <Type>[GMenuSortField];
  @override
  final String wireName = 'GMenuSortField';

  @override
  Object serialize(Serializers serializers, GMenuSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMenuSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMenuSortField.valueOf(serialized as String);
}

class _$GMenuSortingInputSerializer
    implements StructuredSerializer<GMenuSortingInput> {
  @override
  final Iterable<Type> types = const [GMenuSortingInput, _$GMenuSortingInput];
  @override
  final String wireName = 'GMenuSortingInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMenuSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GMenuSortField)),
    ];

    return result;
  }

  @override
  GMenuSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMenuSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GMenuSortField))! as GMenuSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GMetadataErrorCodeSerializer
    implements PrimitiveSerializer<GMetadataErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GMetadataErrorCode];
  @override
  final String wireName = 'GMetadataErrorCode';

  @override
  Object serialize(Serializers serializers, GMetadataErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GMetadataErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMetadataErrorCode.valueOf(serialized as String);
}

class _$GMetadataFilterSerializer
    implements StructuredSerializer<GMetadataFilter> {
  @override
  final Iterable<Type> types = const [GMetadataFilter, _$GMetadataFilter];
  @override
  final String wireName = 'GMetadataFilter';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMetadataFilter object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMetadataFilter deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMetadataFilterBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMetadataInputSerializer
    implements StructuredSerializer<GMetadataInput> {
  @override
  final Iterable<Type> types = const [GMetadataInput, _$GMetadataInput];
  @override
  final String wireName = 'GMetadataInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMetadataInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GMetadataInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMetadataInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMoneyInputSerializer implements StructuredSerializer<GMoneyInput> {
  @override
  final Iterable<Type> types = const [GMoneyInput, _$GMoneyInput];
  @override
  final String wireName = 'GMoneyInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMoneyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'currency',
      serializers.serialize(object.currency,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GPositiveDecimal)),
    ];

    return result;
  }

  @override
  GMoneyInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMoneyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'currency':
          result.currency = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
      }
    }

    return result.build();
  }
}

class _$GMoveProductInputSerializer
    implements StructuredSerializer<GMoveProductInput> {
  @override
  final Iterable<Type> types = const [GMoveProductInput, _$GMoveProductInput];
  @override
  final String wireName = 'GMoveProductInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMoveProductInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'productId',
      serializers.serialize(object.productId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.sortOrder;
    if (value != null) {
      result
        ..add('sortOrder')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GMoveProductInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMoveProductInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'productId':
          result.productId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sortOrder':
          result.sortOrder = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNameTranslationInputSerializer
    implements StructuredSerializer<GNameTranslationInput> {
  @override
  final Iterable<Type> types = const [
    GNameTranslationInput,
    _$GNameTranslationInput
  ];
  @override
  final String wireName = 'GNameTranslationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GNameTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GNameTranslationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GNameTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GNavigationTypeSerializer
    implements PrimitiveSerializer<GNavigationType> {
  @override
  final Iterable<Type> types = const <Type>[GNavigationType];
  @override
  final String wireName = 'GNavigationType';

  @override
  Object serialize(Serializers serializers, GNavigationType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GNavigationType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GNavigationType.valueOf(serialized as String);
}

class _$GOrderActionSerializer implements PrimitiveSerializer<GOrderAction> {
  @override
  final Iterable<Type> types = const <Type>[GOrderAction];
  @override
  final String wireName = 'GOrderAction';

  @override
  Object serialize(Serializers serializers, GOrderAction object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderAction deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderAction.valueOf(serialized as String);
}

class _$GOrderAddNoteInputSerializer
    implements StructuredSerializer<GOrderAddNoteInput> {
  @override
  final Iterable<Type> types = const [GOrderAddNoteInput, _$GOrderAddNoteInput];
  @override
  final String wireName = 'GOrderAddNoteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderAddNoteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'message',
      serializers.serialize(object.message,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GOrderAddNoteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderAddNoteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'message':
          result.message = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderAuthorizeStatusEnumSerializer
    implements PrimitiveSerializer<GOrderAuthorizeStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GOrderAuthorizeStatusEnum];
  @override
  final String wireName = 'GOrderAuthorizeStatusEnum';

  @override
  Object serialize(Serializers serializers, GOrderAuthorizeStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderAuthorizeStatusEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderAuthorizeStatusEnum.valueOf(serialized as String);
}

class _$GOrderChargeStatusEnumSerializer
    implements PrimitiveSerializer<GOrderChargeStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GOrderChargeStatusEnum];
  @override
  final String wireName = 'GOrderChargeStatusEnum';

  @override
  Object serialize(Serializers serializers, GOrderChargeStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderChargeStatusEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderChargeStatusEnum.valueOf(serialized as String);
}

class _$GOrderCreateFromCheckoutErrorCodeSerializer
    implements PrimitiveSerializer<GOrderCreateFromCheckoutErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GOrderCreateFromCheckoutErrorCode];
  @override
  final String wireName = 'GOrderCreateFromCheckoutErrorCode';

  @override
  Object serialize(
          Serializers serializers, GOrderCreateFromCheckoutErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderCreateFromCheckoutErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderCreateFromCheckoutErrorCode.valueOf(serialized as String);
}

class _$GOrderDirectionSerializer
    implements PrimitiveSerializer<GOrderDirection> {
  @override
  final Iterable<Type> types = const <Type>[GOrderDirection];
  @override
  final String wireName = 'GOrderDirection';

  @override
  Object serialize(Serializers serializers, GOrderDirection object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderDirection deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderDirection.valueOf(serialized as String);
}

class _$GOrderDiscountCommonInputSerializer
    implements StructuredSerializer<GOrderDiscountCommonInput> {
  @override
  final Iterable<Type> types = const [
    GOrderDiscountCommonInput,
    _$GOrderDiscountCommonInput
  ];
  @override
  final String wireName = 'GOrderDiscountCommonInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderDiscountCommonInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'valueType',
      serializers.serialize(object.valueType,
          specifiedType: const FullType(GDiscountValueTypeEnum)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(GPositiveDecimal)),
    ];
    Object? value;
    value = object.reason;
    if (value != null) {
      result
        ..add('reason')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderDiscountCommonInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderDiscountCommonInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'valueType':
          result.valueType = serializers.deserialize(value,
                  specifiedType: const FullType(GDiscountValueTypeEnum))!
              as GDiscountValueTypeEnum;
          break;
        case 'value':
          result.value.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'reason':
          result.reason = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderDiscountTypeSerializer
    implements PrimitiveSerializer<GOrderDiscountType> {
  @override
  final Iterable<Type> types = const <Type>[GOrderDiscountType];
  @override
  final String wireName = 'GOrderDiscountType';

  @override
  Object serialize(Serializers serializers, GOrderDiscountType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderDiscountType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderDiscountType.valueOf(serialized as String);
}

class _$GOrderDraftFilterInputSerializer
    implements StructuredSerializer<GOrderDraftFilterInput> {
  @override
  final Iterable<Type> types = const [
    GOrderDraftFilterInput,
    _$GOrderDraftFilterInput
  ];
  @override
  final String wireName = 'GOrderDraftFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderDraftFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.customer;
    if (value != null) {
      result
        ..add('customer')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.created;
    if (value != null) {
      result
        ..add('created')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateRangeInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.channels;
    if (value != null) {
      result
        ..add('channels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GOrderDraftFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderDraftFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'customer':
          result.customer = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'created':
          result.created.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))!
              as GDateRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'channels':
          result.channels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderErrorCodeSerializer
    implements PrimitiveSerializer<GOrderErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GOrderErrorCode];
  @override
  final String wireName = 'GOrderErrorCode';

  @override
  Object serialize(Serializers serializers, GOrderErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderErrorCode.valueOf(serialized as String);
}

class _$GOrderEventsEmailsEnumSerializer
    implements PrimitiveSerializer<GOrderEventsEmailsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GOrderEventsEmailsEnum];
  @override
  final String wireName = 'GOrderEventsEmailsEnum';

  @override
  Object serialize(Serializers serializers, GOrderEventsEmailsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderEventsEmailsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderEventsEmailsEnum.valueOf(serialized as String);
}

class _$GOrderEventsEnumSerializer
    implements PrimitiveSerializer<GOrderEventsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GOrderEventsEnum];
  @override
  final String wireName = 'GOrderEventsEnum';

  @override
  Object serialize(Serializers serializers, GOrderEventsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderEventsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderEventsEnum.valueOf(serialized as String);
}

class _$GOrderFilterInputSerializer
    implements StructuredSerializer<GOrderFilterInput> {
  @override
  final Iterable<Type> types = const [GOrderFilterInput, _$GOrderFilterInput];
  @override
  final String wireName = 'GOrderFilterInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GOrderFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.paymentStatus;
    if (value != null) {
      result
        ..add('paymentStatus')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPaymentChargeStatusEnum)])));
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOrderStatusFilter)])));
    }
    value = object.customer;
    if (value != null) {
      result
        ..add('customer')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.created;
    if (value != null) {
      result
        ..add('created')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateRangeInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.channels;
    if (value != null) {
      result
        ..add('channels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.authorizeStatus;
    if (value != null) {
      result
        ..add('authorizeStatus')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOrderAuthorizeStatusEnum)])));
    }
    value = object.chargeStatus;
    if (value != null) {
      result
        ..add('chargeStatus')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOrderChargeStatusEnum)])));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    value = object.isClickAndCollect;
    if (value != null) {
      result
        ..add('isClickAndCollect')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.isPreorder;
    if (value != null) {
      result
        ..add('isPreorder')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.giftCardUsed;
    if (value != null) {
      result
        ..add('giftCardUsed')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.giftCardBought;
    if (value != null) {
      result
        ..add('giftCardBought')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.numbers;
    if (value != null) {
      result
        ..add('numbers')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GOrderFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'paymentStatus':
          result.paymentStatus.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GPaymentChargeStatusEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'status':
          result.status.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GOrderStatusFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'customer':
          result.customer = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'created':
          result.created.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateRangeInput))!
              as GDateRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'channels':
          result.channels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'authorizeStatus':
          result.authorizeStatus.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderAuthorizeStatusEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'chargeStatus':
          result.chargeStatus.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderChargeStatusEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
        case 'isClickAndCollect':
          result.isClickAndCollect = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'isPreorder':
          result.isPreorder = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'giftCardUsed':
          result.giftCardUsed = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'giftCardBought':
          result.giftCardBought = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'numbers':
          result.numbers.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderFulfillInputSerializer
    implements StructuredSerializer<GOrderFulfillInput> {
  @override
  final Iterable<Type> types = const [GOrderFulfillInput, _$GOrderFulfillInput];
  @override
  final String wireName = 'GOrderFulfillInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderFulfillInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'lines',
      serializers.serialize(object.lines,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GOrderFulfillLineInput)])),
    ];
    Object? value;
    value = object.notifyCustomer;
    if (value != null) {
      result
        ..add('notifyCustomer')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.allowStockToBeExceeded;
    if (value != null) {
      result
        ..add('allowStockToBeExceeded')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.trackingNumber;
    if (value != null) {
      result
        ..add('trackingNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderFulfillInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderFulfillInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'lines':
          result.lines.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderFulfillLineInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'notifyCustomer':
          result.notifyCustomer = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'allowStockToBeExceeded':
          result.allowStockToBeExceeded = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'trackingNumber':
          result.trackingNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderFulfillLineInputSerializer
    implements StructuredSerializer<GOrderFulfillLineInput> {
  @override
  final Iterable<Type> types = const [
    GOrderFulfillLineInput,
    _$GOrderFulfillLineInput
  ];
  @override
  final String wireName = 'GOrderFulfillLineInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderFulfillLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'stocks',
      serializers.serialize(object.stocks,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GOrderFulfillStockInput)])),
    ];
    Object? value;
    value = object.orderLineId;
    if (value != null) {
      result
        ..add('orderLineId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderFulfillLineInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderFulfillLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'orderLineId':
          result.orderLineId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderFulfillStockInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderFulfillStockInputSerializer
    implements StructuredSerializer<GOrderFulfillStockInput> {
  @override
  final Iterable<Type> types = const [
    GOrderFulfillStockInput,
    _$GOrderFulfillStockInput
  ];
  @override
  final String wireName = 'GOrderFulfillStockInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderFulfillStockInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
      'warehouse',
      serializers.serialize(object.warehouse,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GOrderFulfillStockInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderFulfillStockInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'warehouse':
          result.warehouse = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderLineCreateInputSerializer
    implements StructuredSerializer<GOrderLineCreateInput> {
  @override
  final Iterable<Type> types = const [
    GOrderLineCreateInput,
    _$GOrderLineCreateInput
  ];
  @override
  final String wireName = 'GOrderLineCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderLineCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
      'variantId',
      serializers.serialize(object.variantId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.forceNewLine;
    if (value != null) {
      result
        ..add('forceNewLine')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GOrderLineCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderLineCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'variantId':
          result.variantId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'forceNewLine':
          result.forceNewLine = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderLineInputSerializer
    implements StructuredSerializer<GOrderLineInput> {
  @override
  final Iterable<Type> types = const [GOrderLineInput, _$GOrderLineInput];
  @override
  final String wireName = 'GOrderLineInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GOrderLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GOrderLineInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderOriginEnumSerializer
    implements PrimitiveSerializer<GOrderOriginEnum> {
  @override
  final Iterable<Type> types = const <Type>[GOrderOriginEnum];
  @override
  final String wireName = 'GOrderOriginEnum';

  @override
  Object serialize(Serializers serializers, GOrderOriginEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderOriginEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderOriginEnum.valueOf(serialized as String);
}

class _$GOrderRefundFulfillmentLineInputSerializer
    implements StructuredSerializer<GOrderRefundFulfillmentLineInput> {
  @override
  final Iterable<Type> types = const [
    GOrderRefundFulfillmentLineInput,
    _$GOrderRefundFulfillmentLineInput
  ];
  @override
  final String wireName = 'GOrderRefundFulfillmentLineInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderRefundFulfillmentLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fulfillmentLineId',
      serializers.serialize(object.fulfillmentLineId,
          specifiedType: const FullType(String)),
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GOrderRefundFulfillmentLineInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderRefundFulfillmentLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'fulfillmentLineId':
          result.fulfillmentLineId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderRefundLineInputSerializer
    implements StructuredSerializer<GOrderRefundLineInput> {
  @override
  final Iterable<Type> types = const [
    GOrderRefundLineInput,
    _$GOrderRefundLineInput
  ];
  @override
  final String wireName = 'GOrderRefundLineInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderRefundLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'orderLineId',
      serializers.serialize(object.orderLineId,
          specifiedType: const FullType(String)),
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GOrderRefundLineInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderRefundLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'orderLineId':
          result.orderLineId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderRefundProductsInputSerializer
    implements StructuredSerializer<GOrderRefundProductsInput> {
  @override
  final Iterable<Type> types = const [
    GOrderRefundProductsInput,
    _$GOrderRefundProductsInput
  ];
  @override
  final String wireName = 'GOrderRefundProductsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderRefundProductsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.orderLines;
    if (value != null) {
      result
        ..add('orderLines')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOrderRefundLineInput)])));
    }
    value = object.fulfillmentLines;
    if (value != null) {
      result
        ..add('fulfillmentLines')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GOrderRefundFulfillmentLineInput)])));
    }
    value = object.amountToRefund;
    if (value != null) {
      result
        ..add('amountToRefund')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.includeShippingCosts;
    if (value != null) {
      result
        ..add('includeShippingCosts')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GOrderRefundProductsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderRefundProductsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'orderLines':
          result.orderLines.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderRefundLineInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'fulfillmentLines':
          result.fulfillmentLines.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderRefundFulfillmentLineInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'amountToRefund':
          result.amountToRefund.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'includeShippingCosts':
          result.includeShippingCosts = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderReturnFulfillmentLineInputSerializer
    implements StructuredSerializer<GOrderReturnFulfillmentLineInput> {
  @override
  final Iterable<Type> types = const [
    GOrderReturnFulfillmentLineInput,
    _$GOrderReturnFulfillmentLineInput
  ];
  @override
  final String wireName = 'GOrderReturnFulfillmentLineInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderReturnFulfillmentLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'fulfillmentLineId',
      serializers.serialize(object.fulfillmentLineId,
          specifiedType: const FullType(String)),
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
    ];
    Object? value;
    value = object.Greplace;
    if (value != null) {
      result
        ..add('replace')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GOrderReturnFulfillmentLineInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderReturnFulfillmentLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'fulfillmentLineId':
          result.fulfillmentLineId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'replace':
          result.Greplace = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderReturnLineInputSerializer
    implements StructuredSerializer<GOrderReturnLineInput> {
  @override
  final Iterable<Type> types = const [
    GOrderReturnLineInput,
    _$GOrderReturnLineInput
  ];
  @override
  final String wireName = 'GOrderReturnLineInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderReturnLineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'orderLineId',
      serializers.serialize(object.orderLineId,
          specifiedType: const FullType(String)),
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
    ];
    Object? value;
    value = object.Greplace;
    if (value != null) {
      result
        ..add('replace')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GOrderReturnLineInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderReturnLineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'orderLineId':
          result.orderLineId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'replace':
          result.Greplace = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderReturnProductsInputSerializer
    implements StructuredSerializer<GOrderReturnProductsInput> {
  @override
  final Iterable<Type> types = const [
    GOrderReturnProductsInput,
    _$GOrderReturnProductsInput
  ];
  @override
  final String wireName = 'GOrderReturnProductsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderReturnProductsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.orderLines;
    if (value != null) {
      result
        ..add('orderLines')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GOrderReturnLineInput)])));
    }
    value = object.fulfillmentLines;
    if (value != null) {
      result
        ..add('fulfillmentLines')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GOrderReturnFulfillmentLineInput)])));
    }
    value = object.amountToRefund;
    if (value != null) {
      result
        ..add('amountToRefund')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.includeShippingCosts;
    if (value != null) {
      result
        ..add('includeShippingCosts')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.refund;
    if (value != null) {
      result
        ..add('refund')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GOrderReturnProductsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderReturnProductsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'orderLines':
          result.orderLines.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderReturnLineInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'fulfillmentLines':
          result.fulfillmentLines.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GOrderReturnFulfillmentLineInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'amountToRefund':
          result.amountToRefund.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'includeShippingCosts':
          result.includeShippingCosts = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'refund':
          result.refund = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderSettingsErrorCodeSerializer
    implements PrimitiveSerializer<GOrderSettingsErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GOrderSettingsErrorCode];
  @override
  final String wireName = 'GOrderSettingsErrorCode';

  @override
  Object serialize(Serializers serializers, GOrderSettingsErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderSettingsErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderSettingsErrorCode.valueOf(serialized as String);
}

class _$GOrderSettingsUpdateInputSerializer
    implements StructuredSerializer<GOrderSettingsUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GOrderSettingsUpdateInput,
    _$GOrderSettingsUpdateInput
  ];
  @override
  final String wireName = 'GOrderSettingsUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderSettingsUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.automaticallyConfirmAllNewOrders;
    if (value != null) {
      result
        ..add('automaticallyConfirmAllNewOrders')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.automaticallyFulfillNonShippableGiftCard;
    if (value != null) {
      result
        ..add('automaticallyFulfillNonShippableGiftCard')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GOrderSettingsUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderSettingsUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'automaticallyConfirmAllNewOrders':
          result.automaticallyConfirmAllNewOrders = serializers
              .deserialize(value, specifiedType: const FullType(bool)) as bool?;
          break;
        case 'automaticallyFulfillNonShippableGiftCard':
          result.automaticallyFulfillNonShippableGiftCard = serializers
              .deserialize(value, specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderSortFieldSerializer
    implements PrimitiveSerializer<GOrderSortField> {
  @override
  final Iterable<Type> types = const <Type>[GOrderSortField];
  @override
  final String wireName = 'GOrderSortField';

  @override
  Object serialize(Serializers serializers, GOrderSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderSortField.valueOf(serialized as String);
}

class _$GOrderSortingInputSerializer
    implements StructuredSerializer<GOrderSortingInput> {
  @override
  final Iterable<Type> types = const [GOrderSortingInput, _$GOrderSortingInput];
  @override
  final String wireName = 'GOrderSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GOrderSortField)),
    ];

    return result;
  }

  @override
  GOrderSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderSortField))!
              as GOrderSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderStatusSerializer implements PrimitiveSerializer<GOrderStatus> {
  @override
  final Iterable<Type> types = const <Type>[GOrderStatus];
  @override
  final String wireName = 'GOrderStatus';

  @override
  Object serialize(Serializers serializers, GOrderStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderStatus.valueOf(serialized as String);
}

class _$GOrderStatusFilterSerializer
    implements PrimitiveSerializer<GOrderStatusFilter> {
  @override
  final Iterable<Type> types = const <Type>[GOrderStatusFilter];
  @override
  final String wireName = 'GOrderStatusFilter';

  @override
  Object serialize(Serializers serializers, GOrderStatusFilter object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GOrderStatusFilter deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GOrderStatusFilter.valueOf(serialized as String);
}

class _$GOrderUpdateInputSerializer
    implements StructuredSerializer<GOrderUpdateInput> {
  @override
  final Iterable<Type> types = const [GOrderUpdateInput, _$GOrderUpdateInput];
  @override
  final String wireName = 'GOrderUpdateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GOrderUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.billingAddress;
    if (value != null) {
      result
        ..add('billingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.userEmail;
    if (value != null) {
      result
        ..add('userEmail')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.shippingAddress;
    if (value != null) {
      result
        ..add('shippingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    return result;
  }

  @override
  GOrderUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'billingAddress':
          result.billingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'userEmail':
          result.userEmail = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'shippingAddress':
          result.shippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GOrderUpdateShippingInputSerializer
    implements StructuredSerializer<GOrderUpdateShippingInput> {
  @override
  final Iterable<Type> types = const [
    GOrderUpdateShippingInput,
    _$GOrderUpdateShippingInput
  ];
  @override
  final String wireName = 'GOrderUpdateShippingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOrderUpdateShippingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.shippingMethod;
    if (value != null) {
      result
        ..add('shippingMethod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GOrderUpdateShippingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOrderUpdateShippingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'shippingMethod':
          result.shippingMethod = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageCreateInputSerializer
    implements StructuredSerializer<GPageCreateInput> {
  @override
  final Iterable<Type> types = const [GPageCreateInput, _$GPageCreateInput];
  @override
  final String wireName = 'GPageCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'pageType',
      serializers.serialize(object.pageType,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.content;
    if (value != null) {
      result
        ..add('content')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.attributes;
    if (value != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    value = object.isPublished;
    if (value != null) {
      result
        ..add('isPublished')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.publicationDate;
    if (value != null) {
      result
        ..add('publicationDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.seo;
    if (value != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSeoInput)));
    }
    return result;
  }

  @override
  GPageCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'content':
          result.content.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))!
              as BuiltList<Object?>);
          break;
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'publicationDate':
          result.publicationDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'publishedAt':
          result.publishedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput))! as GSeoInput);
          break;
        case 'pageType':
          result.pageType = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageErrorCodeSerializer
    implements PrimitiveSerializer<GPageErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GPageErrorCode];
  @override
  final String wireName = 'GPageErrorCode';

  @override
  Object serialize(Serializers serializers, GPageErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPageErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPageErrorCode.valueOf(serialized as String);
}

class _$GPageFilterInputSerializer
    implements StructuredSerializer<GPageFilterInput> {
  @override
  final Iterable<Type> types = const [GPageFilterInput, _$GPageFilterInput];
  @override
  final String wireName = 'GPageFilterInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.pageTypes;
    if (value != null) {
      result
        ..add('pageTypes')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GPageFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'pageTypes':
          result.pageTypes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageInputSerializer implements StructuredSerializer<GPageInput> {
  @override
  final Iterable<Type> types = const [GPageInput, _$GPageInput];
  @override
  final String wireName = 'GPageInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.content;
    if (value != null) {
      result
        ..add('content')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.attributes;
    if (value != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    value = object.isPublished;
    if (value != null) {
      result
        ..add('isPublished')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.publicationDate;
    if (value != null) {
      result
        ..add('publicationDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.seo;
    if (value != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSeoInput)));
    }
    return result;
  }

  @override
  GPageInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'content':
          result.content.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))!
              as BuiltList<Object?>);
          break;
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'publicationDate':
          result.publicationDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'publishedAt':
          result.publishedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput))! as GSeoInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageSortFieldSerializer
    implements PrimitiveSerializer<GPageSortField> {
  @override
  final Iterable<Type> types = const <Type>[GPageSortField];
  @override
  final String wireName = 'GPageSortField';

  @override
  Object serialize(Serializers serializers, GPageSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPageSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPageSortField.valueOf(serialized as String);
}

class _$GPageSortingInputSerializer
    implements StructuredSerializer<GPageSortingInput> {
  @override
  final Iterable<Type> types = const [GPageSortingInput, _$GPageSortingInput];
  @override
  final String wireName = 'GPageSortingInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GPageSortField)),
    ];

    return result;
  }

  @override
  GPageSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GPageSortField))! as GPageSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageTranslationInputSerializer
    implements StructuredSerializer<GPageTranslationInput> {
  @override
  final Iterable<Type> types = const [
    GPageTranslationInput,
    _$GPageTranslationInput
  ];
  @override
  final String wireName = 'GPageTranslationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.seoTitle;
    if (value != null) {
      result
        ..add('seoTitle')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.seoDescription;
    if (value != null) {
      result
        ..add('seoDescription')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.content;
    if (value != null) {
      result
        ..add('content')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    return result;
  }

  @override
  GPageTranslationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'seoTitle':
          result.seoTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'seoDescription':
          result.seoDescription = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'content':
          result.content.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageTypeCreateInputSerializer
    implements StructuredSerializer<GPageTypeCreateInput> {
  @override
  final Iterable<Type> types = const [
    GPageTypeCreateInput,
    _$GPageTypeCreateInput
  ];
  @override
  final String wireName = 'GPageTypeCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageTypeCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.addAttributes;
    if (value != null) {
      result
        ..add('addAttributes')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GPageTypeCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageTypeCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'addAttributes':
          result.addAttributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageTypeFilterInputSerializer
    implements StructuredSerializer<GPageTypeFilterInput> {
  @override
  final Iterable<Type> types = const [
    GPageTypeFilterInput,
    _$GPageTypeFilterInput
  ];
  @override
  final String wireName = 'GPageTypeFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageTypeFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GPageTypeFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageTypeFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageTypeSortFieldSerializer
    implements PrimitiveSerializer<GPageTypeSortField> {
  @override
  final Iterable<Type> types = const <Type>[GPageTypeSortField];
  @override
  final String wireName = 'GPageTypeSortField';

  @override
  Object serialize(Serializers serializers, GPageTypeSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPageTypeSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPageTypeSortField.valueOf(serialized as String);
}

class _$GPageTypeSortingInputSerializer
    implements StructuredSerializer<GPageTypeSortingInput> {
  @override
  final Iterable<Type> types = const [
    GPageTypeSortingInput,
    _$GPageTypeSortingInput
  ];
  @override
  final String wireName = 'GPageTypeSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageTypeSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GPageTypeSortField)),
    ];

    return result;
  }

  @override
  GPageTypeSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageTypeSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GPageTypeSortField))!
              as GPageTypeSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GPageTypeUpdateInputSerializer
    implements StructuredSerializer<GPageTypeUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GPageTypeUpdateInput,
    _$GPageTypeUpdateInput
  ];
  @override
  final String wireName = 'GPageTypeUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPageTypeUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.addAttributes;
    if (value != null) {
      result
        ..add('addAttributes')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeAttributes;
    if (value != null) {
      result
        ..add('removeAttributes')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GPageTypeUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageTypeUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'addAttributes':
          result.addAttributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeAttributes':
          result.removeAttributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPaymentChargeStatusEnumSerializer
    implements PrimitiveSerializer<GPaymentChargeStatusEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPaymentChargeStatusEnum];
  @override
  final String wireName = 'GPaymentChargeStatusEnum';

  @override
  Object serialize(Serializers serializers, GPaymentChargeStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPaymentChargeStatusEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPaymentChargeStatusEnum.valueOf(serialized as String);
}

class _$GPaymentCheckBalanceInputSerializer
    implements StructuredSerializer<GPaymentCheckBalanceInput> {
  @override
  final Iterable<Type> types = const [
    GPaymentCheckBalanceInput,
    _$GPaymentCheckBalanceInput
  ];
  @override
  final String wireName = 'GPaymentCheckBalanceInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPaymentCheckBalanceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'gatewayId',
      serializers.serialize(object.gatewayId,
          specifiedType: const FullType(String)),
      'method',
      serializers.serialize(object.method,
          specifiedType: const FullType(String)),
      'channel',
      serializers.serialize(object.channel,
          specifiedType: const FullType(String)),
      'card',
      serializers.serialize(object.card,
          specifiedType: const FullType(GCardInput)),
    ];

    return result;
  }

  @override
  GPaymentCheckBalanceInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPaymentCheckBalanceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'gatewayId':
          result.gatewayId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'method':
          result.method = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'card':
          result.card.replace(serializers.deserialize(value,
              specifiedType: const FullType(GCardInput))! as GCardInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPaymentErrorCodeSerializer
    implements PrimitiveSerializer<GPaymentErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GPaymentErrorCode];
  @override
  final String wireName = 'GPaymentErrorCode';

  @override
  Object serialize(Serializers serializers, GPaymentErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPaymentErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPaymentErrorCode.valueOf(serialized as String);
}

class _$GPaymentFilterInputSerializer
    implements StructuredSerializer<GPaymentFilterInput> {
  @override
  final Iterable<Type> types = const [
    GPaymentFilterInput,
    _$GPaymentFilterInput
  ];
  @override
  final String wireName = 'GPaymentFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPaymentFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.checkouts;
    if (value != null) {
      result
        ..add('checkouts')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GPaymentFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPaymentFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'checkouts':
          result.checkouts.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPaymentInputSerializer implements StructuredSerializer<GPaymentInput> {
  @override
  final Iterable<Type> types = const [GPaymentInput, _$GPaymentInput];
  @override
  final String wireName = 'GPaymentInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPaymentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'gateway',
      serializers.serialize(object.gateway,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.token;
    if (value != null) {
      result
        ..add('token')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.amount;
    if (value != null) {
      result
        ..add('amount')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.returnUrl;
    if (value != null) {
      result
        ..add('returnUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.storePaymentMethod;
    if (value != null) {
      result
        ..add('storePaymentMethod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GStorePaymentMethodEnum)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GPaymentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPaymentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'gateway':
          result.gateway = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'token':
          result.token = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'returnUrl':
          result.returnUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'storePaymentMethod':
          result.storePaymentMethod = serializers.deserialize(value,
                  specifiedType: const FullType(GStorePaymentMethodEnum))
              as GStorePaymentMethodEnum?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPermissionEnumSerializer
    implements PrimitiveSerializer<GPermissionEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPermissionEnum];
  @override
  final String wireName = 'GPermissionEnum';

  @override
  Object serialize(Serializers serializers, GPermissionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPermissionEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPermissionEnum.valueOf(serialized as String);
}

class _$GPermissionGroupCreateInputSerializer
    implements StructuredSerializer<GPermissionGroupCreateInput> {
  @override
  final Iterable<Type> types = const [
    GPermissionGroupCreateInput,
    _$GPermissionGroupCreateInput
  ];
  @override
  final String wireName = 'GPermissionGroupCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPermissionGroupCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.addPermissions;
    if (value != null) {
      result
        ..add('addPermissions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPermissionEnum)])));
    }
    value = object.addUsers;
    if (value != null) {
      result
        ..add('addUsers')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GPermissionGroupCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPermissionGroupCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'addPermissions':
          result.addPermissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))!
              as BuiltList<Object?>);
          break;
        case 'addUsers':
          result.addUsers.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GPermissionGroupErrorCodeSerializer
    implements PrimitiveSerializer<GPermissionGroupErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GPermissionGroupErrorCode];
  @override
  final String wireName = 'GPermissionGroupErrorCode';

  @override
  Object serialize(Serializers serializers, GPermissionGroupErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPermissionGroupErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPermissionGroupErrorCode.valueOf(serialized as String);
}

class _$GPermissionGroupFilterInputSerializer
    implements StructuredSerializer<GPermissionGroupFilterInput> {
  @override
  final Iterable<Type> types = const [
    GPermissionGroupFilterInput,
    _$GPermissionGroupFilterInput
  ];
  @override
  final String wireName = 'GPermissionGroupFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPermissionGroupFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GPermissionGroupFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPermissionGroupFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPermissionGroupSortFieldSerializer
    implements PrimitiveSerializer<GPermissionGroupSortField> {
  @override
  final Iterable<Type> types = const <Type>[GPermissionGroupSortField];
  @override
  final String wireName = 'GPermissionGroupSortField';

  @override
  Object serialize(Serializers serializers, GPermissionGroupSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPermissionGroupSortField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPermissionGroupSortField.valueOf(serialized as String);
}

class _$GPermissionGroupSortingInputSerializer
    implements StructuredSerializer<GPermissionGroupSortingInput> {
  @override
  final Iterable<Type> types = const [
    GPermissionGroupSortingInput,
    _$GPermissionGroupSortingInput
  ];
  @override
  final String wireName = 'GPermissionGroupSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPermissionGroupSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GPermissionGroupSortField)),
    ];

    return result;
  }

  @override
  GPermissionGroupSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPermissionGroupSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GPermissionGroupSortField))!
              as GPermissionGroupSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GPermissionGroupUpdateInputSerializer
    implements StructuredSerializer<GPermissionGroupUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GPermissionGroupUpdateInput,
    _$GPermissionGroupUpdateInput
  ];
  @override
  final String wireName = 'GPermissionGroupUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPermissionGroupUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.addPermissions;
    if (value != null) {
      result
        ..add('addPermissions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPermissionEnum)])));
    }
    value = object.addUsers;
    if (value != null) {
      result
        ..add('addUsers')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.removePermissions;
    if (value != null) {
      result
        ..add('removePermissions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GPermissionEnum)])));
    }
    value = object.removeUsers;
    if (value != null) {
      result
        ..add('removeUsers')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GPermissionGroupUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPermissionGroupUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'addPermissions':
          result.addPermissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))!
              as BuiltList<Object?>);
          break;
        case 'addUsers':
          result.addUsers.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'removePermissions':
          result.removePermissions.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GPermissionEnum)]))!
              as BuiltList<Object?>);
          break;
        case 'removeUsers':
          result.removeUsers.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPluginConfigurationTypeSerializer
    implements PrimitiveSerializer<GPluginConfigurationType> {
  @override
  final Iterable<Type> types = const <Type>[GPluginConfigurationType];
  @override
  final String wireName = 'GPluginConfigurationType';

  @override
  Object serialize(Serializers serializers, GPluginConfigurationType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPluginConfigurationType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPluginConfigurationType.valueOf(serialized as String);
}

class _$GPluginErrorCodeSerializer
    implements PrimitiveSerializer<GPluginErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GPluginErrorCode];
  @override
  final String wireName = 'GPluginErrorCode';

  @override
  Object serialize(Serializers serializers, GPluginErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPluginErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPluginErrorCode.valueOf(serialized as String);
}

class _$GPluginFilterInputSerializer
    implements StructuredSerializer<GPluginFilterInput> {
  @override
  final Iterable<Type> types = const [GPluginFilterInput, _$GPluginFilterInput];
  @override
  final String wireName = 'GPluginFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPluginFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.statusInChannels;
    if (value != null) {
      result
        ..add('statusInChannels')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPluginStatusInChannelsInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPluginConfigurationType)));
    }
    return result;
  }

  @override
  GPluginFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPluginFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'statusInChannels':
          result.statusInChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPluginStatusInChannelsInput))!
              as GPluginStatusInChannelsInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GPluginConfigurationType))
              as GPluginConfigurationType?;
          break;
      }
    }

    return result.build();
  }
}

class _$GPluginSortFieldSerializer
    implements PrimitiveSerializer<GPluginSortField> {
  @override
  final Iterable<Type> types = const <Type>[GPluginSortField];
  @override
  final String wireName = 'GPluginSortField';

  @override
  Object serialize(Serializers serializers, GPluginSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPluginSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPluginSortField.valueOf(serialized as String);
}

class _$GPluginSortingInputSerializer
    implements StructuredSerializer<GPluginSortingInput> {
  @override
  final Iterable<Type> types = const [
    GPluginSortingInput,
    _$GPluginSortingInput
  ];
  @override
  final String wireName = 'GPluginSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPluginSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GPluginSortField)),
    ];

    return result;
  }

  @override
  GPluginSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPluginSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GPluginSortField))!
              as GPluginSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GPluginStatusInChannelsInputSerializer
    implements StructuredSerializer<GPluginStatusInChannelsInput> {
  @override
  final Iterable<Type> types = const [
    GPluginStatusInChannelsInput,
    _$GPluginStatusInChannelsInput
  ];
  @override
  final String wireName = 'GPluginStatusInChannelsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPluginStatusInChannelsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'active',
      serializers.serialize(object.active, specifiedType: const FullType(bool)),
      'channels',
      serializers.serialize(object.channels,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];

    return result;
  }

  @override
  GPluginStatusInChannelsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPluginStatusInChannelsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'channels':
          result.channels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPluginUpdateInputSerializer
    implements StructuredSerializer<GPluginUpdateInput> {
  @override
  final Iterable<Type> types = const [GPluginUpdateInput, _$GPluginUpdateInput];
  @override
  final String wireName = 'GPluginUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPluginUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.active;
    if (value != null) {
      result
        ..add('active')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.configuration;
    if (value != null) {
      result
        ..add('configuration')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GConfigurationItemInput)])));
    }
    return result;
  }

  @override
  GPluginUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPluginUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'configuration':
          result.configuration.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GConfigurationItemInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GPostalCodeRuleInclusionTypeEnumSerializer
    implements PrimitiveSerializer<GPostalCodeRuleInclusionTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GPostalCodeRuleInclusionTypeEnum];
  @override
  final String wireName = 'GPostalCodeRuleInclusionTypeEnum';

  @override
  Object serialize(
          Serializers serializers, GPostalCodeRuleInclusionTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GPostalCodeRuleInclusionTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPostalCodeRuleInclusionTypeEnum.valueOf(serialized as String);
}

class _$GPreorderSettingsInputSerializer
    implements StructuredSerializer<GPreorderSettingsInput> {
  @override
  final Iterable<Type> types = const [
    GPreorderSettingsInput,
    _$GPreorderSettingsInput
  ];
  @override
  final String wireName = 'GPreorderSettingsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPreorderSettingsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.globalThreshold;
    if (value != null) {
      result
        ..add('globalThreshold')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.endDate;
    if (value != null) {
      result
        ..add('endDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GPreorderSettingsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPreorderSettingsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'globalThreshold':
          result.globalThreshold = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GPriceInputSerializer implements StructuredSerializer<GPriceInput> {
  @override
  final Iterable<Type> types = const [GPriceInput, _$GPriceInput];
  @override
  final String wireName = 'GPriceInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPriceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'currency',
      serializers.serialize(object.currency,
          specifiedType: const FullType(String)),
      'amount',
      serializers.serialize(object.amount,
          specifiedType: const FullType(GPositiveDecimal)),
    ];

    return result;
  }

  @override
  GPriceInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPriceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'currency':
          result.currency = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'amount':
          result.amount.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
      }
    }

    return result.build();
  }
}

class _$GPriceRangeInputSerializer
    implements StructuredSerializer<GPriceRangeInput> {
  @override
  final Iterable<Type> types = const [GPriceRangeInput, _$GPriceRangeInput];
  @override
  final String wireName = 'GPriceRangeInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPriceRangeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.gte;
    if (value != null) {
      result
        ..add('gte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.lte;
    if (value != null) {
      result
        ..add('lte')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    return result;
  }

  @override
  GPriceRangeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPriceRangeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'gte':
          result.gte = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'lte':
          result.lte = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductAttributeAssignInputSerializer
    implements StructuredSerializer<GProductAttributeAssignInput> {
  @override
  final Iterable<Type> types = const [
    GProductAttributeAssignInput,
    _$GProductAttributeAssignInput
  ];
  @override
  final String wireName = 'GProductAttributeAssignInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductAttributeAssignInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GProductAttributeType)),
    ];
    Object? value;
    value = object.variantSelection;
    if (value != null) {
      result
        ..add('variantSelection')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GProductAttributeAssignInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductAttributeAssignInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GProductAttributeType))!
              as GProductAttributeType;
          break;
        case 'variantSelection':
          result.variantSelection = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductAttributeAssignmentUpdateInputSerializer
    implements StructuredSerializer<GProductAttributeAssignmentUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GProductAttributeAssignmentUpdateInput,
    _$GProductAttributeAssignmentUpdateInput
  ];
  @override
  final String wireName = 'GProductAttributeAssignmentUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductAttributeAssignmentUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'variantSelection',
      serializers.serialize(object.variantSelection,
          specifiedType: const FullType(bool)),
    ];

    return result;
  }

  @override
  GProductAttributeAssignmentUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductAttributeAssignmentUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'variantSelection':
          result.variantSelection = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductAttributeTypeSerializer
    implements PrimitiveSerializer<GProductAttributeType> {
  @override
  final Iterable<Type> types = const <Type>[GProductAttributeType];
  @override
  final String wireName = 'GProductAttributeType';

  @override
  Object serialize(Serializers serializers, GProductAttributeType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductAttributeType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductAttributeType.valueOf(serialized as String);
}

class _$GProductChannelListingAddInputSerializer
    implements StructuredSerializer<GProductChannelListingAddInput> {
  @override
  final Iterable<Type> types = const [
    GProductChannelListingAddInput,
    _$GProductChannelListingAddInput
  ];
  @override
  final String wireName = 'GProductChannelListingAddInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductChannelListingAddInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'channelId',
      serializers.serialize(object.channelId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.isPublished;
    if (value != null) {
      result
        ..add('isPublished')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.publicationDate;
    if (value != null) {
      result
        ..add('publicationDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.visibleInListings;
    if (value != null) {
      result
        ..add('visibleInListings')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.isAvailableForPurchase;
    if (value != null) {
      result
        ..add('isAvailableForPurchase')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.availableForPurchaseDate;
    if (value != null) {
      result
        ..add('availableForPurchaseDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.availableForPurchaseAt;
    if (value != null) {
      result
        ..add('availableForPurchaseAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.addVariants;
    if (value != null) {
      result
        ..add('addVariants')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeVariants;
    if (value != null) {
      result
        ..add('removeVariants')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GProductChannelListingAddInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductChannelListingAddInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'publicationDate':
          result.publicationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'publishedAt':
          result.publishedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'visibleInListings':
          result.visibleInListings = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'isAvailableForPurchase':
          result.isAvailableForPurchase = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'availableForPurchaseDate':
          result.availableForPurchaseDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'availableForPurchaseAt':
          result.availableForPurchaseAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'addVariants':
          result.addVariants.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeVariants':
          result.removeVariants.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductChannelListingUpdateInputSerializer
    implements StructuredSerializer<GProductChannelListingUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GProductChannelListingUpdateInput,
    _$GProductChannelListingUpdateInput
  ];
  @override
  final String wireName = 'GProductChannelListingUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductChannelListingUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.updateChannels;
    if (value != null) {
      result
        ..add('updateChannels')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GProductChannelListingAddInput)])));
    }
    value = object.removeChannels;
    if (value != null) {
      result
        ..add('removeChannels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GProductChannelListingUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductChannelListingUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'updateChannels':
          result.updateChannels.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProductChannelListingAddInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'removeChannels':
          result.removeChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductCreateInputSerializer
    implements StructuredSerializer<GProductCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProductCreateInput,
    _$GProductCreateInput
  ];
  @override
  final String wireName = 'GProductCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'productType',
      serializers.serialize(object.productType,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.attributes;
    if (value != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.chargeTaxes;
    if (value != null) {
      result
        ..add('chargeTaxes')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.collections;
    if (value != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.taxCode;
    if (value != null) {
      result
        ..add('taxCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.seo;
    if (value != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSeoInput)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightScalar)));
    }
    value = object.rating;
    if (value != null) {
      result
        ..add('rating')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GProductCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))!
              as BuiltList<Object?>);
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'chargeTaxes':
          result.chargeTaxes = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'description':
          result.description.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'taxCode':
          result.taxCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput))! as GSeoInput);
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar))! as GWeightScalar);
          break;
        case 'rating':
          result.rating = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'productType':
          result.productType = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductErrorCodeSerializer
    implements PrimitiveSerializer<GProductErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GProductErrorCode];
  @override
  final String wireName = 'GProductErrorCode';

  @override
  Object serialize(Serializers serializers, GProductErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductErrorCode.valueOf(serialized as String);
}

class _$GProductFieldEnumSerializer
    implements PrimitiveSerializer<GProductFieldEnum> {
  @override
  final Iterable<Type> types = const <Type>[GProductFieldEnum];
  @override
  final String wireName = 'GProductFieldEnum';

  @override
  Object serialize(Serializers serializers, GProductFieldEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductFieldEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductFieldEnum.valueOf(serialized as String);
}

class _$GProductFilterInputSerializer
    implements StructuredSerializer<GProductFilterInput> {
  @override
  final Iterable<Type> types = const [
    GProductFilterInput,
    _$GProductFilterInput
  ];
  @override
  final String wireName = 'GProductFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.isPublished;
    if (value != null) {
      result
        ..add('isPublished')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.collections;
    if (value != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.categories;
    if (value != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.hasCategory;
    if (value != null) {
      result
        ..add('hasCategory')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.attributes;
    if (value != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeInput)])));
    }
    value = object.stockAvailability;
    if (value != null) {
      result
        ..add('stockAvailability')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GStockAvailability)));
    }
    value = object.stocks;
    if (value != null) {
      result
        ..add('stocks')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProductStockFilterInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.publishedFrom;
    if (value != null) {
      result
        ..add('publishedFrom')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.isAvailable;
    if (value != null) {
      result
        ..add('isAvailable')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.availableFrom;
    if (value != null) {
      result
        ..add('availableFrom')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.isVisibleInListing;
    if (value != null) {
      result
        ..add('isVisibleInListing')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.price;
    if (value != null) {
      result
        ..add('price')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPriceRangeInput)));
    }
    value = object.minimalPrice;
    if (value != null) {
      result
        ..add('minimalPrice')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPriceRangeInput)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    value = object.productTypes;
    if (value != null) {
      result
        ..add('productTypes')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.giftCard;
    if (value != null) {
      result
        ..add('giftCard')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.hasPreorderedVariants;
    if (value != null) {
      result
        ..add('hasPreorderedVariants')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProductFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'hasCategory':
          result.hasCategory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeInput)]))!
              as BuiltList<Object?>);
          break;
        case 'stockAvailability':
          result.stockAvailability = serializers.deserialize(value,
                  specifiedType: const FullType(GStockAvailability))
              as GStockAvailability?;
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GProductStockFilterInput))!
              as GProductStockFilterInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'publishedFrom':
          result.publishedFrom.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'isAvailable':
          result.isAvailable = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'availableFrom':
          result.availableFrom.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'isVisibleInListing':
          result.isVisibleInListing = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'price':
          result.price.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPriceRangeInput))!
              as GPriceRangeInput);
          break;
        case 'minimalPrice':
          result.minimalPrice.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPriceRangeInput))!
              as GPriceRangeInput);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
        case 'productTypes':
          result.productTypes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'giftCard':
          result.giftCard = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'hasPreorderedVariants':
          result.hasPreorderedVariants = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductInputSerializer implements StructuredSerializer<GProductInput> {
  @override
  final Iterable<Type> types = const [GProductInput, _$GProductInput];
  @override
  final String wireName = 'GProductInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GProductInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.attributes;
    if (value != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.chargeTaxes;
    if (value != null) {
      result
        ..add('chargeTaxes')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.collections;
    if (value != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.taxCode;
    if (value != null) {
      result
        ..add('taxCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.seo;
    if (value != null) {
      result
        ..add('seo')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GSeoInput)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightScalar)));
    }
    value = object.rating;
    if (value != null) {
      result
        ..add('rating')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GProductInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))!
              as BuiltList<Object?>);
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'chargeTaxes':
          result.chargeTaxes = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'description':
          result.description.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'taxCode':
          result.taxCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'seo':
          result.seo.replace(serializers.deserialize(value,
              specifiedType: const FullType(GSeoInput))! as GSeoInput);
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar))! as GWeightScalar);
          break;
        case 'rating':
          result.rating = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductMediaCreateInputSerializer
    implements StructuredSerializer<GProductMediaCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProductMediaCreateInput,
    _$GProductMediaCreateInput
  ];
  @override
  final String wireName = 'GProductMediaCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductMediaCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'product',
      serializers.serialize(object.product,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.image;
    if (value != null) {
      result
        ..add('image')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUpload)));
    }
    value = object.mediaUrl;
    if (value != null) {
      result
        ..add('mediaUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProductMediaCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductMediaCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'alt':
          result.alt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'image':
          result.image.replace(serializers.deserialize(value,
              specifiedType: const FullType(GUpload))! as GUpload);
          break;
        case 'product':
          result.product = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'mediaUrl':
          result.mediaUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductMediaTypeSerializer
    implements PrimitiveSerializer<GProductMediaType> {
  @override
  final Iterable<Type> types = const <Type>[GProductMediaType];
  @override
  final String wireName = 'GProductMediaType';

  @override
  Object serialize(Serializers serializers, GProductMediaType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductMediaType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductMediaType.valueOf(serialized as String);
}

class _$GProductMediaUpdateInputSerializer
    implements StructuredSerializer<GProductMediaUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GProductMediaUpdateInput,
    _$GProductMediaUpdateInput
  ];
  @override
  final String wireName = 'GProductMediaUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductMediaUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.alt;
    if (value != null) {
      result
        ..add('alt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProductMediaUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductMediaUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'alt':
          result.alt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductOrderSerializer implements StructuredSerializer<GProductOrder> {
  @override
  final Iterable<Type> types = const [GProductOrder, _$GProductOrder];
  @override
  final String wireName = 'GProductOrder';

  @override
  Iterable<Object?> serialize(Serializers serializers, GProductOrder object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
    ];
    Object? value;
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.attributeId;
    if (value != null) {
      result
        ..add('attributeId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.field;
    if (value != null) {
      result
        ..add('field')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProductOrderField)));
    }
    return result;
  }

  @override
  GProductOrder deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductOrderBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'attributeId':
          result.attributeId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GProductOrderField))
              as GProductOrderField?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductOrderFieldSerializer
    implements PrimitiveSerializer<GProductOrderField> {
  @override
  final Iterable<Type> types = const <Type>[GProductOrderField];
  @override
  final String wireName = 'GProductOrderField';

  @override
  Object serialize(Serializers serializers, GProductOrderField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductOrderField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductOrderField.valueOf(serialized as String);
}

class _$GProductStockFilterInputSerializer
    implements StructuredSerializer<GProductStockFilterInput> {
  @override
  final Iterable<Type> types = const [
    GProductStockFilterInput,
    _$GProductStockFilterInput
  ];
  @override
  final String wireName = 'GProductStockFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductStockFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.warehouseIds;
    if (value != null) {
      result
        ..add('warehouseIds')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.quantity;
    if (value != null) {
      result
        ..add('quantity')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIntRangeInput)));
    }
    return result;
  }

  @override
  GProductStockFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductStockFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'warehouseIds':
          result.warehouseIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'quantity':
          result.quantity.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIntRangeInput))!
              as GIntRangeInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductTypeConfigurableSerializer
    implements PrimitiveSerializer<GProductTypeConfigurable> {
  @override
  final Iterable<Type> types = const <Type>[GProductTypeConfigurable];
  @override
  final String wireName = 'GProductTypeConfigurable';

  @override
  Object serialize(Serializers serializers, GProductTypeConfigurable object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductTypeConfigurable deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductTypeConfigurable.valueOf(serialized as String);
}

class _$GProductTypeEnumSerializer
    implements PrimitiveSerializer<GProductTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GProductTypeEnum];
  @override
  final String wireName = 'GProductTypeEnum';

  @override
  Object serialize(Serializers serializers, GProductTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductTypeEnum.valueOf(serialized as String);
}

class _$GProductTypeFilterInputSerializer
    implements StructuredSerializer<GProductTypeFilterInput> {
  @override
  final Iterable<Type> types = const [
    GProductTypeFilterInput,
    _$GProductTypeFilterInput
  ];
  @override
  final String wireName = 'GProductTypeFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductTypeFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.configurable;
    if (value != null) {
      result
        ..add('configurable')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProductTypeConfigurable)));
    }
    value = object.productType;
    if (value != null) {
      result
        ..add('productType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProductTypeEnum)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.kind;
    if (value != null) {
      result
        ..add('kind')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProductTypeKindEnum)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GProductTypeFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductTypeFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'configurable':
          result.configurable = serializers.deserialize(value,
                  specifiedType: const FullType(GProductTypeConfigurable))
              as GProductTypeConfigurable?;
          break;
        case 'productType':
          result.productType = serializers.deserialize(value,
                  specifiedType: const FullType(GProductTypeEnum))
              as GProductTypeEnum?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'kind':
          result.kind = serializers.deserialize(value,
                  specifiedType: const FullType(GProductTypeKindEnum))
              as GProductTypeKindEnum?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductTypeInputSerializer
    implements StructuredSerializer<GProductTypeInput> {
  @override
  final Iterable<Type> types = const [GProductTypeInput, _$GProductTypeInput];
  @override
  final String wireName = 'GProductTypeInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GProductTypeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.kind;
    if (value != null) {
      result
        ..add('kind')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GProductTypeKindEnum)));
    }
    value = object.hasVariants;
    if (value != null) {
      result
        ..add('hasVariants')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.productAttributes;
    if (value != null) {
      result
        ..add('productAttributes')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.variantAttributes;
    if (value != null) {
      result
        ..add('variantAttributes')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.isShippingRequired;
    if (value != null) {
      result
        ..add('isShippingRequired')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.isDigital;
    if (value != null) {
      result
        ..add('isDigital')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightScalar)));
    }
    value = object.taxCode;
    if (value != null) {
      result
        ..add('taxCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GProductTypeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductTypeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'kind':
          result.kind = serializers.deserialize(value,
                  specifiedType: const FullType(GProductTypeKindEnum))
              as GProductTypeKindEnum?;
          break;
        case 'hasVariants':
          result.hasVariants = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'productAttributes':
          result.productAttributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'variantAttributes':
          result.variantAttributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'isShippingRequired':
          result.isShippingRequired = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'isDigital':
          result.isDigital = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar))! as GWeightScalar);
          break;
        case 'taxCode':
          result.taxCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductTypeKindEnumSerializer
    implements PrimitiveSerializer<GProductTypeKindEnum> {
  @override
  final Iterable<Type> types = const <Type>[GProductTypeKindEnum];
  @override
  final String wireName = 'GProductTypeKindEnum';

  @override
  Object serialize(Serializers serializers, GProductTypeKindEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductTypeKindEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductTypeKindEnum.valueOf(serialized as String);
}

class _$GProductTypeSortFieldSerializer
    implements PrimitiveSerializer<GProductTypeSortField> {
  @override
  final Iterable<Type> types = const <Type>[GProductTypeSortField];
  @override
  final String wireName = 'GProductTypeSortField';

  @override
  Object serialize(Serializers serializers, GProductTypeSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductTypeSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductTypeSortField.valueOf(serialized as String);
}

class _$GProductTypeSortingInputSerializer
    implements StructuredSerializer<GProductTypeSortingInput> {
  @override
  final Iterable<Type> types = const [
    GProductTypeSortingInput,
    _$GProductTypeSortingInput
  ];
  @override
  final String wireName = 'GProductTypeSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductTypeSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GProductTypeSortField)),
    ];

    return result;
  }

  @override
  GProductTypeSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductTypeSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GProductTypeSortField))!
              as GProductTypeSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantBulkCreateInputSerializer
    implements StructuredSerializer<GProductVariantBulkCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantBulkCreateInput,
    _$GProductVariantBulkCreateInput
  ];
  @override
  final String wireName = 'GProductVariantBulkCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductVariantBulkCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'attributes',
      serializers.serialize(object.attributes,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GBulkAttributeValueInput)])),
    ];
    Object? value;
    value = object.sku;
    if (value != null) {
      result
        ..add('sku')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.trackInventory;
    if (value != null) {
      result
        ..add('trackInventory')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightScalar)));
    }
    value = object.preorder;
    if (value != null) {
      result
        ..add('preorder')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPreorderSettingsInput)));
    }
    value = object.quantityLimitPerCustomer;
    if (value != null) {
      result
        ..add('quantityLimitPerCustomer')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.stocks;
    if (value != null) {
      result
        ..add('stocks')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GStockInput)])));
    }
    value = object.channelListings;
    if (value != null) {
      result
        ..add('channelListings')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GProductVariantChannelListingAddInput)
            ])));
    }
    return result;
  }

  @override
  GProductVariantBulkCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantBulkCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GBulkAttributeValueInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'sku':
          result.sku = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'trackInventory':
          result.trackInventory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar))! as GWeightScalar);
          break;
        case 'preorder':
          result.preorder.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPreorderSettingsInput))!
              as GPreorderSettingsInput);
          break;
        case 'quantityLimitPerCustomer':
          result.quantityLimitPerCustomer = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GStockInput)]))!
              as BuiltList<Object?>);
          break;
        case 'channelListings':
          result.channelListings.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GProductVariantChannelListingAddInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantChannelListingAddInputSerializer
    implements StructuredSerializer<GProductVariantChannelListingAddInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantChannelListingAddInput,
    _$GProductVariantChannelListingAddInput
  ];
  @override
  final String wireName = 'GProductVariantChannelListingAddInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductVariantChannelListingAddInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'channelId',
      serializers.serialize(object.channelId,
          specifiedType: const FullType(String)),
      'price',
      serializers.serialize(object.price,
          specifiedType: const FullType(GPositiveDecimal)),
    ];
    Object? value;
    value = object.costPrice;
    if (value != null) {
      result
        ..add('costPrice')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.preorderThreshold;
    if (value != null) {
      result
        ..add('preorderThreshold')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GProductVariantChannelListingAddInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantChannelListingAddInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'price':
          result.price.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'costPrice':
          result.costPrice.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'preorderThreshold':
          result.preorderThreshold = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantCreateInputSerializer
    implements StructuredSerializer<GProductVariantCreateInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantCreateInput,
    _$GProductVariantCreateInput
  ];
  @override
  final String wireName = 'GProductVariantCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductVariantCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'attributes',
      serializers.serialize(object.attributes,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GAttributeValueInput)])),
      'product',
      serializers.serialize(object.product,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.sku;
    if (value != null) {
      result
        ..add('sku')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.trackInventory;
    if (value != null) {
      result
        ..add('trackInventory')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightScalar)));
    }
    value = object.preorder;
    if (value != null) {
      result
        ..add('preorder')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPreorderSettingsInput)));
    }
    value = object.quantityLimitPerCustomer;
    if (value != null) {
      result
        ..add('quantityLimitPerCustomer')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.stocks;
    if (value != null) {
      result
        ..add('stocks')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GStockInput)])));
    }
    return result;
  }

  @override
  GProductVariantCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))!
              as BuiltList<Object?>);
          break;
        case 'sku':
          result.sku = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'trackInventory':
          result.trackInventory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar))! as GWeightScalar);
          break;
        case 'preorder':
          result.preorder.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPreorderSettingsInput))!
              as GPreorderSettingsInput);
          break;
        case 'quantityLimitPerCustomer':
          result.quantityLimitPerCustomer = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'product':
          result.product = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'stocks':
          result.stocks.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GStockInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantFilterInputSerializer
    implements StructuredSerializer<GProductVariantFilterInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantFilterInput,
    _$GProductVariantFilterInput
  ];
  @override
  final String wireName = 'GProductVariantFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductVariantFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.sku;
    if (value != null) {
      result
        ..add('sku')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.isPreorder;
    if (value != null) {
      result
        ..add('isPreorder')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    return result;
  }

  @override
  GProductVariantFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'sku':
          result.sku.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'isPreorder':
          result.isPreorder = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantInputSerializer
    implements StructuredSerializer<GProductVariantInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantInput,
    _$GProductVariantInput
  ];
  @override
  final String wireName = 'GProductVariantInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductVariantInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.attributes;
    if (value != null) {
      result
        ..add('attributes')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GAttributeValueInput)])));
    }
    value = object.sku;
    if (value != null) {
      result
        ..add('sku')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.trackInventory;
    if (value != null) {
      result
        ..add('trackInventory')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.weight;
    if (value != null) {
      result
        ..add('weight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightScalar)));
    }
    value = object.preorder;
    if (value != null) {
      result
        ..add('preorder')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPreorderSettingsInput)));
    }
    value = object.quantityLimitPerCustomer;
    if (value != null) {
      result
        ..add('quantityLimitPerCustomer')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GProductVariantInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'attributes':
          result.attributes.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GAttributeValueInput)]))!
              as BuiltList<Object?>);
          break;
        case 'sku':
          result.sku = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'trackInventory':
          result.trackInventory = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'weight':
          result.weight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar))! as GWeightScalar);
          break;
        case 'preorder':
          result.preorder.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPreorderSettingsInput))!
              as GPreorderSettingsInput);
          break;
        case 'quantityLimitPerCustomer':
          result.quantityLimitPerCustomer = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GProductVariantSortFieldSerializer
    implements PrimitiveSerializer<GProductVariantSortField> {
  @override
  final Iterable<Type> types = const <Type>[GProductVariantSortField];
  @override
  final String wireName = 'GProductVariantSortField';

  @override
  Object serialize(Serializers serializers, GProductVariantSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GProductVariantSortField deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProductVariantSortField.valueOf(serialized as String);
}

class _$GProductVariantSortingInputSerializer
    implements StructuredSerializer<GProductVariantSortingInput> {
  @override
  final Iterable<Type> types = const [
    GProductVariantSortingInput,
    _$GProductVariantSortingInput
  ];
  @override
  final String wireName = 'GProductVariantSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GProductVariantSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GProductVariantSortField)),
    ];

    return result;
  }

  @override
  GProductVariantSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GProductVariantSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GProductVariantSortField))!
              as GProductVariantSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GPublishableChannelListingInputSerializer
    implements StructuredSerializer<GPublishableChannelListingInput> {
  @override
  final Iterable<Type> types = const [
    GPublishableChannelListingInput,
    _$GPublishableChannelListingInput
  ];
  @override
  final String wireName = 'GPublishableChannelListingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GPublishableChannelListingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'channelId',
      serializers.serialize(object.channelId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.isPublished;
    if (value != null) {
      result
        ..add('isPublished')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.publicationDate;
    if (value != null) {
      result
        ..add('publicationDate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(GDate)));
    }
    value = object.publishedAt;
    if (value != null) {
      result
        ..add('publishedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GPublishableChannelListingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPublishableChannelListingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'isPublished':
          result.isPublished = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'publicationDate':
          result.publicationDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDate))! as GDate);
          break;
        case 'publishedAt':
          result.publishedAt.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GReorderInputSerializer implements StructuredSerializer<GReorderInput> {
  @override
  final Iterable<Type> types = const [GReorderInput, _$GReorderInput];
  @override
  final String wireName = 'GReorderInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GReorderInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.sortOrder;
    if (value != null) {
      result
        ..add('sortOrder')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GReorderInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReorderInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sortOrder':
          result.sortOrder = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GReportingPeriodSerializer
    implements PrimitiveSerializer<GReportingPeriod> {
  @override
  final Iterable<Type> types = const <Type>[GReportingPeriod];
  @override
  final String wireName = 'GReportingPeriod';

  @override
  Object serialize(Serializers serializers, GReportingPeriod object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GReportingPeriod deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GReportingPeriod.valueOf(serialized as String);
}

class _$GSaleChannelListingAddInputSerializer
    implements StructuredSerializer<GSaleChannelListingAddInput> {
  @override
  final Iterable<Type> types = const [
    GSaleChannelListingAddInput,
    _$GSaleChannelListingAddInput
  ];
  @override
  final String wireName = 'GSaleChannelListingAddInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSaleChannelListingAddInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'channelId',
      serializers.serialize(object.channelId,
          specifiedType: const FullType(String)),
      'discountValue',
      serializers.serialize(object.discountValue,
          specifiedType: const FullType(GPositiveDecimal)),
    ];

    return result;
  }

  @override
  GSaleChannelListingAddInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaleChannelListingAddInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'discountValue':
          result.discountValue.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
      }
    }

    return result.build();
  }
}

class _$GSaleChannelListingInputSerializer
    implements StructuredSerializer<GSaleChannelListingInput> {
  @override
  final Iterable<Type> types = const [
    GSaleChannelListingInput,
    _$GSaleChannelListingInput
  ];
  @override
  final String wireName = 'GSaleChannelListingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSaleChannelListingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.addChannels;
    if (value != null) {
      result
        ..add('addChannels')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GSaleChannelListingAddInput)])));
    }
    value = object.removeChannels;
    if (value != null) {
      result
        ..add('removeChannels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GSaleChannelListingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaleChannelListingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'addChannels':
          result.addChannels.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GSaleChannelListingAddInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'removeChannels':
          result.removeChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GSaleFilterInputSerializer
    implements StructuredSerializer<GSaleFilterInput> {
  @override
  final Iterable<Type> types = const [GSaleFilterInput, _$GSaleFilterInput];
  @override
  final String wireName = 'GSaleFilterInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GSaleFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GDiscountStatusEnum)])));
    }
    value = object.saleType;
    if (value != null) {
      result
        ..add('saleType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDiscountValueTypeEnum)));
    }
    value = object.started;
    if (value != null) {
      result
        ..add('started')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.updatedAt;
    if (value != null) {
      result
        ..add('updatedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    return result;
  }

  @override
  GSaleFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaleFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'status':
          result.status.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDiscountStatusEnum)]))!
              as BuiltList<Object?>);
          break;
        case 'saleType':
          result.saleType = serializers.deserialize(value,
                  specifiedType: const FullType(GDiscountValueTypeEnum))
              as GDiscountValueTypeEnum?;
          break;
        case 'started':
          result.started.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'updatedAt':
          result.updatedAt.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GSaleInputSerializer implements StructuredSerializer<GSaleInput> {
  @override
  final Iterable<Type> types = const [GSaleInput, _$GSaleInput];
  @override
  final String wireName = 'GSaleInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GSaleInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDiscountValueTypeEnum)));
    }
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.products;
    if (value != null) {
      result
        ..add('products')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.variants;
    if (value != null) {
      result
        ..add('variants')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.categories;
    if (value != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.collections;
    if (value != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.endDate;
    if (value != null) {
      result
        ..add('endDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    return result;
  }

  @override
  GSaleInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaleInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GDiscountValueTypeEnum))
              as GDiscountValueTypeEnum?;
          break;
        case 'value':
          result.value.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'variants':
          result.variants.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
      }
    }

    return result.build();
  }
}

class _$GSaleSortFieldSerializer
    implements PrimitiveSerializer<GSaleSortField> {
  @override
  final Iterable<Type> types = const <Type>[GSaleSortField];
  @override
  final String wireName = 'GSaleSortField';

  @override
  Object serialize(Serializers serializers, GSaleSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSaleSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSaleSortField.valueOf(serialized as String);
}

class _$GSaleSortingInputSerializer
    implements StructuredSerializer<GSaleSortingInput> {
  @override
  final Iterable<Type> types = const [GSaleSortingInput, _$GSaleSortingInput];
  @override
  final String wireName = 'GSaleSortingInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GSaleSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GSaleSortField)),
    ];
    Object? value;
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSaleSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaleSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GSaleSortField))! as GSaleSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GSaleTypeSerializer implements PrimitiveSerializer<GSaleType> {
  @override
  final Iterable<Type> types = const <Type>[GSaleType];
  @override
  final String wireName = 'GSaleType';

  @override
  Object serialize(Serializers serializers, GSaleType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GSaleType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSaleType.valueOf(serialized as String);
}

class _$GSeoInputSerializer implements StructuredSerializer<GSeoInput> {
  @override
  final Iterable<Type> types = const [GSeoInput, _$GSeoInput];
  @override
  final String wireName = 'GSeoInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GSeoInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.title;
    if (value != null) {
      result
        ..add('title')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSeoInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSeoInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingErrorCodeSerializer
    implements PrimitiveSerializer<GShippingErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GShippingErrorCode];
  @override
  final String wireName = 'GShippingErrorCode';

  @override
  Object serialize(Serializers serializers, GShippingErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GShippingErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GShippingErrorCode.valueOf(serialized as String);
}

class _$GShippingMethodChannelListingAddInputSerializer
    implements StructuredSerializer<GShippingMethodChannelListingAddInput> {
  @override
  final Iterable<Type> types = const [
    GShippingMethodChannelListingAddInput,
    _$GShippingMethodChannelListingAddInput
  ];
  @override
  final String wireName = 'GShippingMethodChannelListingAddInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingMethodChannelListingAddInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'channelId',
      serializers.serialize(object.channelId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.price;
    if (value != null) {
      result
        ..add('price')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.minimumOrderPrice;
    if (value != null) {
      result
        ..add('minimumOrderPrice')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.maximumOrderPrice;
    if (value != null) {
      result
        ..add('maximumOrderPrice')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    return result;
  }

  @override
  GShippingMethodChannelListingAddInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingMethodChannelListingAddInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'price':
          result.price.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'minimumOrderPrice':
          result.minimumOrderPrice.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'maximumOrderPrice':
          result.maximumOrderPrice.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingMethodChannelListingInputSerializer
    implements StructuredSerializer<GShippingMethodChannelListingInput> {
  @override
  final Iterable<Type> types = const [
    GShippingMethodChannelListingInput,
    _$GShippingMethodChannelListingInput
  ];
  @override
  final String wireName = 'GShippingMethodChannelListingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingMethodChannelListingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.addChannels;
    if (value != null) {
      result
        ..add('addChannels')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GShippingMethodChannelListingAddInput)
            ])));
    }
    value = object.removeChannels;
    if (value != null) {
      result
        ..add('removeChannels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GShippingMethodChannelListingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingMethodChannelListingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'addChannels':
          result.addChannels.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GShippingMethodChannelListingAddInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'removeChannels':
          result.removeChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingMethodTypeEnumSerializer
    implements PrimitiveSerializer<GShippingMethodTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GShippingMethodTypeEnum];
  @override
  final String wireName = 'GShippingMethodTypeEnum';

  @override
  Object serialize(Serializers serializers, GShippingMethodTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GShippingMethodTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GShippingMethodTypeEnum.valueOf(serialized as String);
}

class _$GShippingPostalCodeRulesCreateInputRangeSerializer
    implements StructuredSerializer<GShippingPostalCodeRulesCreateInputRange> {
  @override
  final Iterable<Type> types = const [
    GShippingPostalCodeRulesCreateInputRange,
    _$GShippingPostalCodeRulesCreateInputRange
  ];
  @override
  final String wireName = 'GShippingPostalCodeRulesCreateInputRange';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingPostalCodeRulesCreateInputRange object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'start',
      serializers.serialize(object.start,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.end;
    if (value != null) {
      result
        ..add('end')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GShippingPostalCodeRulesCreateInputRange deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingPostalCodeRulesCreateInputRangeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'start':
          result.start = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'end':
          result.end = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingPriceExcludeProductsInputSerializer
    implements StructuredSerializer<GShippingPriceExcludeProductsInput> {
  @override
  final Iterable<Type> types = const [
    GShippingPriceExcludeProductsInput,
    _$GShippingPriceExcludeProductsInput
  ];
  @override
  final String wireName = 'GShippingPriceExcludeProductsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingPriceExcludeProductsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'products',
      serializers.serialize(object.products,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];

    return result;
  }

  @override
  GShippingPriceExcludeProductsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingPriceExcludeProductsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingPriceInputSerializer
    implements StructuredSerializer<GShippingPriceInput> {
  @override
  final Iterable<Type> types = const [
    GShippingPriceInput,
    _$GShippingPriceInput
  ];
  @override
  final String wireName = 'GShippingPriceInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingPriceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    value = object.minimumOrderWeight;
    if (value != null) {
      result
        ..add('minimumOrderWeight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightScalar)));
    }
    value = object.maximumOrderWeight;
    if (value != null) {
      result
        ..add('maximumOrderWeight')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightScalar)));
    }
    value = object.maximumDeliveryDays;
    if (value != null) {
      result
        ..add('maximumDeliveryDays')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.minimumDeliveryDays;
    if (value != null) {
      result
        ..add('minimumDeliveryDays')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GShippingMethodTypeEnum)));
    }
    value = object.shippingZone;
    if (value != null) {
      result
        ..add('shippingZone')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.addPostalCodeRules;
    if (value != null) {
      result
        ..add('addPostalCodeRules')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList, const [
              const FullType(GShippingPostalCodeRulesCreateInputRange)
            ])));
    }
    value = object.deletePostalCodeRules;
    if (value != null) {
      result
        ..add('deletePostalCodeRules')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.inclusionType;
    if (value != null) {
      result
        ..add('inclusionType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPostalCodeRuleInclusionTypeEnum)));
    }
    return result;
  }

  @override
  GShippingPriceInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingPriceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
        case 'minimumOrderWeight':
          result.minimumOrderWeight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar))! as GWeightScalar);
          break;
        case 'maximumOrderWeight':
          result.maximumOrderWeight.replace(serializers.deserialize(value,
              specifiedType: const FullType(GWeightScalar))! as GWeightScalar);
          break;
        case 'maximumDeliveryDays':
          result.maximumDeliveryDays = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'minimumDeliveryDays':
          result.minimumDeliveryDays = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GShippingMethodTypeEnum))
              as GShippingMethodTypeEnum?;
          break;
        case 'shippingZone':
          result.shippingZone = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'addPostalCodeRules':
          result.addPostalCodeRules.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GShippingPostalCodeRulesCreateInputRange)
              ]))! as BuiltList<Object?>);
          break;
        case 'deletePostalCodeRules':
          result.deletePostalCodeRules.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'inclusionType':
          result.inclusionType = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GPostalCodeRuleInclusionTypeEnum))
              as GPostalCodeRuleInclusionTypeEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingPriceTranslationInputSerializer
    implements StructuredSerializer<GShippingPriceTranslationInput> {
  @override
  final Iterable<Type> types = const [
    GShippingPriceTranslationInput,
    _$GShippingPriceTranslationInput
  ];
  @override
  final String wireName = 'GShippingPriceTranslationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingPriceTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    return result;
  }

  @override
  GShippingPriceTranslationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingPriceTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingZoneCreateInputSerializer
    implements StructuredSerializer<GShippingZoneCreateInput> {
  @override
  final Iterable<Type> types = const [
    GShippingZoneCreateInput,
    _$GShippingZoneCreateInput
  ];
  @override
  final String wireName = 'GShippingZoneCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingZoneCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.countries;
    if (value != null) {
      result
        ..add('countries')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.Gdefault;
    if (value != null) {
      result
        ..add('default')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.addWarehouses;
    if (value != null) {
      result
        ..add('addWarehouses')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.addChannels;
    if (value != null) {
      result
        ..add('addChannels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GShippingZoneCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingZoneCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'countries':
          result.countries.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'default':
          result.Gdefault = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'addWarehouses':
          result.addWarehouses.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'addChannels':
          result.addChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingZoneFilterInputSerializer
    implements StructuredSerializer<GShippingZoneFilterInput> {
  @override
  final Iterable<Type> types = const [
    GShippingZoneFilterInput,
    _$GShippingZoneFilterInput
  ];
  @override
  final String wireName = 'GShippingZoneFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingZoneFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.channels;
    if (value != null) {
      result
        ..add('channels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GShippingZoneFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingZoneFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'channels':
          result.channels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GShippingZoneUpdateInputSerializer
    implements StructuredSerializer<GShippingZoneUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GShippingZoneUpdateInput,
    _$GShippingZoneUpdateInput
  ];
  @override
  final String wireName = 'GShippingZoneUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShippingZoneUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.countries;
    if (value != null) {
      result
        ..add('countries')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.Gdefault;
    if (value != null) {
      result
        ..add('default')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.addWarehouses;
    if (value != null) {
      result
        ..add('addWarehouses')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.addChannels;
    if (value != null) {
      result
        ..add('addChannels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeWarehouses;
    if (value != null) {
      result
        ..add('removeWarehouses')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeChannels;
    if (value != null) {
      result
        ..add('removeChannels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GShippingZoneUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShippingZoneUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'countries':
          result.countries.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'default':
          result.Gdefault = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'addWarehouses':
          result.addWarehouses.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'addChannels':
          result.addChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeWarehouses':
          result.removeWarehouses.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeChannels':
          result.removeChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GShopErrorCodeSerializer
    implements PrimitiveSerializer<GShopErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GShopErrorCode];
  @override
  final String wireName = 'GShopErrorCode';

  @override
  Object serialize(Serializers serializers, GShopErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GShopErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GShopErrorCode.valueOf(serialized as String);
}

class _$GShopSettingsInputSerializer
    implements StructuredSerializer<GShopSettingsInput> {
  @override
  final Iterable<Type> types = const [GShopSettingsInput, _$GShopSettingsInput];
  @override
  final String wireName = 'GShopSettingsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShopSettingsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.headerText;
    if (value != null) {
      result
        ..add('headerText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.includeTaxesInPrices;
    if (value != null) {
      result
        ..add('includeTaxesInPrices')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.displayGrossPrices;
    if (value != null) {
      result
        ..add('displayGrossPrices')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.chargeTaxesOnShipping;
    if (value != null) {
      result
        ..add('chargeTaxesOnShipping')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.trackInventoryByDefault;
    if (value != null) {
      result
        ..add('trackInventoryByDefault')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.defaultWeightUnit;
    if (value != null) {
      result
        ..add('defaultWeightUnit')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GWeightUnitsEnum)));
    }
    value = object.automaticFulfillmentDigitalProducts;
    if (value != null) {
      result
        ..add('automaticFulfillmentDigitalProducts')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.fulfillmentAutoApprove;
    if (value != null) {
      result
        ..add('fulfillmentAutoApprove')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.fulfillmentAllowUnpaid;
    if (value != null) {
      result
        ..add('fulfillmentAllowUnpaid')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.defaultDigitalMaxDownloads;
    if (value != null) {
      result
        ..add('defaultDigitalMaxDownloads')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.defaultDigitalUrlValidDays;
    if (value != null) {
      result
        ..add('defaultDigitalUrlValidDays')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.defaultMailSenderName;
    if (value != null) {
      result
        ..add('defaultMailSenderName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.defaultMailSenderAddress;
    if (value != null) {
      result
        ..add('defaultMailSenderAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.customerSetPasswordUrl;
    if (value != null) {
      result
        ..add('customerSetPasswordUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.reserveStockDurationAnonymousUser;
    if (value != null) {
      result
        ..add('reserveStockDurationAnonymousUser')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.reserveStockDurationAuthenticatedUser;
    if (value != null) {
      result
        ..add('reserveStockDurationAuthenticatedUser')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.limitQuantityPerCheckout;
    if (value != null) {
      result
        ..add('limitQuantityPerCheckout')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GShopSettingsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShopSettingsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'headerText':
          result.headerText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'includeTaxesInPrices':
          result.includeTaxesInPrices = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'displayGrossPrices':
          result.displayGrossPrices = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'chargeTaxesOnShipping':
          result.chargeTaxesOnShipping = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'trackInventoryByDefault':
          result.trackInventoryByDefault = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'defaultWeightUnit':
          result.defaultWeightUnit = serializers.deserialize(value,
                  specifiedType: const FullType(GWeightUnitsEnum))
              as GWeightUnitsEnum?;
          break;
        case 'automaticFulfillmentDigitalProducts':
          result.automaticFulfillmentDigitalProducts = serializers
              .deserialize(value, specifiedType: const FullType(bool)) as bool?;
          break;
        case 'fulfillmentAutoApprove':
          result.fulfillmentAutoApprove = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'fulfillmentAllowUnpaid':
          result.fulfillmentAllowUnpaid = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'defaultDigitalMaxDownloads':
          result.defaultDigitalMaxDownloads = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'defaultDigitalUrlValidDays':
          result.defaultDigitalUrlValidDays = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'defaultMailSenderName':
          result.defaultMailSenderName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'defaultMailSenderAddress':
          result.defaultMailSenderAddress = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'customerSetPasswordUrl':
          result.customerSetPasswordUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'reserveStockDurationAnonymousUser':
          result.reserveStockDurationAnonymousUser = serializers
              .deserialize(value, specifiedType: const FullType(int)) as int?;
          break;
        case 'reserveStockDurationAuthenticatedUser':
          result.reserveStockDurationAuthenticatedUser = serializers
              .deserialize(value, specifiedType: const FullType(int)) as int?;
          break;
        case 'limitQuantityPerCheckout':
          result.limitQuantityPerCheckout = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GShopSettingsTranslationInputSerializer
    implements StructuredSerializer<GShopSettingsTranslationInput> {
  @override
  final Iterable<Type> types = const [
    GShopSettingsTranslationInput,
    _$GShopSettingsTranslationInput
  ];
  @override
  final String wireName = 'GShopSettingsTranslationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GShopSettingsTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.headerText;
    if (value != null) {
      result
        ..add('headerText')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GShopSettingsTranslationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GShopSettingsTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'headerText':
          result.headerText = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSiteDomainInputSerializer
    implements StructuredSerializer<GSiteDomainInput> {
  @override
  final Iterable<Type> types = const [GSiteDomainInput, _$GSiteDomainInput];
  @override
  final String wireName = 'GSiteDomainInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GSiteDomainInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.domain;
    if (value != null) {
      result
        ..add('domain')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSiteDomainInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSiteDomainInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'domain':
          result.domain = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GStaffCreateInputSerializer
    implements StructuredSerializer<GStaffCreateInput> {
  @override
  final Iterable<Type> types = const [GStaffCreateInput, _$GStaffCreateInput];
  @override
  final String wireName = 'GStaffCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GStaffCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.addGroups;
    if (value != null) {
      result
        ..add('addGroups')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.redirectUrl;
    if (value != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GStaffCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStaffCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'addGroups':
          result.addGroups.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GStaffMemberStatusSerializer
    implements PrimitiveSerializer<GStaffMemberStatus> {
  @override
  final Iterable<Type> types = const <Type>[GStaffMemberStatus];
  @override
  final String wireName = 'GStaffMemberStatus';

  @override
  Object serialize(Serializers serializers, GStaffMemberStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GStaffMemberStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GStaffMemberStatus.valueOf(serialized as String);
}

class _$GStaffNotificationRecipientInputSerializer
    implements StructuredSerializer<GStaffNotificationRecipientInput> {
  @override
  final Iterable<Type> types = const [
    GStaffNotificationRecipientInput,
    _$GStaffNotificationRecipientInput
  ];
  @override
  final String wireName = 'GStaffNotificationRecipientInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GStaffNotificationRecipientInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.user;
    if (value != null) {
      result
        ..add('user')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.active;
    if (value != null) {
      result
        ..add('active')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GStaffNotificationRecipientInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStaffNotificationRecipientInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'user':
          result.user = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'active':
          result.active = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GStaffUpdateInputSerializer
    implements StructuredSerializer<GStaffUpdateInput> {
  @override
  final Iterable<Type> types = const [GStaffUpdateInput, _$GStaffUpdateInput];
  @override
  final String wireName = 'GStaffUpdateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GStaffUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.addGroups;
    if (value != null) {
      result
        ..add('addGroups')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.removeGroups;
    if (value != null) {
      result
        ..add('removeGroups')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GStaffUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStaffUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'addGroups':
          result.addGroups.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'removeGroups':
          result.removeGroups.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GStaffUserInputSerializer
    implements StructuredSerializer<GStaffUserInput> {
  @override
  final Iterable<Type> types = const [GStaffUserInput, _$GStaffUserInput];
  @override
  final String wireName = 'GStaffUserInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GStaffUserInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GStaffMemberStatus)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GStaffUserInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStaffUserInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GStaffMemberStatus))
              as GStaffMemberStatus?;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GStockAvailabilitySerializer
    implements PrimitiveSerializer<GStockAvailability> {
  @override
  final Iterable<Type> types = const <Type>[GStockAvailability];
  @override
  final String wireName = 'GStockAvailability';

  @override
  Object serialize(Serializers serializers, GStockAvailability object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GStockAvailability deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GStockAvailability.valueOf(serialized as String);
}

class _$GStockErrorCodeSerializer
    implements PrimitiveSerializer<GStockErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GStockErrorCode];
  @override
  final String wireName = 'GStockErrorCode';

  @override
  Object serialize(Serializers serializers, GStockErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GStockErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GStockErrorCode.valueOf(serialized as String);
}

class _$GStockFilterInputSerializer
    implements StructuredSerializer<GStockFilterInput> {
  @override
  final Iterable<Type> types = const [GStockFilterInput, _$GStockFilterInput];
  @override
  final String wireName = 'GStockFilterInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GStockFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.quantity;
    if (value != null) {
      result
        ..add('quantity')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GStockFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStockFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GStockInputSerializer implements StructuredSerializer<GStockInput> {
  @override
  final Iterable<Type> types = const [GStockInput, _$GStockInput];
  @override
  final String wireName = 'GStockInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GStockInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'warehouse',
      serializers.serialize(object.warehouse,
          specifiedType: const FullType(String)),
      'quantity',
      serializers.serialize(object.quantity,
          specifiedType: const FullType(int)),
    ];

    return result;
  }

  @override
  GStockInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStockInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'warehouse':
          result.warehouse = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'quantity':
          result.quantity = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
      }
    }

    return result.build();
  }
}

class _$GStockSettingsInputSerializer
    implements StructuredSerializer<GStockSettingsInput> {
  @override
  final Iterable<Type> types = const [
    GStockSettingsInput,
    _$GStockSettingsInput
  ];
  @override
  final String wireName = 'GStockSettingsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GStockSettingsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'allocationStrategy',
      serializers.serialize(object.allocationStrategy,
          specifiedType: const FullType(GAllocationStrategyEnum)),
    ];

    return result;
  }

  @override
  GStockSettingsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GStockSettingsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'allocationStrategy':
          result.allocationStrategy = serializers.deserialize(value,
                  specifiedType: const FullType(GAllocationStrategyEnum))!
              as GAllocationStrategyEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GStorePaymentMethodEnumSerializer
    implements PrimitiveSerializer<GStorePaymentMethodEnum> {
  @override
  final Iterable<Type> types = const <Type>[GStorePaymentMethodEnum];
  @override
  final String wireName = 'GStorePaymentMethodEnum';

  @override
  Object serialize(Serializers serializers, GStorePaymentMethodEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GStorePaymentMethodEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GStorePaymentMethodEnum.valueOf(serialized as String);
}

class _$GTaxExemptionManageErrorCodeSerializer
    implements PrimitiveSerializer<GTaxExemptionManageErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GTaxExemptionManageErrorCode];
  @override
  final String wireName = 'GTaxExemptionManageErrorCode';

  @override
  Object serialize(Serializers serializers, GTaxExemptionManageErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTaxExemptionManageErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTaxExemptionManageErrorCode.valueOf(serialized as String);
}

class _$GThumbnailFormatEnumSerializer
    implements PrimitiveSerializer<GThumbnailFormatEnum> {
  @override
  final Iterable<Type> types = const <Type>[GThumbnailFormatEnum];
  @override
  final String wireName = 'GThumbnailFormatEnum';

  @override
  Object serialize(Serializers serializers, GThumbnailFormatEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GThumbnailFormatEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GThumbnailFormatEnum.valueOf(serialized as String);
}

class _$GTimePeriodInputTypeSerializer
    implements StructuredSerializer<GTimePeriodInputType> {
  @override
  final Iterable<Type> types = const [
    GTimePeriodInputType,
    _$GTimePeriodInputType
  ];
  @override
  final String wireName = 'GTimePeriodInputType';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTimePeriodInputType object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'amount',
      serializers.serialize(object.amount, specifiedType: const FullType(int)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GTimePeriodTypeEnum)),
    ];

    return result;
  }

  @override
  GTimePeriodInputType deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTimePeriodInputTypeBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'amount':
          result.amount = serializers.deserialize(value,
              specifiedType: const FullType(int))! as int;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GTimePeriodTypeEnum))!
              as GTimePeriodTypeEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GTimePeriodTypeEnumSerializer
    implements PrimitiveSerializer<GTimePeriodTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GTimePeriodTypeEnum];
  @override
  final String wireName = 'GTimePeriodTypeEnum';

  @override
  Object serialize(Serializers serializers, GTimePeriodTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTimePeriodTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTimePeriodTypeEnum.valueOf(serialized as String);
}

class _$GTransactionActionEnumSerializer
    implements PrimitiveSerializer<GTransactionActionEnum> {
  @override
  final Iterable<Type> types = const <Type>[GTransactionActionEnum];
  @override
  final String wireName = 'GTransactionActionEnum';

  @override
  Object serialize(Serializers serializers, GTransactionActionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTransactionActionEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTransactionActionEnum.valueOf(serialized as String);
}

class _$GTransactionCreateErrorCodeSerializer
    implements PrimitiveSerializer<GTransactionCreateErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GTransactionCreateErrorCode];
  @override
  final String wireName = 'GTransactionCreateErrorCode';

  @override
  Object serialize(Serializers serializers, GTransactionCreateErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTransactionCreateErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTransactionCreateErrorCode.valueOf(serialized as String);
}

class _$GTransactionCreateInputSerializer
    implements StructuredSerializer<GTransactionCreateInput> {
  @override
  final Iterable<Type> types = const [
    GTransactionCreateInput,
    _$GTransactionCreateInput
  ];
  @override
  final String wireName = 'GTransactionCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTransactionCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'status',
      serializers.serialize(object.status,
          specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.reference;
    if (value != null) {
      result
        ..add('reference')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.availableActions;
    if (value != null) {
      result
        ..add('availableActions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GTransactionActionEnum)])));
    }
    value = object.amountAuthorized;
    if (value != null) {
      result
        ..add('amountAuthorized')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoneyInput)));
    }
    value = object.amountCharged;
    if (value != null) {
      result
        ..add('amountCharged')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoneyInput)));
    }
    value = object.amountRefunded;
    if (value != null) {
      result
        ..add('amountRefunded')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoneyInput)));
    }
    value = object.amountVoided;
    if (value != null) {
      result
        ..add('amountVoided')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoneyInput)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GTransactionCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTransactionCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'status':
          result.status = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'reference':
          result.reference = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'availableActions':
          result.availableActions.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GTransactionActionEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'amountAuthorized':
          result.amountAuthorized.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
        case 'amountCharged':
          result.amountCharged.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
        case 'amountRefunded':
          result.amountRefunded.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
        case 'amountVoided':
          result.amountVoided.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GTransactionEventInputSerializer
    implements StructuredSerializer<GTransactionEventInput> {
  @override
  final Iterable<Type> types = const [
    GTransactionEventInput,
    _$GTransactionEventInput
  ];
  @override
  final String wireName = 'GTransactionEventInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTransactionEventInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'status',
      serializers.serialize(object.status,
          specifiedType: const FullType(GTransactionStatus)),
    ];
    Object? value;
    value = object.reference;
    if (value != null) {
      result
        ..add('reference')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTransactionEventInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTransactionEventInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GTransactionStatus))!
              as GTransactionStatus;
          break;
        case 'reference':
          result.reference = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GTransactionKindSerializer
    implements PrimitiveSerializer<GTransactionKind> {
  @override
  final Iterable<Type> types = const <Type>[GTransactionKind];
  @override
  final String wireName = 'GTransactionKind';

  @override
  Object serialize(Serializers serializers, GTransactionKind object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTransactionKind deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTransactionKind.valueOf(serialized as String);
}

class _$GTransactionRequestActionErrorCodeSerializer
    implements PrimitiveSerializer<GTransactionRequestActionErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GTransactionRequestActionErrorCode];
  @override
  final String wireName = 'GTransactionRequestActionErrorCode';

  @override
  Object serialize(
          Serializers serializers, GTransactionRequestActionErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTransactionRequestActionErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTransactionRequestActionErrorCode.valueOf(serialized as String);
}

class _$GTransactionStatusSerializer
    implements PrimitiveSerializer<GTransactionStatus> {
  @override
  final Iterable<Type> types = const <Type>[GTransactionStatus];
  @override
  final String wireName = 'GTransactionStatus';

  @override
  Object serialize(Serializers serializers, GTransactionStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTransactionStatus deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTransactionStatus.valueOf(serialized as String);
}

class _$GTransactionUpdateErrorCodeSerializer
    implements PrimitiveSerializer<GTransactionUpdateErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GTransactionUpdateErrorCode];
  @override
  final String wireName = 'GTransactionUpdateErrorCode';

  @override
  Object serialize(Serializers serializers, GTransactionUpdateErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTransactionUpdateErrorCode deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTransactionUpdateErrorCode.valueOf(serialized as String);
}

class _$GTransactionUpdateInputSerializer
    implements StructuredSerializer<GTransactionUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GTransactionUpdateInput,
    _$GTransactionUpdateInput
  ];
  @override
  final String wireName = 'GTransactionUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTransactionUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.reference;
    if (value != null) {
      result
        ..add('reference')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.availableActions;
    if (value != null) {
      result
        ..add('availableActions')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GTransactionActionEnum)])));
    }
    value = object.amountAuthorized;
    if (value != null) {
      result
        ..add('amountAuthorized')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoneyInput)));
    }
    value = object.amountCharged;
    if (value != null) {
      result
        ..add('amountCharged')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoneyInput)));
    }
    value = object.amountRefunded;
    if (value != null) {
      result
        ..add('amountRefunded')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoneyInput)));
    }
    value = object.amountVoided;
    if (value != null) {
      result
        ..add('amountVoided')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GMoneyInput)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    value = object.privateMetadata;
    if (value != null) {
      result
        ..add('privateMetadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataInput)])));
    }
    return result;
  }

  @override
  GTransactionUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTransactionUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'status':
          result.status = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'reference':
          result.reference = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'availableActions':
          result.availableActions.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GTransactionActionEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'amountAuthorized':
          result.amountAuthorized.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
        case 'amountCharged':
          result.amountCharged.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
        case 'amountRefunded':
          result.amountRefunded.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
        case 'amountVoided':
          result.amountVoided.replace(serializers.deserialize(value,
              specifiedType: const FullType(GMoneyInput))! as GMoneyInput);
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
        case 'privateMetadata':
          result.privateMetadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GTranslatableKindsSerializer
    implements PrimitiveSerializer<GTranslatableKinds> {
  @override
  final Iterable<Type> types = const <Type>[GTranslatableKinds];
  @override
  final String wireName = 'GTranslatableKinds';

  @override
  Object serialize(Serializers serializers, GTranslatableKinds object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTranslatableKinds deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTranslatableKinds.valueOf(serialized as String);
}

class _$GTranslationErrorCodeSerializer
    implements PrimitiveSerializer<GTranslationErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GTranslationErrorCode];
  @override
  final String wireName = 'GTranslationErrorCode';

  @override
  Object serialize(Serializers serializers, GTranslationErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GTranslationErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTranslationErrorCode.valueOf(serialized as String);
}

class _$GTranslationInputSerializer
    implements StructuredSerializer<GTranslationInput> {
  @override
  final Iterable<Type> types = const [GTranslationInput, _$GTranslationInput];
  @override
  final String wireName = 'GTranslationInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GTranslationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.seoTitle;
    if (value != null) {
      result
        ..add('seoTitle')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.seoDescription;
    if (value != null) {
      result
        ..add('seoDescription')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.description;
    if (value != null) {
      result
        ..add('description')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GJSONString)));
    }
    return result;
  }

  @override
  GTranslationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTranslationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'seoTitle':
          result.seoTitle = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'seoDescription':
          result.seoDescription = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'description':
          result.description.replace(serializers.deserialize(value,
              specifiedType: const FullType(GJSONString))! as GJSONString);
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdateInvoiceInputSerializer
    implements StructuredSerializer<GUpdateInvoiceInput> {
  @override
  final Iterable<Type> types = const [
    GUpdateInvoiceInput,
    _$GUpdateInvoiceInput
  ];
  @override
  final String wireName = 'GUpdateInvoiceInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdateInvoiceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.number;
    if (value != null) {
      result
        ..add('number')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.url;
    if (value != null) {
      result
        ..add('url')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUpdateInvoiceInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdateInvoiceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'number':
          result.number = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'url':
          result.url = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUploadErrorCodeSerializer
    implements PrimitiveSerializer<GUploadErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GUploadErrorCode];
  @override
  final String wireName = 'GUploadErrorCode';

  @override
  Object serialize(Serializers serializers, GUploadErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GUploadErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GUploadErrorCode.valueOf(serialized as String);
}

class _$GUserCreateInputSerializer
    implements StructuredSerializer<GUserCreateInput> {
  @override
  final Iterable<Type> types = const [GUserCreateInput, _$GUserCreateInput];
  @override
  final String wireName = 'GUserCreateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.defaultBillingAddress;
    if (value != null) {
      result
        ..add('defaultBillingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.defaultShippingAddress;
    if (value != null) {
      result
        ..add('defaultShippingAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.note;
    if (value != null) {
      result
        ..add('note')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.languageCode;
    if (value != null) {
      result
        ..add('languageCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GLanguageCodeEnum)));
    }
    value = object.redirectUrl;
    if (value != null) {
      result
        ..add('redirectUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GUserCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'defaultBillingAddress':
          result.defaultBillingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'defaultShippingAddress':
          result.defaultShippingAddress.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'note':
          result.note = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'languageCode':
          result.languageCode = serializers.deserialize(value,
                  specifiedType: const FullType(GLanguageCodeEnum))
              as GLanguageCodeEnum?;
          break;
        case 'redirectUrl':
          result.redirectUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GUserSortFieldSerializer
    implements PrimitiveSerializer<GUserSortField> {
  @override
  final Iterable<Type> types = const <Type>[GUserSortField];
  @override
  final String wireName = 'GUserSortField';

  @override
  Object serialize(Serializers serializers, GUserSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GUserSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GUserSortField.valueOf(serialized as String);
}

class _$GUserSortingInputSerializer
    implements StructuredSerializer<GUserSortingInput> {
  @override
  final Iterable<Type> types = const [GUserSortingInput, _$GUserSortingInput];
  @override
  final String wireName = 'GUserSortingInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GUserSortField)),
    ];

    return result;
  }

  @override
  GUserSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
              specifiedType: const FullType(GUserSortField))! as GUserSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GVariantAttributeScopeSerializer
    implements PrimitiveSerializer<GVariantAttributeScope> {
  @override
  final Iterable<Type> types = const <Type>[GVariantAttributeScope];
  @override
  final String wireName = 'GVariantAttributeScope';

  @override
  Object serialize(Serializers serializers, GVariantAttributeScope object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVariantAttributeScope deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVariantAttributeScope.valueOf(serialized as String);
}

class _$GVolumeUnitsEnumSerializer
    implements PrimitiveSerializer<GVolumeUnitsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GVolumeUnitsEnum];
  @override
  final String wireName = 'GVolumeUnitsEnum';

  @override
  Object serialize(Serializers serializers, GVolumeUnitsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVolumeUnitsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVolumeUnitsEnum.valueOf(serialized as String);
}

class _$GVoucherChannelListingAddInputSerializer
    implements StructuredSerializer<GVoucherChannelListingAddInput> {
  @override
  final Iterable<Type> types = const [
    GVoucherChannelListingAddInput,
    _$GVoucherChannelListingAddInput
  ];
  @override
  final String wireName = 'GVoucherChannelListingAddInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVoucherChannelListingAddInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'channelId',
      serializers.serialize(object.channelId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.discountValue;
    if (value != null) {
      result
        ..add('discountValue')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    value = object.minAmountSpent;
    if (value != null) {
      result
        ..add('minAmountSpent')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPositiveDecimal)));
    }
    return result;
  }

  @override
  GVoucherChannelListingAddInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVoucherChannelListingAddInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'channelId':
          result.channelId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'discountValue':
          result.discountValue.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
        case 'minAmountSpent':
          result.minAmountSpent.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPositiveDecimal))!
              as GPositiveDecimal);
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherChannelListingInputSerializer
    implements StructuredSerializer<GVoucherChannelListingInput> {
  @override
  final Iterable<Type> types = const [
    GVoucherChannelListingInput,
    _$GVoucherChannelListingInput
  ];
  @override
  final String wireName = 'GVoucherChannelListingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVoucherChannelListingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.addChannels;
    if (value != null) {
      result
        ..add('addChannels')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GVoucherChannelListingAddInput)])));
    }
    value = object.removeChannels;
    if (value != null) {
      result
        ..add('removeChannels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GVoucherChannelListingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVoucherChannelListingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'addChannels':
          result.addChannels.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GVoucherChannelListingAddInput)
              ]))! as BuiltList<Object?>);
          break;
        case 'removeChannels':
          result.removeChannels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherDiscountTypeSerializer
    implements PrimitiveSerializer<GVoucherDiscountType> {
  @override
  final Iterable<Type> types = const <Type>[GVoucherDiscountType];
  @override
  final String wireName = 'GVoucherDiscountType';

  @override
  Object serialize(Serializers serializers, GVoucherDiscountType object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVoucherDiscountType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVoucherDiscountType.valueOf(serialized as String);
}

class _$GVoucherFilterInputSerializer
    implements StructuredSerializer<GVoucherFilterInput> {
  @override
  final Iterable<Type> types = const [
    GVoucherFilterInput,
    _$GVoucherFilterInput
  ];
  @override
  final String wireName = 'GVoucherFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVoucherFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GDiscountStatusEnum)])));
    }
    value = object.timesUsed;
    if (value != null) {
      result
        ..add('timesUsed')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GIntRangeInput)));
    }
    value = object.discountType;
    if (value != null) {
      result
        ..add('discountType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GVoucherDiscountType)])));
    }
    value = object.started;
    if (value != null) {
      result
        ..add('started')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTimeRangeInput)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.metadata;
    if (value != null) {
      result
        ..add('metadata')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMetadataFilter)])));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GVoucherFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVoucherFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'status':
          result.status.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDiscountStatusEnum)]))!
              as BuiltList<Object?>);
          break;
        case 'timesUsed':
          result.timesUsed.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GIntRangeInput))!
              as GIntRangeInput);
          break;
        case 'discountType':
          result.discountType.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GVoucherDiscountType)]))!
              as BuiltList<Object?>);
          break;
        case 'started':
          result.started.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDateTimeRangeInput))!
              as GDateTimeRangeInput);
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metadata':
          result.metadata.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetadataFilter)]))!
              as BuiltList<Object?>);
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherInputSerializer implements StructuredSerializer<GVoucherInput> {
  @override
  final Iterable<Type> types = const [GVoucherInput, _$GVoucherInput];
  @override
  final String wireName = 'GVoucherInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GVoucherInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVoucherTypeEnum)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.code;
    if (value != null) {
      result
        ..add('code')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.endDate;
    if (value != null) {
      result
        ..add('endDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDateTime)));
    }
    value = object.discountValueType;
    if (value != null) {
      result
        ..add('discountValueType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDiscountValueTypeEnum)));
    }
    value = object.products;
    if (value != null) {
      result
        ..add('products')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.variants;
    if (value != null) {
      result
        ..add('variants')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.collections;
    if (value != null) {
      result
        ..add('collections')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.categories;
    if (value != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.minCheckoutItemsQuantity;
    if (value != null) {
      result
        ..add('minCheckoutItemsQuantity')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.countries;
    if (value != null) {
      result
        ..add('countries')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.applyOncePerOrder;
    if (value != null) {
      result
        ..add('applyOncePerOrder')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.applyOncePerCustomer;
    if (value != null) {
      result
        ..add('applyOncePerCustomer')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.onlyForStaff;
    if (value != null) {
      result
        ..add('onlyForStaff')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.usageLimit;
    if (value != null) {
      result
        ..add('usageLimit')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GVoucherInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVoucherInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GVoucherTypeEnum))
              as GVoucherTypeEnum?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDate':
          result.startDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'endDate':
          result.endDate.replace(serializers.deserialize(value,
              specifiedType: const FullType(GDateTime))! as GDateTime);
          break;
        case 'discountValueType':
          result.discountValueType = serializers.deserialize(value,
                  specifiedType: const FullType(GDiscountValueTypeEnum))
              as GDiscountValueTypeEnum?;
          break;
        case 'products':
          result.products.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'variants':
          result.variants.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'collections':
          result.collections.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'minCheckoutItemsQuantity':
          result.minCheckoutItemsQuantity = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'countries':
          result.countries.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'applyOncePerOrder':
          result.applyOncePerOrder = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'applyOncePerCustomer':
          result.applyOncePerCustomer = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'onlyForStaff':
          result.onlyForStaff = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'usageLimit':
          result.usageLimit = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherSortFieldSerializer
    implements PrimitiveSerializer<GVoucherSortField> {
  @override
  final Iterable<Type> types = const <Type>[GVoucherSortField];
  @override
  final String wireName = 'GVoucherSortField';

  @override
  Object serialize(Serializers serializers, GVoucherSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVoucherSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVoucherSortField.valueOf(serialized as String);
}

class _$GVoucherSortingInputSerializer
    implements StructuredSerializer<GVoucherSortingInput> {
  @override
  final Iterable<Type> types = const [
    GVoucherSortingInput,
    _$GVoucherSortingInput
  ];
  @override
  final String wireName = 'GVoucherSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVoucherSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GVoucherSortField)),
    ];
    Object? value;
    value = object.channel;
    if (value != null) {
      result
        ..add('channel')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVoucherSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVoucherSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'channel':
          result.channel = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GVoucherSortField))!
              as GVoucherSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GVoucherTypeEnumSerializer
    implements PrimitiveSerializer<GVoucherTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GVoucherTypeEnum];
  @override
  final String wireName = 'GVoucherTypeEnum';

  @override
  Object serialize(Serializers serializers, GVoucherTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GVoucherTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVoucherTypeEnum.valueOf(serialized as String);
}

class _$GWarehouseClickAndCollectOptionEnumSerializer
    implements PrimitiveSerializer<GWarehouseClickAndCollectOptionEnum> {
  @override
  final Iterable<Type> types = const <Type>[
    GWarehouseClickAndCollectOptionEnum
  ];
  @override
  final String wireName = 'GWarehouseClickAndCollectOptionEnum';

  @override
  Object serialize(
          Serializers serializers, GWarehouseClickAndCollectOptionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWarehouseClickAndCollectOptionEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWarehouseClickAndCollectOptionEnum.valueOf(serialized as String);
}

class _$GWarehouseCreateInputSerializer
    implements StructuredSerializer<GWarehouseCreateInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseCreateInput,
    _$GWarehouseCreateInput
  ];
  @override
  final String wireName = 'GWarehouseCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWarehouseCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'address',
      serializers.serialize(object.address,
          specifiedType: const FullType(GAddressInput)),
    ];
    Object? value;
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.shippingZones;
    if (value != null) {
      result
        ..add('shippingZones')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GWarehouseCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'address':
          result.address.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'shippingZones':
          result.shippingZones.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GWarehouseErrorCodeSerializer
    implements PrimitiveSerializer<GWarehouseErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GWarehouseErrorCode];
  @override
  final String wireName = 'GWarehouseErrorCode';

  @override
  Object serialize(Serializers serializers, GWarehouseErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWarehouseErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWarehouseErrorCode.valueOf(serialized as String);
}

class _$GWarehouseFilterInputSerializer
    implements StructuredSerializer<GWarehouseFilterInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseFilterInput,
    _$GWarehouseFilterInput
  ];
  @override
  final String wireName = 'GWarehouseFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWarehouseFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.clickAndCollectOption;
    if (value != null) {
      result
        ..add('clickAndCollectOption')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GWarehouseClickAndCollectOptionEnum)));
    }
    value = object.search;
    if (value != null) {
      result
        ..add('search')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.ids;
    if (value != null) {
      result
        ..add('ids')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.isPrivate;
    if (value != null) {
      result
        ..add('isPrivate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.channels;
    if (value != null) {
      result
        ..add('channels')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.slugs;
    if (value != null) {
      result
        ..add('slugs')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GWarehouseFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'clickAndCollectOption':
          result.clickAndCollectOption = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GWarehouseClickAndCollectOptionEnum))
              as GWarehouseClickAndCollectOptionEnum?;
          break;
        case 'search':
          result.search = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'ids':
          result.ids.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'isPrivate':
          result.isPrivate = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'channels':
          result.channels.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'slugs':
          result.slugs.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GWarehouseSortFieldSerializer
    implements PrimitiveSerializer<GWarehouseSortField> {
  @override
  final Iterable<Type> types = const <Type>[GWarehouseSortField];
  @override
  final String wireName = 'GWarehouseSortField';

  @override
  Object serialize(Serializers serializers, GWarehouseSortField object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWarehouseSortField deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWarehouseSortField.valueOf(serialized as String);
}

class _$GWarehouseSortingInputSerializer
    implements StructuredSerializer<GWarehouseSortingInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseSortingInput,
    _$GWarehouseSortingInput
  ];
  @override
  final String wireName = 'GWarehouseSortingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWarehouseSortingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'direction',
      serializers.serialize(object.direction,
          specifiedType: const FullType(GOrderDirection)),
      'field',
      serializers.serialize(object.field,
          specifiedType: const FullType(GWarehouseSortField)),
    ];

    return result;
  }

  @override
  GWarehouseSortingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseSortingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GOrderDirection))!
              as GOrderDirection;
          break;
        case 'field':
          result.field = serializers.deserialize(value,
                  specifiedType: const FullType(GWarehouseSortField))!
              as GWarehouseSortField;
          break;
      }
    }

    return result.build();
  }
}

class _$GWarehouseUpdateInputSerializer
    implements StructuredSerializer<GWarehouseUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GWarehouseUpdateInput,
    _$GWarehouseUpdateInput
  ];
  @override
  final String wireName = 'GWarehouseUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWarehouseUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.slug;
    if (value != null) {
      result
        ..add('slug')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.email;
    if (value != null) {
      result
        ..add('email')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.address;
    if (value != null) {
      result
        ..add('address')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GAddressInput)));
    }
    value = object.clickAndCollectOption;
    if (value != null) {
      result
        ..add('clickAndCollectOption')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(GWarehouseClickAndCollectOptionEnum)));
    }
    value = object.isPrivate;
    if (value != null) {
      result
        ..add('isPrivate')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GWarehouseUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWarehouseUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'slug':
          result.slug = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'address':
          result.address.replace(serializers.deserialize(value,
              specifiedType: const FullType(GAddressInput))! as GAddressInput);
          break;
        case 'clickAndCollectOption':
          result.clickAndCollectOption = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GWarehouseClickAndCollectOptionEnum))
              as GWarehouseClickAndCollectOptionEnum?;
          break;
        case 'isPrivate':
          result.isPrivate = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GWebhookCreateInputSerializer
    implements StructuredSerializer<GWebhookCreateInput> {
  @override
  final Iterable<Type> types = const [
    GWebhookCreateInput,
    _$GWebhookCreateInput
  ];
  @override
  final String wireName = 'GWebhookCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWebhookCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetUrl;
    if (value != null) {
      result
        ..add('targetUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.events;
    if (value != null) {
      result
        ..add('events')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GWebhookEventTypeEnum)])));
    }
    value = object.asyncEvents;
    if (value != null) {
      result
        ..add('asyncEvents')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GWebhookEventTypeAsyncEnum)])));
    }
    value = object.syncEvents;
    if (value != null) {
      result
        ..add('syncEvents')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GWebhookEventTypeSyncEnum)])));
    }
    value = object.app;
    if (value != null) {
      result
        ..add('app')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.secretKey;
    if (value != null) {
      result
        ..add('secretKey')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.query;
    if (value != null) {
      result
        ..add('query')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWebhookCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWebhookCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'targetUrl':
          result.targetUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'events':
          result.events.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GWebhookEventTypeEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'asyncEvents':
          result.asyncEvents.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GWebhookEventTypeAsyncEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'syncEvents':
          result.syncEvents.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GWebhookEventTypeSyncEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'app':
          result.app = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'secretKey':
          result.secretKey = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'query':
          result.query = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GWebhookErrorCodeSerializer
    implements PrimitiveSerializer<GWebhookErrorCode> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookErrorCode];
  @override
  final String wireName = 'GWebhookErrorCode';

  @override
  Object serialize(Serializers serializers, GWebhookErrorCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookErrorCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookErrorCode.valueOf(serialized as String);
}

class _$GWebhookEventTypeAsyncEnumSerializer
    implements PrimitiveSerializer<GWebhookEventTypeAsyncEnum> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookEventTypeAsyncEnum];
  @override
  final String wireName = 'GWebhookEventTypeAsyncEnum';

  @override
  Object serialize(Serializers serializers, GWebhookEventTypeAsyncEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookEventTypeAsyncEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookEventTypeAsyncEnum.valueOf(serialized as String);
}

class _$GWebhookEventTypeEnumSerializer
    implements PrimitiveSerializer<GWebhookEventTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookEventTypeEnum];
  @override
  final String wireName = 'GWebhookEventTypeEnum';

  @override
  Object serialize(Serializers serializers, GWebhookEventTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookEventTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookEventTypeEnum.valueOf(serialized as String);
}

class _$GWebhookEventTypeSyncEnumSerializer
    implements PrimitiveSerializer<GWebhookEventTypeSyncEnum> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookEventTypeSyncEnum];
  @override
  final String wireName = 'GWebhookEventTypeSyncEnum';

  @override
  Object serialize(Serializers serializers, GWebhookEventTypeSyncEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookEventTypeSyncEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookEventTypeSyncEnum.valueOf(serialized as String);
}

class _$GWebhookSampleEventTypeEnumSerializer
    implements PrimitiveSerializer<GWebhookSampleEventTypeEnum> {
  @override
  final Iterable<Type> types = const <Type>[GWebhookSampleEventTypeEnum];
  @override
  final String wireName = 'GWebhookSampleEventTypeEnum';

  @override
  Object serialize(Serializers serializers, GWebhookSampleEventTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWebhookSampleEventTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWebhookSampleEventTypeEnum.valueOf(serialized as String);
}

class _$GWebhookUpdateInputSerializer
    implements StructuredSerializer<GWebhookUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GWebhookUpdateInput,
    _$GWebhookUpdateInput
  ];
  @override
  final String wireName = 'GWebhookUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GWebhookUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.targetUrl;
    if (value != null) {
      result
        ..add('targetUrl')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.events;
    if (value != null) {
      result
        ..add('events')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GWebhookEventTypeEnum)])));
    }
    value = object.asyncEvents;
    if (value != null) {
      result
        ..add('asyncEvents')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(BuiltList,
                const [const FullType(GWebhookEventTypeAsyncEnum)])));
    }
    value = object.syncEvents;
    if (value != null) {
      result
        ..add('syncEvents')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GWebhookEventTypeSyncEnum)])));
    }
    value = object.app;
    if (value != null) {
      result
        ..add('app')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.isActive;
    if (value != null) {
      result
        ..add('isActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.secretKey;
    if (value != null) {
      result
        ..add('secretKey')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.query;
    if (value != null) {
      result
        ..add('query')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GWebhookUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GWebhookUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'targetUrl':
          result.targetUrl = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'events':
          result.events.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GWebhookEventTypeEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'asyncEvents':
          result.asyncEvents.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GWebhookEventTypeAsyncEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'syncEvents':
          result.syncEvents.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GWebhookEventTypeSyncEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'app':
          result.app = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'secretKey':
          result.secretKey = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'query':
          result.query = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GWeightUnitsEnumSerializer
    implements PrimitiveSerializer<GWeightUnitsEnum> {
  @override
  final Iterable<Type> types = const <Type>[GWeightUnitsEnum];
  @override
  final String wireName = 'GWeightUnitsEnum';

  @override
  Object serialize(Serializers serializers, GWeightUnitsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      object.name;

  @override
  GWeightUnitsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GWeightUnitsEnum.valueOf(serialized as String);
}

class _$G_Any extends G_Any {
  @override
  final String value;

  factory _$G_Any([void Function(G_AnyBuilder)? updates]) =>
      (new G_AnyBuilder()..update(updates))._build();

  _$G_Any._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'G_Any', 'value');
  }

  @override
  G_Any rebuild(void Function(G_AnyBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  G_AnyBuilder toBuilder() => new G_AnyBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is G_Any && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'G_Any')..add('value', value))
        .toString();
  }
}

class G_AnyBuilder implements Builder<G_Any, G_AnyBuilder> {
  _$G_Any? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  G_AnyBuilder();

  G_AnyBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(G_Any other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$G_Any;
  }

  @override
  void update(void Function(G_AnyBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  G_Any build() => _build();

  _$G_Any _build() {
    final _$result = _$v ??
        new _$G_Any._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'G_Any', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GAccountInput extends GAccountInput {
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final GLanguageCodeEnum? languageCode;
  @override
  final GAddressInput? defaultBillingAddress;
  @override
  final GAddressInput? defaultShippingAddress;

  factory _$GAccountInput([void Function(GAccountInputBuilder)? updates]) =>
      (new GAccountInputBuilder()..update(updates))._build();

  _$GAccountInput._(
      {this.firstName,
      this.lastName,
      this.languageCode,
      this.defaultBillingAddress,
      this.defaultShippingAddress})
      : super._();

  @override
  GAccountInput rebuild(void Function(GAccountInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAccountInputBuilder toBuilder() => new GAccountInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAccountInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        languageCode == other.languageCode &&
        defaultBillingAddress == other.defaultBillingAddress &&
        defaultShippingAddress == other.defaultShippingAddress;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, firstName.hashCode), lastName.hashCode),
                languageCode.hashCode),
            defaultBillingAddress.hashCode),
        defaultShippingAddress.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAccountInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('languageCode', languageCode)
          ..add('defaultBillingAddress', defaultBillingAddress)
          ..add('defaultShippingAddress', defaultShippingAddress))
        .toString();
  }
}

class GAccountInputBuilder
    implements Builder<GAccountInput, GAccountInputBuilder> {
  _$GAccountInput? _$v;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  GLanguageCodeEnum? _languageCode;
  GLanguageCodeEnum? get languageCode => _$this._languageCode;
  set languageCode(GLanguageCodeEnum? languageCode) =>
      _$this._languageCode = languageCode;

  GAddressInputBuilder? _defaultBillingAddress;
  GAddressInputBuilder get defaultBillingAddress =>
      _$this._defaultBillingAddress ??= new GAddressInputBuilder();
  set defaultBillingAddress(GAddressInputBuilder? defaultBillingAddress) =>
      _$this._defaultBillingAddress = defaultBillingAddress;

  GAddressInputBuilder? _defaultShippingAddress;
  GAddressInputBuilder get defaultShippingAddress =>
      _$this._defaultShippingAddress ??= new GAddressInputBuilder();
  set defaultShippingAddress(GAddressInputBuilder? defaultShippingAddress) =>
      _$this._defaultShippingAddress = defaultShippingAddress;

  GAccountInputBuilder();

  GAccountInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _languageCode = $v.languageCode;
      _defaultBillingAddress = $v.defaultBillingAddress?.toBuilder();
      _defaultShippingAddress = $v.defaultShippingAddress?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAccountInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAccountInput;
  }

  @override
  void update(void Function(GAccountInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAccountInput build() => _build();

  _$GAccountInput _build() {
    _$GAccountInput _$result;
    try {
      _$result = _$v ??
          new _$GAccountInput._(
              firstName: firstName,
              lastName: lastName,
              languageCode: languageCode,
              defaultBillingAddress: _defaultBillingAddress?.build(),
              defaultShippingAddress: _defaultShippingAddress?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'defaultBillingAddress';
        _defaultBillingAddress?.build();
        _$failedField = 'defaultShippingAddress';
        _defaultShippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAccountInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAccountRegisterInput extends GAccountRegisterInput {
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final GLanguageCodeEnum? languageCode;
  @override
  final String email;
  @override
  final String password;
  @override
  final String? redirectUrl;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final String? channel;

  factory _$GAccountRegisterInput(
          [void Function(GAccountRegisterInputBuilder)? updates]) =>
      (new GAccountRegisterInputBuilder()..update(updates))._build();

  _$GAccountRegisterInput._(
      {this.firstName,
      this.lastName,
      this.languageCode,
      required this.email,
      required this.password,
      this.redirectUrl,
      this.metadata,
      this.channel})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        email, r'GAccountRegisterInput', 'email');
    BuiltValueNullFieldError.checkNotNull(
        password, r'GAccountRegisterInput', 'password');
  }

  @override
  GAccountRegisterInput rebuild(
          void Function(GAccountRegisterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAccountRegisterInputBuilder toBuilder() =>
      new GAccountRegisterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAccountRegisterInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        languageCode == other.languageCode &&
        email == other.email &&
        password == other.password &&
        redirectUrl == other.redirectUrl &&
        metadata == other.metadata &&
        channel == other.channel;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, firstName.hashCode), lastName.hashCode),
                            languageCode.hashCode),
                        email.hashCode),
                    password.hashCode),
                redirectUrl.hashCode),
            metadata.hashCode),
        channel.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAccountRegisterInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('languageCode', languageCode)
          ..add('email', email)
          ..add('password', password)
          ..add('redirectUrl', redirectUrl)
          ..add('metadata', metadata)
          ..add('channel', channel))
        .toString();
  }
}

class GAccountRegisterInputBuilder
    implements Builder<GAccountRegisterInput, GAccountRegisterInputBuilder> {
  _$GAccountRegisterInput? _$v;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  GLanguageCodeEnum? _languageCode;
  GLanguageCodeEnum? get languageCode => _$this._languageCode;
  set languageCode(GLanguageCodeEnum? languageCode) =>
      _$this._languageCode = languageCode;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _password;
  String? get password => _$this._password;
  set password(String? password) => _$this._password = password;

  String? _redirectUrl;
  String? get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String? redirectUrl) => _$this._redirectUrl = redirectUrl;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GAccountRegisterInputBuilder();

  GAccountRegisterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _languageCode = $v.languageCode;
      _email = $v.email;
      _password = $v.password;
      _redirectUrl = $v.redirectUrl;
      _metadata = $v.metadata?.toBuilder();
      _channel = $v.channel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAccountRegisterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAccountRegisterInput;
  }

  @override
  void update(void Function(GAccountRegisterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAccountRegisterInput build() => _build();

  _$GAccountRegisterInput _build() {
    _$GAccountRegisterInput _$result;
    try {
      _$result = _$v ??
          new _$GAccountRegisterInput._(
              firstName: firstName,
              lastName: lastName,
              languageCode: languageCode,
              email: BuiltValueNullFieldError.checkNotNull(
                  email, r'GAccountRegisterInput', 'email'),
              password: BuiltValueNullFieldError.checkNotNull(
                  password, r'GAccountRegisterInput', 'password'),
              redirectUrl: redirectUrl,
              metadata: _metadata?.build(),
              channel: channel);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAccountRegisterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAccountRegisterInputWithPhone extends GAccountRegisterInputWithPhone {
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final GLanguageCodeEnum? languageCode;
  @override
  final String email;
  @override
  final String? redirectUrl;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final String? channel;

  factory _$GAccountRegisterInputWithPhone(
          [void Function(GAccountRegisterInputWithPhoneBuilder)? updates]) =>
      (new GAccountRegisterInputWithPhoneBuilder()..update(updates))._build();

  _$GAccountRegisterInputWithPhone._(
      {this.firstName,
      this.lastName,
      this.languageCode,
      required this.email,
      this.redirectUrl,
      this.metadata,
      this.channel})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        email, r'GAccountRegisterInputWithPhone', 'email');
  }

  @override
  GAccountRegisterInputWithPhone rebuild(
          void Function(GAccountRegisterInputWithPhoneBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAccountRegisterInputWithPhoneBuilder toBuilder() =>
      new GAccountRegisterInputWithPhoneBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAccountRegisterInputWithPhone &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        languageCode == other.languageCode &&
        email == other.email &&
        redirectUrl == other.redirectUrl &&
        metadata == other.metadata &&
        channel == other.channel;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, firstName.hashCode), lastName.hashCode),
                        languageCode.hashCode),
                    email.hashCode),
                redirectUrl.hashCode),
            metadata.hashCode),
        channel.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAccountRegisterInputWithPhone')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('languageCode', languageCode)
          ..add('email', email)
          ..add('redirectUrl', redirectUrl)
          ..add('metadata', metadata)
          ..add('channel', channel))
        .toString();
  }
}

class GAccountRegisterInputWithPhoneBuilder
    implements
        Builder<GAccountRegisterInputWithPhone,
            GAccountRegisterInputWithPhoneBuilder> {
  _$GAccountRegisterInputWithPhone? _$v;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  GLanguageCodeEnum? _languageCode;
  GLanguageCodeEnum? get languageCode => _$this._languageCode;
  set languageCode(GLanguageCodeEnum? languageCode) =>
      _$this._languageCode = languageCode;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _redirectUrl;
  String? get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String? redirectUrl) => _$this._redirectUrl = redirectUrl;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GAccountRegisterInputWithPhoneBuilder();

  GAccountRegisterInputWithPhoneBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _languageCode = $v.languageCode;
      _email = $v.email;
      _redirectUrl = $v.redirectUrl;
      _metadata = $v.metadata?.toBuilder();
      _channel = $v.channel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAccountRegisterInputWithPhone other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAccountRegisterInputWithPhone;
  }

  @override
  void update(void Function(GAccountRegisterInputWithPhoneBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAccountRegisterInputWithPhone build() => _build();

  _$GAccountRegisterInputWithPhone _build() {
    _$GAccountRegisterInputWithPhone _$result;
    try {
      _$result = _$v ??
          new _$GAccountRegisterInputWithPhone._(
              firstName: firstName,
              lastName: lastName,
              languageCode: languageCode,
              email: BuiltValueNullFieldError.checkNotNull(
                  email, r'GAccountRegisterInputWithPhone', 'email'),
              redirectUrl: redirectUrl,
              metadata: _metadata?.build(),
              channel: channel);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAccountRegisterInputWithPhone', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAddressInput extends GAddressInput {
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final String? companyName;
  @override
  final String? streetAddress1;
  @override
  final String? streetAddress2;
  @override
  final String? city;
  @override
  final String? cityArea;
  @override
  final String? postalCode;
  @override
  final GCountryCode? country;
  @override
  final String? countryArea;
  @override
  final String? phone;

  factory _$GAddressInput([void Function(GAddressInputBuilder)? updates]) =>
      (new GAddressInputBuilder()..update(updates))._build();

  _$GAddressInput._(
      {this.firstName,
      this.lastName,
      this.companyName,
      this.streetAddress1,
      this.streetAddress2,
      this.city,
      this.cityArea,
      this.postalCode,
      this.country,
      this.countryArea,
      this.phone})
      : super._();

  @override
  GAddressInput rebuild(void Function(GAddressInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAddressInputBuilder toBuilder() => new GAddressInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAddressInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        companyName == other.companyName &&
        streetAddress1 == other.streetAddress1 &&
        streetAddress2 == other.streetAddress2 &&
        city == other.city &&
        cityArea == other.cityArea &&
        postalCode == other.postalCode &&
        country == other.country &&
        countryArea == other.countryArea &&
        phone == other.phone;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, firstName.hashCode),
                                            lastName.hashCode),
                                        companyName.hashCode),
                                    streetAddress1.hashCode),
                                streetAddress2.hashCode),
                            city.hashCode),
                        cityArea.hashCode),
                    postalCode.hashCode),
                country.hashCode),
            countryArea.hashCode),
        phone.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAddressInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('companyName', companyName)
          ..add('streetAddress1', streetAddress1)
          ..add('streetAddress2', streetAddress2)
          ..add('city', city)
          ..add('cityArea', cityArea)
          ..add('postalCode', postalCode)
          ..add('country', country)
          ..add('countryArea', countryArea)
          ..add('phone', phone))
        .toString();
  }
}

class GAddressInputBuilder
    implements Builder<GAddressInput, GAddressInputBuilder> {
  _$GAddressInput? _$v;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _companyName;
  String? get companyName => _$this._companyName;
  set companyName(String? companyName) => _$this._companyName = companyName;

  String? _streetAddress1;
  String? get streetAddress1 => _$this._streetAddress1;
  set streetAddress1(String? streetAddress1) =>
      _$this._streetAddress1 = streetAddress1;

  String? _streetAddress2;
  String? get streetAddress2 => _$this._streetAddress2;
  set streetAddress2(String? streetAddress2) =>
      _$this._streetAddress2 = streetAddress2;

  String? _city;
  String? get city => _$this._city;
  set city(String? city) => _$this._city = city;

  String? _cityArea;
  String? get cityArea => _$this._cityArea;
  set cityArea(String? cityArea) => _$this._cityArea = cityArea;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  GCountryCode? _country;
  GCountryCode? get country => _$this._country;
  set country(GCountryCode? country) => _$this._country = country;

  String? _countryArea;
  String? get countryArea => _$this._countryArea;
  set countryArea(String? countryArea) => _$this._countryArea = countryArea;

  String? _phone;
  String? get phone => _$this._phone;
  set phone(String? phone) => _$this._phone = phone;

  GAddressInputBuilder();

  GAddressInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _companyName = $v.companyName;
      _streetAddress1 = $v.streetAddress1;
      _streetAddress2 = $v.streetAddress2;
      _city = $v.city;
      _cityArea = $v.cityArea;
      _postalCode = $v.postalCode;
      _country = $v.country;
      _countryArea = $v.countryArea;
      _phone = $v.phone;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAddressInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAddressInput;
  }

  @override
  void update(void Function(GAddressInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAddressInput build() => _build();

  _$GAddressInput _build() {
    final _$result = _$v ??
        new _$GAddressInput._(
            firstName: firstName,
            lastName: lastName,
            companyName: companyName,
            streetAddress1: streetAddress1,
            streetAddress2: streetAddress2,
            city: city,
            cityArea: cityArea,
            postalCode: postalCode,
            country: country,
            countryArea: countryArea,
            phone: phone);
    replace(_$result);
    return _$result;
  }
}

class _$GAppExtensionFilterInput extends GAppExtensionFilterInput {
  @override
  final BuiltList<GAppExtensionMountEnum>? mount;
  @override
  final GAppExtensionTargetEnum? target;

  factory _$GAppExtensionFilterInput(
          [void Function(GAppExtensionFilterInputBuilder)? updates]) =>
      (new GAppExtensionFilterInputBuilder()..update(updates))._build();

  _$GAppExtensionFilterInput._({this.mount, this.target}) : super._();

  @override
  GAppExtensionFilterInput rebuild(
          void Function(GAppExtensionFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppExtensionFilterInputBuilder toBuilder() =>
      new GAppExtensionFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppExtensionFilterInput &&
        mount == other.mount &&
        target == other.target;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, mount.hashCode), target.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppExtensionFilterInput')
          ..add('mount', mount)
          ..add('target', target))
        .toString();
  }
}

class GAppExtensionFilterInputBuilder
    implements
        Builder<GAppExtensionFilterInput, GAppExtensionFilterInputBuilder> {
  _$GAppExtensionFilterInput? _$v;

  ListBuilder<GAppExtensionMountEnum>? _mount;
  ListBuilder<GAppExtensionMountEnum> get mount =>
      _$this._mount ??= new ListBuilder<GAppExtensionMountEnum>();
  set mount(ListBuilder<GAppExtensionMountEnum>? mount) =>
      _$this._mount = mount;

  GAppExtensionTargetEnum? _target;
  GAppExtensionTargetEnum? get target => _$this._target;
  set target(GAppExtensionTargetEnum? target) => _$this._target = target;

  GAppExtensionFilterInputBuilder();

  GAppExtensionFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _mount = $v.mount?.toBuilder();
      _target = $v.target;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppExtensionFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppExtensionFilterInput;
  }

  @override
  void update(void Function(GAppExtensionFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppExtensionFilterInput build() => _build();

  _$GAppExtensionFilterInput _build() {
    _$GAppExtensionFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GAppExtensionFilterInput._(
              mount: _mount?.build(), target: target);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'mount';
        _mount?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAppExtensionFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAppFilterInput extends GAppFilterInput {
  @override
  final String? search;
  @override
  final bool? isActive;
  @override
  final GAppTypeEnum? type;

  factory _$GAppFilterInput([void Function(GAppFilterInputBuilder)? updates]) =>
      (new GAppFilterInputBuilder()..update(updates))._build();

  _$GAppFilterInput._({this.search, this.isActive, this.type}) : super._();

  @override
  GAppFilterInput rebuild(void Function(GAppFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppFilterInputBuilder toBuilder() =>
      new GAppFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppFilterInput &&
        search == other.search &&
        isActive == other.isActive &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, search.hashCode), isActive.hashCode), type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppFilterInput')
          ..add('search', search)
          ..add('isActive', isActive)
          ..add('type', type))
        .toString();
  }
}

class GAppFilterInputBuilder
    implements Builder<GAppFilterInput, GAppFilterInputBuilder> {
  _$GAppFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  GAppTypeEnum? _type;
  GAppTypeEnum? get type => _$this._type;
  set type(GAppTypeEnum? type) => _$this._type = type;

  GAppFilterInputBuilder();

  GAppFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _isActive = $v.isActive;
      _type = $v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppFilterInput;
  }

  @override
  void update(void Function(GAppFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppFilterInput build() => _build();

  _$GAppFilterInput _build() {
    final _$result = _$v ??
        new _$GAppFilterInput._(search: search, isActive: isActive, type: type);
    replace(_$result);
    return _$result;
  }
}

class _$GAppInput extends GAppInput {
  @override
  final String? name;
  @override
  final BuiltList<GPermissionEnum>? permissions;

  factory _$GAppInput([void Function(GAppInputBuilder)? updates]) =>
      (new GAppInputBuilder()..update(updates))._build();

  _$GAppInput._({this.name, this.permissions}) : super._();

  @override
  GAppInput rebuild(void Function(GAppInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppInputBuilder toBuilder() => new GAppInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppInput &&
        name == other.name &&
        permissions == other.permissions;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), permissions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppInput')
          ..add('name', name)
          ..add('permissions', permissions))
        .toString();
  }
}

class GAppInputBuilder implements Builder<GAppInput, GAppInputBuilder> {
  _$GAppInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  ListBuilder<GPermissionEnum>? _permissions;
  ListBuilder<GPermissionEnum> get permissions =>
      _$this._permissions ??= new ListBuilder<GPermissionEnum>();
  set permissions(ListBuilder<GPermissionEnum>? permissions) =>
      _$this._permissions = permissions;

  GAppInputBuilder();

  GAppInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _permissions = $v.permissions?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppInput;
  }

  @override
  void update(void Function(GAppInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppInput build() => _build();

  _$GAppInput _build() {
    _$GAppInput _$result;
    try {
      _$result = _$v ??
          new _$GAppInput._(name: name, permissions: _permissions?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'permissions';
        _permissions?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAppInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAppInstallInput extends GAppInstallInput {
  @override
  final String? appName;
  @override
  final String? manifestUrl;
  @override
  final bool? activateAfterInstallation;
  @override
  final BuiltList<GPermissionEnum>? permissions;

  factory _$GAppInstallInput(
          [void Function(GAppInstallInputBuilder)? updates]) =>
      (new GAppInstallInputBuilder()..update(updates))._build();

  _$GAppInstallInput._(
      {this.appName,
      this.manifestUrl,
      this.activateAfterInstallation,
      this.permissions})
      : super._();

  @override
  GAppInstallInput rebuild(void Function(GAppInstallInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppInstallInputBuilder toBuilder() =>
      new GAppInstallInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppInstallInput &&
        appName == other.appName &&
        manifestUrl == other.manifestUrl &&
        activateAfterInstallation == other.activateAfterInstallation &&
        permissions == other.permissions;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, appName.hashCode), manifestUrl.hashCode),
            activateAfterInstallation.hashCode),
        permissions.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppInstallInput')
          ..add('appName', appName)
          ..add('manifestUrl', manifestUrl)
          ..add('activateAfterInstallation', activateAfterInstallation)
          ..add('permissions', permissions))
        .toString();
  }
}

class GAppInstallInputBuilder
    implements Builder<GAppInstallInput, GAppInstallInputBuilder> {
  _$GAppInstallInput? _$v;

  String? _appName;
  String? get appName => _$this._appName;
  set appName(String? appName) => _$this._appName = appName;

  String? _manifestUrl;
  String? get manifestUrl => _$this._manifestUrl;
  set manifestUrl(String? manifestUrl) => _$this._manifestUrl = manifestUrl;

  bool? _activateAfterInstallation;
  bool? get activateAfterInstallation => _$this._activateAfterInstallation;
  set activateAfterInstallation(bool? activateAfterInstallation) =>
      _$this._activateAfterInstallation = activateAfterInstallation;

  ListBuilder<GPermissionEnum>? _permissions;
  ListBuilder<GPermissionEnum> get permissions =>
      _$this._permissions ??= new ListBuilder<GPermissionEnum>();
  set permissions(ListBuilder<GPermissionEnum>? permissions) =>
      _$this._permissions = permissions;

  GAppInstallInputBuilder();

  GAppInstallInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _appName = $v.appName;
      _manifestUrl = $v.manifestUrl;
      _activateAfterInstallation = $v.activateAfterInstallation;
      _permissions = $v.permissions?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppInstallInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppInstallInput;
  }

  @override
  void update(void Function(GAppInstallInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppInstallInput build() => _build();

  _$GAppInstallInput _build() {
    _$GAppInstallInput _$result;
    try {
      _$result = _$v ??
          new _$GAppInstallInput._(
              appName: appName,
              manifestUrl: manifestUrl,
              activateAfterInstallation: activateAfterInstallation,
              permissions: _permissions?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'permissions';
        _permissions?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAppInstallInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAppSortingInput extends GAppSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GAppSortField field;

  factory _$GAppSortingInput(
          [void Function(GAppSortingInputBuilder)? updates]) =>
      (new GAppSortingInputBuilder()..update(updates))._build();

  _$GAppSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GAppSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(field, r'GAppSortingInput', 'field');
  }

  @override
  GAppSortingInput rebuild(void Function(GAppSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppSortingInputBuilder toBuilder() =>
      new GAppSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GAppSortingInputBuilder
    implements Builder<GAppSortingInput, GAppSortingInputBuilder> {
  _$GAppSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GAppSortField? _field;
  GAppSortField? get field => _$this._field;
  set field(GAppSortField? field) => _$this._field = field;

  GAppSortingInputBuilder();

  GAppSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppSortingInput;
  }

  @override
  void update(void Function(GAppSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppSortingInput build() => _build();

  _$GAppSortingInput _build() {
    final _$result = _$v ??
        new _$GAppSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GAppSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GAppSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GAppTokenInput extends GAppTokenInput {
  @override
  final String? name;
  @override
  final String app;

  factory _$GAppTokenInput([void Function(GAppTokenInputBuilder)? updates]) =>
      (new GAppTokenInputBuilder()..update(updates))._build();

  _$GAppTokenInput._({this.name, required this.app}) : super._() {
    BuiltValueNullFieldError.checkNotNull(app, r'GAppTokenInput', 'app');
  }

  @override
  GAppTokenInput rebuild(void Function(GAppTokenInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppTokenInputBuilder toBuilder() =>
      new GAppTokenInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppTokenInput && name == other.name && app == other.app;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), app.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppTokenInput')
          ..add('name', name)
          ..add('app', app))
        .toString();
  }
}

class GAppTokenInputBuilder
    implements Builder<GAppTokenInput, GAppTokenInputBuilder> {
  _$GAppTokenInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _app;
  String? get app => _$this._app;
  set app(String? app) => _$this._app = app;

  GAppTokenInputBuilder();

  GAppTokenInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _app = $v.app;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppTokenInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppTokenInput;
  }

  @override
  void update(void Function(GAppTokenInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppTokenInput build() => _build();

  _$GAppTokenInput _build() {
    final _$result = _$v ??
        new _$GAppTokenInput._(
            name: name,
            app: BuiltValueNullFieldError.checkNotNull(
                app, r'GAppTokenInput', 'app'));
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeChoicesSortingInput extends GAttributeChoicesSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GAttributeChoicesSortField field;

  factory _$GAttributeChoicesSortingInput(
          [void Function(GAttributeChoicesSortingInputBuilder)? updates]) =>
      (new GAttributeChoicesSortingInputBuilder()..update(updates))._build();

  _$GAttributeChoicesSortingInput._(
      {required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GAttributeChoicesSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GAttributeChoicesSortingInput', 'field');
  }

  @override
  GAttributeChoicesSortingInput rebuild(
          void Function(GAttributeChoicesSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeChoicesSortingInputBuilder toBuilder() =>
      new GAttributeChoicesSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeChoicesSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeChoicesSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GAttributeChoicesSortingInputBuilder
    implements
        Builder<GAttributeChoicesSortingInput,
            GAttributeChoicesSortingInputBuilder> {
  _$GAttributeChoicesSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GAttributeChoicesSortField? _field;
  GAttributeChoicesSortField? get field => _$this._field;
  set field(GAttributeChoicesSortField? field) => _$this._field = field;

  GAttributeChoicesSortingInputBuilder();

  GAttributeChoicesSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeChoicesSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeChoicesSortingInput;
  }

  @override
  void update(void Function(GAttributeChoicesSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeChoicesSortingInput build() => _build();

  _$GAttributeChoicesSortingInput _build() {
    final _$result = _$v ??
        new _$GAttributeChoicesSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GAttributeChoicesSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GAttributeChoicesSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeCreateInput extends GAttributeCreateInput {
  @override
  final GAttributeInputTypeEnum? inputType;
  @override
  final GAttributeEntityTypeEnum? entityType;
  @override
  final String name;
  @override
  final String? slug;
  @override
  final GAttributeTypeEnum type;
  @override
  final GMeasurementUnitsEnum? unit;
  @override
  final BuiltList<GAttributeValueCreateInput>? Gvalues;
  @override
  final bool? valueRequired;
  @override
  final bool? isVariantOnly;
  @override
  final bool? visibleInStorefront;
  @override
  final bool? filterableInStorefront;
  @override
  final bool? filterableInDashboard;
  @override
  final int? storefrontSearchPosition;
  @override
  final bool? availableInGrid;

  factory _$GAttributeCreateInput(
          [void Function(GAttributeCreateInputBuilder)? updates]) =>
      (new GAttributeCreateInputBuilder()..update(updates))._build();

  _$GAttributeCreateInput._(
      {this.inputType,
      this.entityType,
      required this.name,
      this.slug,
      required this.type,
      this.unit,
      this.Gvalues,
      this.valueRequired,
      this.isVariantOnly,
      this.visibleInStorefront,
      this.filterableInStorefront,
      this.filterableInDashboard,
      this.storefrontSearchPosition,
      this.availableInGrid})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GAttributeCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GAttributeCreateInput', 'type');
  }

  @override
  GAttributeCreateInput rebuild(
          void Function(GAttributeCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeCreateInputBuilder toBuilder() =>
      new GAttributeCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeCreateInput &&
        inputType == other.inputType &&
        entityType == other.entityType &&
        name == other.name &&
        slug == other.slug &&
        type == other.type &&
        unit == other.unit &&
        Gvalues == other.Gvalues &&
        valueRequired == other.valueRequired &&
        isVariantOnly == other.isVariantOnly &&
        visibleInStorefront == other.visibleInStorefront &&
        filterableInStorefront == other.filterableInStorefront &&
        filterableInDashboard == other.filterableInDashboard &&
        storefrontSearchPosition == other.storefrontSearchPosition &&
        availableInGrid == other.availableInGrid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(0,
                                                            inputType.hashCode),
                                                        entityType.hashCode),
                                                    name.hashCode),
                                                slug.hashCode),
                                            type.hashCode),
                                        unit.hashCode),
                                    Gvalues.hashCode),
                                valueRequired.hashCode),
                            isVariantOnly.hashCode),
                        visibleInStorefront.hashCode),
                    filterableInStorefront.hashCode),
                filterableInDashboard.hashCode),
            storefrontSearchPosition.hashCode),
        availableInGrid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeCreateInput')
          ..add('inputType', inputType)
          ..add('entityType', entityType)
          ..add('name', name)
          ..add('slug', slug)
          ..add('type', type)
          ..add('unit', unit)
          ..add('Gvalues', Gvalues)
          ..add('valueRequired', valueRequired)
          ..add('isVariantOnly', isVariantOnly)
          ..add('visibleInStorefront', visibleInStorefront)
          ..add('filterableInStorefront', filterableInStorefront)
          ..add('filterableInDashboard', filterableInDashboard)
          ..add('storefrontSearchPosition', storefrontSearchPosition)
          ..add('availableInGrid', availableInGrid))
        .toString();
  }
}

class GAttributeCreateInputBuilder
    implements Builder<GAttributeCreateInput, GAttributeCreateInputBuilder> {
  _$GAttributeCreateInput? _$v;

  GAttributeInputTypeEnum? _inputType;
  GAttributeInputTypeEnum? get inputType => _$this._inputType;
  set inputType(GAttributeInputTypeEnum? inputType) =>
      _$this._inputType = inputType;

  GAttributeEntityTypeEnum? _entityType;
  GAttributeEntityTypeEnum? get entityType => _$this._entityType;
  set entityType(GAttributeEntityTypeEnum? entityType) =>
      _$this._entityType = entityType;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  GAttributeTypeEnum? _type;
  GAttributeTypeEnum? get type => _$this._type;
  set type(GAttributeTypeEnum? type) => _$this._type = type;

  GMeasurementUnitsEnum? _unit;
  GMeasurementUnitsEnum? get unit => _$this._unit;
  set unit(GMeasurementUnitsEnum? unit) => _$this._unit = unit;

  ListBuilder<GAttributeValueCreateInput>? _Gvalues;
  ListBuilder<GAttributeValueCreateInput> get Gvalues =>
      _$this._Gvalues ??= new ListBuilder<GAttributeValueCreateInput>();
  set Gvalues(ListBuilder<GAttributeValueCreateInput>? Gvalues) =>
      _$this._Gvalues = Gvalues;

  bool? _valueRequired;
  bool? get valueRequired => _$this._valueRequired;
  set valueRequired(bool? valueRequired) =>
      _$this._valueRequired = valueRequired;

  bool? _isVariantOnly;
  bool? get isVariantOnly => _$this._isVariantOnly;
  set isVariantOnly(bool? isVariantOnly) =>
      _$this._isVariantOnly = isVariantOnly;

  bool? _visibleInStorefront;
  bool? get visibleInStorefront => _$this._visibleInStorefront;
  set visibleInStorefront(bool? visibleInStorefront) =>
      _$this._visibleInStorefront = visibleInStorefront;

  bool? _filterableInStorefront;
  bool? get filterableInStorefront => _$this._filterableInStorefront;
  set filterableInStorefront(bool? filterableInStorefront) =>
      _$this._filterableInStorefront = filterableInStorefront;

  bool? _filterableInDashboard;
  bool? get filterableInDashboard => _$this._filterableInDashboard;
  set filterableInDashboard(bool? filterableInDashboard) =>
      _$this._filterableInDashboard = filterableInDashboard;

  int? _storefrontSearchPosition;
  int? get storefrontSearchPosition => _$this._storefrontSearchPosition;
  set storefrontSearchPosition(int? storefrontSearchPosition) =>
      _$this._storefrontSearchPosition = storefrontSearchPosition;

  bool? _availableInGrid;
  bool? get availableInGrid => _$this._availableInGrid;
  set availableInGrid(bool? availableInGrid) =>
      _$this._availableInGrid = availableInGrid;

  GAttributeCreateInputBuilder();

  GAttributeCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _inputType = $v.inputType;
      _entityType = $v.entityType;
      _name = $v.name;
      _slug = $v.slug;
      _type = $v.type;
      _unit = $v.unit;
      _Gvalues = $v.Gvalues?.toBuilder();
      _valueRequired = $v.valueRequired;
      _isVariantOnly = $v.isVariantOnly;
      _visibleInStorefront = $v.visibleInStorefront;
      _filterableInStorefront = $v.filterableInStorefront;
      _filterableInDashboard = $v.filterableInDashboard;
      _storefrontSearchPosition = $v.storefrontSearchPosition;
      _availableInGrid = $v.availableInGrid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeCreateInput;
  }

  @override
  void update(void Function(GAttributeCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeCreateInput build() => _build();

  _$GAttributeCreateInput _build() {
    _$GAttributeCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeCreateInput._(
              inputType: inputType,
              entityType: entityType,
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GAttributeCreateInput', 'name'),
              slug: slug,
              type: BuiltValueNullFieldError.checkNotNull(
                  type, r'GAttributeCreateInput', 'type'),
              unit: unit,
              Gvalues: _Gvalues?.build(),
              valueRequired: valueRequired,
              isVariantOnly: isVariantOnly,
              visibleInStorefront: visibleInStorefront,
              filterableInStorefront: filterableInStorefront,
              filterableInDashboard: filterableInDashboard,
              storefrontSearchPosition: storefrontSearchPosition,
              availableInGrid: availableInGrid);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'Gvalues';
        _Gvalues?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeFilterInput extends GAttributeFilterInput {
  @override
  final bool? valueRequired;
  @override
  final bool? isVariantOnly;
  @override
  final bool? visibleInStorefront;
  @override
  final bool? filterableInStorefront;
  @override
  final bool? filterableInDashboard;
  @override
  final bool? availableInGrid;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final String? search;
  @override
  final BuiltList<String>? ids;
  @override
  final GAttributeTypeEnum? type;
  @override
  final String? inCollection;
  @override
  final String? inCategory;
  @override
  final BuiltList<String>? slugs;
  @override
  final String? channel;

  factory _$GAttributeFilterInput(
          [void Function(GAttributeFilterInputBuilder)? updates]) =>
      (new GAttributeFilterInputBuilder()..update(updates))._build();

  _$GAttributeFilterInput._(
      {this.valueRequired,
      this.isVariantOnly,
      this.visibleInStorefront,
      this.filterableInStorefront,
      this.filterableInDashboard,
      this.availableInGrid,
      this.metadata,
      this.search,
      this.ids,
      this.type,
      this.inCollection,
      this.inCategory,
      this.slugs,
      this.channel})
      : super._();

  @override
  GAttributeFilterInput rebuild(
          void Function(GAttributeFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeFilterInputBuilder toBuilder() =>
      new GAttributeFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeFilterInput &&
        valueRequired == other.valueRequired &&
        isVariantOnly == other.isVariantOnly &&
        visibleInStorefront == other.visibleInStorefront &&
        filterableInStorefront == other.filterableInStorefront &&
        filterableInDashboard == other.filterableInDashboard &&
        availableInGrid == other.availableInGrid &&
        metadata == other.metadata &&
        search == other.search &&
        ids == other.ids &&
        type == other.type &&
        inCollection == other.inCollection &&
        inCategory == other.inCategory &&
        slugs == other.slugs &&
        channel == other.channel;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            valueRequired
                                                                .hashCode),
                                                        isVariantOnly.hashCode),
                                                    visibleInStorefront
                                                        .hashCode),
                                                filterableInStorefront
                                                    .hashCode),
                                            filterableInDashboard.hashCode),
                                        availableInGrid.hashCode),
                                    metadata.hashCode),
                                search.hashCode),
                            ids.hashCode),
                        type.hashCode),
                    inCollection.hashCode),
                inCategory.hashCode),
            slugs.hashCode),
        channel.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeFilterInput')
          ..add('valueRequired', valueRequired)
          ..add('isVariantOnly', isVariantOnly)
          ..add('visibleInStorefront', visibleInStorefront)
          ..add('filterableInStorefront', filterableInStorefront)
          ..add('filterableInDashboard', filterableInDashboard)
          ..add('availableInGrid', availableInGrid)
          ..add('metadata', metadata)
          ..add('search', search)
          ..add('ids', ids)
          ..add('type', type)
          ..add('inCollection', inCollection)
          ..add('inCategory', inCategory)
          ..add('slugs', slugs)
          ..add('channel', channel))
        .toString();
  }
}

class GAttributeFilterInputBuilder
    implements Builder<GAttributeFilterInput, GAttributeFilterInputBuilder> {
  _$GAttributeFilterInput? _$v;

  bool? _valueRequired;
  bool? get valueRequired => _$this._valueRequired;
  set valueRequired(bool? valueRequired) =>
      _$this._valueRequired = valueRequired;

  bool? _isVariantOnly;
  bool? get isVariantOnly => _$this._isVariantOnly;
  set isVariantOnly(bool? isVariantOnly) =>
      _$this._isVariantOnly = isVariantOnly;

  bool? _visibleInStorefront;
  bool? get visibleInStorefront => _$this._visibleInStorefront;
  set visibleInStorefront(bool? visibleInStorefront) =>
      _$this._visibleInStorefront = visibleInStorefront;

  bool? _filterableInStorefront;
  bool? get filterableInStorefront => _$this._filterableInStorefront;
  set filterableInStorefront(bool? filterableInStorefront) =>
      _$this._filterableInStorefront = filterableInStorefront;

  bool? _filterableInDashboard;
  bool? get filterableInDashboard => _$this._filterableInDashboard;
  set filterableInDashboard(bool? filterableInDashboard) =>
      _$this._filterableInDashboard = filterableInDashboard;

  bool? _availableInGrid;
  bool? get availableInGrid => _$this._availableInGrid;
  set availableInGrid(bool? availableInGrid) =>
      _$this._availableInGrid = availableInGrid;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GAttributeTypeEnum? _type;
  GAttributeTypeEnum? get type => _$this._type;
  set type(GAttributeTypeEnum? type) => _$this._type = type;

  String? _inCollection;
  String? get inCollection => _$this._inCollection;
  set inCollection(String? inCollection) => _$this._inCollection = inCollection;

  String? _inCategory;
  String? get inCategory => _$this._inCategory;
  set inCategory(String? inCategory) => _$this._inCategory = inCategory;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GAttributeFilterInputBuilder();

  GAttributeFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _valueRequired = $v.valueRequired;
      _isVariantOnly = $v.isVariantOnly;
      _visibleInStorefront = $v.visibleInStorefront;
      _filterableInStorefront = $v.filterableInStorefront;
      _filterableInDashboard = $v.filterableInDashboard;
      _availableInGrid = $v.availableInGrid;
      _metadata = $v.metadata?.toBuilder();
      _search = $v.search;
      _ids = $v.ids?.toBuilder();
      _type = $v.type;
      _inCollection = $v.inCollection;
      _inCategory = $v.inCategory;
      _slugs = $v.slugs?.toBuilder();
      _channel = $v.channel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeFilterInput;
  }

  @override
  void update(void Function(GAttributeFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeFilterInput build() => _build();

  _$GAttributeFilterInput _build() {
    _$GAttributeFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeFilterInput._(
              valueRequired: valueRequired,
              isVariantOnly: isVariantOnly,
              visibleInStorefront: visibleInStorefront,
              filterableInStorefront: filterableInStorefront,
              filterableInDashboard: filterableInDashboard,
              availableInGrid: availableInGrid,
              metadata: _metadata?.build(),
              search: search,
              ids: _ids?.build(),
              type: type,
              inCollection: inCollection,
              inCategory: inCategory,
              slugs: _slugs?.build(),
              channel: channel);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'ids';
        _ids?.build();

        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeInput extends GAttributeInput {
  @override
  final String slug;
  @override
  final BuiltList<String>? Gvalues;
  @override
  final GIntRangeInput? valuesRange;
  @override
  final GDateTimeRangeInput? dateTime;
  @override
  final GDateRangeInput? date;
  @override
  final bool? boolean;

  factory _$GAttributeInput([void Function(GAttributeInputBuilder)? updates]) =>
      (new GAttributeInputBuilder()..update(updates))._build();

  _$GAttributeInput._(
      {required this.slug,
      this.Gvalues,
      this.valuesRange,
      this.dateTime,
      this.date,
      this.boolean})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(slug, r'GAttributeInput', 'slug');
  }

  @override
  GAttributeInput rebuild(void Function(GAttributeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeInputBuilder toBuilder() =>
      new GAttributeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeInput &&
        slug == other.slug &&
        Gvalues == other.Gvalues &&
        valuesRange == other.valuesRange &&
        dateTime == other.dateTime &&
        date == other.date &&
        boolean == other.boolean;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, slug.hashCode), Gvalues.hashCode),
                    valuesRange.hashCode),
                dateTime.hashCode),
            date.hashCode),
        boolean.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeInput')
          ..add('slug', slug)
          ..add('Gvalues', Gvalues)
          ..add('valuesRange', valuesRange)
          ..add('dateTime', dateTime)
          ..add('date', date)
          ..add('boolean', boolean))
        .toString();
  }
}

class GAttributeInputBuilder
    implements Builder<GAttributeInput, GAttributeInputBuilder> {
  _$GAttributeInput? _$v;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  ListBuilder<String>? _Gvalues;
  ListBuilder<String> get Gvalues =>
      _$this._Gvalues ??= new ListBuilder<String>();
  set Gvalues(ListBuilder<String>? Gvalues) => _$this._Gvalues = Gvalues;

  GIntRangeInputBuilder? _valuesRange;
  GIntRangeInputBuilder get valuesRange =>
      _$this._valuesRange ??= new GIntRangeInputBuilder();
  set valuesRange(GIntRangeInputBuilder? valuesRange) =>
      _$this._valuesRange = valuesRange;

  GDateTimeRangeInputBuilder? _dateTime;
  GDateTimeRangeInputBuilder get dateTime =>
      _$this._dateTime ??= new GDateTimeRangeInputBuilder();
  set dateTime(GDateTimeRangeInputBuilder? dateTime) =>
      _$this._dateTime = dateTime;

  GDateRangeInputBuilder? _date;
  GDateRangeInputBuilder get date =>
      _$this._date ??= new GDateRangeInputBuilder();
  set date(GDateRangeInputBuilder? date) => _$this._date = date;

  bool? _boolean;
  bool? get boolean => _$this._boolean;
  set boolean(bool? boolean) => _$this._boolean = boolean;

  GAttributeInputBuilder();

  GAttributeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _slug = $v.slug;
      _Gvalues = $v.Gvalues?.toBuilder();
      _valuesRange = $v.valuesRange?.toBuilder();
      _dateTime = $v.dateTime?.toBuilder();
      _date = $v.date?.toBuilder();
      _boolean = $v.boolean;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeInput;
  }

  @override
  void update(void Function(GAttributeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeInput build() => _build();

  _$GAttributeInput _build() {
    _$GAttributeInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeInput._(
              slug: BuiltValueNullFieldError.checkNotNull(
                  slug, r'GAttributeInput', 'slug'),
              Gvalues: _Gvalues?.build(),
              valuesRange: _valuesRange?.build(),
              dateTime: _dateTime?.build(),
              date: _date?.build(),
              boolean: boolean);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'Gvalues';
        _Gvalues?.build();
        _$failedField = 'valuesRange';
        _valuesRange?.build();
        _$failedField = 'dateTime';
        _dateTime?.build();
        _$failedField = 'date';
        _date?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeSortingInput extends GAttributeSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GAttributeSortField field;

  factory _$GAttributeSortingInput(
          [void Function(GAttributeSortingInputBuilder)? updates]) =>
      (new GAttributeSortingInputBuilder()..update(updates))._build();

  _$GAttributeSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GAttributeSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GAttributeSortingInput', 'field');
  }

  @override
  GAttributeSortingInput rebuild(
          void Function(GAttributeSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeSortingInputBuilder toBuilder() =>
      new GAttributeSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GAttributeSortingInputBuilder
    implements Builder<GAttributeSortingInput, GAttributeSortingInputBuilder> {
  _$GAttributeSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GAttributeSortField? _field;
  GAttributeSortField? get field => _$this._field;
  set field(GAttributeSortField? field) => _$this._field = field;

  GAttributeSortingInputBuilder();

  GAttributeSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeSortingInput;
  }

  @override
  void update(void Function(GAttributeSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeSortingInput build() => _build();

  _$GAttributeSortingInput _build() {
    final _$result = _$v ??
        new _$GAttributeSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GAttributeSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GAttributeSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeUpdateInput extends GAttributeUpdateInput {
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final GMeasurementUnitsEnum? unit;
  @override
  final BuiltList<String>? removeValues;
  @override
  final BuiltList<GAttributeValueUpdateInput>? addValues;
  @override
  final bool? valueRequired;
  @override
  final bool? isVariantOnly;
  @override
  final bool? visibleInStorefront;
  @override
  final bool? filterableInStorefront;
  @override
  final bool? filterableInDashboard;
  @override
  final int? storefrontSearchPosition;
  @override
  final bool? availableInGrid;

  factory _$GAttributeUpdateInput(
          [void Function(GAttributeUpdateInputBuilder)? updates]) =>
      (new GAttributeUpdateInputBuilder()..update(updates))._build();

  _$GAttributeUpdateInput._(
      {this.name,
      this.slug,
      this.unit,
      this.removeValues,
      this.addValues,
      this.valueRequired,
      this.isVariantOnly,
      this.visibleInStorefront,
      this.filterableInStorefront,
      this.filterableInDashboard,
      this.storefrontSearchPosition,
      this.availableInGrid})
      : super._();

  @override
  GAttributeUpdateInput rebuild(
          void Function(GAttributeUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeUpdateInputBuilder toBuilder() =>
      new GAttributeUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeUpdateInput &&
        name == other.name &&
        slug == other.slug &&
        unit == other.unit &&
        removeValues == other.removeValues &&
        addValues == other.addValues &&
        valueRequired == other.valueRequired &&
        isVariantOnly == other.isVariantOnly &&
        visibleInStorefront == other.visibleInStorefront &&
        filterableInStorefront == other.filterableInStorefront &&
        filterableInDashboard == other.filterableInDashboard &&
        storefrontSearchPosition == other.storefrontSearchPosition &&
        availableInGrid == other.availableInGrid;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc($jc(0, name.hashCode),
                                                slug.hashCode),
                                            unit.hashCode),
                                        removeValues.hashCode),
                                    addValues.hashCode),
                                valueRequired.hashCode),
                            isVariantOnly.hashCode),
                        visibleInStorefront.hashCode),
                    filterableInStorefront.hashCode),
                filterableInDashboard.hashCode),
            storefrontSearchPosition.hashCode),
        availableInGrid.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeUpdateInput')
          ..add('name', name)
          ..add('slug', slug)
          ..add('unit', unit)
          ..add('removeValues', removeValues)
          ..add('addValues', addValues)
          ..add('valueRequired', valueRequired)
          ..add('isVariantOnly', isVariantOnly)
          ..add('visibleInStorefront', visibleInStorefront)
          ..add('filterableInStorefront', filterableInStorefront)
          ..add('filterableInDashboard', filterableInDashboard)
          ..add('storefrontSearchPosition', storefrontSearchPosition)
          ..add('availableInGrid', availableInGrid))
        .toString();
  }
}

class GAttributeUpdateInputBuilder
    implements Builder<GAttributeUpdateInput, GAttributeUpdateInputBuilder> {
  _$GAttributeUpdateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  GMeasurementUnitsEnum? _unit;
  GMeasurementUnitsEnum? get unit => _$this._unit;
  set unit(GMeasurementUnitsEnum? unit) => _$this._unit = unit;

  ListBuilder<String>? _removeValues;
  ListBuilder<String> get removeValues =>
      _$this._removeValues ??= new ListBuilder<String>();
  set removeValues(ListBuilder<String>? removeValues) =>
      _$this._removeValues = removeValues;

  ListBuilder<GAttributeValueUpdateInput>? _addValues;
  ListBuilder<GAttributeValueUpdateInput> get addValues =>
      _$this._addValues ??= new ListBuilder<GAttributeValueUpdateInput>();
  set addValues(ListBuilder<GAttributeValueUpdateInput>? addValues) =>
      _$this._addValues = addValues;

  bool? _valueRequired;
  bool? get valueRequired => _$this._valueRequired;
  set valueRequired(bool? valueRequired) =>
      _$this._valueRequired = valueRequired;

  bool? _isVariantOnly;
  bool? get isVariantOnly => _$this._isVariantOnly;
  set isVariantOnly(bool? isVariantOnly) =>
      _$this._isVariantOnly = isVariantOnly;

  bool? _visibleInStorefront;
  bool? get visibleInStorefront => _$this._visibleInStorefront;
  set visibleInStorefront(bool? visibleInStorefront) =>
      _$this._visibleInStorefront = visibleInStorefront;

  bool? _filterableInStorefront;
  bool? get filterableInStorefront => _$this._filterableInStorefront;
  set filterableInStorefront(bool? filterableInStorefront) =>
      _$this._filterableInStorefront = filterableInStorefront;

  bool? _filterableInDashboard;
  bool? get filterableInDashboard => _$this._filterableInDashboard;
  set filterableInDashboard(bool? filterableInDashboard) =>
      _$this._filterableInDashboard = filterableInDashboard;

  int? _storefrontSearchPosition;
  int? get storefrontSearchPosition => _$this._storefrontSearchPosition;
  set storefrontSearchPosition(int? storefrontSearchPosition) =>
      _$this._storefrontSearchPosition = storefrontSearchPosition;

  bool? _availableInGrid;
  bool? get availableInGrid => _$this._availableInGrid;
  set availableInGrid(bool? availableInGrid) =>
      _$this._availableInGrid = availableInGrid;

  GAttributeUpdateInputBuilder();

  GAttributeUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _slug = $v.slug;
      _unit = $v.unit;
      _removeValues = $v.removeValues?.toBuilder();
      _addValues = $v.addValues?.toBuilder();
      _valueRequired = $v.valueRequired;
      _isVariantOnly = $v.isVariantOnly;
      _visibleInStorefront = $v.visibleInStorefront;
      _filterableInStorefront = $v.filterableInStorefront;
      _filterableInDashboard = $v.filterableInDashboard;
      _storefrontSearchPosition = $v.storefrontSearchPosition;
      _availableInGrid = $v.availableInGrid;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeUpdateInput;
  }

  @override
  void update(void Function(GAttributeUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeUpdateInput build() => _build();

  _$GAttributeUpdateInput _build() {
    _$GAttributeUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeUpdateInput._(
              name: name,
              slug: slug,
              unit: unit,
              removeValues: _removeValues?.build(),
              addValues: _addValues?.build(),
              valueRequired: valueRequired,
              isVariantOnly: isVariantOnly,
              visibleInStorefront: visibleInStorefront,
              filterableInStorefront: filterableInStorefront,
              filterableInDashboard: filterableInDashboard,
              storefrontSearchPosition: storefrontSearchPosition,
              availableInGrid: availableInGrid);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'removeValues';
        _removeValues?.build();
        _$failedField = 'addValues';
        _addValues?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeValueCreateInput extends GAttributeValueCreateInput {
  @override
  final String? value;
  @override
  final GJSONString? richText;
  @override
  final String? plainText;
  @override
  final String? fileUrl;
  @override
  final String? contentType;
  @override
  final String name;

  factory _$GAttributeValueCreateInput(
          [void Function(GAttributeValueCreateInputBuilder)? updates]) =>
      (new GAttributeValueCreateInputBuilder()..update(updates))._build();

  _$GAttributeValueCreateInput._(
      {this.value,
      this.richText,
      this.plainText,
      this.fileUrl,
      this.contentType,
      required this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GAttributeValueCreateInput', 'name');
  }

  @override
  GAttributeValueCreateInput rebuild(
          void Function(GAttributeValueCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeValueCreateInputBuilder toBuilder() =>
      new GAttributeValueCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeValueCreateInput &&
        value == other.value &&
        richText == other.richText &&
        plainText == other.plainText &&
        fileUrl == other.fileUrl &&
        contentType == other.contentType &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, value.hashCode), richText.hashCode),
                    plainText.hashCode),
                fileUrl.hashCode),
            contentType.hashCode),
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeValueCreateInput')
          ..add('value', value)
          ..add('richText', richText)
          ..add('plainText', plainText)
          ..add('fileUrl', fileUrl)
          ..add('contentType', contentType)
          ..add('name', name))
        .toString();
  }
}

class GAttributeValueCreateInputBuilder
    implements
        Builder<GAttributeValueCreateInput, GAttributeValueCreateInputBuilder> {
  _$GAttributeValueCreateInput? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GJSONStringBuilder? _richText;
  GJSONStringBuilder get richText =>
      _$this._richText ??= new GJSONStringBuilder();
  set richText(GJSONStringBuilder? richText) => _$this._richText = richText;

  String? _plainText;
  String? get plainText => _$this._plainText;
  set plainText(String? plainText) => _$this._plainText = plainText;

  String? _fileUrl;
  String? get fileUrl => _$this._fileUrl;
  set fileUrl(String? fileUrl) => _$this._fileUrl = fileUrl;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GAttributeValueCreateInputBuilder();

  GAttributeValueCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _richText = $v.richText?.toBuilder();
      _plainText = $v.plainText;
      _fileUrl = $v.fileUrl;
      _contentType = $v.contentType;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeValueCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeValueCreateInput;
  }

  @override
  void update(void Function(GAttributeValueCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeValueCreateInput build() => _build();

  _$GAttributeValueCreateInput _build() {
    _$GAttributeValueCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeValueCreateInput._(
              value: value,
              richText: _richText?.build(),
              plainText: plainText,
              fileUrl: fileUrl,
              contentType: contentType,
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GAttributeValueCreateInput', 'name'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'richText';
        _richText?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeValueCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeValueFilterInput extends GAttributeValueFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<String>? ids;

  factory _$GAttributeValueFilterInput(
          [void Function(GAttributeValueFilterInputBuilder)? updates]) =>
      (new GAttributeValueFilterInputBuilder()..update(updates))._build();

  _$GAttributeValueFilterInput._({this.search, this.ids}) : super._();

  @override
  GAttributeValueFilterInput rebuild(
          void Function(GAttributeValueFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeValueFilterInputBuilder toBuilder() =>
      new GAttributeValueFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeValueFilterInput &&
        search == other.search &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeValueFilterInput')
          ..add('search', search)
          ..add('ids', ids))
        .toString();
  }
}

class GAttributeValueFilterInputBuilder
    implements
        Builder<GAttributeValueFilterInput, GAttributeValueFilterInputBuilder> {
  _$GAttributeValueFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GAttributeValueFilterInputBuilder();

  GAttributeValueFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _ids = $v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeValueFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeValueFilterInput;
  }

  @override
  void update(void Function(GAttributeValueFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeValueFilterInput build() => _build();

  _$GAttributeValueFilterInput _build() {
    _$GAttributeValueFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeValueFilterInput._(
              search: search, ids: _ids?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeValueFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeValueInput extends GAttributeValueInput {
  @override
  final String? id;
  @override
  final BuiltList<String>? Gvalues;
  @override
  final String? file;
  @override
  final String? contentType;
  @override
  final BuiltList<String>? references;
  @override
  final GJSONString? richText;
  @override
  final String? plainText;
  @override
  final bool? boolean;
  @override
  final GDate? date;
  @override
  final GDateTime? dateTime;

  factory _$GAttributeValueInput(
          [void Function(GAttributeValueInputBuilder)? updates]) =>
      (new GAttributeValueInputBuilder()..update(updates))._build();

  _$GAttributeValueInput._(
      {this.id,
      this.Gvalues,
      this.file,
      this.contentType,
      this.references,
      this.richText,
      this.plainText,
      this.boolean,
      this.date,
      this.dateTime})
      : super._();

  @override
  GAttributeValueInput rebuild(
          void Function(GAttributeValueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeValueInputBuilder toBuilder() =>
      new GAttributeValueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeValueInput &&
        id == other.id &&
        Gvalues == other.Gvalues &&
        file == other.file &&
        contentType == other.contentType &&
        references == other.references &&
        richText == other.richText &&
        plainText == other.plainText &&
        boolean == other.boolean &&
        date == other.date &&
        dateTime == other.dateTime;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc($jc(0, id.hashCode), Gvalues.hashCode),
                                    file.hashCode),
                                contentType.hashCode),
                            references.hashCode),
                        richText.hashCode),
                    plainText.hashCode),
                boolean.hashCode),
            date.hashCode),
        dateTime.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeValueInput')
          ..add('id', id)
          ..add('Gvalues', Gvalues)
          ..add('file', file)
          ..add('contentType', contentType)
          ..add('references', references)
          ..add('richText', richText)
          ..add('plainText', plainText)
          ..add('boolean', boolean)
          ..add('date', date)
          ..add('dateTime', dateTime))
        .toString();
  }
}

class GAttributeValueInputBuilder
    implements Builder<GAttributeValueInput, GAttributeValueInputBuilder> {
  _$GAttributeValueInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  ListBuilder<String>? _Gvalues;
  ListBuilder<String> get Gvalues =>
      _$this._Gvalues ??= new ListBuilder<String>();
  set Gvalues(ListBuilder<String>? Gvalues) => _$this._Gvalues = Gvalues;

  String? _file;
  String? get file => _$this._file;
  set file(String? file) => _$this._file = file;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  ListBuilder<String>? _references;
  ListBuilder<String> get references =>
      _$this._references ??= new ListBuilder<String>();
  set references(ListBuilder<String>? references) =>
      _$this._references = references;

  GJSONStringBuilder? _richText;
  GJSONStringBuilder get richText =>
      _$this._richText ??= new GJSONStringBuilder();
  set richText(GJSONStringBuilder? richText) => _$this._richText = richText;

  String? _plainText;
  String? get plainText => _$this._plainText;
  set plainText(String? plainText) => _$this._plainText = plainText;

  bool? _boolean;
  bool? get boolean => _$this._boolean;
  set boolean(bool? boolean) => _$this._boolean = boolean;

  GDateBuilder? _date;
  GDateBuilder get date => _$this._date ??= new GDateBuilder();
  set date(GDateBuilder? date) => _$this._date = date;

  GDateTimeBuilder? _dateTime;
  GDateTimeBuilder get dateTime => _$this._dateTime ??= new GDateTimeBuilder();
  set dateTime(GDateTimeBuilder? dateTime) => _$this._dateTime = dateTime;

  GAttributeValueInputBuilder();

  GAttributeValueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _Gvalues = $v.Gvalues?.toBuilder();
      _file = $v.file;
      _contentType = $v.contentType;
      _references = $v.references?.toBuilder();
      _richText = $v.richText?.toBuilder();
      _plainText = $v.plainText;
      _boolean = $v.boolean;
      _date = $v.date?.toBuilder();
      _dateTime = $v.dateTime?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeValueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeValueInput;
  }

  @override
  void update(void Function(GAttributeValueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeValueInput build() => _build();

  _$GAttributeValueInput _build() {
    _$GAttributeValueInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeValueInput._(
              id: id,
              Gvalues: _Gvalues?.build(),
              file: file,
              contentType: contentType,
              references: _references?.build(),
              richText: _richText?.build(),
              plainText: plainText,
              boolean: boolean,
              date: _date?.build(),
              dateTime: _dateTime?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'Gvalues';
        _Gvalues?.build();

        _$failedField = 'references';
        _references?.build();
        _$failedField = 'richText';
        _richText?.build();

        _$failedField = 'date';
        _date?.build();
        _$failedField = 'dateTime';
        _dateTime?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeValueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeValueTranslationInput
    extends GAttributeValueTranslationInput {
  @override
  final String? name;
  @override
  final GJSONString? richText;
  @override
  final String? plainText;

  factory _$GAttributeValueTranslationInput(
          [void Function(GAttributeValueTranslationInputBuilder)? updates]) =>
      (new GAttributeValueTranslationInputBuilder()..update(updates))._build();

  _$GAttributeValueTranslationInput._(
      {this.name, this.richText, this.plainText})
      : super._();

  @override
  GAttributeValueTranslationInput rebuild(
          void Function(GAttributeValueTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeValueTranslationInputBuilder toBuilder() =>
      new GAttributeValueTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeValueTranslationInput &&
        name == other.name &&
        richText == other.richText &&
        plainText == other.plainText;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, name.hashCode), richText.hashCode), plainText.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeValueTranslationInput')
          ..add('name', name)
          ..add('richText', richText)
          ..add('plainText', plainText))
        .toString();
  }
}

class GAttributeValueTranslationInputBuilder
    implements
        Builder<GAttributeValueTranslationInput,
            GAttributeValueTranslationInputBuilder> {
  _$GAttributeValueTranslationInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GJSONStringBuilder? _richText;
  GJSONStringBuilder get richText =>
      _$this._richText ??= new GJSONStringBuilder();
  set richText(GJSONStringBuilder? richText) => _$this._richText = richText;

  String? _plainText;
  String? get plainText => _$this._plainText;
  set plainText(String? plainText) => _$this._plainText = plainText;

  GAttributeValueTranslationInputBuilder();

  GAttributeValueTranslationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _richText = $v.richText?.toBuilder();
      _plainText = $v.plainText;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeValueTranslationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeValueTranslationInput;
  }

  @override
  void update(void Function(GAttributeValueTranslationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeValueTranslationInput build() => _build();

  _$GAttributeValueTranslationInput _build() {
    _$GAttributeValueTranslationInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeValueTranslationInput._(
              name: name, richText: _richText?.build(), plainText: plainText);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'richText';
        _richText?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeValueTranslationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAttributeValueUpdateInput extends GAttributeValueUpdateInput {
  @override
  final String? value;
  @override
  final GJSONString? richText;
  @override
  final String? plainText;
  @override
  final String? fileUrl;
  @override
  final String? contentType;
  @override
  final String? name;

  factory _$GAttributeValueUpdateInput(
          [void Function(GAttributeValueUpdateInputBuilder)? updates]) =>
      (new GAttributeValueUpdateInputBuilder()..update(updates))._build();

  _$GAttributeValueUpdateInput._(
      {this.value,
      this.richText,
      this.plainText,
      this.fileUrl,
      this.contentType,
      this.name})
      : super._();

  @override
  GAttributeValueUpdateInput rebuild(
          void Function(GAttributeValueUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAttributeValueUpdateInputBuilder toBuilder() =>
      new GAttributeValueUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAttributeValueUpdateInput &&
        value == other.value &&
        richText == other.richText &&
        plainText == other.plainText &&
        fileUrl == other.fileUrl &&
        contentType == other.contentType &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, value.hashCode), richText.hashCode),
                    plainText.hashCode),
                fileUrl.hashCode),
            contentType.hashCode),
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAttributeValueUpdateInput')
          ..add('value', value)
          ..add('richText', richText)
          ..add('plainText', plainText)
          ..add('fileUrl', fileUrl)
          ..add('contentType', contentType)
          ..add('name', name))
        .toString();
  }
}

class GAttributeValueUpdateInputBuilder
    implements
        Builder<GAttributeValueUpdateInput, GAttributeValueUpdateInputBuilder> {
  _$GAttributeValueUpdateInput? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GJSONStringBuilder? _richText;
  GJSONStringBuilder get richText =>
      _$this._richText ??= new GJSONStringBuilder();
  set richText(GJSONStringBuilder? richText) => _$this._richText = richText;

  String? _plainText;
  String? get plainText => _$this._plainText;
  set plainText(String? plainText) => _$this._plainText = plainText;

  String? _fileUrl;
  String? get fileUrl => _$this._fileUrl;
  set fileUrl(String? fileUrl) => _$this._fileUrl = fileUrl;

  String? _contentType;
  String? get contentType => _$this._contentType;
  set contentType(String? contentType) => _$this._contentType = contentType;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GAttributeValueUpdateInputBuilder();

  GAttributeValueUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _richText = $v.richText?.toBuilder();
      _plainText = $v.plainText;
      _fileUrl = $v.fileUrl;
      _contentType = $v.contentType;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAttributeValueUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAttributeValueUpdateInput;
  }

  @override
  void update(void Function(GAttributeValueUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAttributeValueUpdateInput build() => _build();

  _$GAttributeValueUpdateInput _build() {
    _$GAttributeValueUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GAttributeValueUpdateInput._(
              value: value,
              richText: _richText?.build(),
              plainText: plainText,
              fileUrl: fileUrl,
              contentType: contentType,
              name: name);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'richText';
        _richText?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAttributeValueUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GBulkAttributeValueInput extends GBulkAttributeValueInput {
  @override
  final String? id;
  @override
  final BuiltList<String>? Gvalues;
  @override
  final bool? boolean;

  factory _$GBulkAttributeValueInput(
          [void Function(GBulkAttributeValueInputBuilder)? updates]) =>
      (new GBulkAttributeValueInputBuilder()..update(updates))._build();

  _$GBulkAttributeValueInput._({this.id, this.Gvalues, this.boolean})
      : super._();

  @override
  GBulkAttributeValueInput rebuild(
          void Function(GBulkAttributeValueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBulkAttributeValueInputBuilder toBuilder() =>
      new GBulkAttributeValueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBulkAttributeValueInput &&
        id == other.id &&
        Gvalues == other.Gvalues &&
        boolean == other.boolean;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, id.hashCode), Gvalues.hashCode), boolean.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBulkAttributeValueInput')
          ..add('id', id)
          ..add('Gvalues', Gvalues)
          ..add('boolean', boolean))
        .toString();
  }
}

class GBulkAttributeValueInputBuilder
    implements
        Builder<GBulkAttributeValueInput, GBulkAttributeValueInputBuilder> {
  _$GBulkAttributeValueInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  ListBuilder<String>? _Gvalues;
  ListBuilder<String> get Gvalues =>
      _$this._Gvalues ??= new ListBuilder<String>();
  set Gvalues(ListBuilder<String>? Gvalues) => _$this._Gvalues = Gvalues;

  bool? _boolean;
  bool? get boolean => _$this._boolean;
  set boolean(bool? boolean) => _$this._boolean = boolean;

  GBulkAttributeValueInputBuilder();

  GBulkAttributeValueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _Gvalues = $v.Gvalues?.toBuilder();
      _boolean = $v.boolean;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBulkAttributeValueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBulkAttributeValueInput;
  }

  @override
  void update(void Function(GBulkAttributeValueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBulkAttributeValueInput build() => _build();

  _$GBulkAttributeValueInput _build() {
    _$GBulkAttributeValueInput _$result;
    try {
      _$result = _$v ??
          new _$GBulkAttributeValueInput._(
              id: id, Gvalues: _Gvalues?.build(), boolean: boolean);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'Gvalues';
        _Gvalues?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GBulkAttributeValueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCardInput extends GCardInput {
  @override
  final String code;
  @override
  final String? cvc;
  @override
  final GMoneyInput money;

  factory _$GCardInput([void Function(GCardInputBuilder)? updates]) =>
      (new GCardInputBuilder()..update(updates))._build();

  _$GCardInput._({required this.code, this.cvc, required this.money})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(code, r'GCardInput', 'code');
    BuiltValueNullFieldError.checkNotNull(money, r'GCardInput', 'money');
  }

  @override
  GCardInput rebuild(void Function(GCardInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCardInputBuilder toBuilder() => new GCardInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCardInput &&
        code == other.code &&
        cvc == other.cvc &&
        money == other.money;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, code.hashCode), cvc.hashCode), money.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCardInput')
          ..add('code', code)
          ..add('cvc', cvc)
          ..add('money', money))
        .toString();
  }
}

class GCardInputBuilder implements Builder<GCardInput, GCardInputBuilder> {
  _$GCardInput? _$v;

  String? _code;
  String? get code => _$this._code;
  set code(String? code) => _$this._code = code;

  String? _cvc;
  String? get cvc => _$this._cvc;
  set cvc(String? cvc) => _$this._cvc = cvc;

  GMoneyInputBuilder? _money;
  GMoneyInputBuilder get money => _$this._money ??= new GMoneyInputBuilder();
  set money(GMoneyInputBuilder? money) => _$this._money = money;

  GCardInputBuilder();

  GCardInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _code = $v.code;
      _cvc = $v.cvc;
      _money = $v.money.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCardInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCardInput;
  }

  @override
  void update(void Function(GCardInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCardInput build() => _build();

  _$GCardInput _build() {
    _$GCardInput _$result;
    try {
      _$result = _$v ??
          new _$GCardInput._(
              code: BuiltValueNullFieldError.checkNotNull(
                  code, r'GCardInput', 'code'),
              cvc: cvc,
              money: money.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'money';
        money.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCardInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCatalogueInput extends GCatalogueInput {
  @override
  final BuiltList<String>? products;
  @override
  final BuiltList<String>? categories;
  @override
  final BuiltList<String>? collections;
  @override
  final BuiltList<String>? variants;

  factory _$GCatalogueInput([void Function(GCatalogueInputBuilder)? updates]) =>
      (new GCatalogueInputBuilder()..update(updates))._build();

  _$GCatalogueInput._(
      {this.products, this.categories, this.collections, this.variants})
      : super._();

  @override
  GCatalogueInput rebuild(void Function(GCatalogueInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCatalogueInputBuilder toBuilder() =>
      new GCatalogueInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCatalogueInput &&
        products == other.products &&
        categories == other.categories &&
        collections == other.collections &&
        variants == other.variants;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, products.hashCode), categories.hashCode),
            collections.hashCode),
        variants.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCatalogueInput')
          ..add('products', products)
          ..add('categories', categories)
          ..add('collections', collections)
          ..add('variants', variants))
        .toString();
  }
}

class GCatalogueInputBuilder
    implements Builder<GCatalogueInput, GCatalogueInputBuilder> {
  _$GCatalogueInput? _$v;

  ListBuilder<String>? _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String>? products) => _$this._products = products;

  ListBuilder<String>? _categories;
  ListBuilder<String> get categories =>
      _$this._categories ??= new ListBuilder<String>();
  set categories(ListBuilder<String>? categories) =>
      _$this._categories = categories;

  ListBuilder<String>? _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String>? collections) =>
      _$this._collections = collections;

  ListBuilder<String>? _variants;
  ListBuilder<String> get variants =>
      _$this._variants ??= new ListBuilder<String>();
  set variants(ListBuilder<String>? variants) => _$this._variants = variants;

  GCatalogueInputBuilder();

  GCatalogueInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _products = $v.products?.toBuilder();
      _categories = $v.categories?.toBuilder();
      _collections = $v.collections?.toBuilder();
      _variants = $v.variants?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCatalogueInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCatalogueInput;
  }

  @override
  void update(void Function(GCatalogueInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCatalogueInput build() => _build();

  _$GCatalogueInput _build() {
    _$GCatalogueInput _$result;
    try {
      _$result = _$v ??
          new _$GCatalogueInput._(
              products: _products?.build(),
              categories: _categories?.build(),
              collections: _collections?.build(),
              variants: _variants?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'products';
        _products?.build();
        _$failedField = 'categories';
        _categories?.build();
        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'variants';
        _variants?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCatalogueInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCategoryFilterInput extends GCategoryFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? ids;
  @override
  final BuiltList<String>? slugs;

  factory _$GCategoryFilterInput(
          [void Function(GCategoryFilterInputBuilder)? updates]) =>
      (new GCategoryFilterInputBuilder()..update(updates))._build();

  _$GCategoryFilterInput._({this.search, this.metadata, this.ids, this.slugs})
      : super._();

  @override
  GCategoryFilterInput rebuild(
          void Function(GCategoryFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCategoryFilterInputBuilder toBuilder() =>
      new GCategoryFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCategoryFilterInput &&
        search == other.search &&
        metadata == other.metadata &&
        ids == other.ids &&
        slugs == other.slugs;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, search.hashCode), metadata.hashCode), ids.hashCode),
        slugs.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCategoryFilterInput')
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('ids', ids)
          ..add('slugs', slugs))
        .toString();
  }
}

class GCategoryFilterInputBuilder
    implements Builder<GCategoryFilterInput, GCategoryFilterInputBuilder> {
  _$GCategoryFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  GCategoryFilterInputBuilder();

  GCategoryFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _ids = $v.ids?.toBuilder();
      _slugs = $v.slugs?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCategoryFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCategoryFilterInput;
  }

  @override
  void update(void Function(GCategoryFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCategoryFilterInput build() => _build();

  _$GCategoryFilterInput _build() {
    _$GCategoryFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GCategoryFilterInput._(
              search: search,
              metadata: _metadata?.build(),
              ids: _ids?.build(),
              slugs: _slugs?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'ids';
        _ids?.build();
        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCategoryFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCategoryInput extends GCategoryInput {
  @override
  final GJSONString? description;
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final GSeoInput? seo;
  @override
  final GUpload? backgroundImage;
  @override
  final String? backgroundImageAlt;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;

  factory _$GCategoryInput([void Function(GCategoryInputBuilder)? updates]) =>
      (new GCategoryInputBuilder()..update(updates))._build();

  _$GCategoryInput._(
      {this.description,
      this.name,
      this.slug,
      this.seo,
      this.backgroundImage,
      this.backgroundImageAlt,
      this.metadata,
      this.privateMetadata})
      : super._();

  @override
  GCategoryInput rebuild(void Function(GCategoryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCategoryInputBuilder toBuilder() =>
      new GCategoryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCategoryInput &&
        description == other.description &&
        name == other.name &&
        slug == other.slug &&
        seo == other.seo &&
        backgroundImage == other.backgroundImage &&
        backgroundImageAlt == other.backgroundImageAlt &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, description.hashCode), name.hashCode),
                            slug.hashCode),
                        seo.hashCode),
                    backgroundImage.hashCode),
                backgroundImageAlt.hashCode),
            metadata.hashCode),
        privateMetadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCategoryInput')
          ..add('description', description)
          ..add('name', name)
          ..add('slug', slug)
          ..add('seo', seo)
          ..add('backgroundImage', backgroundImage)
          ..add('backgroundImageAlt', backgroundImageAlt)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata))
        .toString();
  }
}

class GCategoryInputBuilder
    implements Builder<GCategoryInput, GCategoryInputBuilder> {
  _$GCategoryInput? _$v;

  GJSONStringBuilder? _description;
  GJSONStringBuilder get description =>
      _$this._description ??= new GJSONStringBuilder();
  set description(GJSONStringBuilder? description) =>
      _$this._description = description;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  GSeoInputBuilder? _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder? seo) => _$this._seo = seo;

  GUploadBuilder? _backgroundImage;
  GUploadBuilder get backgroundImage =>
      _$this._backgroundImage ??= new GUploadBuilder();
  set backgroundImage(GUploadBuilder? backgroundImage) =>
      _$this._backgroundImage = backgroundImage;

  String? _backgroundImageAlt;
  String? get backgroundImageAlt => _$this._backgroundImageAlt;
  set backgroundImageAlt(String? backgroundImageAlt) =>
      _$this._backgroundImageAlt = backgroundImageAlt;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  GCategoryInputBuilder();

  GCategoryInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _description = $v.description?.toBuilder();
      _name = $v.name;
      _slug = $v.slug;
      _seo = $v.seo?.toBuilder();
      _backgroundImage = $v.backgroundImage?.toBuilder();
      _backgroundImageAlt = $v.backgroundImageAlt;
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCategoryInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCategoryInput;
  }

  @override
  void update(void Function(GCategoryInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCategoryInput build() => _build();

  _$GCategoryInput _build() {
    _$GCategoryInput _$result;
    try {
      _$result = _$v ??
          new _$GCategoryInput._(
              description: _description?.build(),
              name: name,
              slug: slug,
              seo: _seo?.build(),
              backgroundImage: _backgroundImage?.build(),
              backgroundImageAlt: backgroundImageAlt,
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'description';
        _description?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'backgroundImage';
        _backgroundImage?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCategoryInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCategorySortingInput extends GCategorySortingInput {
  @override
  final GOrderDirection direction;
  @override
  final String? channel;
  @override
  final GCategorySortField field;

  factory _$GCategorySortingInput(
          [void Function(GCategorySortingInputBuilder)? updates]) =>
      (new GCategorySortingInputBuilder()..update(updates))._build();

  _$GCategorySortingInput._(
      {required this.direction, this.channel, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GCategorySortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GCategorySortingInput', 'field');
  }

  @override
  GCategorySortingInput rebuild(
          void Function(GCategorySortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCategorySortingInputBuilder toBuilder() =>
      new GCategorySortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCategorySortingInput &&
        direction == other.direction &&
        channel == other.channel &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, direction.hashCode), channel.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCategorySortingInput')
          ..add('direction', direction)
          ..add('channel', channel)
          ..add('field', field))
        .toString();
  }
}

class GCategorySortingInputBuilder
    implements Builder<GCategorySortingInput, GCategorySortingInputBuilder> {
  _$GCategorySortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GCategorySortField? _field;
  GCategorySortField? get field => _$this._field;
  set field(GCategorySortField? field) => _$this._field = field;

  GCategorySortingInputBuilder();

  GCategorySortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _channel = $v.channel;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCategorySortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCategorySortingInput;
  }

  @override
  void update(void Function(GCategorySortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCategorySortingInput build() => _build();

  _$GCategorySortingInput _build() {
    final _$result = _$v ??
        new _$GCategorySortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GCategorySortingInput', 'direction'),
            channel: channel,
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GCategorySortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GChannelCreateInput extends GChannelCreateInput {
  @override
  final bool? isActive;
  @override
  final GStockSettingsInput? stockSettings;
  @override
  final BuiltList<String>? addShippingZones;
  @override
  final BuiltList<String>? addWarehouses;
  @override
  final String name;
  @override
  final String slug;
  @override
  final String currencyCode;
  @override
  final GCountryCode defaultCountry;

  factory _$GChannelCreateInput(
          [void Function(GChannelCreateInputBuilder)? updates]) =>
      (new GChannelCreateInputBuilder()..update(updates))._build();

  _$GChannelCreateInput._(
      {this.isActive,
      this.stockSettings,
      this.addShippingZones,
      this.addWarehouses,
      required this.name,
      required this.slug,
      required this.currencyCode,
      required this.defaultCountry})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(name, r'GChannelCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(slug, r'GChannelCreateInput', 'slug');
    BuiltValueNullFieldError.checkNotNull(
        currencyCode, r'GChannelCreateInput', 'currencyCode');
    BuiltValueNullFieldError.checkNotNull(
        defaultCountry, r'GChannelCreateInput', 'defaultCountry');
  }

  @override
  GChannelCreateInput rebuild(
          void Function(GChannelCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GChannelCreateInputBuilder toBuilder() =>
      new GChannelCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GChannelCreateInput &&
        isActive == other.isActive &&
        stockSettings == other.stockSettings &&
        addShippingZones == other.addShippingZones &&
        addWarehouses == other.addWarehouses &&
        name == other.name &&
        slug == other.slug &&
        currencyCode == other.currencyCode &&
        defaultCountry == other.defaultCountry;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, isActive.hashCode),
                                stockSettings.hashCode),
                            addShippingZones.hashCode),
                        addWarehouses.hashCode),
                    name.hashCode),
                slug.hashCode),
            currencyCode.hashCode),
        defaultCountry.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GChannelCreateInput')
          ..add('isActive', isActive)
          ..add('stockSettings', stockSettings)
          ..add('addShippingZones', addShippingZones)
          ..add('addWarehouses', addWarehouses)
          ..add('name', name)
          ..add('slug', slug)
          ..add('currencyCode', currencyCode)
          ..add('defaultCountry', defaultCountry))
        .toString();
  }
}

class GChannelCreateInputBuilder
    implements Builder<GChannelCreateInput, GChannelCreateInputBuilder> {
  _$GChannelCreateInput? _$v;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  GStockSettingsInputBuilder? _stockSettings;
  GStockSettingsInputBuilder get stockSettings =>
      _$this._stockSettings ??= new GStockSettingsInputBuilder();
  set stockSettings(GStockSettingsInputBuilder? stockSettings) =>
      _$this._stockSettings = stockSettings;

  ListBuilder<String>? _addShippingZones;
  ListBuilder<String> get addShippingZones =>
      _$this._addShippingZones ??= new ListBuilder<String>();
  set addShippingZones(ListBuilder<String>? addShippingZones) =>
      _$this._addShippingZones = addShippingZones;

  ListBuilder<String>? _addWarehouses;
  ListBuilder<String> get addWarehouses =>
      _$this._addWarehouses ??= new ListBuilder<String>();
  set addWarehouses(ListBuilder<String>? addWarehouses) =>
      _$this._addWarehouses = addWarehouses;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _currencyCode;
  String? get currencyCode => _$this._currencyCode;
  set currencyCode(String? currencyCode) => _$this._currencyCode = currencyCode;

  GCountryCode? _defaultCountry;
  GCountryCode? get defaultCountry => _$this._defaultCountry;
  set defaultCountry(GCountryCode? defaultCountry) =>
      _$this._defaultCountry = defaultCountry;

  GChannelCreateInputBuilder();

  GChannelCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _isActive = $v.isActive;
      _stockSettings = $v.stockSettings?.toBuilder();
      _addShippingZones = $v.addShippingZones?.toBuilder();
      _addWarehouses = $v.addWarehouses?.toBuilder();
      _name = $v.name;
      _slug = $v.slug;
      _currencyCode = $v.currencyCode;
      _defaultCountry = $v.defaultCountry;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GChannelCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GChannelCreateInput;
  }

  @override
  void update(void Function(GChannelCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GChannelCreateInput build() => _build();

  _$GChannelCreateInput _build() {
    _$GChannelCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GChannelCreateInput._(
              isActive: isActive,
              stockSettings: _stockSettings?.build(),
              addShippingZones: _addShippingZones?.build(),
              addWarehouses: _addWarehouses?.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GChannelCreateInput', 'name'),
              slug: BuiltValueNullFieldError.checkNotNull(
                  slug, r'GChannelCreateInput', 'slug'),
              currencyCode: BuiltValueNullFieldError.checkNotNull(
                  currencyCode, r'GChannelCreateInput', 'currencyCode'),
              defaultCountry: BuiltValueNullFieldError.checkNotNull(
                  defaultCountry, r'GChannelCreateInput', 'defaultCountry'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'stockSettings';
        _stockSettings?.build();
        _$failedField = 'addShippingZones';
        _addShippingZones?.build();
        _$failedField = 'addWarehouses';
        _addWarehouses?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GChannelCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GChannelDeleteInput extends GChannelDeleteInput {
  @override
  final String channelId;

  factory _$GChannelDeleteInput(
          [void Function(GChannelDeleteInputBuilder)? updates]) =>
      (new GChannelDeleteInputBuilder()..update(updates))._build();

  _$GChannelDeleteInput._({required this.channelId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        channelId, r'GChannelDeleteInput', 'channelId');
  }

  @override
  GChannelDeleteInput rebuild(
          void Function(GChannelDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GChannelDeleteInputBuilder toBuilder() =>
      new GChannelDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GChannelDeleteInput && channelId == other.channelId;
  }

  @override
  int get hashCode {
    return $jf($jc(0, channelId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GChannelDeleteInput')
          ..add('channelId', channelId))
        .toString();
  }
}

class GChannelDeleteInputBuilder
    implements Builder<GChannelDeleteInput, GChannelDeleteInputBuilder> {
  _$GChannelDeleteInput? _$v;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  GChannelDeleteInputBuilder();

  GChannelDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _channelId = $v.channelId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GChannelDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GChannelDeleteInput;
  }

  @override
  void update(void Function(GChannelDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GChannelDeleteInput build() => _build();

  _$GChannelDeleteInput _build() {
    final _$result = _$v ??
        new _$GChannelDeleteInput._(
            channelId: BuiltValueNullFieldError.checkNotNull(
                channelId, r'GChannelDeleteInput', 'channelId'));
    replace(_$result);
    return _$result;
  }
}

class _$GChannelUpdateInput extends GChannelUpdateInput {
  @override
  final bool? isActive;
  @override
  final GStockSettingsInput? stockSettings;
  @override
  final BuiltList<String>? addShippingZones;
  @override
  final BuiltList<String>? addWarehouses;
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final GCountryCode? defaultCountry;
  @override
  final BuiltList<String>? removeShippingZones;
  @override
  final BuiltList<String>? removeWarehouses;

  factory _$GChannelUpdateInput(
          [void Function(GChannelUpdateInputBuilder)? updates]) =>
      (new GChannelUpdateInputBuilder()..update(updates))._build();

  _$GChannelUpdateInput._(
      {this.isActive,
      this.stockSettings,
      this.addShippingZones,
      this.addWarehouses,
      this.name,
      this.slug,
      this.defaultCountry,
      this.removeShippingZones,
      this.removeWarehouses})
      : super._();

  @override
  GChannelUpdateInput rebuild(
          void Function(GChannelUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GChannelUpdateInputBuilder toBuilder() =>
      new GChannelUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GChannelUpdateInput &&
        isActive == other.isActive &&
        stockSettings == other.stockSettings &&
        addShippingZones == other.addShippingZones &&
        addWarehouses == other.addWarehouses &&
        name == other.name &&
        slug == other.slug &&
        defaultCountry == other.defaultCountry &&
        removeShippingZones == other.removeShippingZones &&
        removeWarehouses == other.removeWarehouses;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc(0, isActive.hashCode),
                                    stockSettings.hashCode),
                                addShippingZones.hashCode),
                            addWarehouses.hashCode),
                        name.hashCode),
                    slug.hashCode),
                defaultCountry.hashCode),
            removeShippingZones.hashCode),
        removeWarehouses.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GChannelUpdateInput')
          ..add('isActive', isActive)
          ..add('stockSettings', stockSettings)
          ..add('addShippingZones', addShippingZones)
          ..add('addWarehouses', addWarehouses)
          ..add('name', name)
          ..add('slug', slug)
          ..add('defaultCountry', defaultCountry)
          ..add('removeShippingZones', removeShippingZones)
          ..add('removeWarehouses', removeWarehouses))
        .toString();
  }
}

class GChannelUpdateInputBuilder
    implements Builder<GChannelUpdateInput, GChannelUpdateInputBuilder> {
  _$GChannelUpdateInput? _$v;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  GStockSettingsInputBuilder? _stockSettings;
  GStockSettingsInputBuilder get stockSettings =>
      _$this._stockSettings ??= new GStockSettingsInputBuilder();
  set stockSettings(GStockSettingsInputBuilder? stockSettings) =>
      _$this._stockSettings = stockSettings;

  ListBuilder<String>? _addShippingZones;
  ListBuilder<String> get addShippingZones =>
      _$this._addShippingZones ??= new ListBuilder<String>();
  set addShippingZones(ListBuilder<String>? addShippingZones) =>
      _$this._addShippingZones = addShippingZones;

  ListBuilder<String>? _addWarehouses;
  ListBuilder<String> get addWarehouses =>
      _$this._addWarehouses ??= new ListBuilder<String>();
  set addWarehouses(ListBuilder<String>? addWarehouses) =>
      _$this._addWarehouses = addWarehouses;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  GCountryCode? _defaultCountry;
  GCountryCode? get defaultCountry => _$this._defaultCountry;
  set defaultCountry(GCountryCode? defaultCountry) =>
      _$this._defaultCountry = defaultCountry;

  ListBuilder<String>? _removeShippingZones;
  ListBuilder<String> get removeShippingZones =>
      _$this._removeShippingZones ??= new ListBuilder<String>();
  set removeShippingZones(ListBuilder<String>? removeShippingZones) =>
      _$this._removeShippingZones = removeShippingZones;

  ListBuilder<String>? _removeWarehouses;
  ListBuilder<String> get removeWarehouses =>
      _$this._removeWarehouses ??= new ListBuilder<String>();
  set removeWarehouses(ListBuilder<String>? removeWarehouses) =>
      _$this._removeWarehouses = removeWarehouses;

  GChannelUpdateInputBuilder();

  GChannelUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _isActive = $v.isActive;
      _stockSettings = $v.stockSettings?.toBuilder();
      _addShippingZones = $v.addShippingZones?.toBuilder();
      _addWarehouses = $v.addWarehouses?.toBuilder();
      _name = $v.name;
      _slug = $v.slug;
      _defaultCountry = $v.defaultCountry;
      _removeShippingZones = $v.removeShippingZones?.toBuilder();
      _removeWarehouses = $v.removeWarehouses?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GChannelUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GChannelUpdateInput;
  }

  @override
  void update(void Function(GChannelUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GChannelUpdateInput build() => _build();

  _$GChannelUpdateInput _build() {
    _$GChannelUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GChannelUpdateInput._(
              isActive: isActive,
              stockSettings: _stockSettings?.build(),
              addShippingZones: _addShippingZones?.build(),
              addWarehouses: _addWarehouses?.build(),
              name: name,
              slug: slug,
              defaultCountry: defaultCountry,
              removeShippingZones: _removeShippingZones?.build(),
              removeWarehouses: _removeWarehouses?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'stockSettings';
        _stockSettings?.build();
        _$failedField = 'addShippingZones';
        _addShippingZones?.build();
        _$failedField = 'addWarehouses';
        _addWarehouses?.build();

        _$failedField = 'removeShippingZones';
        _removeShippingZones?.build();
        _$failedField = 'removeWarehouses';
        _removeWarehouses?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GChannelUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutAddressValidationRules
    extends GCheckoutAddressValidationRules {
  @override
  final bool? checkRequiredFields;
  @override
  final bool? checkFieldsFormat;
  @override
  final bool? enableFieldsNormalization;

  factory _$GCheckoutAddressValidationRules(
          [void Function(GCheckoutAddressValidationRulesBuilder)? updates]) =>
      (new GCheckoutAddressValidationRulesBuilder()..update(updates))._build();

  _$GCheckoutAddressValidationRules._(
      {this.checkRequiredFields,
      this.checkFieldsFormat,
      this.enableFieldsNormalization})
      : super._();

  @override
  GCheckoutAddressValidationRules rebuild(
          void Function(GCheckoutAddressValidationRulesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutAddressValidationRulesBuilder toBuilder() =>
      new GCheckoutAddressValidationRulesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutAddressValidationRules &&
        checkRequiredFields == other.checkRequiredFields &&
        checkFieldsFormat == other.checkFieldsFormat &&
        enableFieldsNormalization == other.enableFieldsNormalization;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, checkRequiredFields.hashCode), checkFieldsFormat.hashCode),
        enableFieldsNormalization.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCheckoutAddressValidationRules')
          ..add('checkRequiredFields', checkRequiredFields)
          ..add('checkFieldsFormat', checkFieldsFormat)
          ..add('enableFieldsNormalization', enableFieldsNormalization))
        .toString();
  }
}

class GCheckoutAddressValidationRulesBuilder
    implements
        Builder<GCheckoutAddressValidationRules,
            GCheckoutAddressValidationRulesBuilder> {
  _$GCheckoutAddressValidationRules? _$v;

  bool? _checkRequiredFields;
  bool? get checkRequiredFields => _$this._checkRequiredFields;
  set checkRequiredFields(bool? checkRequiredFields) =>
      _$this._checkRequiredFields = checkRequiredFields;

  bool? _checkFieldsFormat;
  bool? get checkFieldsFormat => _$this._checkFieldsFormat;
  set checkFieldsFormat(bool? checkFieldsFormat) =>
      _$this._checkFieldsFormat = checkFieldsFormat;

  bool? _enableFieldsNormalization;
  bool? get enableFieldsNormalization => _$this._enableFieldsNormalization;
  set enableFieldsNormalization(bool? enableFieldsNormalization) =>
      _$this._enableFieldsNormalization = enableFieldsNormalization;

  GCheckoutAddressValidationRulesBuilder();

  GCheckoutAddressValidationRulesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _checkRequiredFields = $v.checkRequiredFields;
      _checkFieldsFormat = $v.checkFieldsFormat;
      _enableFieldsNormalization = $v.enableFieldsNormalization;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutAddressValidationRules other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCheckoutAddressValidationRules;
  }

  @override
  void update(void Function(GCheckoutAddressValidationRulesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCheckoutAddressValidationRules build() => _build();

  _$GCheckoutAddressValidationRules _build() {
    final _$result = _$v ??
        new _$GCheckoutAddressValidationRules._(
            checkRequiredFields: checkRequiredFields,
            checkFieldsFormat: checkFieldsFormat,
            enableFieldsNormalization: enableFieldsNormalization);
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutCreateInput extends GCheckoutCreateInput {
  @override
  final String? channel;
  @override
  final BuiltList<GCheckoutLineInput> lines;
  @override
  final String? email;
  @override
  final GAddressInput? shippingAddress;
  @override
  final GAddressInput? billingAddress;
  @override
  final GLanguageCodeEnum? languageCode;
  @override
  final GCheckoutValidationRules? validationRules;

  factory _$GCheckoutCreateInput(
          [void Function(GCheckoutCreateInputBuilder)? updates]) =>
      (new GCheckoutCreateInputBuilder()..update(updates))._build();

  _$GCheckoutCreateInput._(
      {this.channel,
      required this.lines,
      this.email,
      this.shippingAddress,
      this.billingAddress,
      this.languageCode,
      this.validationRules})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        lines, r'GCheckoutCreateInput', 'lines');
  }

  @override
  GCheckoutCreateInput rebuild(
          void Function(GCheckoutCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutCreateInputBuilder toBuilder() =>
      new GCheckoutCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutCreateInput &&
        channel == other.channel &&
        lines == other.lines &&
        email == other.email &&
        shippingAddress == other.shippingAddress &&
        billingAddress == other.billingAddress &&
        languageCode == other.languageCode &&
        validationRules == other.validationRules;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, channel.hashCode), lines.hashCode),
                        email.hashCode),
                    shippingAddress.hashCode),
                billingAddress.hashCode),
            languageCode.hashCode),
        validationRules.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCheckoutCreateInput')
          ..add('channel', channel)
          ..add('lines', lines)
          ..add('email', email)
          ..add('shippingAddress', shippingAddress)
          ..add('billingAddress', billingAddress)
          ..add('languageCode', languageCode)
          ..add('validationRules', validationRules))
        .toString();
  }
}

class GCheckoutCreateInputBuilder
    implements Builder<GCheckoutCreateInput, GCheckoutCreateInputBuilder> {
  _$GCheckoutCreateInput? _$v;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  ListBuilder<GCheckoutLineInput>? _lines;
  ListBuilder<GCheckoutLineInput> get lines =>
      _$this._lines ??= new ListBuilder<GCheckoutLineInput>();
  set lines(ListBuilder<GCheckoutLineInput>? lines) => _$this._lines = lines;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  GAddressInputBuilder? _shippingAddress;
  GAddressInputBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GAddressInputBuilder();
  set shippingAddress(GAddressInputBuilder? shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  GAddressInputBuilder? _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder? billingAddress) =>
      _$this._billingAddress = billingAddress;

  GLanguageCodeEnum? _languageCode;
  GLanguageCodeEnum? get languageCode => _$this._languageCode;
  set languageCode(GLanguageCodeEnum? languageCode) =>
      _$this._languageCode = languageCode;

  GCheckoutValidationRulesBuilder? _validationRules;
  GCheckoutValidationRulesBuilder get validationRules =>
      _$this._validationRules ??= new GCheckoutValidationRulesBuilder();
  set validationRules(GCheckoutValidationRulesBuilder? validationRules) =>
      _$this._validationRules = validationRules;

  GCheckoutCreateInputBuilder();

  GCheckoutCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _channel = $v.channel;
      _lines = $v.lines.toBuilder();
      _email = $v.email;
      _shippingAddress = $v.shippingAddress?.toBuilder();
      _billingAddress = $v.billingAddress?.toBuilder();
      _languageCode = $v.languageCode;
      _validationRules = $v.validationRules?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCheckoutCreateInput;
  }

  @override
  void update(void Function(GCheckoutCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCheckoutCreateInput build() => _build();

  _$GCheckoutCreateInput _build() {
    _$GCheckoutCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GCheckoutCreateInput._(
              channel: channel,
              lines: lines.build(),
              email: email,
              shippingAddress: _shippingAddress?.build(),
              billingAddress: _billingAddress?.build(),
              languageCode: languageCode,
              validationRules: _validationRules?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'lines';
        lines.build();

        _$failedField = 'shippingAddress';
        _shippingAddress?.build();
        _$failedField = 'billingAddress';
        _billingAddress?.build();

        _$failedField = 'validationRules';
        _validationRules?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCheckoutCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutFilterInput extends GCheckoutFilterInput {
  @override
  final String? customer;
  @override
  final GDateRangeInput? created;
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? channels;

  factory _$GCheckoutFilterInput(
          [void Function(GCheckoutFilterInputBuilder)? updates]) =>
      (new GCheckoutFilterInputBuilder()..update(updates))._build();

  _$GCheckoutFilterInput._(
      {this.customer, this.created, this.search, this.metadata, this.channels})
      : super._();

  @override
  GCheckoutFilterInput rebuild(
          void Function(GCheckoutFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutFilterInputBuilder toBuilder() =>
      new GCheckoutFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutFilterInput &&
        customer == other.customer &&
        created == other.created &&
        search == other.search &&
        metadata == other.metadata &&
        channels == other.channels;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, customer.hashCode), created.hashCode),
                search.hashCode),
            metadata.hashCode),
        channels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCheckoutFilterInput')
          ..add('customer', customer)
          ..add('created', created)
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('channels', channels))
        .toString();
  }
}

class GCheckoutFilterInputBuilder
    implements Builder<GCheckoutFilterInput, GCheckoutFilterInputBuilder> {
  _$GCheckoutFilterInput? _$v;

  String? _customer;
  String? get customer => _$this._customer;
  set customer(String? customer) => _$this._customer = customer;

  GDateRangeInputBuilder? _created;
  GDateRangeInputBuilder get created =>
      _$this._created ??= new GDateRangeInputBuilder();
  set created(GDateRangeInputBuilder? created) => _$this._created = created;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _channels;
  ListBuilder<String> get channels =>
      _$this._channels ??= new ListBuilder<String>();
  set channels(ListBuilder<String>? channels) => _$this._channels = channels;

  GCheckoutFilterInputBuilder();

  GCheckoutFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _customer = $v.customer;
      _created = $v.created?.toBuilder();
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _channels = $v.channels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCheckoutFilterInput;
  }

  @override
  void update(void Function(GCheckoutFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCheckoutFilterInput build() => _build();

  _$GCheckoutFilterInput _build() {
    _$GCheckoutFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GCheckoutFilterInput._(
              customer: customer,
              created: _created?.build(),
              search: search,
              metadata: _metadata?.build(),
              channels: _channels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'created';
        _created?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'channels';
        _channels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCheckoutFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutLineInput extends GCheckoutLineInput {
  @override
  final int quantity;
  @override
  final String variantId;
  @override
  final GPositiveDecimal? price;
  @override
  final bool? forceNewLine;
  @override
  final BuiltList<GMetadataInput>? metadata;

  factory _$GCheckoutLineInput(
          [void Function(GCheckoutLineInputBuilder)? updates]) =>
      (new GCheckoutLineInputBuilder()..update(updates))._build();

  _$GCheckoutLineInput._(
      {required this.quantity,
      required this.variantId,
      this.price,
      this.forceNewLine,
      this.metadata})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        quantity, r'GCheckoutLineInput', 'quantity');
    BuiltValueNullFieldError.checkNotNull(
        variantId, r'GCheckoutLineInput', 'variantId');
  }

  @override
  GCheckoutLineInput rebuild(
          void Function(GCheckoutLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutLineInputBuilder toBuilder() =>
      new GCheckoutLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutLineInput &&
        quantity == other.quantity &&
        variantId == other.variantId &&
        price == other.price &&
        forceNewLine == other.forceNewLine &&
        metadata == other.metadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, quantity.hashCode), variantId.hashCode),
                price.hashCode),
            forceNewLine.hashCode),
        metadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCheckoutLineInput')
          ..add('quantity', quantity)
          ..add('variantId', variantId)
          ..add('price', price)
          ..add('forceNewLine', forceNewLine)
          ..add('metadata', metadata))
        .toString();
  }
}

class GCheckoutLineInputBuilder
    implements Builder<GCheckoutLineInput, GCheckoutLineInputBuilder> {
  _$GCheckoutLineInput? _$v;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  String? _variantId;
  String? get variantId => _$this._variantId;
  set variantId(String? variantId) => _$this._variantId = variantId;

  GPositiveDecimalBuilder? _price;
  GPositiveDecimalBuilder get price =>
      _$this._price ??= new GPositiveDecimalBuilder();
  set price(GPositiveDecimalBuilder? price) => _$this._price = price;

  bool? _forceNewLine;
  bool? get forceNewLine => _$this._forceNewLine;
  set forceNewLine(bool? forceNewLine) => _$this._forceNewLine = forceNewLine;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  GCheckoutLineInputBuilder();

  GCheckoutLineInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _quantity = $v.quantity;
      _variantId = $v.variantId;
      _price = $v.price?.toBuilder();
      _forceNewLine = $v.forceNewLine;
      _metadata = $v.metadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutLineInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCheckoutLineInput;
  }

  @override
  void update(void Function(GCheckoutLineInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCheckoutLineInput build() => _build();

  _$GCheckoutLineInput _build() {
    _$GCheckoutLineInput _$result;
    try {
      _$result = _$v ??
          new _$GCheckoutLineInput._(
              quantity: BuiltValueNullFieldError.checkNotNull(
                  quantity, r'GCheckoutLineInput', 'quantity'),
              variantId: BuiltValueNullFieldError.checkNotNull(
                  variantId, r'GCheckoutLineInput', 'variantId'),
              price: _price?.build(),
              forceNewLine: forceNewLine,
              metadata: _metadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'price';
        _price?.build();

        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCheckoutLineInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutLineUpdateInput extends GCheckoutLineUpdateInput {
  @override
  final String? variantId;
  @override
  final int? quantity;
  @override
  final GPositiveDecimal? price;
  @override
  final String? lineId;

  factory _$GCheckoutLineUpdateInput(
          [void Function(GCheckoutLineUpdateInputBuilder)? updates]) =>
      (new GCheckoutLineUpdateInputBuilder()..update(updates))._build();

  _$GCheckoutLineUpdateInput._(
      {this.variantId, this.quantity, this.price, this.lineId})
      : super._();

  @override
  GCheckoutLineUpdateInput rebuild(
          void Function(GCheckoutLineUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutLineUpdateInputBuilder toBuilder() =>
      new GCheckoutLineUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutLineUpdateInput &&
        variantId == other.variantId &&
        quantity == other.quantity &&
        price == other.price &&
        lineId == other.lineId;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, variantId.hashCode), quantity.hashCode), price.hashCode),
        lineId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCheckoutLineUpdateInput')
          ..add('variantId', variantId)
          ..add('quantity', quantity)
          ..add('price', price)
          ..add('lineId', lineId))
        .toString();
  }
}

class GCheckoutLineUpdateInputBuilder
    implements
        Builder<GCheckoutLineUpdateInput, GCheckoutLineUpdateInputBuilder> {
  _$GCheckoutLineUpdateInput? _$v;

  String? _variantId;
  String? get variantId => _$this._variantId;
  set variantId(String? variantId) => _$this._variantId = variantId;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  GPositiveDecimalBuilder? _price;
  GPositiveDecimalBuilder get price =>
      _$this._price ??= new GPositiveDecimalBuilder();
  set price(GPositiveDecimalBuilder? price) => _$this._price = price;

  String? _lineId;
  String? get lineId => _$this._lineId;
  set lineId(String? lineId) => _$this._lineId = lineId;

  GCheckoutLineUpdateInputBuilder();

  GCheckoutLineUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _variantId = $v.variantId;
      _quantity = $v.quantity;
      _price = $v.price?.toBuilder();
      _lineId = $v.lineId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutLineUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCheckoutLineUpdateInput;
  }

  @override
  void update(void Function(GCheckoutLineUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCheckoutLineUpdateInput build() => _build();

  _$GCheckoutLineUpdateInput _build() {
    _$GCheckoutLineUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GCheckoutLineUpdateInput._(
              variantId: variantId,
              quantity: quantity,
              price: _price?.build(),
              lineId: lineId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'price';
        _price?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCheckoutLineUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutSortingInput extends GCheckoutSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GCheckoutSortField field;

  factory _$GCheckoutSortingInput(
          [void Function(GCheckoutSortingInputBuilder)? updates]) =>
      (new GCheckoutSortingInputBuilder()..update(updates))._build();

  _$GCheckoutSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GCheckoutSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GCheckoutSortingInput', 'field');
  }

  @override
  GCheckoutSortingInput rebuild(
          void Function(GCheckoutSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutSortingInputBuilder toBuilder() =>
      new GCheckoutSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCheckoutSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GCheckoutSortingInputBuilder
    implements Builder<GCheckoutSortingInput, GCheckoutSortingInputBuilder> {
  _$GCheckoutSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GCheckoutSortField? _field;
  GCheckoutSortField? get field => _$this._field;
  set field(GCheckoutSortField? field) => _$this._field = field;

  GCheckoutSortingInputBuilder();

  GCheckoutSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCheckoutSortingInput;
  }

  @override
  void update(void Function(GCheckoutSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCheckoutSortingInput build() => _build();

  _$GCheckoutSortingInput _build() {
    final _$result = _$v ??
        new _$GCheckoutSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GCheckoutSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GCheckoutSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GCheckoutValidationRules extends GCheckoutValidationRules {
  @override
  final GCheckoutAddressValidationRules? shippingAddress;
  @override
  final GCheckoutAddressValidationRules? billingAddress;

  factory _$GCheckoutValidationRules(
          [void Function(GCheckoutValidationRulesBuilder)? updates]) =>
      (new GCheckoutValidationRulesBuilder()..update(updates))._build();

  _$GCheckoutValidationRules._({this.shippingAddress, this.billingAddress})
      : super._();

  @override
  GCheckoutValidationRules rebuild(
          void Function(GCheckoutValidationRulesBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCheckoutValidationRulesBuilder toBuilder() =>
      new GCheckoutValidationRulesBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCheckoutValidationRules &&
        shippingAddress == other.shippingAddress &&
        billingAddress == other.billingAddress;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, shippingAddress.hashCode), billingAddress.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCheckoutValidationRules')
          ..add('shippingAddress', shippingAddress)
          ..add('billingAddress', billingAddress))
        .toString();
  }
}

class GCheckoutValidationRulesBuilder
    implements
        Builder<GCheckoutValidationRules, GCheckoutValidationRulesBuilder> {
  _$GCheckoutValidationRules? _$v;

  GCheckoutAddressValidationRulesBuilder? _shippingAddress;
  GCheckoutAddressValidationRulesBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GCheckoutAddressValidationRulesBuilder();
  set shippingAddress(
          GCheckoutAddressValidationRulesBuilder? shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  GCheckoutAddressValidationRulesBuilder? _billingAddress;
  GCheckoutAddressValidationRulesBuilder get billingAddress =>
      _$this._billingAddress ??= new GCheckoutAddressValidationRulesBuilder();
  set billingAddress(GCheckoutAddressValidationRulesBuilder? billingAddress) =>
      _$this._billingAddress = billingAddress;

  GCheckoutValidationRulesBuilder();

  GCheckoutValidationRulesBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _shippingAddress = $v.shippingAddress?.toBuilder();
      _billingAddress = $v.billingAddress?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCheckoutValidationRules other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCheckoutValidationRules;
  }

  @override
  void update(void Function(GCheckoutValidationRulesBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCheckoutValidationRules build() => _build();

  _$GCheckoutValidationRules _build() {
    _$GCheckoutValidationRules _$result;
    try {
      _$result = _$v ??
          new _$GCheckoutValidationRules._(
              shippingAddress: _shippingAddress?.build(),
              billingAddress: _billingAddress?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'shippingAddress';
        _shippingAddress?.build();
        _$failedField = 'billingAddress';
        _billingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCheckoutValidationRules', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionChannelListingUpdateInput
    extends GCollectionChannelListingUpdateInput {
  @override
  final BuiltList<GPublishableChannelListingInput>? addChannels;
  @override
  final BuiltList<String>? removeChannels;

  factory _$GCollectionChannelListingUpdateInput(
          [void Function(GCollectionChannelListingUpdateInputBuilder)?
              updates]) =>
      (new GCollectionChannelListingUpdateInputBuilder()..update(updates))
          ._build();

  _$GCollectionChannelListingUpdateInput._(
      {this.addChannels, this.removeChannels})
      : super._();

  @override
  GCollectionChannelListingUpdateInput rebuild(
          void Function(GCollectionChannelListingUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionChannelListingUpdateInputBuilder toBuilder() =>
      new GCollectionChannelListingUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionChannelListingUpdateInput &&
        addChannels == other.addChannels &&
        removeChannels == other.removeChannels;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, addChannels.hashCode), removeChannels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCollectionChannelListingUpdateInput')
          ..add('addChannels', addChannels)
          ..add('removeChannels', removeChannels))
        .toString();
  }
}

class GCollectionChannelListingUpdateInputBuilder
    implements
        Builder<GCollectionChannelListingUpdateInput,
            GCollectionChannelListingUpdateInputBuilder> {
  _$GCollectionChannelListingUpdateInput? _$v;

  ListBuilder<GPublishableChannelListingInput>? _addChannels;
  ListBuilder<GPublishableChannelListingInput> get addChannels =>
      _$this._addChannels ??=
          new ListBuilder<GPublishableChannelListingInput>();
  set addChannels(ListBuilder<GPublishableChannelListingInput>? addChannels) =>
      _$this._addChannels = addChannels;

  ListBuilder<String>? _removeChannels;
  ListBuilder<String> get removeChannels =>
      _$this._removeChannels ??= new ListBuilder<String>();
  set removeChannels(ListBuilder<String>? removeChannels) =>
      _$this._removeChannels = removeChannels;

  GCollectionChannelListingUpdateInputBuilder();

  GCollectionChannelListingUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _addChannels = $v.addChannels?.toBuilder();
      _removeChannels = $v.removeChannels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionChannelListingUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCollectionChannelListingUpdateInput;
  }

  @override
  void update(
      void Function(GCollectionChannelListingUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCollectionChannelListingUpdateInput build() => _build();

  _$GCollectionChannelListingUpdateInput _build() {
    _$GCollectionChannelListingUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GCollectionChannelListingUpdateInput._(
              addChannels: _addChannels?.build(),
              removeChannels: _removeChannels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addChannels';
        _addChannels?.build();
        _$failedField = 'removeChannels';
        _removeChannels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCollectionChannelListingUpdateInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionCreateInput extends GCollectionCreateInput {
  @override
  final bool? isPublished;
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final GJSONString? description;
  @override
  final GUpload? backgroundImage;
  @override
  final String? backgroundImageAlt;
  @override
  final GSeoInput? seo;
  @override
  final GDate? publicationDate;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;
  @override
  final BuiltList<String>? products;

  factory _$GCollectionCreateInput(
          [void Function(GCollectionCreateInputBuilder)? updates]) =>
      (new GCollectionCreateInputBuilder()..update(updates))._build();

  _$GCollectionCreateInput._(
      {this.isPublished,
      this.name,
      this.slug,
      this.description,
      this.backgroundImage,
      this.backgroundImageAlt,
      this.seo,
      this.publicationDate,
      this.metadata,
      this.privateMetadata,
      this.products})
      : super._();

  @override
  GCollectionCreateInput rebuild(
          void Function(GCollectionCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionCreateInputBuilder toBuilder() =>
      new GCollectionCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionCreateInput &&
        isPublished == other.isPublished &&
        name == other.name &&
        slug == other.slug &&
        description == other.description &&
        backgroundImage == other.backgroundImage &&
        backgroundImageAlt == other.backgroundImageAlt &&
        seo == other.seo &&
        publicationDate == other.publicationDate &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata &&
        products == other.products;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, isPublished.hashCode),
                                            name.hashCode),
                                        slug.hashCode),
                                    description.hashCode),
                                backgroundImage.hashCode),
                            backgroundImageAlt.hashCode),
                        seo.hashCode),
                    publicationDate.hashCode),
                metadata.hashCode),
            privateMetadata.hashCode),
        products.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCollectionCreateInput')
          ..add('isPublished', isPublished)
          ..add('name', name)
          ..add('slug', slug)
          ..add('description', description)
          ..add('backgroundImage', backgroundImage)
          ..add('backgroundImageAlt', backgroundImageAlt)
          ..add('seo', seo)
          ..add('publicationDate', publicationDate)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata)
          ..add('products', products))
        .toString();
  }
}

class GCollectionCreateInputBuilder
    implements Builder<GCollectionCreateInput, GCollectionCreateInputBuilder> {
  _$GCollectionCreateInput? _$v;

  bool? _isPublished;
  bool? get isPublished => _$this._isPublished;
  set isPublished(bool? isPublished) => _$this._isPublished = isPublished;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  GJSONStringBuilder? _description;
  GJSONStringBuilder get description =>
      _$this._description ??= new GJSONStringBuilder();
  set description(GJSONStringBuilder? description) =>
      _$this._description = description;

  GUploadBuilder? _backgroundImage;
  GUploadBuilder get backgroundImage =>
      _$this._backgroundImage ??= new GUploadBuilder();
  set backgroundImage(GUploadBuilder? backgroundImage) =>
      _$this._backgroundImage = backgroundImage;

  String? _backgroundImageAlt;
  String? get backgroundImageAlt => _$this._backgroundImageAlt;
  set backgroundImageAlt(String? backgroundImageAlt) =>
      _$this._backgroundImageAlt = backgroundImageAlt;

  GSeoInputBuilder? _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder? seo) => _$this._seo = seo;

  GDateBuilder? _publicationDate;
  GDateBuilder get publicationDate =>
      _$this._publicationDate ??= new GDateBuilder();
  set publicationDate(GDateBuilder? publicationDate) =>
      _$this._publicationDate = publicationDate;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  ListBuilder<String>? _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String>? products) => _$this._products = products;

  GCollectionCreateInputBuilder();

  GCollectionCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _isPublished = $v.isPublished;
      _name = $v.name;
      _slug = $v.slug;
      _description = $v.description?.toBuilder();
      _backgroundImage = $v.backgroundImage?.toBuilder();
      _backgroundImageAlt = $v.backgroundImageAlt;
      _seo = $v.seo?.toBuilder();
      _publicationDate = $v.publicationDate?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _products = $v.products?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCollectionCreateInput;
  }

  @override
  void update(void Function(GCollectionCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCollectionCreateInput build() => _build();

  _$GCollectionCreateInput _build() {
    _$GCollectionCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GCollectionCreateInput._(
              isPublished: isPublished,
              name: name,
              slug: slug,
              description: _description?.build(),
              backgroundImage: _backgroundImage?.build(),
              backgroundImageAlt: backgroundImageAlt,
              seo: _seo?.build(),
              publicationDate: _publicationDate?.build(),
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build(),
              products: _products?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'description';
        _description?.build();
        _$failedField = 'backgroundImage';
        _backgroundImage?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'publicationDate';
        _publicationDate?.build();
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
        _$failedField = 'products';
        _products?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCollectionCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionFilterInput extends GCollectionFilterInput {
  @override
  final GCollectionPublished? published;
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? ids;
  @override
  final BuiltList<String>? slugs;
  @override
  final String? channel;

  factory _$GCollectionFilterInput(
          [void Function(GCollectionFilterInputBuilder)? updates]) =>
      (new GCollectionFilterInputBuilder()..update(updates))._build();

  _$GCollectionFilterInput._(
      {this.published,
      this.search,
      this.metadata,
      this.ids,
      this.slugs,
      this.channel})
      : super._();

  @override
  GCollectionFilterInput rebuild(
          void Function(GCollectionFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionFilterInputBuilder toBuilder() =>
      new GCollectionFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionFilterInput &&
        published == other.published &&
        search == other.search &&
        metadata == other.metadata &&
        ids == other.ids &&
        slugs == other.slugs &&
        channel == other.channel;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, published.hashCode), search.hashCode),
                    metadata.hashCode),
                ids.hashCode),
            slugs.hashCode),
        channel.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCollectionFilterInput')
          ..add('published', published)
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('ids', ids)
          ..add('slugs', slugs)
          ..add('channel', channel))
        .toString();
  }
}

class GCollectionFilterInputBuilder
    implements Builder<GCollectionFilterInput, GCollectionFilterInputBuilder> {
  _$GCollectionFilterInput? _$v;

  GCollectionPublished? _published;
  GCollectionPublished? get published => _$this._published;
  set published(GCollectionPublished? published) =>
      _$this._published = published;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GCollectionFilterInputBuilder();

  GCollectionFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _published = $v.published;
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _ids = $v.ids?.toBuilder();
      _slugs = $v.slugs?.toBuilder();
      _channel = $v.channel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCollectionFilterInput;
  }

  @override
  void update(void Function(GCollectionFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCollectionFilterInput build() => _build();

  _$GCollectionFilterInput _build() {
    _$GCollectionFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GCollectionFilterInput._(
              published: published,
              search: search,
              metadata: _metadata?.build(),
              ids: _ids?.build(),
              slugs: _slugs?.build(),
              channel: channel);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'ids';
        _ids?.build();
        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCollectionFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionInput extends GCollectionInput {
  @override
  final bool? isPublished;
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final GJSONString? description;
  @override
  final GUpload? backgroundImage;
  @override
  final String? backgroundImageAlt;
  @override
  final GSeoInput? seo;
  @override
  final GDate? publicationDate;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;

  factory _$GCollectionInput(
          [void Function(GCollectionInputBuilder)? updates]) =>
      (new GCollectionInputBuilder()..update(updates))._build();

  _$GCollectionInput._(
      {this.isPublished,
      this.name,
      this.slug,
      this.description,
      this.backgroundImage,
      this.backgroundImageAlt,
      this.seo,
      this.publicationDate,
      this.metadata,
      this.privateMetadata})
      : super._();

  @override
  GCollectionInput rebuild(void Function(GCollectionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionInputBuilder toBuilder() =>
      new GCollectionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionInput &&
        isPublished == other.isPublished &&
        name == other.name &&
        slug == other.slug &&
        description == other.description &&
        backgroundImage == other.backgroundImage &&
        backgroundImageAlt == other.backgroundImageAlt &&
        seo == other.seo &&
        publicationDate == other.publicationDate &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, isPublished.hashCode),
                                        name.hashCode),
                                    slug.hashCode),
                                description.hashCode),
                            backgroundImage.hashCode),
                        backgroundImageAlt.hashCode),
                    seo.hashCode),
                publicationDate.hashCode),
            metadata.hashCode),
        privateMetadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCollectionInput')
          ..add('isPublished', isPublished)
          ..add('name', name)
          ..add('slug', slug)
          ..add('description', description)
          ..add('backgroundImage', backgroundImage)
          ..add('backgroundImageAlt', backgroundImageAlt)
          ..add('seo', seo)
          ..add('publicationDate', publicationDate)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata))
        .toString();
  }
}

class GCollectionInputBuilder
    implements Builder<GCollectionInput, GCollectionInputBuilder> {
  _$GCollectionInput? _$v;

  bool? _isPublished;
  bool? get isPublished => _$this._isPublished;
  set isPublished(bool? isPublished) => _$this._isPublished = isPublished;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  GJSONStringBuilder? _description;
  GJSONStringBuilder get description =>
      _$this._description ??= new GJSONStringBuilder();
  set description(GJSONStringBuilder? description) =>
      _$this._description = description;

  GUploadBuilder? _backgroundImage;
  GUploadBuilder get backgroundImage =>
      _$this._backgroundImage ??= new GUploadBuilder();
  set backgroundImage(GUploadBuilder? backgroundImage) =>
      _$this._backgroundImage = backgroundImage;

  String? _backgroundImageAlt;
  String? get backgroundImageAlt => _$this._backgroundImageAlt;
  set backgroundImageAlt(String? backgroundImageAlt) =>
      _$this._backgroundImageAlt = backgroundImageAlt;

  GSeoInputBuilder? _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder? seo) => _$this._seo = seo;

  GDateBuilder? _publicationDate;
  GDateBuilder get publicationDate =>
      _$this._publicationDate ??= new GDateBuilder();
  set publicationDate(GDateBuilder? publicationDate) =>
      _$this._publicationDate = publicationDate;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  GCollectionInputBuilder();

  GCollectionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _isPublished = $v.isPublished;
      _name = $v.name;
      _slug = $v.slug;
      _description = $v.description?.toBuilder();
      _backgroundImage = $v.backgroundImage?.toBuilder();
      _backgroundImageAlt = $v.backgroundImageAlt;
      _seo = $v.seo?.toBuilder();
      _publicationDate = $v.publicationDate?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCollectionInput;
  }

  @override
  void update(void Function(GCollectionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCollectionInput build() => _build();

  _$GCollectionInput _build() {
    _$GCollectionInput _$result;
    try {
      _$result = _$v ??
          new _$GCollectionInput._(
              isPublished: isPublished,
              name: name,
              slug: slug,
              description: _description?.build(),
              backgroundImage: _backgroundImage?.build(),
              backgroundImageAlt: backgroundImageAlt,
              seo: _seo?.build(),
              publicationDate: _publicationDate?.build(),
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'description';
        _description?.build();
        _$failedField = 'backgroundImage';
        _backgroundImage?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'publicationDate';
        _publicationDate?.build();
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCollectionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCollectionSortingInput extends GCollectionSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final String? channel;
  @override
  final GCollectionSortField field;

  factory _$GCollectionSortingInput(
          [void Function(GCollectionSortingInputBuilder)? updates]) =>
      (new GCollectionSortingInputBuilder()..update(updates))._build();

  _$GCollectionSortingInput._(
      {required this.direction, this.channel, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GCollectionSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GCollectionSortingInput', 'field');
  }

  @override
  GCollectionSortingInput rebuild(
          void Function(GCollectionSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCollectionSortingInputBuilder toBuilder() =>
      new GCollectionSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCollectionSortingInput &&
        direction == other.direction &&
        channel == other.channel &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, direction.hashCode), channel.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCollectionSortingInput')
          ..add('direction', direction)
          ..add('channel', channel)
          ..add('field', field))
        .toString();
  }
}

class GCollectionSortingInputBuilder
    implements
        Builder<GCollectionSortingInput, GCollectionSortingInputBuilder> {
  _$GCollectionSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GCollectionSortField? _field;
  GCollectionSortField? get field => _$this._field;
  set field(GCollectionSortField? field) => _$this._field = field;

  GCollectionSortingInputBuilder();

  GCollectionSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _channel = $v.channel;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCollectionSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCollectionSortingInput;
  }

  @override
  void update(void Function(GCollectionSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCollectionSortingInput build() => _build();

  _$GCollectionSortingInput _build() {
    final _$result = _$v ??
        new _$GCollectionSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GCollectionSortingInput', 'direction'),
            channel: channel,
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GCollectionSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GConfigurationItemInput extends GConfigurationItemInput {
  @override
  final String name;
  @override
  final String? value;

  factory _$GConfigurationItemInput(
          [void Function(GConfigurationItemInputBuilder)? updates]) =>
      (new GConfigurationItemInputBuilder()..update(updates))._build();

  _$GConfigurationItemInput._({required this.name, this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GConfigurationItemInput', 'name');
  }

  @override
  GConfigurationItemInput rebuild(
          void Function(GConfigurationItemInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConfigurationItemInputBuilder toBuilder() =>
      new GConfigurationItemInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConfigurationItemInput &&
        name == other.name &&
        value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GConfigurationItemInput')
          ..add('name', name)
          ..add('value', value))
        .toString();
  }
}

class GConfigurationItemInputBuilder
    implements
        Builder<GConfigurationItemInput, GConfigurationItemInputBuilder> {
  _$GConfigurationItemInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GConfigurationItemInputBuilder();

  GConfigurationItemInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConfigurationItemInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GConfigurationItemInput;
  }

  @override
  void update(void Function(GConfigurationItemInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GConfigurationItemInput build() => _build();

  _$GConfigurationItemInput _build() {
    final _$result = _$v ??
        new _$GConfigurationItemInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GConfigurationItemInput', 'name'),
            value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GCountryFilterInput extends GCountryFilterInput {
  @override
  final bool? attachedToShippingZones;

  factory _$GCountryFilterInput(
          [void Function(GCountryFilterInputBuilder)? updates]) =>
      (new GCountryFilterInputBuilder()..update(updates))._build();

  _$GCountryFilterInput._({this.attachedToShippingZones}) : super._();

  @override
  GCountryFilterInput rebuild(
          void Function(GCountryFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCountryFilterInputBuilder toBuilder() =>
      new GCountryFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCountryFilterInput &&
        attachedToShippingZones == other.attachedToShippingZones;
  }

  @override
  int get hashCode {
    return $jf($jc(0, attachedToShippingZones.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCountryFilterInput')
          ..add('attachedToShippingZones', attachedToShippingZones))
        .toString();
  }
}

class GCountryFilterInputBuilder
    implements Builder<GCountryFilterInput, GCountryFilterInputBuilder> {
  _$GCountryFilterInput? _$v;

  bool? _attachedToShippingZones;
  bool? get attachedToShippingZones => _$this._attachedToShippingZones;
  set attachedToShippingZones(bool? attachedToShippingZones) =>
      _$this._attachedToShippingZones = attachedToShippingZones;

  GCountryFilterInputBuilder();

  GCountryFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _attachedToShippingZones = $v.attachedToShippingZones;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCountryFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCountryFilterInput;
  }

  @override
  void update(void Function(GCountryFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCountryFilterInput build() => _build();

  _$GCountryFilterInput _build() {
    final _$result = _$v ??
        new _$GCountryFilterInput._(
            attachedToShippingZones: attachedToShippingZones);
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerFilterInput extends GCustomerFilterInput {
  @override
  final GDateRangeInput? dateJoined;
  @override
  final GIntRangeInput? numberOfOrders;
  @override
  final GDateRangeInput? placedOrders;
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? ids;
  @override
  final GDateTimeRangeInput? updatedAt;

  factory _$GCustomerFilterInput(
          [void Function(GCustomerFilterInputBuilder)? updates]) =>
      (new GCustomerFilterInputBuilder()..update(updates))._build();

  _$GCustomerFilterInput._(
      {this.dateJoined,
      this.numberOfOrders,
      this.placedOrders,
      this.search,
      this.metadata,
      this.ids,
      this.updatedAt})
      : super._();

  @override
  GCustomerFilterInput rebuild(
          void Function(GCustomerFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerFilterInputBuilder toBuilder() =>
      new GCustomerFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerFilterInput &&
        dateJoined == other.dateJoined &&
        numberOfOrders == other.numberOfOrders &&
        placedOrders == other.placedOrders &&
        search == other.search &&
        metadata == other.metadata &&
        ids == other.ids &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, dateJoined.hashCode),
                            numberOfOrders.hashCode),
                        placedOrders.hashCode),
                    search.hashCode),
                metadata.hashCode),
            ids.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCustomerFilterInput')
          ..add('dateJoined', dateJoined)
          ..add('numberOfOrders', numberOfOrders)
          ..add('placedOrders', placedOrders)
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('ids', ids)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GCustomerFilterInputBuilder
    implements Builder<GCustomerFilterInput, GCustomerFilterInputBuilder> {
  _$GCustomerFilterInput? _$v;

  GDateRangeInputBuilder? _dateJoined;
  GDateRangeInputBuilder get dateJoined =>
      _$this._dateJoined ??= new GDateRangeInputBuilder();
  set dateJoined(GDateRangeInputBuilder? dateJoined) =>
      _$this._dateJoined = dateJoined;

  GIntRangeInputBuilder? _numberOfOrders;
  GIntRangeInputBuilder get numberOfOrders =>
      _$this._numberOfOrders ??= new GIntRangeInputBuilder();
  set numberOfOrders(GIntRangeInputBuilder? numberOfOrders) =>
      _$this._numberOfOrders = numberOfOrders;

  GDateRangeInputBuilder? _placedOrders;
  GDateRangeInputBuilder get placedOrders =>
      _$this._placedOrders ??= new GDateRangeInputBuilder();
  set placedOrders(GDateRangeInputBuilder? placedOrders) =>
      _$this._placedOrders = placedOrders;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GDateTimeRangeInputBuilder? _updatedAt;
  GDateTimeRangeInputBuilder get updatedAt =>
      _$this._updatedAt ??= new GDateTimeRangeInputBuilder();
  set updatedAt(GDateTimeRangeInputBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GCustomerFilterInputBuilder();

  GCustomerFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _dateJoined = $v.dateJoined?.toBuilder();
      _numberOfOrders = $v.numberOfOrders?.toBuilder();
      _placedOrders = $v.placedOrders?.toBuilder();
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _ids = $v.ids?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomerFilterInput;
  }

  @override
  void update(void Function(GCustomerFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomerFilterInput build() => _build();

  _$GCustomerFilterInput _build() {
    _$GCustomerFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GCustomerFilterInput._(
              dateJoined: _dateJoined?.build(),
              numberOfOrders: _numberOfOrders?.build(),
              placedOrders: _placedOrders?.build(),
              search: search,
              metadata: _metadata?.build(),
              ids: _ids?.build(),
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'dateJoined';
        _dateJoined?.build();
        _$failedField = 'numberOfOrders';
        _numberOfOrders?.build();
        _$failedField = 'placedOrders';
        _placedOrders?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'ids';
        _ids?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCustomerFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCustomerInput extends GCustomerInput {
  @override
  final GAddressInput? defaultBillingAddress;
  @override
  final GAddressInput? defaultShippingAddress;
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final String? email;
  @override
  final bool? isActive;
  @override
  final String? note;
  @override
  final GLanguageCodeEnum? languageCode;

  factory _$GCustomerInput([void Function(GCustomerInputBuilder)? updates]) =>
      (new GCustomerInputBuilder()..update(updates))._build();

  _$GCustomerInput._(
      {this.defaultBillingAddress,
      this.defaultShippingAddress,
      this.firstName,
      this.lastName,
      this.email,
      this.isActive,
      this.note,
      this.languageCode})
      : super._();

  @override
  GCustomerInput rebuild(void Function(GCustomerInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCustomerInputBuilder toBuilder() =>
      new GCustomerInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCustomerInput &&
        defaultBillingAddress == other.defaultBillingAddress &&
        defaultShippingAddress == other.defaultShippingAddress &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        email == other.email &&
        isActive == other.isActive &&
        note == other.note &&
        languageCode == other.languageCode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc(0, defaultBillingAddress.hashCode),
                                defaultShippingAddress.hashCode),
                            firstName.hashCode),
                        lastName.hashCode),
                    email.hashCode),
                isActive.hashCode),
            note.hashCode),
        languageCode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCustomerInput')
          ..add('defaultBillingAddress', defaultBillingAddress)
          ..add('defaultShippingAddress', defaultShippingAddress)
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('email', email)
          ..add('isActive', isActive)
          ..add('note', note)
          ..add('languageCode', languageCode))
        .toString();
  }
}

class GCustomerInputBuilder
    implements Builder<GCustomerInput, GCustomerInputBuilder> {
  _$GCustomerInput? _$v;

  GAddressInputBuilder? _defaultBillingAddress;
  GAddressInputBuilder get defaultBillingAddress =>
      _$this._defaultBillingAddress ??= new GAddressInputBuilder();
  set defaultBillingAddress(GAddressInputBuilder? defaultBillingAddress) =>
      _$this._defaultBillingAddress = defaultBillingAddress;

  GAddressInputBuilder? _defaultShippingAddress;
  GAddressInputBuilder get defaultShippingAddress =>
      _$this._defaultShippingAddress ??= new GAddressInputBuilder();
  set defaultShippingAddress(GAddressInputBuilder? defaultShippingAddress) =>
      _$this._defaultShippingAddress = defaultShippingAddress;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  GLanguageCodeEnum? _languageCode;
  GLanguageCodeEnum? get languageCode => _$this._languageCode;
  set languageCode(GLanguageCodeEnum? languageCode) =>
      _$this._languageCode = languageCode;

  GCustomerInputBuilder();

  GCustomerInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _defaultBillingAddress = $v.defaultBillingAddress?.toBuilder();
      _defaultShippingAddress = $v.defaultShippingAddress?.toBuilder();
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _email = $v.email;
      _isActive = $v.isActive;
      _note = $v.note;
      _languageCode = $v.languageCode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCustomerInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCustomerInput;
  }

  @override
  void update(void Function(GCustomerInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCustomerInput build() => _build();

  _$GCustomerInput _build() {
    _$GCustomerInput _$result;
    try {
      _$result = _$v ??
          new _$GCustomerInput._(
              defaultBillingAddress: _defaultBillingAddress?.build(),
              defaultShippingAddress: _defaultShippingAddress?.build(),
              firstName: firstName,
              lastName: lastName,
              email: email,
              isActive: isActive,
              note: note,
              languageCode: languageCode);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'defaultBillingAddress';
        _defaultBillingAddress?.build();
        _$failedField = 'defaultShippingAddress';
        _defaultShippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GCustomerInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDate extends GDate {
  @override
  final String value;

  factory _$GDate([void Function(GDateBuilder)? updates]) =>
      (new GDateBuilder()..update(updates))._build();

  _$GDate._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDate', 'value');
  }

  @override
  GDate rebuild(void Function(GDateBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateBuilder toBuilder() => new GDateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDate && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDate')..add('value', value))
        .toString();
  }
}

class GDateBuilder implements Builder<GDate, GDateBuilder> {
  _$GDate? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDateBuilder();

  GDateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDate;
  }

  @override
  void update(void Function(GDateBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDate build() => _build();

  _$GDate _build() {
    final _$result = _$v ??
        new _$GDate._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDate', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDateRangeInput extends GDateRangeInput {
  @override
  final GDate? gte;
  @override
  final GDate? lte;

  factory _$GDateRangeInput([void Function(GDateRangeInputBuilder)? updates]) =>
      (new GDateRangeInputBuilder()..update(updates))._build();

  _$GDateRangeInput._({this.gte, this.lte}) : super._();

  @override
  GDateRangeInput rebuild(void Function(GDateRangeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateRangeInputBuilder toBuilder() =>
      new GDateRangeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDateRangeInput && gte == other.gte && lte == other.lte;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gte.hashCode), lte.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDateRangeInput')
          ..add('gte', gte)
          ..add('lte', lte))
        .toString();
  }
}

class GDateRangeInputBuilder
    implements Builder<GDateRangeInput, GDateRangeInputBuilder> {
  _$GDateRangeInput? _$v;

  GDateBuilder? _gte;
  GDateBuilder get gte => _$this._gte ??= new GDateBuilder();
  set gte(GDateBuilder? gte) => _$this._gte = gte;

  GDateBuilder? _lte;
  GDateBuilder get lte => _$this._lte ??= new GDateBuilder();
  set lte(GDateBuilder? lte) => _$this._lte = lte;

  GDateRangeInputBuilder();

  GDateRangeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _gte = $v.gte?.toBuilder();
      _lte = $v.lte?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDateRangeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDateRangeInput;
  }

  @override
  void update(void Function(GDateRangeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDateRangeInput build() => _build();

  _$GDateRangeInput _build() {
    _$GDateRangeInput _$result;
    try {
      _$result = _$v ??
          new _$GDateRangeInput._(gte: _gte?.build(), lte: _lte?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'gte';
        _gte?.build();
        _$failedField = 'lte';
        _lte?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDateRangeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDateTime extends GDateTime {
  @override
  final String value;

  factory _$GDateTime([void Function(GDateTimeBuilder)? updates]) =>
      (new GDateTimeBuilder()..update(updates))._build();

  _$GDateTime._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDateTime', 'value');
  }

  @override
  GDateTime rebuild(void Function(GDateTimeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateTimeBuilder toBuilder() => new GDateTimeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDateTime && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDateTime')..add('value', value))
        .toString();
  }
}

class GDateTimeBuilder implements Builder<GDateTime, GDateTimeBuilder> {
  _$GDateTime? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDateTimeBuilder();

  GDateTimeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDateTime other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDateTime;
  }

  @override
  void update(void Function(GDateTimeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDateTime build() => _build();

  _$GDateTime _build() {
    final _$result = _$v ??
        new _$GDateTime._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDateTime', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GDateTimeRangeInput extends GDateTimeRangeInput {
  @override
  final GDateTime? gte;
  @override
  final GDateTime? lte;

  factory _$GDateTimeRangeInput(
          [void Function(GDateTimeRangeInputBuilder)? updates]) =>
      (new GDateTimeRangeInputBuilder()..update(updates))._build();

  _$GDateTimeRangeInput._({this.gte, this.lte}) : super._();

  @override
  GDateTimeRangeInput rebuild(
          void Function(GDateTimeRangeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateTimeRangeInputBuilder toBuilder() =>
      new GDateTimeRangeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDateTimeRangeInput && gte == other.gte && lte == other.lte;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gte.hashCode), lte.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDateTimeRangeInput')
          ..add('gte', gte)
          ..add('lte', lte))
        .toString();
  }
}

class GDateTimeRangeInputBuilder
    implements Builder<GDateTimeRangeInput, GDateTimeRangeInputBuilder> {
  _$GDateTimeRangeInput? _$v;

  GDateTimeBuilder? _gte;
  GDateTimeBuilder get gte => _$this._gte ??= new GDateTimeBuilder();
  set gte(GDateTimeBuilder? gte) => _$this._gte = gte;

  GDateTimeBuilder? _lte;
  GDateTimeBuilder get lte => _$this._lte ??= new GDateTimeBuilder();
  set lte(GDateTimeBuilder? lte) => _$this._lte = lte;

  GDateTimeRangeInputBuilder();

  GDateTimeRangeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _gte = $v.gte?.toBuilder();
      _lte = $v.lte?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDateTimeRangeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDateTimeRangeInput;
  }

  @override
  void update(void Function(GDateTimeRangeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDateTimeRangeInput build() => _build();

  _$GDateTimeRangeInput _build() {
    _$GDateTimeRangeInput _$result;
    try {
      _$result = _$v ??
          new _$GDateTimeRangeInput._(gte: _gte?.build(), lte: _lte?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'gte';
        _gte?.build();
        _$failedField = 'lte';
        _lte?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDateTimeRangeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDigitalContentInput extends GDigitalContentInput {
  @override
  final bool useDefaultSettings;
  @override
  final int? maxDownloads;
  @override
  final int? urlValidDays;
  @override
  final bool? automaticFulfillment;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;

  factory _$GDigitalContentInput(
          [void Function(GDigitalContentInputBuilder)? updates]) =>
      (new GDigitalContentInputBuilder()..update(updates))._build();

  _$GDigitalContentInput._(
      {required this.useDefaultSettings,
      this.maxDownloads,
      this.urlValidDays,
      this.automaticFulfillment,
      this.metadata,
      this.privateMetadata})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        useDefaultSettings, r'GDigitalContentInput', 'useDefaultSettings');
  }

  @override
  GDigitalContentInput rebuild(
          void Function(GDigitalContentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDigitalContentInputBuilder toBuilder() =>
      new GDigitalContentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDigitalContentInput &&
        useDefaultSettings == other.useDefaultSettings &&
        maxDownloads == other.maxDownloads &&
        urlValidDays == other.urlValidDays &&
        automaticFulfillment == other.automaticFulfillment &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc(0, useDefaultSettings.hashCode),
                        maxDownloads.hashCode),
                    urlValidDays.hashCode),
                automaticFulfillment.hashCode),
            metadata.hashCode),
        privateMetadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDigitalContentInput')
          ..add('useDefaultSettings', useDefaultSettings)
          ..add('maxDownloads', maxDownloads)
          ..add('urlValidDays', urlValidDays)
          ..add('automaticFulfillment', automaticFulfillment)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata))
        .toString();
  }
}

class GDigitalContentInputBuilder
    implements Builder<GDigitalContentInput, GDigitalContentInputBuilder> {
  _$GDigitalContentInput? _$v;

  bool? _useDefaultSettings;
  bool? get useDefaultSettings => _$this._useDefaultSettings;
  set useDefaultSettings(bool? useDefaultSettings) =>
      _$this._useDefaultSettings = useDefaultSettings;

  int? _maxDownloads;
  int? get maxDownloads => _$this._maxDownloads;
  set maxDownloads(int? maxDownloads) => _$this._maxDownloads = maxDownloads;

  int? _urlValidDays;
  int? get urlValidDays => _$this._urlValidDays;
  set urlValidDays(int? urlValidDays) => _$this._urlValidDays = urlValidDays;

  bool? _automaticFulfillment;
  bool? get automaticFulfillment => _$this._automaticFulfillment;
  set automaticFulfillment(bool? automaticFulfillment) =>
      _$this._automaticFulfillment = automaticFulfillment;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  GDigitalContentInputBuilder();

  GDigitalContentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _useDefaultSettings = $v.useDefaultSettings;
      _maxDownloads = $v.maxDownloads;
      _urlValidDays = $v.urlValidDays;
      _automaticFulfillment = $v.automaticFulfillment;
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDigitalContentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDigitalContentInput;
  }

  @override
  void update(void Function(GDigitalContentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDigitalContentInput build() => _build();

  _$GDigitalContentInput _build() {
    _$GDigitalContentInput _$result;
    try {
      _$result = _$v ??
          new _$GDigitalContentInput._(
              useDefaultSettings: BuiltValueNullFieldError.checkNotNull(
                  useDefaultSettings,
                  r'GDigitalContentInput',
                  'useDefaultSettings'),
              maxDownloads: maxDownloads,
              urlValidDays: urlValidDays,
              automaticFulfillment: automaticFulfillment,
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDigitalContentInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDigitalContentUploadInput extends GDigitalContentUploadInput {
  @override
  final bool useDefaultSettings;
  @override
  final int? maxDownloads;
  @override
  final int? urlValidDays;
  @override
  final bool? automaticFulfillment;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;
  @override
  final GUpload contentFile;

  factory _$GDigitalContentUploadInput(
          [void Function(GDigitalContentUploadInputBuilder)? updates]) =>
      (new GDigitalContentUploadInputBuilder()..update(updates))._build();

  _$GDigitalContentUploadInput._(
      {required this.useDefaultSettings,
      this.maxDownloads,
      this.urlValidDays,
      this.automaticFulfillment,
      this.metadata,
      this.privateMetadata,
      required this.contentFile})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(useDefaultSettings,
        r'GDigitalContentUploadInput', 'useDefaultSettings');
    BuiltValueNullFieldError.checkNotNull(
        contentFile, r'GDigitalContentUploadInput', 'contentFile');
  }

  @override
  GDigitalContentUploadInput rebuild(
          void Function(GDigitalContentUploadInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDigitalContentUploadInputBuilder toBuilder() =>
      new GDigitalContentUploadInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDigitalContentUploadInput &&
        useDefaultSettings == other.useDefaultSettings &&
        maxDownloads == other.maxDownloads &&
        urlValidDays == other.urlValidDays &&
        automaticFulfillment == other.automaticFulfillment &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata &&
        contentFile == other.contentFile;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc(0, useDefaultSettings.hashCode),
                            maxDownloads.hashCode),
                        urlValidDays.hashCode),
                    automaticFulfillment.hashCode),
                metadata.hashCode),
            privateMetadata.hashCode),
        contentFile.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDigitalContentUploadInput')
          ..add('useDefaultSettings', useDefaultSettings)
          ..add('maxDownloads', maxDownloads)
          ..add('urlValidDays', urlValidDays)
          ..add('automaticFulfillment', automaticFulfillment)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata)
          ..add('contentFile', contentFile))
        .toString();
  }
}

class GDigitalContentUploadInputBuilder
    implements
        Builder<GDigitalContentUploadInput, GDigitalContentUploadInputBuilder> {
  _$GDigitalContentUploadInput? _$v;

  bool? _useDefaultSettings;
  bool? get useDefaultSettings => _$this._useDefaultSettings;
  set useDefaultSettings(bool? useDefaultSettings) =>
      _$this._useDefaultSettings = useDefaultSettings;

  int? _maxDownloads;
  int? get maxDownloads => _$this._maxDownloads;
  set maxDownloads(int? maxDownloads) => _$this._maxDownloads = maxDownloads;

  int? _urlValidDays;
  int? get urlValidDays => _$this._urlValidDays;
  set urlValidDays(int? urlValidDays) => _$this._urlValidDays = urlValidDays;

  bool? _automaticFulfillment;
  bool? get automaticFulfillment => _$this._automaticFulfillment;
  set automaticFulfillment(bool? automaticFulfillment) =>
      _$this._automaticFulfillment = automaticFulfillment;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  GUploadBuilder? _contentFile;
  GUploadBuilder get contentFile =>
      _$this._contentFile ??= new GUploadBuilder();
  set contentFile(GUploadBuilder? contentFile) =>
      _$this._contentFile = contentFile;

  GDigitalContentUploadInputBuilder();

  GDigitalContentUploadInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _useDefaultSettings = $v.useDefaultSettings;
      _maxDownloads = $v.maxDownloads;
      _urlValidDays = $v.urlValidDays;
      _automaticFulfillment = $v.automaticFulfillment;
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _contentFile = $v.contentFile.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDigitalContentUploadInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDigitalContentUploadInput;
  }

  @override
  void update(void Function(GDigitalContentUploadInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDigitalContentUploadInput build() => _build();

  _$GDigitalContentUploadInput _build() {
    _$GDigitalContentUploadInput _$result;
    try {
      _$result = _$v ??
          new _$GDigitalContentUploadInput._(
              useDefaultSettings: BuiltValueNullFieldError.checkNotNull(
                  useDefaultSettings,
                  r'GDigitalContentUploadInput',
                  'useDefaultSettings'),
              maxDownloads: maxDownloads,
              urlValidDays: urlValidDays,
              automaticFulfillment: automaticFulfillment,
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build(),
              contentFile: contentFile.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
        _$failedField = 'contentFile';
        contentFile.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDigitalContentUploadInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDigitalContentUrlCreateInput extends GDigitalContentUrlCreateInput {
  @override
  final String content;

  factory _$GDigitalContentUrlCreateInput(
          [void Function(GDigitalContentUrlCreateInputBuilder)? updates]) =>
      (new GDigitalContentUrlCreateInputBuilder()..update(updates))._build();

  _$GDigitalContentUrlCreateInput._({required this.content}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        content, r'GDigitalContentUrlCreateInput', 'content');
  }

  @override
  GDigitalContentUrlCreateInput rebuild(
          void Function(GDigitalContentUrlCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDigitalContentUrlCreateInputBuilder toBuilder() =>
      new GDigitalContentUrlCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDigitalContentUrlCreateInput && content == other.content;
  }

  @override
  int get hashCode {
    return $jf($jc(0, content.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDigitalContentUrlCreateInput')
          ..add('content', content))
        .toString();
  }
}

class GDigitalContentUrlCreateInputBuilder
    implements
        Builder<GDigitalContentUrlCreateInput,
            GDigitalContentUrlCreateInputBuilder> {
  _$GDigitalContentUrlCreateInput? _$v;

  String? _content;
  String? get content => _$this._content;
  set content(String? content) => _$this._content = content;

  GDigitalContentUrlCreateInputBuilder();

  GDigitalContentUrlCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _content = $v.content;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDigitalContentUrlCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDigitalContentUrlCreateInput;
  }

  @override
  void update(void Function(GDigitalContentUrlCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDigitalContentUrlCreateInput build() => _build();

  _$GDigitalContentUrlCreateInput _build() {
    final _$result = _$v ??
        new _$GDigitalContentUrlCreateInput._(
            content: BuiltValueNullFieldError.checkNotNull(
                content, r'GDigitalContentUrlCreateInput', 'content'));
    replace(_$result);
    return _$result;
  }
}

class _$GDraftOrderCreateInput extends GDraftOrderCreateInput {
  @override
  final GAddressInput? billingAddress;
  @override
  final String? user;
  @override
  final String? userEmail;
  @override
  final GPositiveDecimal? discount;
  @override
  final GAddressInput? shippingAddress;
  @override
  final String? shippingMethod;
  @override
  final String? voucher;
  @override
  final String? customerNote;
  @override
  final String? channelId;
  @override
  final String? redirectUrl;
  @override
  final BuiltList<GOrderLineCreateInput>? lines;

  factory _$GDraftOrderCreateInput(
          [void Function(GDraftOrderCreateInputBuilder)? updates]) =>
      (new GDraftOrderCreateInputBuilder()..update(updates))._build();

  _$GDraftOrderCreateInput._(
      {this.billingAddress,
      this.user,
      this.userEmail,
      this.discount,
      this.shippingAddress,
      this.shippingMethod,
      this.voucher,
      this.customerNote,
      this.channelId,
      this.redirectUrl,
      this.lines})
      : super._();

  @override
  GDraftOrderCreateInput rebuild(
          void Function(GDraftOrderCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDraftOrderCreateInputBuilder toBuilder() =>
      new GDraftOrderCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDraftOrderCreateInput &&
        billingAddress == other.billingAddress &&
        user == other.user &&
        userEmail == other.userEmail &&
        discount == other.discount &&
        shippingAddress == other.shippingAddress &&
        shippingMethod == other.shippingMethod &&
        voucher == other.voucher &&
        customerNote == other.customerNote &&
        channelId == other.channelId &&
        redirectUrl == other.redirectUrl &&
        lines == other.lines;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, billingAddress.hashCode),
                                            user.hashCode),
                                        userEmail.hashCode),
                                    discount.hashCode),
                                shippingAddress.hashCode),
                            shippingMethod.hashCode),
                        voucher.hashCode),
                    customerNote.hashCode),
                channelId.hashCode),
            redirectUrl.hashCode),
        lines.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDraftOrderCreateInput')
          ..add('billingAddress', billingAddress)
          ..add('user', user)
          ..add('userEmail', userEmail)
          ..add('discount', discount)
          ..add('shippingAddress', shippingAddress)
          ..add('shippingMethod', shippingMethod)
          ..add('voucher', voucher)
          ..add('customerNote', customerNote)
          ..add('channelId', channelId)
          ..add('redirectUrl', redirectUrl)
          ..add('lines', lines))
        .toString();
  }
}

class GDraftOrderCreateInputBuilder
    implements Builder<GDraftOrderCreateInput, GDraftOrderCreateInputBuilder> {
  _$GDraftOrderCreateInput? _$v;

  GAddressInputBuilder? _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder? billingAddress) =>
      _$this._billingAddress = billingAddress;

  String? _user;
  String? get user => _$this._user;
  set user(String? user) => _$this._user = user;

  String? _userEmail;
  String? get userEmail => _$this._userEmail;
  set userEmail(String? userEmail) => _$this._userEmail = userEmail;

  GPositiveDecimalBuilder? _discount;
  GPositiveDecimalBuilder get discount =>
      _$this._discount ??= new GPositiveDecimalBuilder();
  set discount(GPositiveDecimalBuilder? discount) =>
      _$this._discount = discount;

  GAddressInputBuilder? _shippingAddress;
  GAddressInputBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GAddressInputBuilder();
  set shippingAddress(GAddressInputBuilder? shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  String? _shippingMethod;
  String? get shippingMethod => _$this._shippingMethod;
  set shippingMethod(String? shippingMethod) =>
      _$this._shippingMethod = shippingMethod;

  String? _voucher;
  String? get voucher => _$this._voucher;
  set voucher(String? voucher) => _$this._voucher = voucher;

  String? _customerNote;
  String? get customerNote => _$this._customerNote;
  set customerNote(String? customerNote) => _$this._customerNote = customerNote;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  String? _redirectUrl;
  String? get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String? redirectUrl) => _$this._redirectUrl = redirectUrl;

  ListBuilder<GOrderLineCreateInput>? _lines;
  ListBuilder<GOrderLineCreateInput> get lines =>
      _$this._lines ??= new ListBuilder<GOrderLineCreateInput>();
  set lines(ListBuilder<GOrderLineCreateInput>? lines) => _$this._lines = lines;

  GDraftOrderCreateInputBuilder();

  GDraftOrderCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _billingAddress = $v.billingAddress?.toBuilder();
      _user = $v.user;
      _userEmail = $v.userEmail;
      _discount = $v.discount?.toBuilder();
      _shippingAddress = $v.shippingAddress?.toBuilder();
      _shippingMethod = $v.shippingMethod;
      _voucher = $v.voucher;
      _customerNote = $v.customerNote;
      _channelId = $v.channelId;
      _redirectUrl = $v.redirectUrl;
      _lines = $v.lines?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDraftOrderCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDraftOrderCreateInput;
  }

  @override
  void update(void Function(GDraftOrderCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDraftOrderCreateInput build() => _build();

  _$GDraftOrderCreateInput _build() {
    _$GDraftOrderCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GDraftOrderCreateInput._(
              billingAddress: _billingAddress?.build(),
              user: user,
              userEmail: userEmail,
              discount: _discount?.build(),
              shippingAddress: _shippingAddress?.build(),
              shippingMethod: shippingMethod,
              voucher: voucher,
              customerNote: customerNote,
              channelId: channelId,
              redirectUrl: redirectUrl,
              lines: _lines?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'billingAddress';
        _billingAddress?.build();

        _$failedField = 'discount';
        _discount?.build();
        _$failedField = 'shippingAddress';
        _shippingAddress?.build();

        _$failedField = 'lines';
        _lines?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDraftOrderCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDraftOrderInput extends GDraftOrderInput {
  @override
  final GAddressInput? billingAddress;
  @override
  final String? user;
  @override
  final String? userEmail;
  @override
  final GPositiveDecimal? discount;
  @override
  final GAddressInput? shippingAddress;
  @override
  final String? shippingMethod;
  @override
  final String? voucher;
  @override
  final String? customerNote;
  @override
  final String? channelId;
  @override
  final String? redirectUrl;

  factory _$GDraftOrderInput(
          [void Function(GDraftOrderInputBuilder)? updates]) =>
      (new GDraftOrderInputBuilder()..update(updates))._build();

  _$GDraftOrderInput._(
      {this.billingAddress,
      this.user,
      this.userEmail,
      this.discount,
      this.shippingAddress,
      this.shippingMethod,
      this.voucher,
      this.customerNote,
      this.channelId,
      this.redirectUrl})
      : super._();

  @override
  GDraftOrderInput rebuild(void Function(GDraftOrderInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDraftOrderInputBuilder toBuilder() =>
      new GDraftOrderInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDraftOrderInput &&
        billingAddress == other.billingAddress &&
        user == other.user &&
        userEmail == other.userEmail &&
        discount == other.discount &&
        shippingAddress == other.shippingAddress &&
        shippingMethod == other.shippingMethod &&
        voucher == other.voucher &&
        customerNote == other.customerNote &&
        channelId == other.channelId &&
        redirectUrl == other.redirectUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, billingAddress.hashCode),
                                        user.hashCode),
                                    userEmail.hashCode),
                                discount.hashCode),
                            shippingAddress.hashCode),
                        shippingMethod.hashCode),
                    voucher.hashCode),
                customerNote.hashCode),
            channelId.hashCode),
        redirectUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDraftOrderInput')
          ..add('billingAddress', billingAddress)
          ..add('user', user)
          ..add('userEmail', userEmail)
          ..add('discount', discount)
          ..add('shippingAddress', shippingAddress)
          ..add('shippingMethod', shippingMethod)
          ..add('voucher', voucher)
          ..add('customerNote', customerNote)
          ..add('channelId', channelId)
          ..add('redirectUrl', redirectUrl))
        .toString();
  }
}

class GDraftOrderInputBuilder
    implements Builder<GDraftOrderInput, GDraftOrderInputBuilder> {
  _$GDraftOrderInput? _$v;

  GAddressInputBuilder? _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder? billingAddress) =>
      _$this._billingAddress = billingAddress;

  String? _user;
  String? get user => _$this._user;
  set user(String? user) => _$this._user = user;

  String? _userEmail;
  String? get userEmail => _$this._userEmail;
  set userEmail(String? userEmail) => _$this._userEmail = userEmail;

  GPositiveDecimalBuilder? _discount;
  GPositiveDecimalBuilder get discount =>
      _$this._discount ??= new GPositiveDecimalBuilder();
  set discount(GPositiveDecimalBuilder? discount) =>
      _$this._discount = discount;

  GAddressInputBuilder? _shippingAddress;
  GAddressInputBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GAddressInputBuilder();
  set shippingAddress(GAddressInputBuilder? shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  String? _shippingMethod;
  String? get shippingMethod => _$this._shippingMethod;
  set shippingMethod(String? shippingMethod) =>
      _$this._shippingMethod = shippingMethod;

  String? _voucher;
  String? get voucher => _$this._voucher;
  set voucher(String? voucher) => _$this._voucher = voucher;

  String? _customerNote;
  String? get customerNote => _$this._customerNote;
  set customerNote(String? customerNote) => _$this._customerNote = customerNote;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  String? _redirectUrl;
  String? get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String? redirectUrl) => _$this._redirectUrl = redirectUrl;

  GDraftOrderInputBuilder();

  GDraftOrderInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _billingAddress = $v.billingAddress?.toBuilder();
      _user = $v.user;
      _userEmail = $v.userEmail;
      _discount = $v.discount?.toBuilder();
      _shippingAddress = $v.shippingAddress?.toBuilder();
      _shippingMethod = $v.shippingMethod;
      _voucher = $v.voucher;
      _customerNote = $v.customerNote;
      _channelId = $v.channelId;
      _redirectUrl = $v.redirectUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDraftOrderInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDraftOrderInput;
  }

  @override
  void update(void Function(GDraftOrderInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDraftOrderInput build() => _build();

  _$GDraftOrderInput _build() {
    _$GDraftOrderInput _$result;
    try {
      _$result = _$v ??
          new _$GDraftOrderInput._(
              billingAddress: _billingAddress?.build(),
              user: user,
              userEmail: userEmail,
              discount: _discount?.build(),
              shippingAddress: _shippingAddress?.build(),
              shippingMethod: shippingMethod,
              voucher: voucher,
              customerNote: customerNote,
              channelId: channelId,
              redirectUrl: redirectUrl);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'billingAddress';
        _billingAddress?.build();

        _$failedField = 'discount';
        _discount?.build();
        _$failedField = 'shippingAddress';
        _shippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDraftOrderInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GEventDeliveryAttemptSortingInput
    extends GEventDeliveryAttemptSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GEventDeliveryAttemptSortField field;

  factory _$GEventDeliveryAttemptSortingInput(
          [void Function(GEventDeliveryAttemptSortingInputBuilder)? updates]) =>
      (new GEventDeliveryAttemptSortingInputBuilder()..update(updates))
          ._build();

  _$GEventDeliveryAttemptSortingInput._(
      {required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GEventDeliveryAttemptSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GEventDeliveryAttemptSortingInput', 'field');
  }

  @override
  GEventDeliveryAttemptSortingInput rebuild(
          void Function(GEventDeliveryAttemptSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEventDeliveryAttemptSortingInputBuilder toBuilder() =>
      new GEventDeliveryAttemptSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEventDeliveryAttemptSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEventDeliveryAttemptSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GEventDeliveryAttemptSortingInputBuilder
    implements
        Builder<GEventDeliveryAttemptSortingInput,
            GEventDeliveryAttemptSortingInputBuilder> {
  _$GEventDeliveryAttemptSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GEventDeliveryAttemptSortField? _field;
  GEventDeliveryAttemptSortField? get field => _$this._field;
  set field(GEventDeliveryAttemptSortField? field) => _$this._field = field;

  GEventDeliveryAttemptSortingInputBuilder();

  GEventDeliveryAttemptSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEventDeliveryAttemptSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEventDeliveryAttemptSortingInput;
  }

  @override
  void update(
      void Function(GEventDeliveryAttemptSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEventDeliveryAttemptSortingInput build() => _build();

  _$GEventDeliveryAttemptSortingInput _build() {
    final _$result = _$v ??
        new _$GEventDeliveryAttemptSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GEventDeliveryAttemptSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GEventDeliveryAttemptSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GEventDeliveryFilterInput extends GEventDeliveryFilterInput {
  @override
  final GEventDeliveryStatusEnum? status;
  @override
  final GWebhookEventTypeEnum? eventType;

  factory _$GEventDeliveryFilterInput(
          [void Function(GEventDeliveryFilterInputBuilder)? updates]) =>
      (new GEventDeliveryFilterInputBuilder()..update(updates))._build();

  _$GEventDeliveryFilterInput._({this.status, this.eventType}) : super._();

  @override
  GEventDeliveryFilterInput rebuild(
          void Function(GEventDeliveryFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEventDeliveryFilterInputBuilder toBuilder() =>
      new GEventDeliveryFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEventDeliveryFilterInput &&
        status == other.status &&
        eventType == other.eventType;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, status.hashCode), eventType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEventDeliveryFilterInput')
          ..add('status', status)
          ..add('eventType', eventType))
        .toString();
  }
}

class GEventDeliveryFilterInputBuilder
    implements
        Builder<GEventDeliveryFilterInput, GEventDeliveryFilterInputBuilder> {
  _$GEventDeliveryFilterInput? _$v;

  GEventDeliveryStatusEnum? _status;
  GEventDeliveryStatusEnum? get status => _$this._status;
  set status(GEventDeliveryStatusEnum? status) => _$this._status = status;

  GWebhookEventTypeEnum? _eventType;
  GWebhookEventTypeEnum? get eventType => _$this._eventType;
  set eventType(GWebhookEventTypeEnum? eventType) =>
      _$this._eventType = eventType;

  GEventDeliveryFilterInputBuilder();

  GEventDeliveryFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _status = $v.status;
      _eventType = $v.eventType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEventDeliveryFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEventDeliveryFilterInput;
  }

  @override
  void update(void Function(GEventDeliveryFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEventDeliveryFilterInput build() => _build();

  _$GEventDeliveryFilterInput _build() {
    final _$result = _$v ??
        new _$GEventDeliveryFilterInput._(status: status, eventType: eventType);
    replace(_$result);
    return _$result;
  }
}

class _$GEventDeliverySortingInput extends GEventDeliverySortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GEventDeliverySortField field;

  factory _$GEventDeliverySortingInput(
          [void Function(GEventDeliverySortingInputBuilder)? updates]) =>
      (new GEventDeliverySortingInputBuilder()..update(updates))._build();

  _$GEventDeliverySortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GEventDeliverySortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GEventDeliverySortingInput', 'field');
  }

  @override
  GEventDeliverySortingInput rebuild(
          void Function(GEventDeliverySortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEventDeliverySortingInputBuilder toBuilder() =>
      new GEventDeliverySortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEventDeliverySortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEventDeliverySortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GEventDeliverySortingInputBuilder
    implements
        Builder<GEventDeliverySortingInput, GEventDeliverySortingInputBuilder> {
  _$GEventDeliverySortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GEventDeliverySortField? _field;
  GEventDeliverySortField? get field => _$this._field;
  set field(GEventDeliverySortField? field) => _$this._field = field;

  GEventDeliverySortingInputBuilder();

  GEventDeliverySortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEventDeliverySortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEventDeliverySortingInput;
  }

  @override
  void update(void Function(GEventDeliverySortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEventDeliverySortingInput build() => _build();

  _$GEventDeliverySortingInput _build() {
    final _$result = _$v ??
        new _$GEventDeliverySortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GEventDeliverySortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GEventDeliverySortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GExportFileFilterInput extends GExportFileFilterInput {
  @override
  final GDateTimeRangeInput? createdAt;
  @override
  final GDateTimeRangeInput? updatedAt;
  @override
  final GJobStatusEnum? status;
  @override
  final String? user;
  @override
  final String? app;

  factory _$GExportFileFilterInput(
          [void Function(GExportFileFilterInputBuilder)? updates]) =>
      (new GExportFileFilterInputBuilder()..update(updates))._build();

  _$GExportFileFilterInput._(
      {this.createdAt, this.updatedAt, this.status, this.user, this.app})
      : super._();

  @override
  GExportFileFilterInput rebuild(
          void Function(GExportFileFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExportFileFilterInputBuilder toBuilder() =>
      new GExportFileFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExportFileFilterInput &&
        createdAt == other.createdAt &&
        updatedAt == other.updatedAt &&
        status == other.status &&
        user == other.user &&
        app == other.app;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, createdAt.hashCode), updatedAt.hashCode),
                status.hashCode),
            user.hashCode),
        app.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExportFileFilterInput')
          ..add('createdAt', createdAt)
          ..add('updatedAt', updatedAt)
          ..add('status', status)
          ..add('user', user)
          ..add('app', app))
        .toString();
  }
}

class GExportFileFilterInputBuilder
    implements Builder<GExportFileFilterInput, GExportFileFilterInputBuilder> {
  _$GExportFileFilterInput? _$v;

  GDateTimeRangeInputBuilder? _createdAt;
  GDateTimeRangeInputBuilder get createdAt =>
      _$this._createdAt ??= new GDateTimeRangeInputBuilder();
  set createdAt(GDateTimeRangeInputBuilder? createdAt) =>
      _$this._createdAt = createdAt;

  GDateTimeRangeInputBuilder? _updatedAt;
  GDateTimeRangeInputBuilder get updatedAt =>
      _$this._updatedAt ??= new GDateTimeRangeInputBuilder();
  set updatedAt(GDateTimeRangeInputBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GJobStatusEnum? _status;
  GJobStatusEnum? get status => _$this._status;
  set status(GJobStatusEnum? status) => _$this._status = status;

  String? _user;
  String? get user => _$this._user;
  set user(String? user) => _$this._user = user;

  String? _app;
  String? get app => _$this._app;
  set app(String? app) => _$this._app = app;

  GExportFileFilterInputBuilder();

  GExportFileFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _createdAt = $v.createdAt?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _status = $v.status;
      _user = $v.user;
      _app = $v.app;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExportFileFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExportFileFilterInput;
  }

  @override
  void update(void Function(GExportFileFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExportFileFilterInput build() => _build();

  _$GExportFileFilterInput _build() {
    _$GExportFileFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GExportFileFilterInput._(
              createdAt: _createdAt?.build(),
              updatedAt: _updatedAt?.build(),
              status: status,
              user: user,
              app: app);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'createdAt';
        _createdAt?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExportFileFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExportFileSortingInput extends GExportFileSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GExportFileSortField field;

  factory _$GExportFileSortingInput(
          [void Function(GExportFileSortingInputBuilder)? updates]) =>
      (new GExportFileSortingInputBuilder()..update(updates))._build();

  _$GExportFileSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GExportFileSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GExportFileSortingInput', 'field');
  }

  @override
  GExportFileSortingInput rebuild(
          void Function(GExportFileSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExportFileSortingInputBuilder toBuilder() =>
      new GExportFileSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExportFileSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExportFileSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GExportFileSortingInputBuilder
    implements
        Builder<GExportFileSortingInput, GExportFileSortingInputBuilder> {
  _$GExportFileSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GExportFileSortField? _field;
  GExportFileSortField? get field => _$this._field;
  set field(GExportFileSortField? field) => _$this._field = field;

  GExportFileSortingInputBuilder();

  GExportFileSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExportFileSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExportFileSortingInput;
  }

  @override
  void update(void Function(GExportFileSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExportFileSortingInput build() => _build();

  _$GExportFileSortingInput _build() {
    final _$result = _$v ??
        new _$GExportFileSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GExportFileSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GExportFileSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GExportGiftCardsInput extends GExportGiftCardsInput {
  @override
  final GExportScope scope;
  @override
  final GGiftCardFilterInput? filter;
  @override
  final BuiltList<String>? ids;
  @override
  final GFileTypesEnum fileType;

  factory _$GExportGiftCardsInput(
          [void Function(GExportGiftCardsInputBuilder)? updates]) =>
      (new GExportGiftCardsInputBuilder()..update(updates))._build();

  _$GExportGiftCardsInput._(
      {required this.scope, this.filter, this.ids, required this.fileType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        scope, r'GExportGiftCardsInput', 'scope');
    BuiltValueNullFieldError.checkNotNull(
        fileType, r'GExportGiftCardsInput', 'fileType');
  }

  @override
  GExportGiftCardsInput rebuild(
          void Function(GExportGiftCardsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExportGiftCardsInputBuilder toBuilder() =>
      new GExportGiftCardsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExportGiftCardsInput &&
        scope == other.scope &&
        filter == other.filter &&
        ids == other.ids &&
        fileType == other.fileType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, scope.hashCode), filter.hashCode), ids.hashCode),
        fileType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExportGiftCardsInput')
          ..add('scope', scope)
          ..add('filter', filter)
          ..add('ids', ids)
          ..add('fileType', fileType))
        .toString();
  }
}

class GExportGiftCardsInputBuilder
    implements Builder<GExportGiftCardsInput, GExportGiftCardsInputBuilder> {
  _$GExportGiftCardsInput? _$v;

  GExportScope? _scope;
  GExportScope? get scope => _$this._scope;
  set scope(GExportScope? scope) => _$this._scope = scope;

  GGiftCardFilterInputBuilder? _filter;
  GGiftCardFilterInputBuilder get filter =>
      _$this._filter ??= new GGiftCardFilterInputBuilder();
  set filter(GGiftCardFilterInputBuilder? filter) => _$this._filter = filter;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GFileTypesEnum? _fileType;
  GFileTypesEnum? get fileType => _$this._fileType;
  set fileType(GFileTypesEnum? fileType) => _$this._fileType = fileType;

  GExportGiftCardsInputBuilder();

  GExportGiftCardsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _scope = $v.scope;
      _filter = $v.filter?.toBuilder();
      _ids = $v.ids?.toBuilder();
      _fileType = $v.fileType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExportGiftCardsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExportGiftCardsInput;
  }

  @override
  void update(void Function(GExportGiftCardsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExportGiftCardsInput build() => _build();

  _$GExportGiftCardsInput _build() {
    _$GExportGiftCardsInput _$result;
    try {
      _$result = _$v ??
          new _$GExportGiftCardsInput._(
              scope: BuiltValueNullFieldError.checkNotNull(
                  scope, r'GExportGiftCardsInput', 'scope'),
              filter: _filter?.build(),
              ids: _ids?.build(),
              fileType: BuiltValueNullFieldError.checkNotNull(
                  fileType, r'GExportGiftCardsInput', 'fileType'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExportGiftCardsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExportInfoInput extends GExportInfoInput {
  @override
  final BuiltList<String>? attributes;
  @override
  final BuiltList<String>? warehouses;
  @override
  final BuiltList<String>? channels;
  @override
  final BuiltList<GProductFieldEnum>? fields;

  factory _$GExportInfoInput(
          [void Function(GExportInfoInputBuilder)? updates]) =>
      (new GExportInfoInputBuilder()..update(updates))._build();

  _$GExportInfoInput._(
      {this.attributes, this.warehouses, this.channels, this.fields})
      : super._();

  @override
  GExportInfoInput rebuild(void Function(GExportInfoInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExportInfoInputBuilder toBuilder() =>
      new GExportInfoInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExportInfoInput &&
        attributes == other.attributes &&
        warehouses == other.warehouses &&
        channels == other.channels &&
        fields == other.fields;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, attributes.hashCode), warehouses.hashCode),
            channels.hashCode),
        fields.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExportInfoInput')
          ..add('attributes', attributes)
          ..add('warehouses', warehouses)
          ..add('channels', channels)
          ..add('fields', fields))
        .toString();
  }
}

class GExportInfoInputBuilder
    implements Builder<GExportInfoInput, GExportInfoInputBuilder> {
  _$GExportInfoInput? _$v;

  ListBuilder<String>? _attributes;
  ListBuilder<String> get attributes =>
      _$this._attributes ??= new ListBuilder<String>();
  set attributes(ListBuilder<String>? attributes) =>
      _$this._attributes = attributes;

  ListBuilder<String>? _warehouses;
  ListBuilder<String> get warehouses =>
      _$this._warehouses ??= new ListBuilder<String>();
  set warehouses(ListBuilder<String>? warehouses) =>
      _$this._warehouses = warehouses;

  ListBuilder<String>? _channels;
  ListBuilder<String> get channels =>
      _$this._channels ??= new ListBuilder<String>();
  set channels(ListBuilder<String>? channels) => _$this._channels = channels;

  ListBuilder<GProductFieldEnum>? _fields;
  ListBuilder<GProductFieldEnum> get fields =>
      _$this._fields ??= new ListBuilder<GProductFieldEnum>();
  set fields(ListBuilder<GProductFieldEnum>? fields) => _$this._fields = fields;

  GExportInfoInputBuilder();

  GExportInfoInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _attributes = $v.attributes?.toBuilder();
      _warehouses = $v.warehouses?.toBuilder();
      _channels = $v.channels?.toBuilder();
      _fields = $v.fields?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExportInfoInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExportInfoInput;
  }

  @override
  void update(void Function(GExportInfoInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExportInfoInput build() => _build();

  _$GExportInfoInput _build() {
    _$GExportInfoInput _$result;
    try {
      _$result = _$v ??
          new _$GExportInfoInput._(
              attributes: _attributes?.build(),
              warehouses: _warehouses?.build(),
              channels: _channels?.build(),
              fields: _fields?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();
        _$failedField = 'warehouses';
        _warehouses?.build();
        _$failedField = 'channels';
        _channels?.build();
        _$failedField = 'fields';
        _fields?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExportInfoInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExportProductsInput extends GExportProductsInput {
  @override
  final GExportScope scope;
  @override
  final GProductFilterInput? filter;
  @override
  final BuiltList<String>? ids;
  @override
  final GExportInfoInput? exportInfo;
  @override
  final GFileTypesEnum fileType;

  factory _$GExportProductsInput(
          [void Function(GExportProductsInputBuilder)? updates]) =>
      (new GExportProductsInputBuilder()..update(updates))._build();

  _$GExportProductsInput._(
      {required this.scope,
      this.filter,
      this.ids,
      this.exportInfo,
      required this.fileType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        scope, r'GExportProductsInput', 'scope');
    BuiltValueNullFieldError.checkNotNull(
        fileType, r'GExportProductsInput', 'fileType');
  }

  @override
  GExportProductsInput rebuild(
          void Function(GExportProductsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExportProductsInputBuilder toBuilder() =>
      new GExportProductsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExportProductsInput &&
        scope == other.scope &&
        filter == other.filter &&
        ids == other.ids &&
        exportInfo == other.exportInfo &&
        fileType == other.fileType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, scope.hashCode), filter.hashCode), ids.hashCode),
            exportInfo.hashCode),
        fileType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExportProductsInput')
          ..add('scope', scope)
          ..add('filter', filter)
          ..add('ids', ids)
          ..add('exportInfo', exportInfo)
          ..add('fileType', fileType))
        .toString();
  }
}

class GExportProductsInputBuilder
    implements Builder<GExportProductsInput, GExportProductsInputBuilder> {
  _$GExportProductsInput? _$v;

  GExportScope? _scope;
  GExportScope? get scope => _$this._scope;
  set scope(GExportScope? scope) => _$this._scope = scope;

  GProductFilterInputBuilder? _filter;
  GProductFilterInputBuilder get filter =>
      _$this._filter ??= new GProductFilterInputBuilder();
  set filter(GProductFilterInputBuilder? filter) => _$this._filter = filter;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GExportInfoInputBuilder? _exportInfo;
  GExportInfoInputBuilder get exportInfo =>
      _$this._exportInfo ??= new GExportInfoInputBuilder();
  set exportInfo(GExportInfoInputBuilder? exportInfo) =>
      _$this._exportInfo = exportInfo;

  GFileTypesEnum? _fileType;
  GFileTypesEnum? get fileType => _$this._fileType;
  set fileType(GFileTypesEnum? fileType) => _$this._fileType = fileType;

  GExportProductsInputBuilder();

  GExportProductsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _scope = $v.scope;
      _filter = $v.filter?.toBuilder();
      _ids = $v.ids?.toBuilder();
      _exportInfo = $v.exportInfo?.toBuilder();
      _fileType = $v.fileType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExportProductsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExportProductsInput;
  }

  @override
  void update(void Function(GExportProductsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExportProductsInput build() => _build();

  _$GExportProductsInput _build() {
    _$GExportProductsInput _$result;
    try {
      _$result = _$v ??
          new _$GExportProductsInput._(
              scope: BuiltValueNullFieldError.checkNotNull(
                  scope, r'GExportProductsInput', 'scope'),
              filter: _filter?.build(),
              ids: _ids?.build(),
              exportInfo: _exportInfo?.build(),
              fileType: BuiltValueNullFieldError.checkNotNull(
                  fileType, r'GExportProductsInput', 'fileType'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'filter';
        _filter?.build();
        _$failedField = 'ids';
        _ids?.build();
        _$failedField = 'exportInfo';
        _exportInfo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExportProductsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GExternalNotificationTriggerInput
    extends GExternalNotificationTriggerInput {
  @override
  final BuiltList<String> ids;
  @override
  final GJSONString? extraPayload;
  @override
  final String externalEventType;

  factory _$GExternalNotificationTriggerInput(
          [void Function(GExternalNotificationTriggerInputBuilder)? updates]) =>
      (new GExternalNotificationTriggerInputBuilder()..update(updates))
          ._build();

  _$GExternalNotificationTriggerInput._(
      {required this.ids, this.extraPayload, required this.externalEventType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        ids, r'GExternalNotificationTriggerInput', 'ids');
    BuiltValueNullFieldError.checkNotNull(externalEventType,
        r'GExternalNotificationTriggerInput', 'externalEventType');
  }

  @override
  GExternalNotificationTriggerInput rebuild(
          void Function(GExternalNotificationTriggerInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GExternalNotificationTriggerInputBuilder toBuilder() =>
      new GExternalNotificationTriggerInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GExternalNotificationTriggerInput &&
        ids == other.ids &&
        extraPayload == other.extraPayload &&
        externalEventType == other.externalEventType;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, ids.hashCode), extraPayload.hashCode),
        externalEventType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GExternalNotificationTriggerInput')
          ..add('ids', ids)
          ..add('extraPayload', extraPayload)
          ..add('externalEventType', externalEventType))
        .toString();
  }
}

class GExternalNotificationTriggerInputBuilder
    implements
        Builder<GExternalNotificationTriggerInput,
            GExternalNotificationTriggerInputBuilder> {
  _$GExternalNotificationTriggerInput? _$v;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GJSONStringBuilder? _extraPayload;
  GJSONStringBuilder get extraPayload =>
      _$this._extraPayload ??= new GJSONStringBuilder();
  set extraPayload(GJSONStringBuilder? extraPayload) =>
      _$this._extraPayload = extraPayload;

  String? _externalEventType;
  String? get externalEventType => _$this._externalEventType;
  set externalEventType(String? externalEventType) =>
      _$this._externalEventType = externalEventType;

  GExternalNotificationTriggerInputBuilder();

  GExternalNotificationTriggerInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _ids = $v.ids.toBuilder();
      _extraPayload = $v.extraPayload?.toBuilder();
      _externalEventType = $v.externalEventType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GExternalNotificationTriggerInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GExternalNotificationTriggerInput;
  }

  @override
  void update(
      void Function(GExternalNotificationTriggerInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GExternalNotificationTriggerInput build() => _build();

  _$GExternalNotificationTriggerInput _build() {
    _$GExternalNotificationTriggerInput _$result;
    try {
      _$result = _$v ??
          new _$GExternalNotificationTriggerInput._(
              ids: ids.build(),
              extraPayload: _extraPayload?.build(),
              externalEventType: BuiltValueNullFieldError.checkNotNull(
                  externalEventType,
                  r'GExternalNotificationTriggerInput',
                  'externalEventType'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        ids.build();
        _$failedField = 'extraPayload';
        _extraPayload?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GExternalNotificationTriggerInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GFulfillmentCancelInput extends GFulfillmentCancelInput {
  @override
  final String? warehouseId;

  factory _$GFulfillmentCancelInput(
          [void Function(GFulfillmentCancelInputBuilder)? updates]) =>
      (new GFulfillmentCancelInputBuilder()..update(updates))._build();

  _$GFulfillmentCancelInput._({this.warehouseId}) : super._();

  @override
  GFulfillmentCancelInput rebuild(
          void Function(GFulfillmentCancelInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFulfillmentCancelInputBuilder toBuilder() =>
      new GFulfillmentCancelInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFulfillmentCancelInput && warehouseId == other.warehouseId;
  }

  @override
  int get hashCode {
    return $jf($jc(0, warehouseId.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFulfillmentCancelInput')
          ..add('warehouseId', warehouseId))
        .toString();
  }
}

class GFulfillmentCancelInputBuilder
    implements
        Builder<GFulfillmentCancelInput, GFulfillmentCancelInputBuilder> {
  _$GFulfillmentCancelInput? _$v;

  String? _warehouseId;
  String? get warehouseId => _$this._warehouseId;
  set warehouseId(String? warehouseId) => _$this._warehouseId = warehouseId;

  GFulfillmentCancelInputBuilder();

  GFulfillmentCancelInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _warehouseId = $v.warehouseId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFulfillmentCancelInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFulfillmentCancelInput;
  }

  @override
  void update(void Function(GFulfillmentCancelInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFulfillmentCancelInput build() => _build();

  _$GFulfillmentCancelInput _build() {
    final _$result =
        _$v ?? new _$GFulfillmentCancelInput._(warehouseId: warehouseId);
    replace(_$result);
    return _$result;
  }
}

class _$GFulfillmentUpdateTrackingInput
    extends GFulfillmentUpdateTrackingInput {
  @override
  final String? trackingNumber;
  @override
  final bool? notifyCustomer;

  factory _$GFulfillmentUpdateTrackingInput(
          [void Function(GFulfillmentUpdateTrackingInputBuilder)? updates]) =>
      (new GFulfillmentUpdateTrackingInputBuilder()..update(updates))._build();

  _$GFulfillmentUpdateTrackingInput._(
      {this.trackingNumber, this.notifyCustomer})
      : super._();

  @override
  GFulfillmentUpdateTrackingInput rebuild(
          void Function(GFulfillmentUpdateTrackingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFulfillmentUpdateTrackingInputBuilder toBuilder() =>
      new GFulfillmentUpdateTrackingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFulfillmentUpdateTrackingInput &&
        trackingNumber == other.trackingNumber &&
        notifyCustomer == other.notifyCustomer;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, trackingNumber.hashCode), notifyCustomer.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFulfillmentUpdateTrackingInput')
          ..add('trackingNumber', trackingNumber)
          ..add('notifyCustomer', notifyCustomer))
        .toString();
  }
}

class GFulfillmentUpdateTrackingInputBuilder
    implements
        Builder<GFulfillmentUpdateTrackingInput,
            GFulfillmentUpdateTrackingInputBuilder> {
  _$GFulfillmentUpdateTrackingInput? _$v;

  String? _trackingNumber;
  String? get trackingNumber => _$this._trackingNumber;
  set trackingNumber(String? trackingNumber) =>
      _$this._trackingNumber = trackingNumber;

  bool? _notifyCustomer;
  bool? get notifyCustomer => _$this._notifyCustomer;
  set notifyCustomer(bool? notifyCustomer) =>
      _$this._notifyCustomer = notifyCustomer;

  GFulfillmentUpdateTrackingInputBuilder();

  GFulfillmentUpdateTrackingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _trackingNumber = $v.trackingNumber;
      _notifyCustomer = $v.notifyCustomer;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFulfillmentUpdateTrackingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFulfillmentUpdateTrackingInput;
  }

  @override
  void update(void Function(GFulfillmentUpdateTrackingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFulfillmentUpdateTrackingInput build() => _build();

  _$GFulfillmentUpdateTrackingInput _build() {
    final _$result = _$v ??
        new _$GFulfillmentUpdateTrackingInput._(
            trackingNumber: trackingNumber, notifyCustomer: notifyCustomer);
    replace(_$result);
    return _$result;
  }
}

class _$GGenericScalar extends GGenericScalar {
  @override
  final String value;

  factory _$GGenericScalar([void Function(GGenericScalarBuilder)? updates]) =>
      (new GGenericScalarBuilder()..update(updates))._build();

  _$GGenericScalar._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GGenericScalar', 'value');
  }

  @override
  GGenericScalar rebuild(void Function(GGenericScalarBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGenericScalarBuilder toBuilder() =>
      new GGenericScalarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGenericScalar && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGenericScalar')..add('value', value))
        .toString();
  }
}

class GGenericScalarBuilder
    implements Builder<GGenericScalar, GGenericScalarBuilder> {
  _$GGenericScalar? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GGenericScalarBuilder();

  GGenericScalarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGenericScalar other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGenericScalar;
  }

  @override
  void update(void Function(GGenericScalarBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGenericScalar build() => _build();

  _$GGenericScalar _build() {
    final _$result = _$v ??
        new _$GGenericScalar._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GGenericScalar', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardAddNoteInput extends GGiftCardAddNoteInput {
  @override
  final String message;

  factory _$GGiftCardAddNoteInput(
          [void Function(GGiftCardAddNoteInputBuilder)? updates]) =>
      (new GGiftCardAddNoteInputBuilder()..update(updates))._build();

  _$GGiftCardAddNoteInput._({required this.message}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        message, r'GGiftCardAddNoteInput', 'message');
  }

  @override
  GGiftCardAddNoteInput rebuild(
          void Function(GGiftCardAddNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardAddNoteInputBuilder toBuilder() =>
      new GGiftCardAddNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardAddNoteInput && message == other.message;
  }

  @override
  int get hashCode {
    return $jf($jc(0, message.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardAddNoteInput')
          ..add('message', message))
        .toString();
  }
}

class GGiftCardAddNoteInputBuilder
    implements Builder<GGiftCardAddNoteInput, GGiftCardAddNoteInputBuilder> {
  _$GGiftCardAddNoteInput? _$v;

  String? _message;
  String? get message => _$this._message;
  set message(String? message) => _$this._message = message;

  GGiftCardAddNoteInputBuilder();

  GGiftCardAddNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _message = $v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardAddNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardAddNoteInput;
  }

  @override
  void update(void Function(GGiftCardAddNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardAddNoteInput build() => _build();

  _$GGiftCardAddNoteInput _build() {
    final _$result = _$v ??
        new _$GGiftCardAddNoteInput._(
            message: BuiltValueNullFieldError.checkNotNull(
                message, r'GGiftCardAddNoteInput', 'message'));
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardBulkCreateInput extends GGiftCardBulkCreateInput {
  @override
  final int count;
  @override
  final GPriceInput balance;
  @override
  final BuiltList<String>? tags;
  @override
  final GDate? expiryDate;
  @override
  final bool isActive;

  factory _$GGiftCardBulkCreateInput(
          [void Function(GGiftCardBulkCreateInputBuilder)? updates]) =>
      (new GGiftCardBulkCreateInputBuilder()..update(updates))._build();

  _$GGiftCardBulkCreateInput._(
      {required this.count,
      required this.balance,
      this.tags,
      this.expiryDate,
      required this.isActive})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        count, r'GGiftCardBulkCreateInput', 'count');
    BuiltValueNullFieldError.checkNotNull(
        balance, r'GGiftCardBulkCreateInput', 'balance');
    BuiltValueNullFieldError.checkNotNull(
        isActive, r'GGiftCardBulkCreateInput', 'isActive');
  }

  @override
  GGiftCardBulkCreateInput rebuild(
          void Function(GGiftCardBulkCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardBulkCreateInputBuilder toBuilder() =>
      new GGiftCardBulkCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardBulkCreateInput &&
        count == other.count &&
        balance == other.balance &&
        tags == other.tags &&
        expiryDate == other.expiryDate &&
        isActive == other.isActive;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, count.hashCode), balance.hashCode), tags.hashCode),
            expiryDate.hashCode),
        isActive.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardBulkCreateInput')
          ..add('count', count)
          ..add('balance', balance)
          ..add('tags', tags)
          ..add('expiryDate', expiryDate)
          ..add('isActive', isActive))
        .toString();
  }
}

class GGiftCardBulkCreateInputBuilder
    implements
        Builder<GGiftCardBulkCreateInput, GGiftCardBulkCreateInputBuilder> {
  _$GGiftCardBulkCreateInput? _$v;

  int? _count;
  int? get count => _$this._count;
  set count(int? count) => _$this._count = count;

  GPriceInputBuilder? _balance;
  GPriceInputBuilder get balance =>
      _$this._balance ??= new GPriceInputBuilder();
  set balance(GPriceInputBuilder? balance) => _$this._balance = balance;

  ListBuilder<String>? _tags;
  ListBuilder<String> get tags => _$this._tags ??= new ListBuilder<String>();
  set tags(ListBuilder<String>? tags) => _$this._tags = tags;

  GDateBuilder? _expiryDate;
  GDateBuilder get expiryDate => _$this._expiryDate ??= new GDateBuilder();
  set expiryDate(GDateBuilder? expiryDate) => _$this._expiryDate = expiryDate;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  GGiftCardBulkCreateInputBuilder();

  GGiftCardBulkCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _count = $v.count;
      _balance = $v.balance.toBuilder();
      _tags = $v.tags?.toBuilder();
      _expiryDate = $v.expiryDate?.toBuilder();
      _isActive = $v.isActive;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardBulkCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardBulkCreateInput;
  }

  @override
  void update(void Function(GGiftCardBulkCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardBulkCreateInput build() => _build();

  _$GGiftCardBulkCreateInput _build() {
    _$GGiftCardBulkCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GGiftCardBulkCreateInput._(
              count: BuiltValueNullFieldError.checkNotNull(
                  count, r'GGiftCardBulkCreateInput', 'count'),
              balance: balance.build(),
              tags: _tags?.build(),
              expiryDate: _expiryDate?.build(),
              isActive: BuiltValueNullFieldError.checkNotNull(
                  isActive, r'GGiftCardBulkCreateInput', 'isActive'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'balance';
        balance.build();
        _$failedField = 'tags';
        _tags?.build();
        _$failedField = 'expiryDate';
        _expiryDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGiftCardBulkCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardCreateInput extends GGiftCardCreateInput {
  @override
  final BuiltList<String>? addTags;
  @override
  final GDate? expiryDate;
  @override
  final GDate? startDate;
  @override
  final GDate? endDate;
  @override
  final GPriceInput balance;
  @override
  final String? userEmail;
  @override
  final String? channel;
  @override
  final bool isActive;
  @override
  final String? code;
  @override
  final String? note;

  factory _$GGiftCardCreateInput(
          [void Function(GGiftCardCreateInputBuilder)? updates]) =>
      (new GGiftCardCreateInputBuilder()..update(updates))._build();

  _$GGiftCardCreateInput._(
      {this.addTags,
      this.expiryDate,
      this.startDate,
      this.endDate,
      required this.balance,
      this.userEmail,
      this.channel,
      required this.isActive,
      this.code,
      this.note})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        balance, r'GGiftCardCreateInput', 'balance');
    BuiltValueNullFieldError.checkNotNull(
        isActive, r'GGiftCardCreateInput', 'isActive');
  }

  @override
  GGiftCardCreateInput rebuild(
          void Function(GGiftCardCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardCreateInputBuilder toBuilder() =>
      new GGiftCardCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardCreateInput &&
        addTags == other.addTags &&
        expiryDate == other.expiryDate &&
        startDate == other.startDate &&
        endDate == other.endDate &&
        balance == other.balance &&
        userEmail == other.userEmail &&
        channel == other.channel &&
        isActive == other.isActive &&
        code == other.code &&
        note == other.note;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, addTags.hashCode),
                                        expiryDate.hashCode),
                                    startDate.hashCode),
                                endDate.hashCode),
                            balance.hashCode),
                        userEmail.hashCode),
                    channel.hashCode),
                isActive.hashCode),
            code.hashCode),
        note.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardCreateInput')
          ..add('addTags', addTags)
          ..add('expiryDate', expiryDate)
          ..add('startDate', startDate)
          ..add('endDate', endDate)
          ..add('balance', balance)
          ..add('userEmail', userEmail)
          ..add('channel', channel)
          ..add('isActive', isActive)
          ..add('code', code)
          ..add('note', note))
        .toString();
  }
}

class GGiftCardCreateInputBuilder
    implements Builder<GGiftCardCreateInput, GGiftCardCreateInputBuilder> {
  _$GGiftCardCreateInput? _$v;

  ListBuilder<String>? _addTags;
  ListBuilder<String> get addTags =>
      _$this._addTags ??= new ListBuilder<String>();
  set addTags(ListBuilder<String>? addTags) => _$this._addTags = addTags;

  GDateBuilder? _expiryDate;
  GDateBuilder get expiryDate => _$this._expiryDate ??= new GDateBuilder();
  set expiryDate(GDateBuilder? expiryDate) => _$this._expiryDate = expiryDate;

  GDateBuilder? _startDate;
  GDateBuilder get startDate => _$this._startDate ??= new GDateBuilder();
  set startDate(GDateBuilder? startDate) => _$this._startDate = startDate;

  GDateBuilder? _endDate;
  GDateBuilder get endDate => _$this._endDate ??= new GDateBuilder();
  set endDate(GDateBuilder? endDate) => _$this._endDate = endDate;

  GPriceInputBuilder? _balance;
  GPriceInputBuilder get balance =>
      _$this._balance ??= new GPriceInputBuilder();
  set balance(GPriceInputBuilder? balance) => _$this._balance = balance;

  String? _userEmail;
  String? get userEmail => _$this._userEmail;
  set userEmail(String? userEmail) => _$this._userEmail = userEmail;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  String? _code;
  String? get code => _$this._code;
  set code(String? code) => _$this._code = code;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  GGiftCardCreateInputBuilder();

  GGiftCardCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _addTags = $v.addTags?.toBuilder();
      _expiryDate = $v.expiryDate?.toBuilder();
      _startDate = $v.startDate?.toBuilder();
      _endDate = $v.endDate?.toBuilder();
      _balance = $v.balance.toBuilder();
      _userEmail = $v.userEmail;
      _channel = $v.channel;
      _isActive = $v.isActive;
      _code = $v.code;
      _note = $v.note;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardCreateInput;
  }

  @override
  void update(void Function(GGiftCardCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardCreateInput build() => _build();

  _$GGiftCardCreateInput _build() {
    _$GGiftCardCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GGiftCardCreateInput._(
              addTags: _addTags?.build(),
              expiryDate: _expiryDate?.build(),
              startDate: _startDate?.build(),
              endDate: _endDate?.build(),
              balance: balance.build(),
              userEmail: userEmail,
              channel: channel,
              isActive: BuiltValueNullFieldError.checkNotNull(
                  isActive, r'GGiftCardCreateInput', 'isActive'),
              code: code,
              note: note);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addTags';
        _addTags?.build();
        _$failedField = 'expiryDate';
        _expiryDate?.build();
        _$failedField = 'startDate';
        _startDate?.build();
        _$failedField = 'endDate';
        _endDate?.build();
        _$failedField = 'balance';
        balance.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGiftCardCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardEventFilterInput extends GGiftCardEventFilterInput {
  @override
  final GGiftCardEventsEnum? type;
  @override
  final BuiltList<String>? orders;

  factory _$GGiftCardEventFilterInput(
          [void Function(GGiftCardEventFilterInputBuilder)? updates]) =>
      (new GGiftCardEventFilterInputBuilder()..update(updates))._build();

  _$GGiftCardEventFilterInput._({this.type, this.orders}) : super._();

  @override
  GGiftCardEventFilterInput rebuild(
          void Function(GGiftCardEventFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardEventFilterInputBuilder toBuilder() =>
      new GGiftCardEventFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardEventFilterInput &&
        type == other.type &&
        orders == other.orders;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, type.hashCode), orders.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardEventFilterInput')
          ..add('type', type)
          ..add('orders', orders))
        .toString();
  }
}

class GGiftCardEventFilterInputBuilder
    implements
        Builder<GGiftCardEventFilterInput, GGiftCardEventFilterInputBuilder> {
  _$GGiftCardEventFilterInput? _$v;

  GGiftCardEventsEnum? _type;
  GGiftCardEventsEnum? get type => _$this._type;
  set type(GGiftCardEventsEnum? type) => _$this._type = type;

  ListBuilder<String>? _orders;
  ListBuilder<String> get orders =>
      _$this._orders ??= new ListBuilder<String>();
  set orders(ListBuilder<String>? orders) => _$this._orders = orders;

  GGiftCardEventFilterInputBuilder();

  GGiftCardEventFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _type = $v.type;
      _orders = $v.orders?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardEventFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardEventFilterInput;
  }

  @override
  void update(void Function(GGiftCardEventFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardEventFilterInput build() => _build();

  _$GGiftCardEventFilterInput _build() {
    _$GGiftCardEventFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GGiftCardEventFilterInput._(
              type: type, orders: _orders?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'orders';
        _orders?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGiftCardEventFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardFilterInput extends GGiftCardFilterInput {
  @override
  final bool? isActive;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? tags;
  @override
  final BuiltList<String>? products;
  @override
  final BuiltList<String>? usedBy;
  @override
  final bool? used;
  @override
  final String? currency;
  @override
  final GPriceRangeInput? currentBalance;
  @override
  final GPriceRangeInput? initialBalance;
  @override
  final String? code;

  factory _$GGiftCardFilterInput(
          [void Function(GGiftCardFilterInputBuilder)? updates]) =>
      (new GGiftCardFilterInputBuilder()..update(updates))._build();

  _$GGiftCardFilterInput._(
      {this.isActive,
      this.metadata,
      this.tags,
      this.products,
      this.usedBy,
      this.used,
      this.currency,
      this.currentBalance,
      this.initialBalance,
      this.code})
      : super._();

  @override
  GGiftCardFilterInput rebuild(
          void Function(GGiftCardFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardFilterInputBuilder toBuilder() =>
      new GGiftCardFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardFilterInput &&
        isActive == other.isActive &&
        metadata == other.metadata &&
        tags == other.tags &&
        products == other.products &&
        usedBy == other.usedBy &&
        used == other.used &&
        currency == other.currency &&
        currentBalance == other.currentBalance &&
        initialBalance == other.initialBalance &&
        code == other.code;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, isActive.hashCode),
                                        metadata.hashCode),
                                    tags.hashCode),
                                products.hashCode),
                            usedBy.hashCode),
                        used.hashCode),
                    currency.hashCode),
                currentBalance.hashCode),
            initialBalance.hashCode),
        code.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardFilterInput')
          ..add('isActive', isActive)
          ..add('metadata', metadata)
          ..add('tags', tags)
          ..add('products', products)
          ..add('usedBy', usedBy)
          ..add('used', used)
          ..add('currency', currency)
          ..add('currentBalance', currentBalance)
          ..add('initialBalance', initialBalance)
          ..add('code', code))
        .toString();
  }
}

class GGiftCardFilterInputBuilder
    implements Builder<GGiftCardFilterInput, GGiftCardFilterInputBuilder> {
  _$GGiftCardFilterInput? _$v;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _tags;
  ListBuilder<String> get tags => _$this._tags ??= new ListBuilder<String>();
  set tags(ListBuilder<String>? tags) => _$this._tags = tags;

  ListBuilder<String>? _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String>? products) => _$this._products = products;

  ListBuilder<String>? _usedBy;
  ListBuilder<String> get usedBy =>
      _$this._usedBy ??= new ListBuilder<String>();
  set usedBy(ListBuilder<String>? usedBy) => _$this._usedBy = usedBy;

  bool? _used;
  bool? get used => _$this._used;
  set used(bool? used) => _$this._used = used;

  String? _currency;
  String? get currency => _$this._currency;
  set currency(String? currency) => _$this._currency = currency;

  GPriceRangeInputBuilder? _currentBalance;
  GPriceRangeInputBuilder get currentBalance =>
      _$this._currentBalance ??= new GPriceRangeInputBuilder();
  set currentBalance(GPriceRangeInputBuilder? currentBalance) =>
      _$this._currentBalance = currentBalance;

  GPriceRangeInputBuilder? _initialBalance;
  GPriceRangeInputBuilder get initialBalance =>
      _$this._initialBalance ??= new GPriceRangeInputBuilder();
  set initialBalance(GPriceRangeInputBuilder? initialBalance) =>
      _$this._initialBalance = initialBalance;

  String? _code;
  String? get code => _$this._code;
  set code(String? code) => _$this._code = code;

  GGiftCardFilterInputBuilder();

  GGiftCardFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _isActive = $v.isActive;
      _metadata = $v.metadata?.toBuilder();
      _tags = $v.tags?.toBuilder();
      _products = $v.products?.toBuilder();
      _usedBy = $v.usedBy?.toBuilder();
      _used = $v.used;
      _currency = $v.currency;
      _currentBalance = $v.currentBalance?.toBuilder();
      _initialBalance = $v.initialBalance?.toBuilder();
      _code = $v.code;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardFilterInput;
  }

  @override
  void update(void Function(GGiftCardFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardFilterInput build() => _build();

  _$GGiftCardFilterInput _build() {
    _$GGiftCardFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GGiftCardFilterInput._(
              isActive: isActive,
              metadata: _metadata?.build(),
              tags: _tags?.build(),
              products: _products?.build(),
              usedBy: _usedBy?.build(),
              used: used,
              currency: currency,
              currentBalance: _currentBalance?.build(),
              initialBalance: _initialBalance?.build(),
              code: code);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'tags';
        _tags?.build();
        _$failedField = 'products';
        _products?.build();
        _$failedField = 'usedBy';
        _usedBy?.build();

        _$failedField = 'currentBalance';
        _currentBalance?.build();
        _$failedField = 'initialBalance';
        _initialBalance?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGiftCardFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardResendInput extends GGiftCardResendInput {
  @override
  final String id;
  @override
  final String? email;
  @override
  final String channel;

  factory _$GGiftCardResendInput(
          [void Function(GGiftCardResendInputBuilder)? updates]) =>
      (new GGiftCardResendInputBuilder()..update(updates))._build();

  _$GGiftCardResendInput._(
      {required this.id, this.email, required this.channel})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GGiftCardResendInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        channel, r'GGiftCardResendInput', 'channel');
  }

  @override
  GGiftCardResendInput rebuild(
          void Function(GGiftCardResendInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardResendInputBuilder toBuilder() =>
      new GGiftCardResendInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardResendInput &&
        id == other.id &&
        email == other.email &&
        channel == other.channel;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, id.hashCode), email.hashCode), channel.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardResendInput')
          ..add('id', id)
          ..add('email', email)
          ..add('channel', channel))
        .toString();
  }
}

class GGiftCardResendInputBuilder
    implements Builder<GGiftCardResendInput, GGiftCardResendInputBuilder> {
  _$GGiftCardResendInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GGiftCardResendInputBuilder();

  GGiftCardResendInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _email = $v.email;
      _channel = $v.channel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardResendInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardResendInput;
  }

  @override
  void update(void Function(GGiftCardResendInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardResendInput build() => _build();

  _$GGiftCardResendInput _build() {
    final _$result = _$v ??
        new _$GGiftCardResendInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GGiftCardResendInput', 'id'),
            email: email,
            channel: BuiltValueNullFieldError.checkNotNull(
                channel, r'GGiftCardResendInput', 'channel'));
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardSettingsUpdateInput extends GGiftCardSettingsUpdateInput {
  @override
  final GGiftCardSettingsExpiryTypeEnum? expiryType;
  @override
  final GTimePeriodInputType? expiryPeriod;

  factory _$GGiftCardSettingsUpdateInput(
          [void Function(GGiftCardSettingsUpdateInputBuilder)? updates]) =>
      (new GGiftCardSettingsUpdateInputBuilder()..update(updates))._build();

  _$GGiftCardSettingsUpdateInput._({this.expiryType, this.expiryPeriod})
      : super._();

  @override
  GGiftCardSettingsUpdateInput rebuild(
          void Function(GGiftCardSettingsUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardSettingsUpdateInputBuilder toBuilder() =>
      new GGiftCardSettingsUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardSettingsUpdateInput &&
        expiryType == other.expiryType &&
        expiryPeriod == other.expiryPeriod;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, expiryType.hashCode), expiryPeriod.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardSettingsUpdateInput')
          ..add('expiryType', expiryType)
          ..add('expiryPeriod', expiryPeriod))
        .toString();
  }
}

class GGiftCardSettingsUpdateInputBuilder
    implements
        Builder<GGiftCardSettingsUpdateInput,
            GGiftCardSettingsUpdateInputBuilder> {
  _$GGiftCardSettingsUpdateInput? _$v;

  GGiftCardSettingsExpiryTypeEnum? _expiryType;
  GGiftCardSettingsExpiryTypeEnum? get expiryType => _$this._expiryType;
  set expiryType(GGiftCardSettingsExpiryTypeEnum? expiryType) =>
      _$this._expiryType = expiryType;

  GTimePeriodInputTypeBuilder? _expiryPeriod;
  GTimePeriodInputTypeBuilder get expiryPeriod =>
      _$this._expiryPeriod ??= new GTimePeriodInputTypeBuilder();
  set expiryPeriod(GTimePeriodInputTypeBuilder? expiryPeriod) =>
      _$this._expiryPeriod = expiryPeriod;

  GGiftCardSettingsUpdateInputBuilder();

  GGiftCardSettingsUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _expiryType = $v.expiryType;
      _expiryPeriod = $v.expiryPeriod?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardSettingsUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardSettingsUpdateInput;
  }

  @override
  void update(void Function(GGiftCardSettingsUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardSettingsUpdateInput build() => _build();

  _$GGiftCardSettingsUpdateInput _build() {
    _$GGiftCardSettingsUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GGiftCardSettingsUpdateInput._(
              expiryType: expiryType, expiryPeriod: _expiryPeriod?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'expiryPeriod';
        _expiryPeriod?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGiftCardSettingsUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardSortingInput extends GGiftCardSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GGiftCardSortField field;

  factory _$GGiftCardSortingInput(
          [void Function(GGiftCardSortingInputBuilder)? updates]) =>
      (new GGiftCardSortingInputBuilder()..update(updates))._build();

  _$GGiftCardSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GGiftCardSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GGiftCardSortingInput', 'field');
  }

  @override
  GGiftCardSortingInput rebuild(
          void Function(GGiftCardSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardSortingInputBuilder toBuilder() =>
      new GGiftCardSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GGiftCardSortingInputBuilder
    implements Builder<GGiftCardSortingInput, GGiftCardSortingInputBuilder> {
  _$GGiftCardSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GGiftCardSortField? _field;
  GGiftCardSortField? get field => _$this._field;
  set field(GGiftCardSortField? field) => _$this._field = field;

  GGiftCardSortingInputBuilder();

  GGiftCardSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardSortingInput;
  }

  @override
  void update(void Function(GGiftCardSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardSortingInput build() => _build();

  _$GGiftCardSortingInput _build() {
    final _$result = _$v ??
        new _$GGiftCardSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GGiftCardSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GGiftCardSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardTagFilterInput extends GGiftCardTagFilterInput {
  @override
  final String? search;

  factory _$GGiftCardTagFilterInput(
          [void Function(GGiftCardTagFilterInputBuilder)? updates]) =>
      (new GGiftCardTagFilterInputBuilder()..update(updates))._build();

  _$GGiftCardTagFilterInput._({this.search}) : super._();

  @override
  GGiftCardTagFilterInput rebuild(
          void Function(GGiftCardTagFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardTagFilterInputBuilder toBuilder() =>
      new GGiftCardTagFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardTagFilterInput && search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc(0, search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardTagFilterInput')
          ..add('search', search))
        .toString();
  }
}

class GGiftCardTagFilterInputBuilder
    implements
        Builder<GGiftCardTagFilterInput, GGiftCardTagFilterInputBuilder> {
  _$GGiftCardTagFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  GGiftCardTagFilterInputBuilder();

  GGiftCardTagFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardTagFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardTagFilterInput;
  }

  @override
  void update(void Function(GGiftCardTagFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardTagFilterInput build() => _build();

  _$GGiftCardTagFilterInput _build() {
    final _$result = _$v ?? new _$GGiftCardTagFilterInput._(search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GGiftCardUpdateInput extends GGiftCardUpdateInput {
  @override
  final BuiltList<String>? addTags;
  @override
  final GDate? expiryDate;
  @override
  final GDate? startDate;
  @override
  final GDate? endDate;
  @override
  final BuiltList<String>? removeTags;
  @override
  final GPositiveDecimal? balanceAmount;

  factory _$GGiftCardUpdateInput(
          [void Function(GGiftCardUpdateInputBuilder)? updates]) =>
      (new GGiftCardUpdateInputBuilder()..update(updates))._build();

  _$GGiftCardUpdateInput._(
      {this.addTags,
      this.expiryDate,
      this.startDate,
      this.endDate,
      this.removeTags,
      this.balanceAmount})
      : super._();

  @override
  GGiftCardUpdateInput rebuild(
          void Function(GGiftCardUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGiftCardUpdateInputBuilder toBuilder() =>
      new GGiftCardUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGiftCardUpdateInput &&
        addTags == other.addTags &&
        expiryDate == other.expiryDate &&
        startDate == other.startDate &&
        endDate == other.endDate &&
        removeTags == other.removeTags &&
        balanceAmount == other.balanceAmount;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, addTags.hashCode), expiryDate.hashCode),
                    startDate.hashCode),
                endDate.hashCode),
            removeTags.hashCode),
        balanceAmount.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGiftCardUpdateInput')
          ..add('addTags', addTags)
          ..add('expiryDate', expiryDate)
          ..add('startDate', startDate)
          ..add('endDate', endDate)
          ..add('removeTags', removeTags)
          ..add('balanceAmount', balanceAmount))
        .toString();
  }
}

class GGiftCardUpdateInputBuilder
    implements Builder<GGiftCardUpdateInput, GGiftCardUpdateInputBuilder> {
  _$GGiftCardUpdateInput? _$v;

  ListBuilder<String>? _addTags;
  ListBuilder<String> get addTags =>
      _$this._addTags ??= new ListBuilder<String>();
  set addTags(ListBuilder<String>? addTags) => _$this._addTags = addTags;

  GDateBuilder? _expiryDate;
  GDateBuilder get expiryDate => _$this._expiryDate ??= new GDateBuilder();
  set expiryDate(GDateBuilder? expiryDate) => _$this._expiryDate = expiryDate;

  GDateBuilder? _startDate;
  GDateBuilder get startDate => _$this._startDate ??= new GDateBuilder();
  set startDate(GDateBuilder? startDate) => _$this._startDate = startDate;

  GDateBuilder? _endDate;
  GDateBuilder get endDate => _$this._endDate ??= new GDateBuilder();
  set endDate(GDateBuilder? endDate) => _$this._endDate = endDate;

  ListBuilder<String>? _removeTags;
  ListBuilder<String> get removeTags =>
      _$this._removeTags ??= new ListBuilder<String>();
  set removeTags(ListBuilder<String>? removeTags) =>
      _$this._removeTags = removeTags;

  GPositiveDecimalBuilder? _balanceAmount;
  GPositiveDecimalBuilder get balanceAmount =>
      _$this._balanceAmount ??= new GPositiveDecimalBuilder();
  set balanceAmount(GPositiveDecimalBuilder? balanceAmount) =>
      _$this._balanceAmount = balanceAmount;

  GGiftCardUpdateInputBuilder();

  GGiftCardUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _addTags = $v.addTags?.toBuilder();
      _expiryDate = $v.expiryDate?.toBuilder();
      _startDate = $v.startDate?.toBuilder();
      _endDate = $v.endDate?.toBuilder();
      _removeTags = $v.removeTags?.toBuilder();
      _balanceAmount = $v.balanceAmount?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGiftCardUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGiftCardUpdateInput;
  }

  @override
  void update(void Function(GGiftCardUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGiftCardUpdateInput build() => _build();

  _$GGiftCardUpdateInput _build() {
    _$GGiftCardUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GGiftCardUpdateInput._(
              addTags: _addTags?.build(),
              expiryDate: _expiryDate?.build(),
              startDate: _startDate?.build(),
              endDate: _endDate?.build(),
              removeTags: _removeTags?.build(),
              balanceAmount: _balanceAmount?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addTags';
        _addTags?.build();
        _$failedField = 'expiryDate';
        _expiryDate?.build();
        _$failedField = 'startDate';
        _startDate?.build();
        _$failedField = 'endDate';
        _endDate?.build();
        _$failedField = 'removeTags';
        _removeTags?.build();
        _$failedField = 'balanceAmount';
        _balanceAmount?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GGiftCardUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GIntRangeInput extends GIntRangeInput {
  @override
  final int? gte;
  @override
  final int? lte;

  factory _$GIntRangeInput([void Function(GIntRangeInputBuilder)? updates]) =>
      (new GIntRangeInputBuilder()..update(updates))._build();

  _$GIntRangeInput._({this.gte, this.lte}) : super._();

  @override
  GIntRangeInput rebuild(void Function(GIntRangeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GIntRangeInputBuilder toBuilder() =>
      new GIntRangeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GIntRangeInput && gte == other.gte && lte == other.lte;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gte.hashCode), lte.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GIntRangeInput')
          ..add('gte', gte)
          ..add('lte', lte))
        .toString();
  }
}

class GIntRangeInputBuilder
    implements Builder<GIntRangeInput, GIntRangeInputBuilder> {
  _$GIntRangeInput? _$v;

  int? _gte;
  int? get gte => _$this._gte;
  set gte(int? gte) => _$this._gte = gte;

  int? _lte;
  int? get lte => _$this._lte;
  set lte(int? lte) => _$this._lte = lte;

  GIntRangeInputBuilder();

  GIntRangeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _gte = $v.gte;
      _lte = $v.lte;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GIntRangeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GIntRangeInput;
  }

  @override
  void update(void Function(GIntRangeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GIntRangeInput build() => _build();

  _$GIntRangeInput _build() {
    final _$result = _$v ?? new _$GIntRangeInput._(gte: gte, lte: lte);
    replace(_$result);
    return _$result;
  }
}

class _$GInvoiceCreateInput extends GInvoiceCreateInput {
  @override
  final String number;
  @override
  final String url;

  factory _$GInvoiceCreateInput(
          [void Function(GInvoiceCreateInputBuilder)? updates]) =>
      (new GInvoiceCreateInputBuilder()..update(updates))._build();

  _$GInvoiceCreateInput._({required this.number, required this.url})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        number, r'GInvoiceCreateInput', 'number');
    BuiltValueNullFieldError.checkNotNull(url, r'GInvoiceCreateInput', 'url');
  }

  @override
  GInvoiceCreateInput rebuild(
          void Function(GInvoiceCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GInvoiceCreateInputBuilder toBuilder() =>
      new GInvoiceCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GInvoiceCreateInput &&
        number == other.number &&
        url == other.url;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, number.hashCode), url.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GInvoiceCreateInput')
          ..add('number', number)
          ..add('url', url))
        .toString();
  }
}

class GInvoiceCreateInputBuilder
    implements Builder<GInvoiceCreateInput, GInvoiceCreateInputBuilder> {
  _$GInvoiceCreateInput? _$v;

  String? _number;
  String? get number => _$this._number;
  set number(String? number) => _$this._number = number;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GInvoiceCreateInputBuilder();

  GInvoiceCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _number = $v.number;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GInvoiceCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GInvoiceCreateInput;
  }

  @override
  void update(void Function(GInvoiceCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GInvoiceCreateInput build() => _build();

  _$GInvoiceCreateInput _build() {
    final _$result = _$v ??
        new _$GInvoiceCreateInput._(
            number: BuiltValueNullFieldError.checkNotNull(
                number, r'GInvoiceCreateInput', 'number'),
            url: BuiltValueNullFieldError.checkNotNull(
                url, r'GInvoiceCreateInput', 'url'));
    replace(_$result);
    return _$result;
  }
}

class _$GJSONString extends GJSONString {
  @override
  final String value;

  factory _$GJSONString([void Function(GJSONStringBuilder)? updates]) =>
      (new GJSONStringBuilder()..update(updates))._build();

  _$GJSONString._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GJSONString', 'value');
  }

  @override
  GJSONString rebuild(void Function(GJSONStringBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GJSONStringBuilder toBuilder() => new GJSONStringBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GJSONString && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GJSONString')..add('value', value))
        .toString();
  }
}

class GJSONStringBuilder implements Builder<GJSONString, GJSONStringBuilder> {
  _$GJSONString? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GJSONStringBuilder();

  GJSONStringBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GJSONString other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GJSONString;
  }

  @override
  void update(void Function(GJSONStringBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GJSONString build() => _build();

  _$GJSONString _build() {
    final _$result = _$v ??
        new _$GJSONString._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GJSONString', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GMenuCreateInput extends GMenuCreateInput {
  @override
  final String name;
  @override
  final String? slug;
  @override
  final BuiltList<GMenuItemInput>? items;

  factory _$GMenuCreateInput(
          [void Function(GMenuCreateInputBuilder)? updates]) =>
      (new GMenuCreateInputBuilder()..update(updates))._build();

  _$GMenuCreateInput._({required this.name, this.slug, this.items})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(name, r'GMenuCreateInput', 'name');
  }

  @override
  GMenuCreateInput rebuild(void Function(GMenuCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuCreateInputBuilder toBuilder() =>
      new GMenuCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuCreateInput &&
        name == other.name &&
        slug == other.slug &&
        items == other.items;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, name.hashCode), slug.hashCode), items.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuCreateInput')
          ..add('name', name)
          ..add('slug', slug)
          ..add('items', items))
        .toString();
  }
}

class GMenuCreateInputBuilder
    implements Builder<GMenuCreateInput, GMenuCreateInputBuilder> {
  _$GMenuCreateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  ListBuilder<GMenuItemInput>? _items;
  ListBuilder<GMenuItemInput> get items =>
      _$this._items ??= new ListBuilder<GMenuItemInput>();
  set items(ListBuilder<GMenuItemInput>? items) => _$this._items = items;

  GMenuCreateInputBuilder();

  GMenuCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _slug = $v.slug;
      _items = $v.items?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuCreateInput;
  }

  @override
  void update(void Function(GMenuCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuCreateInput build() => _build();

  _$GMenuCreateInput _build() {
    _$GMenuCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GMenuCreateInput._(
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GMenuCreateInput', 'name'),
              slug: slug,
              items: _items?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'items';
        _items?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMenuCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMenuFilterInput extends GMenuFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<String>? slug;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? slugs;

  factory _$GMenuFilterInput(
          [void Function(GMenuFilterInputBuilder)? updates]) =>
      (new GMenuFilterInputBuilder()..update(updates))._build();

  _$GMenuFilterInput._({this.search, this.slug, this.metadata, this.slugs})
      : super._();

  @override
  GMenuFilterInput rebuild(void Function(GMenuFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuFilterInputBuilder toBuilder() =>
      new GMenuFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuFilterInput &&
        search == other.search &&
        slug == other.slug &&
        metadata == other.metadata &&
        slugs == other.slugs;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, search.hashCode), slug.hashCode), metadata.hashCode),
        slugs.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuFilterInput')
          ..add('search', search)
          ..add('slug', slug)
          ..add('metadata', metadata)
          ..add('slugs', slugs))
        .toString();
  }
}

class GMenuFilterInputBuilder
    implements Builder<GMenuFilterInput, GMenuFilterInputBuilder> {
  _$GMenuFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _slug;
  ListBuilder<String> get slug => _$this._slug ??= new ListBuilder<String>();
  set slug(ListBuilder<String>? slug) => _$this._slug = slug;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  GMenuFilterInputBuilder();

  GMenuFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _slug = $v.slug?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _slugs = $v.slugs?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuFilterInput;
  }

  @override
  void update(void Function(GMenuFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuFilterInput build() => _build();

  _$GMenuFilterInput _build() {
    _$GMenuFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GMenuFilterInput._(
              search: search,
              slug: _slug?.build(),
              metadata: _metadata?.build(),
              slugs: _slugs?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'slug';
        _slug?.build();
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMenuFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMenuInput extends GMenuInput {
  @override
  final String? name;
  @override
  final String? slug;

  factory _$GMenuInput([void Function(GMenuInputBuilder)? updates]) =>
      (new GMenuInputBuilder()..update(updates))._build();

  _$GMenuInput._({this.name, this.slug}) : super._();

  @override
  GMenuInput rebuild(void Function(GMenuInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuInputBuilder toBuilder() => new GMenuInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuInput && name == other.name && slug == other.slug;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), slug.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuInput')
          ..add('name', name)
          ..add('slug', slug))
        .toString();
  }
}

class GMenuInputBuilder implements Builder<GMenuInput, GMenuInputBuilder> {
  _$GMenuInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  GMenuInputBuilder();

  GMenuInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _slug = $v.slug;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuInput;
  }

  @override
  void update(void Function(GMenuInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuInput build() => _build();

  _$GMenuInput _build() {
    final _$result = _$v ?? new _$GMenuInput._(name: name, slug: slug);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemCreateInput extends GMenuItemCreateInput {
  @override
  final String name;
  @override
  final String? url;
  @override
  final String? category;
  @override
  final String? collection;
  @override
  final String? page;
  @override
  final String menu;
  @override
  final String? parent;

  factory _$GMenuItemCreateInput(
          [void Function(GMenuItemCreateInputBuilder)? updates]) =>
      (new GMenuItemCreateInputBuilder()..update(updates))._build();

  _$GMenuItemCreateInput._(
      {required this.name,
      this.url,
      this.category,
      this.collection,
      this.page,
      required this.menu,
      this.parent})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GMenuItemCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        menu, r'GMenuItemCreateInput', 'menu');
  }

  @override
  GMenuItemCreateInput rebuild(
          void Function(GMenuItemCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemCreateInputBuilder toBuilder() =>
      new GMenuItemCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemCreateInput &&
        name == other.name &&
        url == other.url &&
        category == other.category &&
        collection == other.collection &&
        page == other.page &&
        menu == other.menu &&
        parent == other.parent;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, name.hashCode), url.hashCode),
                        category.hashCode),
                    collection.hashCode),
                page.hashCode),
            menu.hashCode),
        parent.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuItemCreateInput')
          ..add('name', name)
          ..add('url', url)
          ..add('category', category)
          ..add('collection', collection)
          ..add('page', page)
          ..add('menu', menu)
          ..add('parent', parent))
        .toString();
  }
}

class GMenuItemCreateInputBuilder
    implements Builder<GMenuItemCreateInput, GMenuItemCreateInputBuilder> {
  _$GMenuItemCreateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  String? _collection;
  String? get collection => _$this._collection;
  set collection(String? collection) => _$this._collection = collection;

  String? _page;
  String? get page => _$this._page;
  set page(String? page) => _$this._page = page;

  String? _menu;
  String? get menu => _$this._menu;
  set menu(String? menu) => _$this._menu = menu;

  String? _parent;
  String? get parent => _$this._parent;
  set parent(String? parent) => _$this._parent = parent;

  GMenuItemCreateInputBuilder();

  GMenuItemCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _url = $v.url;
      _category = $v.category;
      _collection = $v.collection;
      _page = $v.page;
      _menu = $v.menu;
      _parent = $v.parent;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuItemCreateInput;
  }

  @override
  void update(void Function(GMenuItemCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuItemCreateInput build() => _build();

  _$GMenuItemCreateInput _build() {
    final _$result = _$v ??
        new _$GMenuItemCreateInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GMenuItemCreateInput', 'name'),
            url: url,
            category: category,
            collection: collection,
            page: page,
            menu: BuiltValueNullFieldError.checkNotNull(
                menu, r'GMenuItemCreateInput', 'menu'),
            parent: parent);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemFilterInput extends GMenuItemFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;

  factory _$GMenuItemFilterInput(
          [void Function(GMenuItemFilterInputBuilder)? updates]) =>
      (new GMenuItemFilterInputBuilder()..update(updates))._build();

  _$GMenuItemFilterInput._({this.search, this.metadata}) : super._();

  @override
  GMenuItemFilterInput rebuild(
          void Function(GMenuItemFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemFilterInputBuilder toBuilder() =>
      new GMenuItemFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemFilterInput &&
        search == other.search &&
        metadata == other.metadata;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), metadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuItemFilterInput')
          ..add('search', search)
          ..add('metadata', metadata))
        .toString();
  }
}

class GMenuItemFilterInputBuilder
    implements Builder<GMenuItemFilterInput, GMenuItemFilterInputBuilder> {
  _$GMenuItemFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  GMenuItemFilterInputBuilder();

  GMenuItemFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuItemFilterInput;
  }

  @override
  void update(void Function(GMenuItemFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuItemFilterInput build() => _build();

  _$GMenuItemFilterInput _build() {
    _$GMenuItemFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GMenuItemFilterInput._(
              search: search, metadata: _metadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMenuItemFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemInput extends GMenuItemInput {
  @override
  final String? name;
  @override
  final String? url;
  @override
  final String? category;
  @override
  final String? collection;
  @override
  final String? page;

  factory _$GMenuItemInput([void Function(GMenuItemInputBuilder)? updates]) =>
      (new GMenuItemInputBuilder()..update(updates))._build();

  _$GMenuItemInput._(
      {this.name, this.url, this.category, this.collection, this.page})
      : super._();

  @override
  GMenuItemInput rebuild(void Function(GMenuItemInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemInputBuilder toBuilder() =>
      new GMenuItemInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemInput &&
        name == other.name &&
        url == other.url &&
        category == other.category &&
        collection == other.collection &&
        page == other.page;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, name.hashCode), url.hashCode), category.hashCode),
            collection.hashCode),
        page.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuItemInput')
          ..add('name', name)
          ..add('url', url)
          ..add('category', category)
          ..add('collection', collection)
          ..add('page', page))
        .toString();
  }
}

class GMenuItemInputBuilder
    implements Builder<GMenuItemInput, GMenuItemInputBuilder> {
  _$GMenuItemInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  String? _collection;
  String? get collection => _$this._collection;
  set collection(String? collection) => _$this._collection = collection;

  String? _page;
  String? get page => _$this._page;
  set page(String? page) => _$this._page = page;

  GMenuItemInputBuilder();

  GMenuItemInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _url = $v.url;
      _category = $v.category;
      _collection = $v.collection;
      _page = $v.page;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuItemInput;
  }

  @override
  void update(void Function(GMenuItemInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuItemInput build() => _build();

  _$GMenuItemInput _build() {
    final _$result = _$v ??
        new _$GMenuItemInput._(
            name: name,
            url: url,
            category: category,
            collection: collection,
            page: page);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemMoveInput extends GMenuItemMoveInput {
  @override
  final String itemId;
  @override
  final String? parentId;
  @override
  final int? sortOrder;

  factory _$GMenuItemMoveInput(
          [void Function(GMenuItemMoveInputBuilder)? updates]) =>
      (new GMenuItemMoveInputBuilder()..update(updates))._build();

  _$GMenuItemMoveInput._({required this.itemId, this.parentId, this.sortOrder})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        itemId, r'GMenuItemMoveInput', 'itemId');
  }

  @override
  GMenuItemMoveInput rebuild(
          void Function(GMenuItemMoveInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemMoveInputBuilder toBuilder() =>
      new GMenuItemMoveInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemMoveInput &&
        itemId == other.itemId &&
        parentId == other.parentId &&
        sortOrder == other.sortOrder;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, itemId.hashCode), parentId.hashCode), sortOrder.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuItemMoveInput')
          ..add('itemId', itemId)
          ..add('parentId', parentId)
          ..add('sortOrder', sortOrder))
        .toString();
  }
}

class GMenuItemMoveInputBuilder
    implements Builder<GMenuItemMoveInput, GMenuItemMoveInputBuilder> {
  _$GMenuItemMoveInput? _$v;

  String? _itemId;
  String? get itemId => _$this._itemId;
  set itemId(String? itemId) => _$this._itemId = itemId;

  String? _parentId;
  String? get parentId => _$this._parentId;
  set parentId(String? parentId) => _$this._parentId = parentId;

  int? _sortOrder;
  int? get sortOrder => _$this._sortOrder;
  set sortOrder(int? sortOrder) => _$this._sortOrder = sortOrder;

  GMenuItemMoveInputBuilder();

  GMenuItemMoveInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _itemId = $v.itemId;
      _parentId = $v.parentId;
      _sortOrder = $v.sortOrder;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemMoveInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuItemMoveInput;
  }

  @override
  void update(void Function(GMenuItemMoveInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuItemMoveInput build() => _build();

  _$GMenuItemMoveInput _build() {
    final _$result = _$v ??
        new _$GMenuItemMoveInput._(
            itemId: BuiltValueNullFieldError.checkNotNull(
                itemId, r'GMenuItemMoveInput', 'itemId'),
            parentId: parentId,
            sortOrder: sortOrder);
    replace(_$result);
    return _$result;
  }
}

class _$GMenuItemSortingInput extends GMenuItemSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GMenuItemsSortField field;

  factory _$GMenuItemSortingInput(
          [void Function(GMenuItemSortingInputBuilder)? updates]) =>
      (new GMenuItemSortingInputBuilder()..update(updates))._build();

  _$GMenuItemSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GMenuItemSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GMenuItemSortingInput', 'field');
  }

  @override
  GMenuItemSortingInput rebuild(
          void Function(GMenuItemSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuItemSortingInputBuilder toBuilder() =>
      new GMenuItemSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuItemSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuItemSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GMenuItemSortingInputBuilder
    implements Builder<GMenuItemSortingInput, GMenuItemSortingInputBuilder> {
  _$GMenuItemSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GMenuItemsSortField? _field;
  GMenuItemsSortField? get field => _$this._field;
  set field(GMenuItemsSortField? field) => _$this._field = field;

  GMenuItemSortingInputBuilder();

  GMenuItemSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuItemSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuItemSortingInput;
  }

  @override
  void update(void Function(GMenuItemSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuItemSortingInput build() => _build();

  _$GMenuItemSortingInput _build() {
    final _$result = _$v ??
        new _$GMenuItemSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GMenuItemSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GMenuItemSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GMenuSortingInput extends GMenuSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GMenuSortField field;

  factory _$GMenuSortingInput(
          [void Function(GMenuSortingInputBuilder)? updates]) =>
      (new GMenuSortingInputBuilder()..update(updates))._build();

  _$GMenuSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GMenuSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(field, r'GMenuSortingInput', 'field');
  }

  @override
  GMenuSortingInput rebuild(void Function(GMenuSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMenuSortingInputBuilder toBuilder() =>
      new GMenuSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMenuSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMenuSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GMenuSortingInputBuilder
    implements Builder<GMenuSortingInput, GMenuSortingInputBuilder> {
  _$GMenuSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GMenuSortField? _field;
  GMenuSortField? get field => _$this._field;
  set field(GMenuSortField? field) => _$this._field = field;

  GMenuSortingInputBuilder();

  GMenuSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMenuSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMenuSortingInput;
  }

  @override
  void update(void Function(GMenuSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMenuSortingInput build() => _build();

  _$GMenuSortingInput _build() {
    final _$result = _$v ??
        new _$GMenuSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GMenuSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GMenuSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GMetadata extends GMetadata {
  @override
  final String value;

  factory _$GMetadata([void Function(GMetadataBuilder)? updates]) =>
      (new GMetadataBuilder()..update(updates))._build();

  _$GMetadata._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GMetadata', 'value');
  }

  @override
  GMetadata rebuild(void Function(GMetadataBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMetadataBuilder toBuilder() => new GMetadataBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMetadata && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMetadata')..add('value', value))
        .toString();
  }
}

class GMetadataBuilder implements Builder<GMetadata, GMetadataBuilder> {
  _$GMetadata? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GMetadataBuilder();

  GMetadataBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMetadata other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMetadata;
  }

  @override
  void update(void Function(GMetadataBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMetadata build() => _build();

  _$GMetadata _build() {
    final _$result = _$v ??
        new _$GMetadata._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GMetadata', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GMetadataFilter extends GMetadataFilter {
  @override
  final String key;
  @override
  final String? value;

  factory _$GMetadataFilter([void Function(GMetadataFilterBuilder)? updates]) =>
      (new GMetadataFilterBuilder()..update(updates))._build();

  _$GMetadataFilter._({required this.key, this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(key, r'GMetadataFilter', 'key');
  }

  @override
  GMetadataFilter rebuild(void Function(GMetadataFilterBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMetadataFilterBuilder toBuilder() =>
      new GMetadataFilterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMetadataFilter && key == other.key && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, key.hashCode), value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMetadataFilter')
          ..add('key', key)
          ..add('value', value))
        .toString();
  }
}

class GMetadataFilterBuilder
    implements Builder<GMetadataFilter, GMetadataFilterBuilder> {
  _$GMetadataFilter? _$v;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GMetadataFilterBuilder();

  GMetadataFilterBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _key = $v.key;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMetadataFilter other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMetadataFilter;
  }

  @override
  void update(void Function(GMetadataFilterBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMetadataFilter build() => _build();

  _$GMetadataFilter _build() {
    final _$result = _$v ??
        new _$GMetadataFilter._(
            key: BuiltValueNullFieldError.checkNotNull(
                key, r'GMetadataFilter', 'key'),
            value: value);
    replace(_$result);
    return _$result;
  }
}

class _$GMetadataInput extends GMetadataInput {
  @override
  final String key;
  @override
  final String value;

  factory _$GMetadataInput([void Function(GMetadataInputBuilder)? updates]) =>
      (new GMetadataInputBuilder()..update(updates))._build();

  _$GMetadataInput._({required this.key, required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(key, r'GMetadataInput', 'key');
    BuiltValueNullFieldError.checkNotNull(value, r'GMetadataInput', 'value');
  }

  @override
  GMetadataInput rebuild(void Function(GMetadataInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMetadataInputBuilder toBuilder() =>
      new GMetadataInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMetadataInput && key == other.key && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, key.hashCode), value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMetadataInput')
          ..add('key', key)
          ..add('value', value))
        .toString();
  }
}

class GMetadataInputBuilder
    implements Builder<GMetadataInput, GMetadataInputBuilder> {
  _$GMetadataInput? _$v;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GMetadataInputBuilder();

  GMetadataInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _key = $v.key;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMetadataInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMetadataInput;
  }

  @override
  void update(void Function(GMetadataInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMetadataInput build() => _build();

  _$GMetadataInput _build() {
    final _$result = _$v ??
        new _$GMetadataInput._(
            key: BuiltValueNullFieldError.checkNotNull(
                key, r'GMetadataInput', 'key'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GMetadataInput', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GMoneyInput extends GMoneyInput {
  @override
  final String currency;
  @override
  final GPositiveDecimal amount;

  factory _$GMoneyInput([void Function(GMoneyInputBuilder)? updates]) =>
      (new GMoneyInputBuilder()..update(updates))._build();

  _$GMoneyInput._({required this.currency, required this.amount}) : super._() {
    BuiltValueNullFieldError.checkNotNull(currency, r'GMoneyInput', 'currency');
    BuiltValueNullFieldError.checkNotNull(amount, r'GMoneyInput', 'amount');
  }

  @override
  GMoneyInput rebuild(void Function(GMoneyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMoneyInputBuilder toBuilder() => new GMoneyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMoneyInput &&
        currency == other.currency &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, currency.hashCode), amount.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMoneyInput')
          ..add('currency', currency)
          ..add('amount', amount))
        .toString();
  }
}

class GMoneyInputBuilder implements Builder<GMoneyInput, GMoneyInputBuilder> {
  _$GMoneyInput? _$v;

  String? _currency;
  String? get currency => _$this._currency;
  set currency(String? currency) => _$this._currency = currency;

  GPositiveDecimalBuilder? _amount;
  GPositiveDecimalBuilder get amount =>
      _$this._amount ??= new GPositiveDecimalBuilder();
  set amount(GPositiveDecimalBuilder? amount) => _$this._amount = amount;

  GMoneyInputBuilder();

  GMoneyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _currency = $v.currency;
      _amount = $v.amount.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMoneyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMoneyInput;
  }

  @override
  void update(void Function(GMoneyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMoneyInput build() => _build();

  _$GMoneyInput _build() {
    _$GMoneyInput _$result;
    try {
      _$result = _$v ??
          new _$GMoneyInput._(
              currency: BuiltValueNullFieldError.checkNotNull(
                  currency, r'GMoneyInput', 'currency'),
              amount: amount.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMoneyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMoveProductInput extends GMoveProductInput {
  @override
  final String productId;
  @override
  final int? sortOrder;

  factory _$GMoveProductInput(
          [void Function(GMoveProductInputBuilder)? updates]) =>
      (new GMoveProductInputBuilder()..update(updates))._build();

  _$GMoveProductInput._({required this.productId, this.sortOrder}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        productId, r'GMoveProductInput', 'productId');
  }

  @override
  GMoveProductInput rebuild(void Function(GMoveProductInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMoveProductInputBuilder toBuilder() =>
      new GMoveProductInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMoveProductInput &&
        productId == other.productId &&
        sortOrder == other.sortOrder;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, productId.hashCode), sortOrder.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMoveProductInput')
          ..add('productId', productId)
          ..add('sortOrder', sortOrder))
        .toString();
  }
}

class GMoveProductInputBuilder
    implements Builder<GMoveProductInput, GMoveProductInputBuilder> {
  _$GMoveProductInput? _$v;

  String? _productId;
  String? get productId => _$this._productId;
  set productId(String? productId) => _$this._productId = productId;

  int? _sortOrder;
  int? get sortOrder => _$this._sortOrder;
  set sortOrder(int? sortOrder) => _$this._sortOrder = sortOrder;

  GMoveProductInputBuilder();

  GMoveProductInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _productId = $v.productId;
      _sortOrder = $v.sortOrder;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMoveProductInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMoveProductInput;
  }

  @override
  void update(void Function(GMoveProductInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMoveProductInput build() => _build();

  _$GMoveProductInput _build() {
    final _$result = _$v ??
        new _$GMoveProductInput._(
            productId: BuiltValueNullFieldError.checkNotNull(
                productId, r'GMoveProductInput', 'productId'),
            sortOrder: sortOrder);
    replace(_$result);
    return _$result;
  }
}

class _$GNameTranslationInput extends GNameTranslationInput {
  @override
  final String? name;

  factory _$GNameTranslationInput(
          [void Function(GNameTranslationInputBuilder)? updates]) =>
      (new GNameTranslationInputBuilder()..update(updates))._build();

  _$GNameTranslationInput._({this.name}) : super._();

  @override
  GNameTranslationInput rebuild(
          void Function(GNameTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GNameTranslationInputBuilder toBuilder() =>
      new GNameTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GNameTranslationInput && name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc(0, name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GNameTranslationInput')
          ..add('name', name))
        .toString();
  }
}

class GNameTranslationInputBuilder
    implements Builder<GNameTranslationInput, GNameTranslationInputBuilder> {
  _$GNameTranslationInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GNameTranslationInputBuilder();

  GNameTranslationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GNameTranslationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GNameTranslationInput;
  }

  @override
  void update(void Function(GNameTranslationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GNameTranslationInput build() => _build();

  _$GNameTranslationInput _build() {
    final _$result = _$v ?? new _$GNameTranslationInput._(name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderAddNoteInput extends GOrderAddNoteInput {
  @override
  final String message;

  factory _$GOrderAddNoteInput(
          [void Function(GOrderAddNoteInputBuilder)? updates]) =>
      (new GOrderAddNoteInputBuilder()..update(updates))._build();

  _$GOrderAddNoteInput._({required this.message}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        message, r'GOrderAddNoteInput', 'message');
  }

  @override
  GOrderAddNoteInput rebuild(
          void Function(GOrderAddNoteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderAddNoteInputBuilder toBuilder() =>
      new GOrderAddNoteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderAddNoteInput && message == other.message;
  }

  @override
  int get hashCode {
    return $jf($jc(0, message.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderAddNoteInput')
          ..add('message', message))
        .toString();
  }
}

class GOrderAddNoteInputBuilder
    implements Builder<GOrderAddNoteInput, GOrderAddNoteInputBuilder> {
  _$GOrderAddNoteInput? _$v;

  String? _message;
  String? get message => _$this._message;
  set message(String? message) => _$this._message = message;

  GOrderAddNoteInputBuilder();

  GOrderAddNoteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _message = $v.message;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderAddNoteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderAddNoteInput;
  }

  @override
  void update(void Function(GOrderAddNoteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderAddNoteInput build() => _build();

  _$GOrderAddNoteInput _build() {
    final _$result = _$v ??
        new _$GOrderAddNoteInput._(
            message: BuiltValueNullFieldError.checkNotNull(
                message, r'GOrderAddNoteInput', 'message'));
    replace(_$result);
    return _$result;
  }
}

class _$GOrderDiscountCommonInput extends GOrderDiscountCommonInput {
  @override
  final GDiscountValueTypeEnum valueType;
  @override
  final GPositiveDecimal value;
  @override
  final String? reason;

  factory _$GOrderDiscountCommonInput(
          [void Function(GOrderDiscountCommonInputBuilder)? updates]) =>
      (new GOrderDiscountCommonInputBuilder()..update(updates))._build();

  _$GOrderDiscountCommonInput._(
      {required this.valueType, required this.value, this.reason})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        valueType, r'GOrderDiscountCommonInput', 'valueType');
    BuiltValueNullFieldError.checkNotNull(
        value, r'GOrderDiscountCommonInput', 'value');
  }

  @override
  GOrderDiscountCommonInput rebuild(
          void Function(GOrderDiscountCommonInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderDiscountCommonInputBuilder toBuilder() =>
      new GOrderDiscountCommonInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderDiscountCommonInput &&
        valueType == other.valueType &&
        value == other.value &&
        reason == other.reason;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, valueType.hashCode), value.hashCode), reason.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderDiscountCommonInput')
          ..add('valueType', valueType)
          ..add('value', value)
          ..add('reason', reason))
        .toString();
  }
}

class GOrderDiscountCommonInputBuilder
    implements
        Builder<GOrderDiscountCommonInput, GOrderDiscountCommonInputBuilder> {
  _$GOrderDiscountCommonInput? _$v;

  GDiscountValueTypeEnum? _valueType;
  GDiscountValueTypeEnum? get valueType => _$this._valueType;
  set valueType(GDiscountValueTypeEnum? valueType) =>
      _$this._valueType = valueType;

  GPositiveDecimalBuilder? _value;
  GPositiveDecimalBuilder get value =>
      _$this._value ??= new GPositiveDecimalBuilder();
  set value(GPositiveDecimalBuilder? value) => _$this._value = value;

  String? _reason;
  String? get reason => _$this._reason;
  set reason(String? reason) => _$this._reason = reason;

  GOrderDiscountCommonInputBuilder();

  GOrderDiscountCommonInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _valueType = $v.valueType;
      _value = $v.value.toBuilder();
      _reason = $v.reason;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderDiscountCommonInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderDiscountCommonInput;
  }

  @override
  void update(void Function(GOrderDiscountCommonInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderDiscountCommonInput build() => _build();

  _$GOrderDiscountCommonInput _build() {
    _$GOrderDiscountCommonInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderDiscountCommonInput._(
              valueType: BuiltValueNullFieldError.checkNotNull(
                  valueType, r'GOrderDiscountCommonInput', 'valueType'),
              value: value.build(),
              reason: reason);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'value';
        value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOrderDiscountCommonInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderDraftFilterInput extends GOrderDraftFilterInput {
  @override
  final String? customer;
  @override
  final GDateRangeInput? created;
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? channels;

  factory _$GOrderDraftFilterInput(
          [void Function(GOrderDraftFilterInputBuilder)? updates]) =>
      (new GOrderDraftFilterInputBuilder()..update(updates))._build();

  _$GOrderDraftFilterInput._(
      {this.customer, this.created, this.search, this.metadata, this.channels})
      : super._();

  @override
  GOrderDraftFilterInput rebuild(
          void Function(GOrderDraftFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderDraftFilterInputBuilder toBuilder() =>
      new GOrderDraftFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderDraftFilterInput &&
        customer == other.customer &&
        created == other.created &&
        search == other.search &&
        metadata == other.metadata &&
        channels == other.channels;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, customer.hashCode), created.hashCode),
                search.hashCode),
            metadata.hashCode),
        channels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderDraftFilterInput')
          ..add('customer', customer)
          ..add('created', created)
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('channels', channels))
        .toString();
  }
}

class GOrderDraftFilterInputBuilder
    implements Builder<GOrderDraftFilterInput, GOrderDraftFilterInputBuilder> {
  _$GOrderDraftFilterInput? _$v;

  String? _customer;
  String? get customer => _$this._customer;
  set customer(String? customer) => _$this._customer = customer;

  GDateRangeInputBuilder? _created;
  GDateRangeInputBuilder get created =>
      _$this._created ??= new GDateRangeInputBuilder();
  set created(GDateRangeInputBuilder? created) => _$this._created = created;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _channels;
  ListBuilder<String> get channels =>
      _$this._channels ??= new ListBuilder<String>();
  set channels(ListBuilder<String>? channels) => _$this._channels = channels;

  GOrderDraftFilterInputBuilder();

  GOrderDraftFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _customer = $v.customer;
      _created = $v.created?.toBuilder();
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _channels = $v.channels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderDraftFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderDraftFilterInput;
  }

  @override
  void update(void Function(GOrderDraftFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderDraftFilterInput build() => _build();

  _$GOrderDraftFilterInput _build() {
    _$GOrderDraftFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderDraftFilterInput._(
              customer: customer,
              created: _created?.build(),
              search: search,
              metadata: _metadata?.build(),
              channels: _channels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'created';
        _created?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'channels';
        _channels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOrderDraftFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderFilterInput extends GOrderFilterInput {
  @override
  final BuiltList<GPaymentChargeStatusEnum>? paymentStatus;
  @override
  final BuiltList<GOrderStatusFilter>? status;
  @override
  final String? customer;
  @override
  final GDateRangeInput? created;
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? channels;
  @override
  final BuiltList<GOrderAuthorizeStatusEnum>? authorizeStatus;
  @override
  final BuiltList<GOrderChargeStatusEnum>? chargeStatus;
  @override
  final GDateTimeRangeInput? updatedAt;
  @override
  final bool? isClickAndCollect;
  @override
  final bool? isPreorder;
  @override
  final BuiltList<String>? ids;
  @override
  final bool? giftCardUsed;
  @override
  final bool? giftCardBought;
  @override
  final BuiltList<String>? numbers;

  factory _$GOrderFilterInput(
          [void Function(GOrderFilterInputBuilder)? updates]) =>
      (new GOrderFilterInputBuilder()..update(updates))._build();

  _$GOrderFilterInput._(
      {this.paymentStatus,
      this.status,
      this.customer,
      this.created,
      this.search,
      this.metadata,
      this.channels,
      this.authorizeStatus,
      this.chargeStatus,
      this.updatedAt,
      this.isClickAndCollect,
      this.isPreorder,
      this.ids,
      this.giftCardUsed,
      this.giftCardBought,
      this.numbers})
      : super._();

  @override
  GOrderFilterInput rebuild(void Function(GOrderFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderFilterInputBuilder toBuilder() =>
      new GOrderFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderFilterInput &&
        paymentStatus == other.paymentStatus &&
        status == other.status &&
        customer == other.customer &&
        created == other.created &&
        search == other.search &&
        metadata == other.metadata &&
        channels == other.channels &&
        authorizeStatus == other.authorizeStatus &&
        chargeStatus == other.chargeStatus &&
        updatedAt == other.updatedAt &&
        isClickAndCollect == other.isClickAndCollect &&
        isPreorder == other.isPreorder &&
        ids == other.ids &&
        giftCardUsed == other.giftCardUsed &&
        giftCardBought == other.giftCardBought &&
        numbers == other.numbers;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    0,
                                                                    paymentStatus
                                                                        .hashCode),
                                                                status
                                                                    .hashCode),
                                                            customer.hashCode),
                                                        created.hashCode),
                                                    search.hashCode),
                                                metadata.hashCode),
                                            channels.hashCode),
                                        authorizeStatus.hashCode),
                                    chargeStatus.hashCode),
                                updatedAt.hashCode),
                            isClickAndCollect.hashCode),
                        isPreorder.hashCode),
                    ids.hashCode),
                giftCardUsed.hashCode),
            giftCardBought.hashCode),
        numbers.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderFilterInput')
          ..add('paymentStatus', paymentStatus)
          ..add('status', status)
          ..add('customer', customer)
          ..add('created', created)
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('channels', channels)
          ..add('authorizeStatus', authorizeStatus)
          ..add('chargeStatus', chargeStatus)
          ..add('updatedAt', updatedAt)
          ..add('isClickAndCollect', isClickAndCollect)
          ..add('isPreorder', isPreorder)
          ..add('ids', ids)
          ..add('giftCardUsed', giftCardUsed)
          ..add('giftCardBought', giftCardBought)
          ..add('numbers', numbers))
        .toString();
  }
}

class GOrderFilterInputBuilder
    implements Builder<GOrderFilterInput, GOrderFilterInputBuilder> {
  _$GOrderFilterInput? _$v;

  ListBuilder<GPaymentChargeStatusEnum>? _paymentStatus;
  ListBuilder<GPaymentChargeStatusEnum> get paymentStatus =>
      _$this._paymentStatus ??= new ListBuilder<GPaymentChargeStatusEnum>();
  set paymentStatus(ListBuilder<GPaymentChargeStatusEnum>? paymentStatus) =>
      _$this._paymentStatus = paymentStatus;

  ListBuilder<GOrderStatusFilter>? _status;
  ListBuilder<GOrderStatusFilter> get status =>
      _$this._status ??= new ListBuilder<GOrderStatusFilter>();
  set status(ListBuilder<GOrderStatusFilter>? status) =>
      _$this._status = status;

  String? _customer;
  String? get customer => _$this._customer;
  set customer(String? customer) => _$this._customer = customer;

  GDateRangeInputBuilder? _created;
  GDateRangeInputBuilder get created =>
      _$this._created ??= new GDateRangeInputBuilder();
  set created(GDateRangeInputBuilder? created) => _$this._created = created;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _channels;
  ListBuilder<String> get channels =>
      _$this._channels ??= new ListBuilder<String>();
  set channels(ListBuilder<String>? channels) => _$this._channels = channels;

  ListBuilder<GOrderAuthorizeStatusEnum>? _authorizeStatus;
  ListBuilder<GOrderAuthorizeStatusEnum> get authorizeStatus =>
      _$this._authorizeStatus ??= new ListBuilder<GOrderAuthorizeStatusEnum>();
  set authorizeStatus(
          ListBuilder<GOrderAuthorizeStatusEnum>? authorizeStatus) =>
      _$this._authorizeStatus = authorizeStatus;

  ListBuilder<GOrderChargeStatusEnum>? _chargeStatus;
  ListBuilder<GOrderChargeStatusEnum> get chargeStatus =>
      _$this._chargeStatus ??= new ListBuilder<GOrderChargeStatusEnum>();
  set chargeStatus(ListBuilder<GOrderChargeStatusEnum>? chargeStatus) =>
      _$this._chargeStatus = chargeStatus;

  GDateTimeRangeInputBuilder? _updatedAt;
  GDateTimeRangeInputBuilder get updatedAt =>
      _$this._updatedAt ??= new GDateTimeRangeInputBuilder();
  set updatedAt(GDateTimeRangeInputBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  bool? _isClickAndCollect;
  bool? get isClickAndCollect => _$this._isClickAndCollect;
  set isClickAndCollect(bool? isClickAndCollect) =>
      _$this._isClickAndCollect = isClickAndCollect;

  bool? _isPreorder;
  bool? get isPreorder => _$this._isPreorder;
  set isPreorder(bool? isPreorder) => _$this._isPreorder = isPreorder;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  bool? _giftCardUsed;
  bool? get giftCardUsed => _$this._giftCardUsed;
  set giftCardUsed(bool? giftCardUsed) => _$this._giftCardUsed = giftCardUsed;

  bool? _giftCardBought;
  bool? get giftCardBought => _$this._giftCardBought;
  set giftCardBought(bool? giftCardBought) =>
      _$this._giftCardBought = giftCardBought;

  ListBuilder<String>? _numbers;
  ListBuilder<String> get numbers =>
      _$this._numbers ??= new ListBuilder<String>();
  set numbers(ListBuilder<String>? numbers) => _$this._numbers = numbers;

  GOrderFilterInputBuilder();

  GOrderFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _paymentStatus = $v.paymentStatus?.toBuilder();
      _status = $v.status?.toBuilder();
      _customer = $v.customer;
      _created = $v.created?.toBuilder();
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _channels = $v.channels?.toBuilder();
      _authorizeStatus = $v.authorizeStatus?.toBuilder();
      _chargeStatus = $v.chargeStatus?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _isClickAndCollect = $v.isClickAndCollect;
      _isPreorder = $v.isPreorder;
      _ids = $v.ids?.toBuilder();
      _giftCardUsed = $v.giftCardUsed;
      _giftCardBought = $v.giftCardBought;
      _numbers = $v.numbers?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderFilterInput;
  }

  @override
  void update(void Function(GOrderFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderFilterInput build() => _build();

  _$GOrderFilterInput _build() {
    _$GOrderFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderFilterInput._(
              paymentStatus: _paymentStatus?.build(),
              status: _status?.build(),
              customer: customer,
              created: _created?.build(),
              search: search,
              metadata: _metadata?.build(),
              channels: _channels?.build(),
              authorizeStatus: _authorizeStatus?.build(),
              chargeStatus: _chargeStatus?.build(),
              updatedAt: _updatedAt?.build(),
              isClickAndCollect: isClickAndCollect,
              isPreorder: isPreorder,
              ids: _ids?.build(),
              giftCardUsed: giftCardUsed,
              giftCardBought: giftCardBought,
              numbers: _numbers?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'paymentStatus';
        _paymentStatus?.build();
        _$failedField = 'status';
        _status?.build();

        _$failedField = 'created';
        _created?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'channels';
        _channels?.build();
        _$failedField = 'authorizeStatus';
        _authorizeStatus?.build();
        _$failedField = 'chargeStatus';
        _chargeStatus?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();

        _$failedField = 'ids';
        _ids?.build();

        _$failedField = 'numbers';
        _numbers?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOrderFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderFulfillInput extends GOrderFulfillInput {
  @override
  final BuiltList<GOrderFulfillLineInput> lines;
  @override
  final bool? notifyCustomer;
  @override
  final bool? allowStockToBeExceeded;
  @override
  final String? trackingNumber;

  factory _$GOrderFulfillInput(
          [void Function(GOrderFulfillInputBuilder)? updates]) =>
      (new GOrderFulfillInputBuilder()..update(updates))._build();

  _$GOrderFulfillInput._(
      {required this.lines,
      this.notifyCustomer,
      this.allowStockToBeExceeded,
      this.trackingNumber})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        lines, r'GOrderFulfillInput', 'lines');
  }

  @override
  GOrderFulfillInput rebuild(
          void Function(GOrderFulfillInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderFulfillInputBuilder toBuilder() =>
      new GOrderFulfillInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderFulfillInput &&
        lines == other.lines &&
        notifyCustomer == other.notifyCustomer &&
        allowStockToBeExceeded == other.allowStockToBeExceeded &&
        trackingNumber == other.trackingNumber;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, lines.hashCode), notifyCustomer.hashCode),
            allowStockToBeExceeded.hashCode),
        trackingNumber.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderFulfillInput')
          ..add('lines', lines)
          ..add('notifyCustomer', notifyCustomer)
          ..add('allowStockToBeExceeded', allowStockToBeExceeded)
          ..add('trackingNumber', trackingNumber))
        .toString();
  }
}

class GOrderFulfillInputBuilder
    implements Builder<GOrderFulfillInput, GOrderFulfillInputBuilder> {
  _$GOrderFulfillInput? _$v;

  ListBuilder<GOrderFulfillLineInput>? _lines;
  ListBuilder<GOrderFulfillLineInput> get lines =>
      _$this._lines ??= new ListBuilder<GOrderFulfillLineInput>();
  set lines(ListBuilder<GOrderFulfillLineInput>? lines) =>
      _$this._lines = lines;

  bool? _notifyCustomer;
  bool? get notifyCustomer => _$this._notifyCustomer;
  set notifyCustomer(bool? notifyCustomer) =>
      _$this._notifyCustomer = notifyCustomer;

  bool? _allowStockToBeExceeded;
  bool? get allowStockToBeExceeded => _$this._allowStockToBeExceeded;
  set allowStockToBeExceeded(bool? allowStockToBeExceeded) =>
      _$this._allowStockToBeExceeded = allowStockToBeExceeded;

  String? _trackingNumber;
  String? get trackingNumber => _$this._trackingNumber;
  set trackingNumber(String? trackingNumber) =>
      _$this._trackingNumber = trackingNumber;

  GOrderFulfillInputBuilder();

  GOrderFulfillInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _lines = $v.lines.toBuilder();
      _notifyCustomer = $v.notifyCustomer;
      _allowStockToBeExceeded = $v.allowStockToBeExceeded;
      _trackingNumber = $v.trackingNumber;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderFulfillInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderFulfillInput;
  }

  @override
  void update(void Function(GOrderFulfillInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderFulfillInput build() => _build();

  _$GOrderFulfillInput _build() {
    _$GOrderFulfillInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderFulfillInput._(
              lines: lines.build(),
              notifyCustomer: notifyCustomer,
              allowStockToBeExceeded: allowStockToBeExceeded,
              trackingNumber: trackingNumber);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'lines';
        lines.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOrderFulfillInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderFulfillLineInput extends GOrderFulfillLineInput {
  @override
  final String? orderLineId;
  @override
  final BuiltList<GOrderFulfillStockInput> stocks;

  factory _$GOrderFulfillLineInput(
          [void Function(GOrderFulfillLineInputBuilder)? updates]) =>
      (new GOrderFulfillLineInputBuilder()..update(updates))._build();

  _$GOrderFulfillLineInput._({this.orderLineId, required this.stocks})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        stocks, r'GOrderFulfillLineInput', 'stocks');
  }

  @override
  GOrderFulfillLineInput rebuild(
          void Function(GOrderFulfillLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderFulfillLineInputBuilder toBuilder() =>
      new GOrderFulfillLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderFulfillLineInput &&
        orderLineId == other.orderLineId &&
        stocks == other.stocks;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, orderLineId.hashCode), stocks.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderFulfillLineInput')
          ..add('orderLineId', orderLineId)
          ..add('stocks', stocks))
        .toString();
  }
}

class GOrderFulfillLineInputBuilder
    implements Builder<GOrderFulfillLineInput, GOrderFulfillLineInputBuilder> {
  _$GOrderFulfillLineInput? _$v;

  String? _orderLineId;
  String? get orderLineId => _$this._orderLineId;
  set orderLineId(String? orderLineId) => _$this._orderLineId = orderLineId;

  ListBuilder<GOrderFulfillStockInput>? _stocks;
  ListBuilder<GOrderFulfillStockInput> get stocks =>
      _$this._stocks ??= new ListBuilder<GOrderFulfillStockInput>();
  set stocks(ListBuilder<GOrderFulfillStockInput>? stocks) =>
      _$this._stocks = stocks;

  GOrderFulfillLineInputBuilder();

  GOrderFulfillLineInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _orderLineId = $v.orderLineId;
      _stocks = $v.stocks.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderFulfillLineInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderFulfillLineInput;
  }

  @override
  void update(void Function(GOrderFulfillLineInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderFulfillLineInput build() => _build();

  _$GOrderFulfillLineInput _build() {
    _$GOrderFulfillLineInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderFulfillLineInput._(
              orderLineId: orderLineId, stocks: stocks.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'stocks';
        stocks.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOrderFulfillLineInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderFulfillStockInput extends GOrderFulfillStockInput {
  @override
  final int quantity;
  @override
  final String warehouse;

  factory _$GOrderFulfillStockInput(
          [void Function(GOrderFulfillStockInputBuilder)? updates]) =>
      (new GOrderFulfillStockInputBuilder()..update(updates))._build();

  _$GOrderFulfillStockInput._({required this.quantity, required this.warehouse})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        quantity, r'GOrderFulfillStockInput', 'quantity');
    BuiltValueNullFieldError.checkNotNull(
        warehouse, r'GOrderFulfillStockInput', 'warehouse');
  }

  @override
  GOrderFulfillStockInput rebuild(
          void Function(GOrderFulfillStockInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderFulfillStockInputBuilder toBuilder() =>
      new GOrderFulfillStockInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderFulfillStockInput &&
        quantity == other.quantity &&
        warehouse == other.warehouse;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, quantity.hashCode), warehouse.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderFulfillStockInput')
          ..add('quantity', quantity)
          ..add('warehouse', warehouse))
        .toString();
  }
}

class GOrderFulfillStockInputBuilder
    implements
        Builder<GOrderFulfillStockInput, GOrderFulfillStockInputBuilder> {
  _$GOrderFulfillStockInput? _$v;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  String? _warehouse;
  String? get warehouse => _$this._warehouse;
  set warehouse(String? warehouse) => _$this._warehouse = warehouse;

  GOrderFulfillStockInputBuilder();

  GOrderFulfillStockInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _quantity = $v.quantity;
      _warehouse = $v.warehouse;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderFulfillStockInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderFulfillStockInput;
  }

  @override
  void update(void Function(GOrderFulfillStockInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderFulfillStockInput build() => _build();

  _$GOrderFulfillStockInput _build() {
    final _$result = _$v ??
        new _$GOrderFulfillStockInput._(
            quantity: BuiltValueNullFieldError.checkNotNull(
                quantity, r'GOrderFulfillStockInput', 'quantity'),
            warehouse: BuiltValueNullFieldError.checkNotNull(
                warehouse, r'GOrderFulfillStockInput', 'warehouse'));
    replace(_$result);
    return _$result;
  }
}

class _$GOrderLineCreateInput extends GOrderLineCreateInput {
  @override
  final int quantity;
  @override
  final String variantId;
  @override
  final bool? forceNewLine;

  factory _$GOrderLineCreateInput(
          [void Function(GOrderLineCreateInputBuilder)? updates]) =>
      (new GOrderLineCreateInputBuilder()..update(updates))._build();

  _$GOrderLineCreateInput._(
      {required this.quantity, required this.variantId, this.forceNewLine})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        quantity, r'GOrderLineCreateInput', 'quantity');
    BuiltValueNullFieldError.checkNotNull(
        variantId, r'GOrderLineCreateInput', 'variantId');
  }

  @override
  GOrderLineCreateInput rebuild(
          void Function(GOrderLineCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderLineCreateInputBuilder toBuilder() =>
      new GOrderLineCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderLineCreateInput &&
        quantity == other.quantity &&
        variantId == other.variantId &&
        forceNewLine == other.forceNewLine;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, quantity.hashCode), variantId.hashCode),
        forceNewLine.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderLineCreateInput')
          ..add('quantity', quantity)
          ..add('variantId', variantId)
          ..add('forceNewLine', forceNewLine))
        .toString();
  }
}

class GOrderLineCreateInputBuilder
    implements Builder<GOrderLineCreateInput, GOrderLineCreateInputBuilder> {
  _$GOrderLineCreateInput? _$v;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  String? _variantId;
  String? get variantId => _$this._variantId;
  set variantId(String? variantId) => _$this._variantId = variantId;

  bool? _forceNewLine;
  bool? get forceNewLine => _$this._forceNewLine;
  set forceNewLine(bool? forceNewLine) => _$this._forceNewLine = forceNewLine;

  GOrderLineCreateInputBuilder();

  GOrderLineCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _quantity = $v.quantity;
      _variantId = $v.variantId;
      _forceNewLine = $v.forceNewLine;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderLineCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderLineCreateInput;
  }

  @override
  void update(void Function(GOrderLineCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderLineCreateInput build() => _build();

  _$GOrderLineCreateInput _build() {
    final _$result = _$v ??
        new _$GOrderLineCreateInput._(
            quantity: BuiltValueNullFieldError.checkNotNull(
                quantity, r'GOrderLineCreateInput', 'quantity'),
            variantId: BuiltValueNullFieldError.checkNotNull(
                variantId, r'GOrderLineCreateInput', 'variantId'),
            forceNewLine: forceNewLine);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderLineInput extends GOrderLineInput {
  @override
  final int quantity;

  factory _$GOrderLineInput([void Function(GOrderLineInputBuilder)? updates]) =>
      (new GOrderLineInputBuilder()..update(updates))._build();

  _$GOrderLineInput._({required this.quantity}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        quantity, r'GOrderLineInput', 'quantity');
  }

  @override
  GOrderLineInput rebuild(void Function(GOrderLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderLineInputBuilder toBuilder() =>
      new GOrderLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderLineInput && quantity == other.quantity;
  }

  @override
  int get hashCode {
    return $jf($jc(0, quantity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderLineInput')
          ..add('quantity', quantity))
        .toString();
  }
}

class GOrderLineInputBuilder
    implements Builder<GOrderLineInput, GOrderLineInputBuilder> {
  _$GOrderLineInput? _$v;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  GOrderLineInputBuilder();

  GOrderLineInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _quantity = $v.quantity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderLineInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderLineInput;
  }

  @override
  void update(void Function(GOrderLineInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderLineInput build() => _build();

  _$GOrderLineInput _build() {
    final _$result = _$v ??
        new _$GOrderLineInput._(
            quantity: BuiltValueNullFieldError.checkNotNull(
                quantity, r'GOrderLineInput', 'quantity'));
    replace(_$result);
    return _$result;
  }
}

class _$GOrderRefundFulfillmentLineInput
    extends GOrderRefundFulfillmentLineInput {
  @override
  final String fulfillmentLineId;
  @override
  final int quantity;

  factory _$GOrderRefundFulfillmentLineInput(
          [void Function(GOrderRefundFulfillmentLineInputBuilder)? updates]) =>
      (new GOrderRefundFulfillmentLineInputBuilder()..update(updates))._build();

  _$GOrderRefundFulfillmentLineInput._(
      {required this.fulfillmentLineId, required this.quantity})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(fulfillmentLineId,
        r'GOrderRefundFulfillmentLineInput', 'fulfillmentLineId');
    BuiltValueNullFieldError.checkNotNull(
        quantity, r'GOrderRefundFulfillmentLineInput', 'quantity');
  }

  @override
  GOrderRefundFulfillmentLineInput rebuild(
          void Function(GOrderRefundFulfillmentLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderRefundFulfillmentLineInputBuilder toBuilder() =>
      new GOrderRefundFulfillmentLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderRefundFulfillmentLineInput &&
        fulfillmentLineId == other.fulfillmentLineId &&
        quantity == other.quantity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, fulfillmentLineId.hashCode), quantity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderRefundFulfillmentLineInput')
          ..add('fulfillmentLineId', fulfillmentLineId)
          ..add('quantity', quantity))
        .toString();
  }
}

class GOrderRefundFulfillmentLineInputBuilder
    implements
        Builder<GOrderRefundFulfillmentLineInput,
            GOrderRefundFulfillmentLineInputBuilder> {
  _$GOrderRefundFulfillmentLineInput? _$v;

  String? _fulfillmentLineId;
  String? get fulfillmentLineId => _$this._fulfillmentLineId;
  set fulfillmentLineId(String? fulfillmentLineId) =>
      _$this._fulfillmentLineId = fulfillmentLineId;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  GOrderRefundFulfillmentLineInputBuilder();

  GOrderRefundFulfillmentLineInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _fulfillmentLineId = $v.fulfillmentLineId;
      _quantity = $v.quantity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderRefundFulfillmentLineInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderRefundFulfillmentLineInput;
  }

  @override
  void update(void Function(GOrderRefundFulfillmentLineInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderRefundFulfillmentLineInput build() => _build();

  _$GOrderRefundFulfillmentLineInput _build() {
    final _$result = _$v ??
        new _$GOrderRefundFulfillmentLineInput._(
            fulfillmentLineId: BuiltValueNullFieldError.checkNotNull(
                fulfillmentLineId,
                r'GOrderRefundFulfillmentLineInput',
                'fulfillmentLineId'),
            quantity: BuiltValueNullFieldError.checkNotNull(
                quantity, r'GOrderRefundFulfillmentLineInput', 'quantity'));
    replace(_$result);
    return _$result;
  }
}

class _$GOrderRefundLineInput extends GOrderRefundLineInput {
  @override
  final String orderLineId;
  @override
  final int quantity;

  factory _$GOrderRefundLineInput(
          [void Function(GOrderRefundLineInputBuilder)? updates]) =>
      (new GOrderRefundLineInputBuilder()..update(updates))._build();

  _$GOrderRefundLineInput._({required this.orderLineId, required this.quantity})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        orderLineId, r'GOrderRefundLineInput', 'orderLineId');
    BuiltValueNullFieldError.checkNotNull(
        quantity, r'GOrderRefundLineInput', 'quantity');
  }

  @override
  GOrderRefundLineInput rebuild(
          void Function(GOrderRefundLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderRefundLineInputBuilder toBuilder() =>
      new GOrderRefundLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderRefundLineInput &&
        orderLineId == other.orderLineId &&
        quantity == other.quantity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, orderLineId.hashCode), quantity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderRefundLineInput')
          ..add('orderLineId', orderLineId)
          ..add('quantity', quantity))
        .toString();
  }
}

class GOrderRefundLineInputBuilder
    implements Builder<GOrderRefundLineInput, GOrderRefundLineInputBuilder> {
  _$GOrderRefundLineInput? _$v;

  String? _orderLineId;
  String? get orderLineId => _$this._orderLineId;
  set orderLineId(String? orderLineId) => _$this._orderLineId = orderLineId;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  GOrderRefundLineInputBuilder();

  GOrderRefundLineInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _orderLineId = $v.orderLineId;
      _quantity = $v.quantity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderRefundLineInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderRefundLineInput;
  }

  @override
  void update(void Function(GOrderRefundLineInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderRefundLineInput build() => _build();

  _$GOrderRefundLineInput _build() {
    final _$result = _$v ??
        new _$GOrderRefundLineInput._(
            orderLineId: BuiltValueNullFieldError.checkNotNull(
                orderLineId, r'GOrderRefundLineInput', 'orderLineId'),
            quantity: BuiltValueNullFieldError.checkNotNull(
                quantity, r'GOrderRefundLineInput', 'quantity'));
    replace(_$result);
    return _$result;
  }
}

class _$GOrderRefundProductsInput extends GOrderRefundProductsInput {
  @override
  final BuiltList<GOrderRefundLineInput>? orderLines;
  @override
  final BuiltList<GOrderRefundFulfillmentLineInput>? fulfillmentLines;
  @override
  final GPositiveDecimal? amountToRefund;
  @override
  final bool? includeShippingCosts;

  factory _$GOrderRefundProductsInput(
          [void Function(GOrderRefundProductsInputBuilder)? updates]) =>
      (new GOrderRefundProductsInputBuilder()..update(updates))._build();

  _$GOrderRefundProductsInput._(
      {this.orderLines,
      this.fulfillmentLines,
      this.amountToRefund,
      this.includeShippingCosts})
      : super._();

  @override
  GOrderRefundProductsInput rebuild(
          void Function(GOrderRefundProductsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderRefundProductsInputBuilder toBuilder() =>
      new GOrderRefundProductsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderRefundProductsInput &&
        orderLines == other.orderLines &&
        fulfillmentLines == other.fulfillmentLines &&
        amountToRefund == other.amountToRefund &&
        includeShippingCosts == other.includeShippingCosts;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, orderLines.hashCode), fulfillmentLines.hashCode),
            amountToRefund.hashCode),
        includeShippingCosts.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderRefundProductsInput')
          ..add('orderLines', orderLines)
          ..add('fulfillmentLines', fulfillmentLines)
          ..add('amountToRefund', amountToRefund)
          ..add('includeShippingCosts', includeShippingCosts))
        .toString();
  }
}

class GOrderRefundProductsInputBuilder
    implements
        Builder<GOrderRefundProductsInput, GOrderRefundProductsInputBuilder> {
  _$GOrderRefundProductsInput? _$v;

  ListBuilder<GOrderRefundLineInput>? _orderLines;
  ListBuilder<GOrderRefundLineInput> get orderLines =>
      _$this._orderLines ??= new ListBuilder<GOrderRefundLineInput>();
  set orderLines(ListBuilder<GOrderRefundLineInput>? orderLines) =>
      _$this._orderLines = orderLines;

  ListBuilder<GOrderRefundFulfillmentLineInput>? _fulfillmentLines;
  ListBuilder<GOrderRefundFulfillmentLineInput> get fulfillmentLines =>
      _$this._fulfillmentLines ??=
          new ListBuilder<GOrderRefundFulfillmentLineInput>();
  set fulfillmentLines(
          ListBuilder<GOrderRefundFulfillmentLineInput>? fulfillmentLines) =>
      _$this._fulfillmentLines = fulfillmentLines;

  GPositiveDecimalBuilder? _amountToRefund;
  GPositiveDecimalBuilder get amountToRefund =>
      _$this._amountToRefund ??= new GPositiveDecimalBuilder();
  set amountToRefund(GPositiveDecimalBuilder? amountToRefund) =>
      _$this._amountToRefund = amountToRefund;

  bool? _includeShippingCosts;
  bool? get includeShippingCosts => _$this._includeShippingCosts;
  set includeShippingCosts(bool? includeShippingCosts) =>
      _$this._includeShippingCosts = includeShippingCosts;

  GOrderRefundProductsInputBuilder();

  GOrderRefundProductsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _orderLines = $v.orderLines?.toBuilder();
      _fulfillmentLines = $v.fulfillmentLines?.toBuilder();
      _amountToRefund = $v.amountToRefund?.toBuilder();
      _includeShippingCosts = $v.includeShippingCosts;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderRefundProductsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderRefundProductsInput;
  }

  @override
  void update(void Function(GOrderRefundProductsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderRefundProductsInput build() => _build();

  _$GOrderRefundProductsInput _build() {
    _$GOrderRefundProductsInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderRefundProductsInput._(
              orderLines: _orderLines?.build(),
              fulfillmentLines: _fulfillmentLines?.build(),
              amountToRefund: _amountToRefund?.build(),
              includeShippingCosts: includeShippingCosts);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'orderLines';
        _orderLines?.build();
        _$failedField = 'fulfillmentLines';
        _fulfillmentLines?.build();
        _$failedField = 'amountToRefund';
        _amountToRefund?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOrderRefundProductsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderReturnFulfillmentLineInput
    extends GOrderReturnFulfillmentLineInput {
  @override
  final String fulfillmentLineId;
  @override
  final int quantity;
  @override
  final bool? Greplace;

  factory _$GOrderReturnFulfillmentLineInput(
          [void Function(GOrderReturnFulfillmentLineInputBuilder)? updates]) =>
      (new GOrderReturnFulfillmentLineInputBuilder()..update(updates))._build();

  _$GOrderReturnFulfillmentLineInput._(
      {required this.fulfillmentLineId, required this.quantity, this.Greplace})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(fulfillmentLineId,
        r'GOrderReturnFulfillmentLineInput', 'fulfillmentLineId');
    BuiltValueNullFieldError.checkNotNull(
        quantity, r'GOrderReturnFulfillmentLineInput', 'quantity');
  }

  @override
  GOrderReturnFulfillmentLineInput rebuild(
          void Function(GOrderReturnFulfillmentLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderReturnFulfillmentLineInputBuilder toBuilder() =>
      new GOrderReturnFulfillmentLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderReturnFulfillmentLineInput &&
        fulfillmentLineId == other.fulfillmentLineId &&
        quantity == other.quantity &&
        Greplace == other.Greplace;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, fulfillmentLineId.hashCode), quantity.hashCode),
        Greplace.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderReturnFulfillmentLineInput')
          ..add('fulfillmentLineId', fulfillmentLineId)
          ..add('quantity', quantity)
          ..add('Greplace', Greplace))
        .toString();
  }
}

class GOrderReturnFulfillmentLineInputBuilder
    implements
        Builder<GOrderReturnFulfillmentLineInput,
            GOrderReturnFulfillmentLineInputBuilder> {
  _$GOrderReturnFulfillmentLineInput? _$v;

  String? _fulfillmentLineId;
  String? get fulfillmentLineId => _$this._fulfillmentLineId;
  set fulfillmentLineId(String? fulfillmentLineId) =>
      _$this._fulfillmentLineId = fulfillmentLineId;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  bool? _Greplace;
  bool? get Greplace => _$this._Greplace;
  set Greplace(bool? Greplace) => _$this._Greplace = Greplace;

  GOrderReturnFulfillmentLineInputBuilder();

  GOrderReturnFulfillmentLineInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _fulfillmentLineId = $v.fulfillmentLineId;
      _quantity = $v.quantity;
      _Greplace = $v.Greplace;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderReturnFulfillmentLineInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderReturnFulfillmentLineInput;
  }

  @override
  void update(void Function(GOrderReturnFulfillmentLineInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderReturnFulfillmentLineInput build() => _build();

  _$GOrderReturnFulfillmentLineInput _build() {
    final _$result = _$v ??
        new _$GOrderReturnFulfillmentLineInput._(
            fulfillmentLineId: BuiltValueNullFieldError.checkNotNull(
                fulfillmentLineId,
                r'GOrderReturnFulfillmentLineInput',
                'fulfillmentLineId'),
            quantity: BuiltValueNullFieldError.checkNotNull(
                quantity, r'GOrderReturnFulfillmentLineInput', 'quantity'),
            Greplace: Greplace);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderReturnLineInput extends GOrderReturnLineInput {
  @override
  final String orderLineId;
  @override
  final int quantity;
  @override
  final bool? Greplace;

  factory _$GOrderReturnLineInput(
          [void Function(GOrderReturnLineInputBuilder)? updates]) =>
      (new GOrderReturnLineInputBuilder()..update(updates))._build();

  _$GOrderReturnLineInput._(
      {required this.orderLineId, required this.quantity, this.Greplace})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        orderLineId, r'GOrderReturnLineInput', 'orderLineId');
    BuiltValueNullFieldError.checkNotNull(
        quantity, r'GOrderReturnLineInput', 'quantity');
  }

  @override
  GOrderReturnLineInput rebuild(
          void Function(GOrderReturnLineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderReturnLineInputBuilder toBuilder() =>
      new GOrderReturnLineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderReturnLineInput &&
        orderLineId == other.orderLineId &&
        quantity == other.quantity &&
        Greplace == other.Greplace;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, orderLineId.hashCode), quantity.hashCode),
        Greplace.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderReturnLineInput')
          ..add('orderLineId', orderLineId)
          ..add('quantity', quantity)
          ..add('Greplace', Greplace))
        .toString();
  }
}

class GOrderReturnLineInputBuilder
    implements Builder<GOrderReturnLineInput, GOrderReturnLineInputBuilder> {
  _$GOrderReturnLineInput? _$v;

  String? _orderLineId;
  String? get orderLineId => _$this._orderLineId;
  set orderLineId(String? orderLineId) => _$this._orderLineId = orderLineId;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  bool? _Greplace;
  bool? get Greplace => _$this._Greplace;
  set Greplace(bool? Greplace) => _$this._Greplace = Greplace;

  GOrderReturnLineInputBuilder();

  GOrderReturnLineInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _orderLineId = $v.orderLineId;
      _quantity = $v.quantity;
      _Greplace = $v.Greplace;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderReturnLineInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderReturnLineInput;
  }

  @override
  void update(void Function(GOrderReturnLineInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderReturnLineInput build() => _build();

  _$GOrderReturnLineInput _build() {
    final _$result = _$v ??
        new _$GOrderReturnLineInput._(
            orderLineId: BuiltValueNullFieldError.checkNotNull(
                orderLineId, r'GOrderReturnLineInput', 'orderLineId'),
            quantity: BuiltValueNullFieldError.checkNotNull(
                quantity, r'GOrderReturnLineInput', 'quantity'),
            Greplace: Greplace);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderReturnProductsInput extends GOrderReturnProductsInput {
  @override
  final BuiltList<GOrderReturnLineInput>? orderLines;
  @override
  final BuiltList<GOrderReturnFulfillmentLineInput>? fulfillmentLines;
  @override
  final GPositiveDecimal? amountToRefund;
  @override
  final bool? includeShippingCosts;
  @override
  final bool? refund;

  factory _$GOrderReturnProductsInput(
          [void Function(GOrderReturnProductsInputBuilder)? updates]) =>
      (new GOrderReturnProductsInputBuilder()..update(updates))._build();

  _$GOrderReturnProductsInput._(
      {this.orderLines,
      this.fulfillmentLines,
      this.amountToRefund,
      this.includeShippingCosts,
      this.refund})
      : super._();

  @override
  GOrderReturnProductsInput rebuild(
          void Function(GOrderReturnProductsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderReturnProductsInputBuilder toBuilder() =>
      new GOrderReturnProductsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderReturnProductsInput &&
        orderLines == other.orderLines &&
        fulfillmentLines == other.fulfillmentLines &&
        amountToRefund == other.amountToRefund &&
        includeShippingCosts == other.includeShippingCosts &&
        refund == other.refund;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, orderLines.hashCode), fulfillmentLines.hashCode),
                amountToRefund.hashCode),
            includeShippingCosts.hashCode),
        refund.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderReturnProductsInput')
          ..add('orderLines', orderLines)
          ..add('fulfillmentLines', fulfillmentLines)
          ..add('amountToRefund', amountToRefund)
          ..add('includeShippingCosts', includeShippingCosts)
          ..add('refund', refund))
        .toString();
  }
}

class GOrderReturnProductsInputBuilder
    implements
        Builder<GOrderReturnProductsInput, GOrderReturnProductsInputBuilder> {
  _$GOrderReturnProductsInput? _$v;

  ListBuilder<GOrderReturnLineInput>? _orderLines;
  ListBuilder<GOrderReturnLineInput> get orderLines =>
      _$this._orderLines ??= new ListBuilder<GOrderReturnLineInput>();
  set orderLines(ListBuilder<GOrderReturnLineInput>? orderLines) =>
      _$this._orderLines = orderLines;

  ListBuilder<GOrderReturnFulfillmentLineInput>? _fulfillmentLines;
  ListBuilder<GOrderReturnFulfillmentLineInput> get fulfillmentLines =>
      _$this._fulfillmentLines ??=
          new ListBuilder<GOrderReturnFulfillmentLineInput>();
  set fulfillmentLines(
          ListBuilder<GOrderReturnFulfillmentLineInput>? fulfillmentLines) =>
      _$this._fulfillmentLines = fulfillmentLines;

  GPositiveDecimalBuilder? _amountToRefund;
  GPositiveDecimalBuilder get amountToRefund =>
      _$this._amountToRefund ??= new GPositiveDecimalBuilder();
  set amountToRefund(GPositiveDecimalBuilder? amountToRefund) =>
      _$this._amountToRefund = amountToRefund;

  bool? _includeShippingCosts;
  bool? get includeShippingCosts => _$this._includeShippingCosts;
  set includeShippingCosts(bool? includeShippingCosts) =>
      _$this._includeShippingCosts = includeShippingCosts;

  bool? _refund;
  bool? get refund => _$this._refund;
  set refund(bool? refund) => _$this._refund = refund;

  GOrderReturnProductsInputBuilder();

  GOrderReturnProductsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _orderLines = $v.orderLines?.toBuilder();
      _fulfillmentLines = $v.fulfillmentLines?.toBuilder();
      _amountToRefund = $v.amountToRefund?.toBuilder();
      _includeShippingCosts = $v.includeShippingCosts;
      _refund = $v.refund;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderReturnProductsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderReturnProductsInput;
  }

  @override
  void update(void Function(GOrderReturnProductsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderReturnProductsInput build() => _build();

  _$GOrderReturnProductsInput _build() {
    _$GOrderReturnProductsInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderReturnProductsInput._(
              orderLines: _orderLines?.build(),
              fulfillmentLines: _fulfillmentLines?.build(),
              amountToRefund: _amountToRefund?.build(),
              includeShippingCosts: includeShippingCosts,
              refund: refund);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'orderLines';
        _orderLines?.build();
        _$failedField = 'fulfillmentLines';
        _fulfillmentLines?.build();
        _$failedField = 'amountToRefund';
        _amountToRefund?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOrderReturnProductsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderSettingsUpdateInput extends GOrderSettingsUpdateInput {
  @override
  final bool? automaticallyConfirmAllNewOrders;
  @override
  final bool? automaticallyFulfillNonShippableGiftCard;

  factory _$GOrderSettingsUpdateInput(
          [void Function(GOrderSettingsUpdateInputBuilder)? updates]) =>
      (new GOrderSettingsUpdateInputBuilder()..update(updates))._build();

  _$GOrderSettingsUpdateInput._(
      {this.automaticallyConfirmAllNewOrders,
      this.automaticallyFulfillNonShippableGiftCard})
      : super._();

  @override
  GOrderSettingsUpdateInput rebuild(
          void Function(GOrderSettingsUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderSettingsUpdateInputBuilder toBuilder() =>
      new GOrderSettingsUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderSettingsUpdateInput &&
        automaticallyConfirmAllNewOrders ==
            other.automaticallyConfirmAllNewOrders &&
        automaticallyFulfillNonShippableGiftCard ==
            other.automaticallyFulfillNonShippableGiftCard;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, automaticallyConfirmAllNewOrders.hashCode),
        automaticallyFulfillNonShippableGiftCard.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderSettingsUpdateInput')
          ..add('automaticallyConfirmAllNewOrders',
              automaticallyConfirmAllNewOrders)
          ..add('automaticallyFulfillNonShippableGiftCard',
              automaticallyFulfillNonShippableGiftCard))
        .toString();
  }
}

class GOrderSettingsUpdateInputBuilder
    implements
        Builder<GOrderSettingsUpdateInput, GOrderSettingsUpdateInputBuilder> {
  _$GOrderSettingsUpdateInput? _$v;

  bool? _automaticallyConfirmAllNewOrders;
  bool? get automaticallyConfirmAllNewOrders =>
      _$this._automaticallyConfirmAllNewOrders;
  set automaticallyConfirmAllNewOrders(
          bool? automaticallyConfirmAllNewOrders) =>
      _$this._automaticallyConfirmAllNewOrders =
          automaticallyConfirmAllNewOrders;

  bool? _automaticallyFulfillNonShippableGiftCard;
  bool? get automaticallyFulfillNonShippableGiftCard =>
      _$this._automaticallyFulfillNonShippableGiftCard;
  set automaticallyFulfillNonShippableGiftCard(
          bool? automaticallyFulfillNonShippableGiftCard) =>
      _$this._automaticallyFulfillNonShippableGiftCard =
          automaticallyFulfillNonShippableGiftCard;

  GOrderSettingsUpdateInputBuilder();

  GOrderSettingsUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _automaticallyConfirmAllNewOrders = $v.automaticallyConfirmAllNewOrders;
      _automaticallyFulfillNonShippableGiftCard =
          $v.automaticallyFulfillNonShippableGiftCard;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderSettingsUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderSettingsUpdateInput;
  }

  @override
  void update(void Function(GOrderSettingsUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderSettingsUpdateInput build() => _build();

  _$GOrderSettingsUpdateInput _build() {
    final _$result = _$v ??
        new _$GOrderSettingsUpdateInput._(
            automaticallyConfirmAllNewOrders: automaticallyConfirmAllNewOrders,
            automaticallyFulfillNonShippableGiftCard:
                automaticallyFulfillNonShippableGiftCard);
    replace(_$result);
    return _$result;
  }
}

class _$GOrderSortingInput extends GOrderSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GOrderSortField field;

  factory _$GOrderSortingInput(
          [void Function(GOrderSortingInputBuilder)? updates]) =>
      (new GOrderSortingInputBuilder()..update(updates))._build();

  _$GOrderSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GOrderSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GOrderSortingInput', 'field');
  }

  @override
  GOrderSortingInput rebuild(
          void Function(GOrderSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderSortingInputBuilder toBuilder() =>
      new GOrderSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GOrderSortingInputBuilder
    implements Builder<GOrderSortingInput, GOrderSortingInputBuilder> {
  _$GOrderSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GOrderSortField? _field;
  GOrderSortField? get field => _$this._field;
  set field(GOrderSortField? field) => _$this._field = field;

  GOrderSortingInputBuilder();

  GOrderSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderSortingInput;
  }

  @override
  void update(void Function(GOrderSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderSortingInput build() => _build();

  _$GOrderSortingInput _build() {
    final _$result = _$v ??
        new _$GOrderSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GOrderSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GOrderSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GOrderUpdateInput extends GOrderUpdateInput {
  @override
  final GAddressInput? billingAddress;
  @override
  final String? userEmail;
  @override
  final GAddressInput? shippingAddress;

  factory _$GOrderUpdateInput(
          [void Function(GOrderUpdateInputBuilder)? updates]) =>
      (new GOrderUpdateInputBuilder()..update(updates))._build();

  _$GOrderUpdateInput._(
      {this.billingAddress, this.userEmail, this.shippingAddress})
      : super._();

  @override
  GOrderUpdateInput rebuild(void Function(GOrderUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderUpdateInputBuilder toBuilder() =>
      new GOrderUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderUpdateInput &&
        billingAddress == other.billingAddress &&
        userEmail == other.userEmail &&
        shippingAddress == other.shippingAddress;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, billingAddress.hashCode), userEmail.hashCode),
        shippingAddress.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderUpdateInput')
          ..add('billingAddress', billingAddress)
          ..add('userEmail', userEmail)
          ..add('shippingAddress', shippingAddress))
        .toString();
  }
}

class GOrderUpdateInputBuilder
    implements Builder<GOrderUpdateInput, GOrderUpdateInputBuilder> {
  _$GOrderUpdateInput? _$v;

  GAddressInputBuilder? _billingAddress;
  GAddressInputBuilder get billingAddress =>
      _$this._billingAddress ??= new GAddressInputBuilder();
  set billingAddress(GAddressInputBuilder? billingAddress) =>
      _$this._billingAddress = billingAddress;

  String? _userEmail;
  String? get userEmail => _$this._userEmail;
  set userEmail(String? userEmail) => _$this._userEmail = userEmail;

  GAddressInputBuilder? _shippingAddress;
  GAddressInputBuilder get shippingAddress =>
      _$this._shippingAddress ??= new GAddressInputBuilder();
  set shippingAddress(GAddressInputBuilder? shippingAddress) =>
      _$this._shippingAddress = shippingAddress;

  GOrderUpdateInputBuilder();

  GOrderUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _billingAddress = $v.billingAddress?.toBuilder();
      _userEmail = $v.userEmail;
      _shippingAddress = $v.shippingAddress?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderUpdateInput;
  }

  @override
  void update(void Function(GOrderUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderUpdateInput build() => _build();

  _$GOrderUpdateInput _build() {
    _$GOrderUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GOrderUpdateInput._(
              billingAddress: _billingAddress?.build(),
              userEmail: userEmail,
              shippingAddress: _shippingAddress?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'billingAddress';
        _billingAddress?.build();

        _$failedField = 'shippingAddress';
        _shippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GOrderUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GOrderUpdateShippingInput extends GOrderUpdateShippingInput {
  @override
  final String? shippingMethod;

  factory _$GOrderUpdateShippingInput(
          [void Function(GOrderUpdateShippingInputBuilder)? updates]) =>
      (new GOrderUpdateShippingInputBuilder()..update(updates))._build();

  _$GOrderUpdateShippingInput._({this.shippingMethod}) : super._();

  @override
  GOrderUpdateShippingInput rebuild(
          void Function(GOrderUpdateShippingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOrderUpdateShippingInputBuilder toBuilder() =>
      new GOrderUpdateShippingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOrderUpdateShippingInput &&
        shippingMethod == other.shippingMethod;
  }

  @override
  int get hashCode {
    return $jf($jc(0, shippingMethod.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOrderUpdateShippingInput')
          ..add('shippingMethod', shippingMethod))
        .toString();
  }
}

class GOrderUpdateShippingInputBuilder
    implements
        Builder<GOrderUpdateShippingInput, GOrderUpdateShippingInputBuilder> {
  _$GOrderUpdateShippingInput? _$v;

  String? _shippingMethod;
  String? get shippingMethod => _$this._shippingMethod;
  set shippingMethod(String? shippingMethod) =>
      _$this._shippingMethod = shippingMethod;

  GOrderUpdateShippingInputBuilder();

  GOrderUpdateShippingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _shippingMethod = $v.shippingMethod;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOrderUpdateShippingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOrderUpdateShippingInput;
  }

  @override
  void update(void Function(GOrderUpdateShippingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOrderUpdateShippingInput build() => _build();

  _$GOrderUpdateShippingInput _build() {
    final _$result = _$v ??
        new _$GOrderUpdateShippingInput._(shippingMethod: shippingMethod);
    replace(_$result);
    return _$result;
  }
}

class _$GPageCreateInput extends GPageCreateInput {
  @override
  final String? slug;
  @override
  final String? title;
  @override
  final GJSONString? content;
  @override
  final BuiltList<GAttributeValueInput>? attributes;
  @override
  final bool? isPublished;
  @override
  final String? publicationDate;
  @override
  final GDateTime? publishedAt;
  @override
  final GSeoInput? seo;
  @override
  final String pageType;

  factory _$GPageCreateInput(
          [void Function(GPageCreateInputBuilder)? updates]) =>
      (new GPageCreateInputBuilder()..update(updates))._build();

  _$GPageCreateInput._(
      {this.slug,
      this.title,
      this.content,
      this.attributes,
      this.isPublished,
      this.publicationDate,
      this.publishedAt,
      this.seo,
      required this.pageType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        pageType, r'GPageCreateInput', 'pageType');
  }

  @override
  GPageCreateInput rebuild(void Function(GPageCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageCreateInputBuilder toBuilder() =>
      new GPageCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageCreateInput &&
        slug == other.slug &&
        title == other.title &&
        content == other.content &&
        attributes == other.attributes &&
        isPublished == other.isPublished &&
        publicationDate == other.publicationDate &&
        publishedAt == other.publishedAt &&
        seo == other.seo &&
        pageType == other.pageType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, slug.hashCode), title.hashCode),
                                content.hashCode),
                            attributes.hashCode),
                        isPublished.hashCode),
                    publicationDate.hashCode),
                publishedAt.hashCode),
            seo.hashCode),
        pageType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageCreateInput')
          ..add('slug', slug)
          ..add('title', title)
          ..add('content', content)
          ..add('attributes', attributes)
          ..add('isPublished', isPublished)
          ..add('publicationDate', publicationDate)
          ..add('publishedAt', publishedAt)
          ..add('seo', seo)
          ..add('pageType', pageType))
        .toString();
  }
}

class GPageCreateInputBuilder
    implements Builder<GPageCreateInput, GPageCreateInputBuilder> {
  _$GPageCreateInput? _$v;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GJSONStringBuilder? _content;
  GJSONStringBuilder get content =>
      _$this._content ??= new GJSONStringBuilder();
  set content(GJSONStringBuilder? content) => _$this._content = content;

  ListBuilder<GAttributeValueInput>? _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput>? attributes) =>
      _$this._attributes = attributes;

  bool? _isPublished;
  bool? get isPublished => _$this._isPublished;
  set isPublished(bool? isPublished) => _$this._isPublished = isPublished;

  String? _publicationDate;
  String? get publicationDate => _$this._publicationDate;
  set publicationDate(String? publicationDate) =>
      _$this._publicationDate = publicationDate;

  GDateTimeBuilder? _publishedAt;
  GDateTimeBuilder get publishedAt =>
      _$this._publishedAt ??= new GDateTimeBuilder();
  set publishedAt(GDateTimeBuilder? publishedAt) =>
      _$this._publishedAt = publishedAt;

  GSeoInputBuilder? _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder? seo) => _$this._seo = seo;

  String? _pageType;
  String? get pageType => _$this._pageType;
  set pageType(String? pageType) => _$this._pageType = pageType;

  GPageCreateInputBuilder();

  GPageCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _slug = $v.slug;
      _title = $v.title;
      _content = $v.content?.toBuilder();
      _attributes = $v.attributes?.toBuilder();
      _isPublished = $v.isPublished;
      _publicationDate = $v.publicationDate;
      _publishedAt = $v.publishedAt?.toBuilder();
      _seo = $v.seo?.toBuilder();
      _pageType = $v.pageType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageCreateInput;
  }

  @override
  void update(void Function(GPageCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageCreateInput build() => _build();

  _$GPageCreateInput _build() {
    _$GPageCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageCreateInput._(
              slug: slug,
              title: title,
              content: _content?.build(),
              attributes: _attributes?.build(),
              isPublished: isPublished,
              publicationDate: publicationDate,
              publishedAt: _publishedAt?.build(),
              seo: _seo?.build(),
              pageType: BuiltValueNullFieldError.checkNotNull(
                  pageType, r'GPageCreateInput', 'pageType'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'content';
        _content?.build();
        _$failedField = 'attributes';
        _attributes?.build();

        _$failedField = 'publishedAt';
        _publishedAt?.build();
        _$failedField = 'seo';
        _seo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageFilterInput extends GPageFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? pageTypes;
  @override
  final BuiltList<String>? ids;
  @override
  final BuiltList<String>? slugs;

  factory _$GPageFilterInput(
          [void Function(GPageFilterInputBuilder)? updates]) =>
      (new GPageFilterInputBuilder()..update(updates))._build();

  _$GPageFilterInput._(
      {this.search, this.metadata, this.pageTypes, this.ids, this.slugs})
      : super._();

  @override
  GPageFilterInput rebuild(void Function(GPageFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageFilterInputBuilder toBuilder() =>
      new GPageFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageFilterInput &&
        search == other.search &&
        metadata == other.metadata &&
        pageTypes == other.pageTypes &&
        ids == other.ids &&
        slugs == other.slugs;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, search.hashCode), metadata.hashCode),
                pageTypes.hashCode),
            ids.hashCode),
        slugs.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageFilterInput')
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('pageTypes', pageTypes)
          ..add('ids', ids)
          ..add('slugs', slugs))
        .toString();
  }
}

class GPageFilterInputBuilder
    implements Builder<GPageFilterInput, GPageFilterInputBuilder> {
  _$GPageFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _pageTypes;
  ListBuilder<String> get pageTypes =>
      _$this._pageTypes ??= new ListBuilder<String>();
  set pageTypes(ListBuilder<String>? pageTypes) =>
      _$this._pageTypes = pageTypes;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  GPageFilterInputBuilder();

  GPageFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _pageTypes = $v.pageTypes?.toBuilder();
      _ids = $v.ids?.toBuilder();
      _slugs = $v.slugs?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageFilterInput;
  }

  @override
  void update(void Function(GPageFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageFilterInput build() => _build();

  _$GPageFilterInput _build() {
    _$GPageFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GPageFilterInput._(
              search: search,
              metadata: _metadata?.build(),
              pageTypes: _pageTypes?.build(),
              ids: _ids?.build(),
              slugs: _slugs?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'pageTypes';
        _pageTypes?.build();
        _$failedField = 'ids';
        _ids?.build();
        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageInput extends GPageInput {
  @override
  final String? slug;
  @override
  final String? title;
  @override
  final GJSONString? content;
  @override
  final BuiltList<GAttributeValueInput>? attributes;
  @override
  final bool? isPublished;
  @override
  final String? publicationDate;
  @override
  final GDateTime? publishedAt;
  @override
  final GSeoInput? seo;

  factory _$GPageInput([void Function(GPageInputBuilder)? updates]) =>
      (new GPageInputBuilder()..update(updates))._build();

  _$GPageInput._(
      {this.slug,
      this.title,
      this.content,
      this.attributes,
      this.isPublished,
      this.publicationDate,
      this.publishedAt,
      this.seo})
      : super._();

  @override
  GPageInput rebuild(void Function(GPageInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageInputBuilder toBuilder() => new GPageInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageInput &&
        slug == other.slug &&
        title == other.title &&
        content == other.content &&
        attributes == other.attributes &&
        isPublished == other.isPublished &&
        publicationDate == other.publicationDate &&
        publishedAt == other.publishedAt &&
        seo == other.seo;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, slug.hashCode), title.hashCode),
                            content.hashCode),
                        attributes.hashCode),
                    isPublished.hashCode),
                publicationDate.hashCode),
            publishedAt.hashCode),
        seo.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageInput')
          ..add('slug', slug)
          ..add('title', title)
          ..add('content', content)
          ..add('attributes', attributes)
          ..add('isPublished', isPublished)
          ..add('publicationDate', publicationDate)
          ..add('publishedAt', publishedAt)
          ..add('seo', seo))
        .toString();
  }
}

class GPageInputBuilder implements Builder<GPageInput, GPageInputBuilder> {
  _$GPageInput? _$v;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GJSONStringBuilder? _content;
  GJSONStringBuilder get content =>
      _$this._content ??= new GJSONStringBuilder();
  set content(GJSONStringBuilder? content) => _$this._content = content;

  ListBuilder<GAttributeValueInput>? _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput>? attributes) =>
      _$this._attributes = attributes;

  bool? _isPublished;
  bool? get isPublished => _$this._isPublished;
  set isPublished(bool? isPublished) => _$this._isPublished = isPublished;

  String? _publicationDate;
  String? get publicationDate => _$this._publicationDate;
  set publicationDate(String? publicationDate) =>
      _$this._publicationDate = publicationDate;

  GDateTimeBuilder? _publishedAt;
  GDateTimeBuilder get publishedAt =>
      _$this._publishedAt ??= new GDateTimeBuilder();
  set publishedAt(GDateTimeBuilder? publishedAt) =>
      _$this._publishedAt = publishedAt;

  GSeoInputBuilder? _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder? seo) => _$this._seo = seo;

  GPageInputBuilder();

  GPageInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _slug = $v.slug;
      _title = $v.title;
      _content = $v.content?.toBuilder();
      _attributes = $v.attributes?.toBuilder();
      _isPublished = $v.isPublished;
      _publicationDate = $v.publicationDate;
      _publishedAt = $v.publishedAt?.toBuilder();
      _seo = $v.seo?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageInput;
  }

  @override
  void update(void Function(GPageInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageInput build() => _build();

  _$GPageInput _build() {
    _$GPageInput _$result;
    try {
      _$result = _$v ??
          new _$GPageInput._(
              slug: slug,
              title: title,
              content: _content?.build(),
              attributes: _attributes?.build(),
              isPublished: isPublished,
              publicationDate: publicationDate,
              publishedAt: _publishedAt?.build(),
              seo: _seo?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'content';
        _content?.build();
        _$failedField = 'attributes';
        _attributes?.build();

        _$failedField = 'publishedAt';
        _publishedAt?.build();
        _$failedField = 'seo';
        _seo?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageSortingInput extends GPageSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GPageSortField field;

  factory _$GPageSortingInput(
          [void Function(GPageSortingInputBuilder)? updates]) =>
      (new GPageSortingInputBuilder()..update(updates))._build();

  _$GPageSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GPageSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(field, r'GPageSortingInput', 'field');
  }

  @override
  GPageSortingInput rebuild(void Function(GPageSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageSortingInputBuilder toBuilder() =>
      new GPageSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GPageSortingInputBuilder
    implements Builder<GPageSortingInput, GPageSortingInputBuilder> {
  _$GPageSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GPageSortField? _field;
  GPageSortField? get field => _$this._field;
  set field(GPageSortField? field) => _$this._field = field;

  GPageSortingInputBuilder();

  GPageSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageSortingInput;
  }

  @override
  void update(void Function(GPageSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageSortingInput build() => _build();

  _$GPageSortingInput _build() {
    final _$result = _$v ??
        new _$GPageSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GPageSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GPageSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GPageTranslationInput extends GPageTranslationInput {
  @override
  final String? seoTitle;
  @override
  final String? seoDescription;
  @override
  final String? title;
  @override
  final GJSONString? content;

  factory _$GPageTranslationInput(
          [void Function(GPageTranslationInputBuilder)? updates]) =>
      (new GPageTranslationInputBuilder()..update(updates))._build();

  _$GPageTranslationInput._(
      {this.seoTitle, this.seoDescription, this.title, this.content})
      : super._();

  @override
  GPageTranslationInput rebuild(
          void Function(GPageTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageTranslationInputBuilder toBuilder() =>
      new GPageTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageTranslationInput &&
        seoTitle == other.seoTitle &&
        seoDescription == other.seoDescription &&
        title == other.title &&
        content == other.content;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, seoTitle.hashCode), seoDescription.hashCode),
            title.hashCode),
        content.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageTranslationInput')
          ..add('seoTitle', seoTitle)
          ..add('seoDescription', seoDescription)
          ..add('title', title)
          ..add('content', content))
        .toString();
  }
}

class GPageTranslationInputBuilder
    implements Builder<GPageTranslationInput, GPageTranslationInputBuilder> {
  _$GPageTranslationInput? _$v;

  String? _seoTitle;
  String? get seoTitle => _$this._seoTitle;
  set seoTitle(String? seoTitle) => _$this._seoTitle = seoTitle;

  String? _seoDescription;
  String? get seoDescription => _$this._seoDescription;
  set seoDescription(String? seoDescription) =>
      _$this._seoDescription = seoDescription;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GJSONStringBuilder? _content;
  GJSONStringBuilder get content =>
      _$this._content ??= new GJSONStringBuilder();
  set content(GJSONStringBuilder? content) => _$this._content = content;

  GPageTranslationInputBuilder();

  GPageTranslationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _seoTitle = $v.seoTitle;
      _seoDescription = $v.seoDescription;
      _title = $v.title;
      _content = $v.content?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageTranslationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageTranslationInput;
  }

  @override
  void update(void Function(GPageTranslationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageTranslationInput build() => _build();

  _$GPageTranslationInput _build() {
    _$GPageTranslationInput _$result;
    try {
      _$result = _$v ??
          new _$GPageTranslationInput._(
              seoTitle: seoTitle,
              seoDescription: seoDescription,
              title: title,
              content: _content?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'content';
        _content?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageTranslationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageTypeCreateInput extends GPageTypeCreateInput {
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final BuiltList<String>? addAttributes;

  factory _$GPageTypeCreateInput(
          [void Function(GPageTypeCreateInputBuilder)? updates]) =>
      (new GPageTypeCreateInputBuilder()..update(updates))._build();

  _$GPageTypeCreateInput._({this.name, this.slug, this.addAttributes})
      : super._();

  @override
  GPageTypeCreateInput rebuild(
          void Function(GPageTypeCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageTypeCreateInputBuilder toBuilder() =>
      new GPageTypeCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageTypeCreateInput &&
        name == other.name &&
        slug == other.slug &&
        addAttributes == other.addAttributes;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, name.hashCode), slug.hashCode), addAttributes.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageTypeCreateInput')
          ..add('name', name)
          ..add('slug', slug)
          ..add('addAttributes', addAttributes))
        .toString();
  }
}

class GPageTypeCreateInputBuilder
    implements Builder<GPageTypeCreateInput, GPageTypeCreateInputBuilder> {
  _$GPageTypeCreateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  ListBuilder<String>? _addAttributes;
  ListBuilder<String> get addAttributes =>
      _$this._addAttributes ??= new ListBuilder<String>();
  set addAttributes(ListBuilder<String>? addAttributes) =>
      _$this._addAttributes = addAttributes;

  GPageTypeCreateInputBuilder();

  GPageTypeCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _slug = $v.slug;
      _addAttributes = $v.addAttributes?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageTypeCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageTypeCreateInput;
  }

  @override
  void update(void Function(GPageTypeCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageTypeCreateInput build() => _build();

  _$GPageTypeCreateInput _build() {
    _$GPageTypeCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageTypeCreateInput._(
              name: name, slug: slug, addAttributes: _addAttributes?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addAttributes';
        _addAttributes?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageTypeCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageTypeFilterInput extends GPageTypeFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<String>? slugs;

  factory _$GPageTypeFilterInput(
          [void Function(GPageTypeFilterInputBuilder)? updates]) =>
      (new GPageTypeFilterInputBuilder()..update(updates))._build();

  _$GPageTypeFilterInput._({this.search, this.slugs}) : super._();

  @override
  GPageTypeFilterInput rebuild(
          void Function(GPageTypeFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageTypeFilterInputBuilder toBuilder() =>
      new GPageTypeFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageTypeFilterInput &&
        search == other.search &&
        slugs == other.slugs;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), slugs.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageTypeFilterInput')
          ..add('search', search)
          ..add('slugs', slugs))
        .toString();
  }
}

class GPageTypeFilterInputBuilder
    implements Builder<GPageTypeFilterInput, GPageTypeFilterInputBuilder> {
  _$GPageTypeFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  GPageTypeFilterInputBuilder();

  GPageTypeFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _slugs = $v.slugs?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageTypeFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageTypeFilterInput;
  }

  @override
  void update(void Function(GPageTypeFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageTypeFilterInput build() => _build();

  _$GPageTypeFilterInput _build() {
    _$GPageTypeFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GPageTypeFilterInput._(search: search, slugs: _slugs?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageTypeFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageTypeSortingInput extends GPageTypeSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GPageTypeSortField field;

  factory _$GPageTypeSortingInput(
          [void Function(GPageTypeSortingInputBuilder)? updates]) =>
      (new GPageTypeSortingInputBuilder()..update(updates))._build();

  _$GPageTypeSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GPageTypeSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GPageTypeSortingInput', 'field');
  }

  @override
  GPageTypeSortingInput rebuild(
          void Function(GPageTypeSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageTypeSortingInputBuilder toBuilder() =>
      new GPageTypeSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageTypeSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageTypeSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GPageTypeSortingInputBuilder
    implements Builder<GPageTypeSortingInput, GPageTypeSortingInputBuilder> {
  _$GPageTypeSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GPageTypeSortField? _field;
  GPageTypeSortField? get field => _$this._field;
  set field(GPageTypeSortField? field) => _$this._field = field;

  GPageTypeSortingInputBuilder();

  GPageTypeSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageTypeSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageTypeSortingInput;
  }

  @override
  void update(void Function(GPageTypeSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageTypeSortingInput build() => _build();

  _$GPageTypeSortingInput _build() {
    final _$result = _$v ??
        new _$GPageTypeSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GPageTypeSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GPageTypeSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GPageTypeUpdateInput extends GPageTypeUpdateInput {
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final BuiltList<String>? addAttributes;
  @override
  final BuiltList<String>? removeAttributes;

  factory _$GPageTypeUpdateInput(
          [void Function(GPageTypeUpdateInputBuilder)? updates]) =>
      (new GPageTypeUpdateInputBuilder()..update(updates))._build();

  _$GPageTypeUpdateInput._(
      {this.name, this.slug, this.addAttributes, this.removeAttributes})
      : super._();

  @override
  GPageTypeUpdateInput rebuild(
          void Function(GPageTypeUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageTypeUpdateInputBuilder toBuilder() =>
      new GPageTypeUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageTypeUpdateInput &&
        name == other.name &&
        slug == other.slug &&
        addAttributes == other.addAttributes &&
        removeAttributes == other.removeAttributes;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, name.hashCode), slug.hashCode), addAttributes.hashCode),
        removeAttributes.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageTypeUpdateInput')
          ..add('name', name)
          ..add('slug', slug)
          ..add('addAttributes', addAttributes)
          ..add('removeAttributes', removeAttributes))
        .toString();
  }
}

class GPageTypeUpdateInputBuilder
    implements Builder<GPageTypeUpdateInput, GPageTypeUpdateInputBuilder> {
  _$GPageTypeUpdateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  ListBuilder<String>? _addAttributes;
  ListBuilder<String> get addAttributes =>
      _$this._addAttributes ??= new ListBuilder<String>();
  set addAttributes(ListBuilder<String>? addAttributes) =>
      _$this._addAttributes = addAttributes;

  ListBuilder<String>? _removeAttributes;
  ListBuilder<String> get removeAttributes =>
      _$this._removeAttributes ??= new ListBuilder<String>();
  set removeAttributes(ListBuilder<String>? removeAttributes) =>
      _$this._removeAttributes = removeAttributes;

  GPageTypeUpdateInputBuilder();

  GPageTypeUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _slug = $v.slug;
      _addAttributes = $v.addAttributes?.toBuilder();
      _removeAttributes = $v.removeAttributes?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageTypeUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageTypeUpdateInput;
  }

  @override
  void update(void Function(GPageTypeUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageTypeUpdateInput build() => _build();

  _$GPageTypeUpdateInput _build() {
    _$GPageTypeUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GPageTypeUpdateInput._(
              name: name,
              slug: slug,
              addAttributes: _addAttributes?.build(),
              removeAttributes: _removeAttributes?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addAttributes';
        _addAttributes?.build();
        _$failedField = 'removeAttributes';
        _removeAttributes?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPageTypeUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPaymentCheckBalanceInput extends GPaymentCheckBalanceInput {
  @override
  final String gatewayId;
  @override
  final String method;
  @override
  final String channel;
  @override
  final GCardInput card;

  factory _$GPaymentCheckBalanceInput(
          [void Function(GPaymentCheckBalanceInputBuilder)? updates]) =>
      (new GPaymentCheckBalanceInputBuilder()..update(updates))._build();

  _$GPaymentCheckBalanceInput._(
      {required this.gatewayId,
      required this.method,
      required this.channel,
      required this.card})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        gatewayId, r'GPaymentCheckBalanceInput', 'gatewayId');
    BuiltValueNullFieldError.checkNotNull(
        method, r'GPaymentCheckBalanceInput', 'method');
    BuiltValueNullFieldError.checkNotNull(
        channel, r'GPaymentCheckBalanceInput', 'channel');
    BuiltValueNullFieldError.checkNotNull(
        card, r'GPaymentCheckBalanceInput', 'card');
  }

  @override
  GPaymentCheckBalanceInput rebuild(
          void Function(GPaymentCheckBalanceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPaymentCheckBalanceInputBuilder toBuilder() =>
      new GPaymentCheckBalanceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPaymentCheckBalanceInput &&
        gatewayId == other.gatewayId &&
        method == other.method &&
        channel == other.channel &&
        card == other.card;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, gatewayId.hashCode), method.hashCode), channel.hashCode),
        card.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPaymentCheckBalanceInput')
          ..add('gatewayId', gatewayId)
          ..add('method', method)
          ..add('channel', channel)
          ..add('card', card))
        .toString();
  }
}

class GPaymentCheckBalanceInputBuilder
    implements
        Builder<GPaymentCheckBalanceInput, GPaymentCheckBalanceInputBuilder> {
  _$GPaymentCheckBalanceInput? _$v;

  String? _gatewayId;
  String? get gatewayId => _$this._gatewayId;
  set gatewayId(String? gatewayId) => _$this._gatewayId = gatewayId;

  String? _method;
  String? get method => _$this._method;
  set method(String? method) => _$this._method = method;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GCardInputBuilder? _card;
  GCardInputBuilder get card => _$this._card ??= new GCardInputBuilder();
  set card(GCardInputBuilder? card) => _$this._card = card;

  GPaymentCheckBalanceInputBuilder();

  GPaymentCheckBalanceInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _gatewayId = $v.gatewayId;
      _method = $v.method;
      _channel = $v.channel;
      _card = $v.card.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPaymentCheckBalanceInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPaymentCheckBalanceInput;
  }

  @override
  void update(void Function(GPaymentCheckBalanceInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPaymentCheckBalanceInput build() => _build();

  _$GPaymentCheckBalanceInput _build() {
    _$GPaymentCheckBalanceInput _$result;
    try {
      _$result = _$v ??
          new _$GPaymentCheckBalanceInput._(
              gatewayId: BuiltValueNullFieldError.checkNotNull(
                  gatewayId, r'GPaymentCheckBalanceInput', 'gatewayId'),
              method: BuiltValueNullFieldError.checkNotNull(
                  method, r'GPaymentCheckBalanceInput', 'method'),
              channel: BuiltValueNullFieldError.checkNotNull(
                  channel, r'GPaymentCheckBalanceInput', 'channel'),
              card: card.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'card';
        card.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPaymentCheckBalanceInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPaymentFilterInput extends GPaymentFilterInput {
  @override
  final BuiltList<String>? ids;
  @override
  final BuiltList<String>? checkouts;

  factory _$GPaymentFilterInput(
          [void Function(GPaymentFilterInputBuilder)? updates]) =>
      (new GPaymentFilterInputBuilder()..update(updates))._build();

  _$GPaymentFilterInput._({this.ids, this.checkouts}) : super._();

  @override
  GPaymentFilterInput rebuild(
          void Function(GPaymentFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPaymentFilterInputBuilder toBuilder() =>
      new GPaymentFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPaymentFilterInput &&
        ids == other.ids &&
        checkouts == other.checkouts;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, ids.hashCode), checkouts.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPaymentFilterInput')
          ..add('ids', ids)
          ..add('checkouts', checkouts))
        .toString();
  }
}

class GPaymentFilterInputBuilder
    implements Builder<GPaymentFilterInput, GPaymentFilterInputBuilder> {
  _$GPaymentFilterInput? _$v;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  ListBuilder<String>? _checkouts;
  ListBuilder<String> get checkouts =>
      _$this._checkouts ??= new ListBuilder<String>();
  set checkouts(ListBuilder<String>? checkouts) =>
      _$this._checkouts = checkouts;

  GPaymentFilterInputBuilder();

  GPaymentFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _ids = $v.ids?.toBuilder();
      _checkouts = $v.checkouts?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPaymentFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPaymentFilterInput;
  }

  @override
  void update(void Function(GPaymentFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPaymentFilterInput build() => _build();

  _$GPaymentFilterInput _build() {
    _$GPaymentFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GPaymentFilterInput._(
              ids: _ids?.build(), checkouts: _checkouts?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
        _$failedField = 'checkouts';
        _checkouts?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPaymentFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPaymentInput extends GPaymentInput {
  @override
  final String gateway;
  @override
  final String? token;
  @override
  final GPositiveDecimal? amount;
  @override
  final String? returnUrl;
  @override
  final GStorePaymentMethodEnum? storePaymentMethod;
  @override
  final BuiltList<GMetadataInput>? metadata;

  factory _$GPaymentInput([void Function(GPaymentInputBuilder)? updates]) =>
      (new GPaymentInputBuilder()..update(updates))._build();

  _$GPaymentInput._(
      {required this.gateway,
      this.token,
      this.amount,
      this.returnUrl,
      this.storePaymentMethod,
      this.metadata})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(gateway, r'GPaymentInput', 'gateway');
  }

  @override
  GPaymentInput rebuild(void Function(GPaymentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPaymentInputBuilder toBuilder() => new GPaymentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPaymentInput &&
        gateway == other.gateway &&
        token == other.token &&
        amount == other.amount &&
        returnUrl == other.returnUrl &&
        storePaymentMethod == other.storePaymentMethod &&
        metadata == other.metadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, gateway.hashCode), token.hashCode),
                    amount.hashCode),
                returnUrl.hashCode),
            storePaymentMethod.hashCode),
        metadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPaymentInput')
          ..add('gateway', gateway)
          ..add('token', token)
          ..add('amount', amount)
          ..add('returnUrl', returnUrl)
          ..add('storePaymentMethod', storePaymentMethod)
          ..add('metadata', metadata))
        .toString();
  }
}

class GPaymentInputBuilder
    implements Builder<GPaymentInput, GPaymentInputBuilder> {
  _$GPaymentInput? _$v;

  String? _gateway;
  String? get gateway => _$this._gateway;
  set gateway(String? gateway) => _$this._gateway = gateway;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GPositiveDecimalBuilder? _amount;
  GPositiveDecimalBuilder get amount =>
      _$this._amount ??= new GPositiveDecimalBuilder();
  set amount(GPositiveDecimalBuilder? amount) => _$this._amount = amount;

  String? _returnUrl;
  String? get returnUrl => _$this._returnUrl;
  set returnUrl(String? returnUrl) => _$this._returnUrl = returnUrl;

  GStorePaymentMethodEnum? _storePaymentMethod;
  GStorePaymentMethodEnum? get storePaymentMethod => _$this._storePaymentMethod;
  set storePaymentMethod(GStorePaymentMethodEnum? storePaymentMethod) =>
      _$this._storePaymentMethod = storePaymentMethod;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  GPaymentInputBuilder();

  GPaymentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _gateway = $v.gateway;
      _token = $v.token;
      _amount = $v.amount?.toBuilder();
      _returnUrl = $v.returnUrl;
      _storePaymentMethod = $v.storePaymentMethod;
      _metadata = $v.metadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPaymentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPaymentInput;
  }

  @override
  void update(void Function(GPaymentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPaymentInput build() => _build();

  _$GPaymentInput _build() {
    _$GPaymentInput _$result;
    try {
      _$result = _$v ??
          new _$GPaymentInput._(
              gateway: BuiltValueNullFieldError.checkNotNull(
                  gateway, r'GPaymentInput', 'gateway'),
              token: token,
              amount: _amount?.build(),
              returnUrl: returnUrl,
              storePaymentMethod: storePaymentMethod,
              metadata: _metadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        _amount?.build();

        _$failedField = 'metadata';
        _metadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPaymentInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPermissionGroupCreateInput extends GPermissionGroupCreateInput {
  @override
  final BuiltList<GPermissionEnum>? addPermissions;
  @override
  final BuiltList<String>? addUsers;
  @override
  final String name;

  factory _$GPermissionGroupCreateInput(
          [void Function(GPermissionGroupCreateInputBuilder)? updates]) =>
      (new GPermissionGroupCreateInputBuilder()..update(updates))._build();

  _$GPermissionGroupCreateInput._(
      {this.addPermissions, this.addUsers, required this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GPermissionGroupCreateInput', 'name');
  }

  @override
  GPermissionGroupCreateInput rebuild(
          void Function(GPermissionGroupCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPermissionGroupCreateInputBuilder toBuilder() =>
      new GPermissionGroupCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPermissionGroupCreateInput &&
        addPermissions == other.addPermissions &&
        addUsers == other.addUsers &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, addPermissions.hashCode), addUsers.hashCode),
        name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPermissionGroupCreateInput')
          ..add('addPermissions', addPermissions)
          ..add('addUsers', addUsers)
          ..add('name', name))
        .toString();
  }
}

class GPermissionGroupCreateInputBuilder
    implements
        Builder<GPermissionGroupCreateInput,
            GPermissionGroupCreateInputBuilder> {
  _$GPermissionGroupCreateInput? _$v;

  ListBuilder<GPermissionEnum>? _addPermissions;
  ListBuilder<GPermissionEnum> get addPermissions =>
      _$this._addPermissions ??= new ListBuilder<GPermissionEnum>();
  set addPermissions(ListBuilder<GPermissionEnum>? addPermissions) =>
      _$this._addPermissions = addPermissions;

  ListBuilder<String>? _addUsers;
  ListBuilder<String> get addUsers =>
      _$this._addUsers ??= new ListBuilder<String>();
  set addUsers(ListBuilder<String>? addUsers) => _$this._addUsers = addUsers;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GPermissionGroupCreateInputBuilder();

  GPermissionGroupCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _addPermissions = $v.addPermissions?.toBuilder();
      _addUsers = $v.addUsers?.toBuilder();
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPermissionGroupCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPermissionGroupCreateInput;
  }

  @override
  void update(void Function(GPermissionGroupCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPermissionGroupCreateInput build() => _build();

  _$GPermissionGroupCreateInput _build() {
    _$GPermissionGroupCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GPermissionGroupCreateInput._(
              addPermissions: _addPermissions?.build(),
              addUsers: _addUsers?.build(),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GPermissionGroupCreateInput', 'name'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addPermissions';
        _addPermissions?.build();
        _$failedField = 'addUsers';
        _addUsers?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPermissionGroupCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPermissionGroupFilterInput extends GPermissionGroupFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<String>? ids;

  factory _$GPermissionGroupFilterInput(
          [void Function(GPermissionGroupFilterInputBuilder)? updates]) =>
      (new GPermissionGroupFilterInputBuilder()..update(updates))._build();

  _$GPermissionGroupFilterInput._({this.search, this.ids}) : super._();

  @override
  GPermissionGroupFilterInput rebuild(
          void Function(GPermissionGroupFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPermissionGroupFilterInputBuilder toBuilder() =>
      new GPermissionGroupFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPermissionGroupFilterInput &&
        search == other.search &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPermissionGroupFilterInput')
          ..add('search', search)
          ..add('ids', ids))
        .toString();
  }
}

class GPermissionGroupFilterInputBuilder
    implements
        Builder<GPermissionGroupFilterInput,
            GPermissionGroupFilterInputBuilder> {
  _$GPermissionGroupFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GPermissionGroupFilterInputBuilder();

  GPermissionGroupFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _ids = $v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPermissionGroupFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPermissionGroupFilterInput;
  }

  @override
  void update(void Function(GPermissionGroupFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPermissionGroupFilterInput build() => _build();

  _$GPermissionGroupFilterInput _build() {
    _$GPermissionGroupFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GPermissionGroupFilterInput._(
              search: search, ids: _ids?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPermissionGroupFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPermissionGroupSortingInput extends GPermissionGroupSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GPermissionGroupSortField field;

  factory _$GPermissionGroupSortingInput(
          [void Function(GPermissionGroupSortingInputBuilder)? updates]) =>
      (new GPermissionGroupSortingInputBuilder()..update(updates))._build();

  _$GPermissionGroupSortingInput._(
      {required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GPermissionGroupSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GPermissionGroupSortingInput', 'field');
  }

  @override
  GPermissionGroupSortingInput rebuild(
          void Function(GPermissionGroupSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPermissionGroupSortingInputBuilder toBuilder() =>
      new GPermissionGroupSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPermissionGroupSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPermissionGroupSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GPermissionGroupSortingInputBuilder
    implements
        Builder<GPermissionGroupSortingInput,
            GPermissionGroupSortingInputBuilder> {
  _$GPermissionGroupSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GPermissionGroupSortField? _field;
  GPermissionGroupSortField? get field => _$this._field;
  set field(GPermissionGroupSortField? field) => _$this._field = field;

  GPermissionGroupSortingInputBuilder();

  GPermissionGroupSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPermissionGroupSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPermissionGroupSortingInput;
  }

  @override
  void update(void Function(GPermissionGroupSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPermissionGroupSortingInput build() => _build();

  _$GPermissionGroupSortingInput _build() {
    final _$result = _$v ??
        new _$GPermissionGroupSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GPermissionGroupSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GPermissionGroupSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GPermissionGroupUpdateInput extends GPermissionGroupUpdateInput {
  @override
  final BuiltList<GPermissionEnum>? addPermissions;
  @override
  final BuiltList<String>? addUsers;
  @override
  final String? name;
  @override
  final BuiltList<GPermissionEnum>? removePermissions;
  @override
  final BuiltList<String>? removeUsers;

  factory _$GPermissionGroupUpdateInput(
          [void Function(GPermissionGroupUpdateInputBuilder)? updates]) =>
      (new GPermissionGroupUpdateInputBuilder()..update(updates))._build();

  _$GPermissionGroupUpdateInput._(
      {this.addPermissions,
      this.addUsers,
      this.name,
      this.removePermissions,
      this.removeUsers})
      : super._();

  @override
  GPermissionGroupUpdateInput rebuild(
          void Function(GPermissionGroupUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPermissionGroupUpdateInputBuilder toBuilder() =>
      new GPermissionGroupUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPermissionGroupUpdateInput &&
        addPermissions == other.addPermissions &&
        addUsers == other.addUsers &&
        name == other.name &&
        removePermissions == other.removePermissions &&
        removeUsers == other.removeUsers;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc(0, addPermissions.hashCode), addUsers.hashCode),
                name.hashCode),
            removePermissions.hashCode),
        removeUsers.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPermissionGroupUpdateInput')
          ..add('addPermissions', addPermissions)
          ..add('addUsers', addUsers)
          ..add('name', name)
          ..add('removePermissions', removePermissions)
          ..add('removeUsers', removeUsers))
        .toString();
  }
}

class GPermissionGroupUpdateInputBuilder
    implements
        Builder<GPermissionGroupUpdateInput,
            GPermissionGroupUpdateInputBuilder> {
  _$GPermissionGroupUpdateInput? _$v;

  ListBuilder<GPermissionEnum>? _addPermissions;
  ListBuilder<GPermissionEnum> get addPermissions =>
      _$this._addPermissions ??= new ListBuilder<GPermissionEnum>();
  set addPermissions(ListBuilder<GPermissionEnum>? addPermissions) =>
      _$this._addPermissions = addPermissions;

  ListBuilder<String>? _addUsers;
  ListBuilder<String> get addUsers =>
      _$this._addUsers ??= new ListBuilder<String>();
  set addUsers(ListBuilder<String>? addUsers) => _$this._addUsers = addUsers;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  ListBuilder<GPermissionEnum>? _removePermissions;
  ListBuilder<GPermissionEnum> get removePermissions =>
      _$this._removePermissions ??= new ListBuilder<GPermissionEnum>();
  set removePermissions(ListBuilder<GPermissionEnum>? removePermissions) =>
      _$this._removePermissions = removePermissions;

  ListBuilder<String>? _removeUsers;
  ListBuilder<String> get removeUsers =>
      _$this._removeUsers ??= new ListBuilder<String>();
  set removeUsers(ListBuilder<String>? removeUsers) =>
      _$this._removeUsers = removeUsers;

  GPermissionGroupUpdateInputBuilder();

  GPermissionGroupUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _addPermissions = $v.addPermissions?.toBuilder();
      _addUsers = $v.addUsers?.toBuilder();
      _name = $v.name;
      _removePermissions = $v.removePermissions?.toBuilder();
      _removeUsers = $v.removeUsers?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPermissionGroupUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPermissionGroupUpdateInput;
  }

  @override
  void update(void Function(GPermissionGroupUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPermissionGroupUpdateInput build() => _build();

  _$GPermissionGroupUpdateInput _build() {
    _$GPermissionGroupUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GPermissionGroupUpdateInput._(
              addPermissions: _addPermissions?.build(),
              addUsers: _addUsers?.build(),
              name: name,
              removePermissions: _removePermissions?.build(),
              removeUsers: _removeUsers?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addPermissions';
        _addPermissions?.build();
        _$failedField = 'addUsers';
        _addUsers?.build();

        _$failedField = 'removePermissions';
        _removePermissions?.build();
        _$failedField = 'removeUsers';
        _removeUsers?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPermissionGroupUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPluginFilterInput extends GPluginFilterInput {
  @override
  final GPluginStatusInChannelsInput? statusInChannels;
  @override
  final String? search;
  @override
  final GPluginConfigurationType? type;

  factory _$GPluginFilterInput(
          [void Function(GPluginFilterInputBuilder)? updates]) =>
      (new GPluginFilterInputBuilder()..update(updates))._build();

  _$GPluginFilterInput._({this.statusInChannels, this.search, this.type})
      : super._();

  @override
  GPluginFilterInput rebuild(
          void Function(GPluginFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPluginFilterInputBuilder toBuilder() =>
      new GPluginFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPluginFilterInput &&
        statusInChannels == other.statusInChannels &&
        search == other.search &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, statusInChannels.hashCode), search.hashCode),
        type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPluginFilterInput')
          ..add('statusInChannels', statusInChannels)
          ..add('search', search)
          ..add('type', type))
        .toString();
  }
}

class GPluginFilterInputBuilder
    implements Builder<GPluginFilterInput, GPluginFilterInputBuilder> {
  _$GPluginFilterInput? _$v;

  GPluginStatusInChannelsInputBuilder? _statusInChannels;
  GPluginStatusInChannelsInputBuilder get statusInChannels =>
      _$this._statusInChannels ??= new GPluginStatusInChannelsInputBuilder();
  set statusInChannels(GPluginStatusInChannelsInputBuilder? statusInChannels) =>
      _$this._statusInChannels = statusInChannels;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  GPluginConfigurationType? _type;
  GPluginConfigurationType? get type => _$this._type;
  set type(GPluginConfigurationType? type) => _$this._type = type;

  GPluginFilterInputBuilder();

  GPluginFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _statusInChannels = $v.statusInChannels?.toBuilder();
      _search = $v.search;
      _type = $v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPluginFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPluginFilterInput;
  }

  @override
  void update(void Function(GPluginFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPluginFilterInput build() => _build();

  _$GPluginFilterInput _build() {
    _$GPluginFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GPluginFilterInput._(
              statusInChannels: _statusInChannels?.build(),
              search: search,
              type: type);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'statusInChannels';
        _statusInChannels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPluginFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPluginSortingInput extends GPluginSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GPluginSortField field;

  factory _$GPluginSortingInput(
          [void Function(GPluginSortingInputBuilder)? updates]) =>
      (new GPluginSortingInputBuilder()..update(updates))._build();

  _$GPluginSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GPluginSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GPluginSortingInput', 'field');
  }

  @override
  GPluginSortingInput rebuild(
          void Function(GPluginSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPluginSortingInputBuilder toBuilder() =>
      new GPluginSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPluginSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPluginSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GPluginSortingInputBuilder
    implements Builder<GPluginSortingInput, GPluginSortingInputBuilder> {
  _$GPluginSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GPluginSortField? _field;
  GPluginSortField? get field => _$this._field;
  set field(GPluginSortField? field) => _$this._field = field;

  GPluginSortingInputBuilder();

  GPluginSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPluginSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPluginSortingInput;
  }

  @override
  void update(void Function(GPluginSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPluginSortingInput build() => _build();

  _$GPluginSortingInput _build() {
    final _$result = _$v ??
        new _$GPluginSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GPluginSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GPluginSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GPluginStatusInChannelsInput extends GPluginStatusInChannelsInput {
  @override
  final bool active;
  @override
  final BuiltList<String> channels;

  factory _$GPluginStatusInChannelsInput(
          [void Function(GPluginStatusInChannelsInputBuilder)? updates]) =>
      (new GPluginStatusInChannelsInputBuilder()..update(updates))._build();

  _$GPluginStatusInChannelsInput._(
      {required this.active, required this.channels})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        active, r'GPluginStatusInChannelsInput', 'active');
    BuiltValueNullFieldError.checkNotNull(
        channels, r'GPluginStatusInChannelsInput', 'channels');
  }

  @override
  GPluginStatusInChannelsInput rebuild(
          void Function(GPluginStatusInChannelsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPluginStatusInChannelsInputBuilder toBuilder() =>
      new GPluginStatusInChannelsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPluginStatusInChannelsInput &&
        active == other.active &&
        channels == other.channels;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, active.hashCode), channels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPluginStatusInChannelsInput')
          ..add('active', active)
          ..add('channels', channels))
        .toString();
  }
}

class GPluginStatusInChannelsInputBuilder
    implements
        Builder<GPluginStatusInChannelsInput,
            GPluginStatusInChannelsInputBuilder> {
  _$GPluginStatusInChannelsInput? _$v;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  ListBuilder<String>? _channels;
  ListBuilder<String> get channels =>
      _$this._channels ??= new ListBuilder<String>();
  set channels(ListBuilder<String>? channels) => _$this._channels = channels;

  GPluginStatusInChannelsInputBuilder();

  GPluginStatusInChannelsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _active = $v.active;
      _channels = $v.channels.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPluginStatusInChannelsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPluginStatusInChannelsInput;
  }

  @override
  void update(void Function(GPluginStatusInChannelsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPluginStatusInChannelsInput build() => _build();

  _$GPluginStatusInChannelsInput _build() {
    _$GPluginStatusInChannelsInput _$result;
    try {
      _$result = _$v ??
          new _$GPluginStatusInChannelsInput._(
              active: BuiltValueNullFieldError.checkNotNull(
                  active, r'GPluginStatusInChannelsInput', 'active'),
              channels: channels.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'channels';
        channels.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPluginStatusInChannelsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPluginUpdateInput extends GPluginUpdateInput {
  @override
  final bool? active;
  @override
  final BuiltList<GConfigurationItemInput>? configuration;

  factory _$GPluginUpdateInput(
          [void Function(GPluginUpdateInputBuilder)? updates]) =>
      (new GPluginUpdateInputBuilder()..update(updates))._build();

  _$GPluginUpdateInput._({this.active, this.configuration}) : super._();

  @override
  GPluginUpdateInput rebuild(
          void Function(GPluginUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPluginUpdateInputBuilder toBuilder() =>
      new GPluginUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPluginUpdateInput &&
        active == other.active &&
        configuration == other.configuration;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, active.hashCode), configuration.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPluginUpdateInput')
          ..add('active', active)
          ..add('configuration', configuration))
        .toString();
  }
}

class GPluginUpdateInputBuilder
    implements Builder<GPluginUpdateInput, GPluginUpdateInputBuilder> {
  _$GPluginUpdateInput? _$v;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  ListBuilder<GConfigurationItemInput>? _configuration;
  ListBuilder<GConfigurationItemInput> get configuration =>
      _$this._configuration ??= new ListBuilder<GConfigurationItemInput>();
  set configuration(ListBuilder<GConfigurationItemInput>? configuration) =>
      _$this._configuration = configuration;

  GPluginUpdateInputBuilder();

  GPluginUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _active = $v.active;
      _configuration = $v.configuration?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPluginUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPluginUpdateInput;
  }

  @override
  void update(void Function(GPluginUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPluginUpdateInput build() => _build();

  _$GPluginUpdateInput _build() {
    _$GPluginUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GPluginUpdateInput._(
              active: active, configuration: _configuration?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'configuration';
        _configuration?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPluginUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPositiveDecimal extends GPositiveDecimal {
  @override
  final String value;

  factory _$GPositiveDecimal(
          [void Function(GPositiveDecimalBuilder)? updates]) =>
      (new GPositiveDecimalBuilder()..update(updates))._build();

  _$GPositiveDecimal._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GPositiveDecimal', 'value');
  }

  @override
  GPositiveDecimal rebuild(void Function(GPositiveDecimalBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPositiveDecimalBuilder toBuilder() =>
      new GPositiveDecimalBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPositiveDecimal && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPositiveDecimal')
          ..add('value', value))
        .toString();
  }
}

class GPositiveDecimalBuilder
    implements Builder<GPositiveDecimal, GPositiveDecimalBuilder> {
  _$GPositiveDecimal? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GPositiveDecimalBuilder();

  GPositiveDecimalBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPositiveDecimal other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPositiveDecimal;
  }

  @override
  void update(void Function(GPositiveDecimalBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPositiveDecimal build() => _build();

  _$GPositiveDecimal _build() {
    final _$result = _$v ??
        new _$GPositiveDecimal._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GPositiveDecimal', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GPreorderSettingsInput extends GPreorderSettingsInput {
  @override
  final int? globalThreshold;
  @override
  final GDateTime? endDate;

  factory _$GPreorderSettingsInput(
          [void Function(GPreorderSettingsInputBuilder)? updates]) =>
      (new GPreorderSettingsInputBuilder()..update(updates))._build();

  _$GPreorderSettingsInput._({this.globalThreshold, this.endDate}) : super._();

  @override
  GPreorderSettingsInput rebuild(
          void Function(GPreorderSettingsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPreorderSettingsInputBuilder toBuilder() =>
      new GPreorderSettingsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPreorderSettingsInput &&
        globalThreshold == other.globalThreshold &&
        endDate == other.endDate;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, globalThreshold.hashCode), endDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPreorderSettingsInput')
          ..add('globalThreshold', globalThreshold)
          ..add('endDate', endDate))
        .toString();
  }
}

class GPreorderSettingsInputBuilder
    implements Builder<GPreorderSettingsInput, GPreorderSettingsInputBuilder> {
  _$GPreorderSettingsInput? _$v;

  int? _globalThreshold;
  int? get globalThreshold => _$this._globalThreshold;
  set globalThreshold(int? globalThreshold) =>
      _$this._globalThreshold = globalThreshold;

  GDateTimeBuilder? _endDate;
  GDateTimeBuilder get endDate => _$this._endDate ??= new GDateTimeBuilder();
  set endDate(GDateTimeBuilder? endDate) => _$this._endDate = endDate;

  GPreorderSettingsInputBuilder();

  GPreorderSettingsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _globalThreshold = $v.globalThreshold;
      _endDate = $v.endDate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPreorderSettingsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPreorderSettingsInput;
  }

  @override
  void update(void Function(GPreorderSettingsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPreorderSettingsInput build() => _build();

  _$GPreorderSettingsInput _build() {
    _$GPreorderSettingsInput _$result;
    try {
      _$result = _$v ??
          new _$GPreorderSettingsInput._(
              globalThreshold: globalThreshold, endDate: _endDate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'endDate';
        _endDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPreorderSettingsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPriceInput extends GPriceInput {
  @override
  final String currency;
  @override
  final GPositiveDecimal amount;

  factory _$GPriceInput([void Function(GPriceInputBuilder)? updates]) =>
      (new GPriceInputBuilder()..update(updates))._build();

  _$GPriceInput._({required this.currency, required this.amount}) : super._() {
    BuiltValueNullFieldError.checkNotNull(currency, r'GPriceInput', 'currency');
    BuiltValueNullFieldError.checkNotNull(amount, r'GPriceInput', 'amount');
  }

  @override
  GPriceInput rebuild(void Function(GPriceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPriceInputBuilder toBuilder() => new GPriceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPriceInput &&
        currency == other.currency &&
        amount == other.amount;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, currency.hashCode), amount.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPriceInput')
          ..add('currency', currency)
          ..add('amount', amount))
        .toString();
  }
}

class GPriceInputBuilder implements Builder<GPriceInput, GPriceInputBuilder> {
  _$GPriceInput? _$v;

  String? _currency;
  String? get currency => _$this._currency;
  set currency(String? currency) => _$this._currency = currency;

  GPositiveDecimalBuilder? _amount;
  GPositiveDecimalBuilder get amount =>
      _$this._amount ??= new GPositiveDecimalBuilder();
  set amount(GPositiveDecimalBuilder? amount) => _$this._amount = amount;

  GPriceInputBuilder();

  GPriceInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _currency = $v.currency;
      _amount = $v.amount.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPriceInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPriceInput;
  }

  @override
  void update(void Function(GPriceInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPriceInput build() => _build();

  _$GPriceInput _build() {
    _$GPriceInput _$result;
    try {
      _$result = _$v ??
          new _$GPriceInput._(
              currency: BuiltValueNullFieldError.checkNotNull(
                  currency, r'GPriceInput', 'currency'),
              amount: amount.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'amount';
        amount.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPriceInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPriceRangeInput extends GPriceRangeInput {
  @override
  final double? gte;
  @override
  final double? lte;

  factory _$GPriceRangeInput(
          [void Function(GPriceRangeInputBuilder)? updates]) =>
      (new GPriceRangeInputBuilder()..update(updates))._build();

  _$GPriceRangeInput._({this.gte, this.lte}) : super._();

  @override
  GPriceRangeInput rebuild(void Function(GPriceRangeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPriceRangeInputBuilder toBuilder() =>
      new GPriceRangeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPriceRangeInput && gte == other.gte && lte == other.lte;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, gte.hashCode), lte.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPriceRangeInput')
          ..add('gte', gte)
          ..add('lte', lte))
        .toString();
  }
}

class GPriceRangeInputBuilder
    implements Builder<GPriceRangeInput, GPriceRangeInputBuilder> {
  _$GPriceRangeInput? _$v;

  double? _gte;
  double? get gte => _$this._gte;
  set gte(double? gte) => _$this._gte = gte;

  double? _lte;
  double? get lte => _$this._lte;
  set lte(double? lte) => _$this._lte = lte;

  GPriceRangeInputBuilder();

  GPriceRangeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _gte = $v.gte;
      _lte = $v.lte;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPriceRangeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPriceRangeInput;
  }

  @override
  void update(void Function(GPriceRangeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPriceRangeInput build() => _build();

  _$GPriceRangeInput _build() {
    final _$result = _$v ?? new _$GPriceRangeInput._(gte: gte, lte: lte);
    replace(_$result);
    return _$result;
  }
}

class _$GProductAttributeAssignInput extends GProductAttributeAssignInput {
  @override
  final String id;
  @override
  final GProductAttributeType type;
  @override
  final bool? variantSelection;

  factory _$GProductAttributeAssignInput(
          [void Function(GProductAttributeAssignInputBuilder)? updates]) =>
      (new GProductAttributeAssignInputBuilder()..update(updates))._build();

  _$GProductAttributeAssignInput._(
      {required this.id, required this.type, this.variantSelection})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GProductAttributeAssignInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GProductAttributeAssignInput', 'type');
  }

  @override
  GProductAttributeAssignInput rebuild(
          void Function(GProductAttributeAssignInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductAttributeAssignInputBuilder toBuilder() =>
      new GProductAttributeAssignInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductAttributeAssignInput &&
        id == other.id &&
        type == other.type &&
        variantSelection == other.variantSelection;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc(0, id.hashCode), type.hashCode), variantSelection.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductAttributeAssignInput')
          ..add('id', id)
          ..add('type', type)
          ..add('variantSelection', variantSelection))
        .toString();
  }
}

class GProductAttributeAssignInputBuilder
    implements
        Builder<GProductAttributeAssignInput,
            GProductAttributeAssignInputBuilder> {
  _$GProductAttributeAssignInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GProductAttributeType? _type;
  GProductAttributeType? get type => _$this._type;
  set type(GProductAttributeType? type) => _$this._type = type;

  bool? _variantSelection;
  bool? get variantSelection => _$this._variantSelection;
  set variantSelection(bool? variantSelection) =>
      _$this._variantSelection = variantSelection;

  GProductAttributeAssignInputBuilder();

  GProductAttributeAssignInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _type = $v.type;
      _variantSelection = $v.variantSelection;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductAttributeAssignInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductAttributeAssignInput;
  }

  @override
  void update(void Function(GProductAttributeAssignInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductAttributeAssignInput build() => _build();

  _$GProductAttributeAssignInput _build() {
    final _$result = _$v ??
        new _$GProductAttributeAssignInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GProductAttributeAssignInput', 'id'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GProductAttributeAssignInput', 'type'),
            variantSelection: variantSelection);
    replace(_$result);
    return _$result;
  }
}

class _$GProductAttributeAssignmentUpdateInput
    extends GProductAttributeAssignmentUpdateInput {
  @override
  final String id;
  @override
  final bool variantSelection;

  factory _$GProductAttributeAssignmentUpdateInput(
          [void Function(GProductAttributeAssignmentUpdateInputBuilder)?
              updates]) =>
      (new GProductAttributeAssignmentUpdateInputBuilder()..update(updates))
          ._build();

  _$GProductAttributeAssignmentUpdateInput._(
      {required this.id, required this.variantSelection})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GProductAttributeAssignmentUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(variantSelection,
        r'GProductAttributeAssignmentUpdateInput', 'variantSelection');
  }

  @override
  GProductAttributeAssignmentUpdateInput rebuild(
          void Function(GProductAttributeAssignmentUpdateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductAttributeAssignmentUpdateInputBuilder toBuilder() =>
      new GProductAttributeAssignmentUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductAttributeAssignmentUpdateInput &&
        id == other.id &&
        variantSelection == other.variantSelection;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), variantSelection.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GProductAttributeAssignmentUpdateInput')
          ..add('id', id)
          ..add('variantSelection', variantSelection))
        .toString();
  }
}

class GProductAttributeAssignmentUpdateInputBuilder
    implements
        Builder<GProductAttributeAssignmentUpdateInput,
            GProductAttributeAssignmentUpdateInputBuilder> {
  _$GProductAttributeAssignmentUpdateInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _variantSelection;
  bool? get variantSelection => _$this._variantSelection;
  set variantSelection(bool? variantSelection) =>
      _$this._variantSelection = variantSelection;

  GProductAttributeAssignmentUpdateInputBuilder();

  GProductAttributeAssignmentUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _variantSelection = $v.variantSelection;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductAttributeAssignmentUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductAttributeAssignmentUpdateInput;
  }

  @override
  void update(
      void Function(GProductAttributeAssignmentUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductAttributeAssignmentUpdateInput build() => _build();

  _$GProductAttributeAssignmentUpdateInput _build() {
    final _$result = _$v ??
        new _$GProductAttributeAssignmentUpdateInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GProductAttributeAssignmentUpdateInput', 'id'),
            variantSelection: BuiltValueNullFieldError.checkNotNull(
                variantSelection,
                r'GProductAttributeAssignmentUpdateInput',
                'variantSelection'));
    replace(_$result);
    return _$result;
  }
}

class _$GProductChannelListingAddInput extends GProductChannelListingAddInput {
  @override
  final String channelId;
  @override
  final bool? isPublished;
  @override
  final GDate? publicationDate;
  @override
  final GDateTime? publishedAt;
  @override
  final bool? visibleInListings;
  @override
  final bool? isAvailableForPurchase;
  @override
  final GDate? availableForPurchaseDate;
  @override
  final GDateTime? availableForPurchaseAt;
  @override
  final BuiltList<String>? addVariants;
  @override
  final BuiltList<String>? removeVariants;

  factory _$GProductChannelListingAddInput(
          [void Function(GProductChannelListingAddInputBuilder)? updates]) =>
      (new GProductChannelListingAddInputBuilder()..update(updates))._build();

  _$GProductChannelListingAddInput._(
      {required this.channelId,
      this.isPublished,
      this.publicationDate,
      this.publishedAt,
      this.visibleInListings,
      this.isAvailableForPurchase,
      this.availableForPurchaseDate,
      this.availableForPurchaseAt,
      this.addVariants,
      this.removeVariants})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        channelId, r'GProductChannelListingAddInput', 'channelId');
  }

  @override
  GProductChannelListingAddInput rebuild(
          void Function(GProductChannelListingAddInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductChannelListingAddInputBuilder toBuilder() =>
      new GProductChannelListingAddInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductChannelListingAddInput &&
        channelId == other.channelId &&
        isPublished == other.isPublished &&
        publicationDate == other.publicationDate &&
        publishedAt == other.publishedAt &&
        visibleInListings == other.visibleInListings &&
        isAvailableForPurchase == other.isAvailableForPurchase &&
        availableForPurchaseDate == other.availableForPurchaseDate &&
        availableForPurchaseAt == other.availableForPurchaseAt &&
        addVariants == other.addVariants &&
        removeVariants == other.removeVariants;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, channelId.hashCode),
                                        isPublished.hashCode),
                                    publicationDate.hashCode),
                                publishedAt.hashCode),
                            visibleInListings.hashCode),
                        isAvailableForPurchase.hashCode),
                    availableForPurchaseDate.hashCode),
                availableForPurchaseAt.hashCode),
            addVariants.hashCode),
        removeVariants.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductChannelListingAddInput')
          ..add('channelId', channelId)
          ..add('isPublished', isPublished)
          ..add('publicationDate', publicationDate)
          ..add('publishedAt', publishedAt)
          ..add('visibleInListings', visibleInListings)
          ..add('isAvailableForPurchase', isAvailableForPurchase)
          ..add('availableForPurchaseDate', availableForPurchaseDate)
          ..add('availableForPurchaseAt', availableForPurchaseAt)
          ..add('addVariants', addVariants)
          ..add('removeVariants', removeVariants))
        .toString();
  }
}

class GProductChannelListingAddInputBuilder
    implements
        Builder<GProductChannelListingAddInput,
            GProductChannelListingAddInputBuilder> {
  _$GProductChannelListingAddInput? _$v;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  bool? _isPublished;
  bool? get isPublished => _$this._isPublished;
  set isPublished(bool? isPublished) => _$this._isPublished = isPublished;

  GDateBuilder? _publicationDate;
  GDateBuilder get publicationDate =>
      _$this._publicationDate ??= new GDateBuilder();
  set publicationDate(GDateBuilder? publicationDate) =>
      _$this._publicationDate = publicationDate;

  GDateTimeBuilder? _publishedAt;
  GDateTimeBuilder get publishedAt =>
      _$this._publishedAt ??= new GDateTimeBuilder();
  set publishedAt(GDateTimeBuilder? publishedAt) =>
      _$this._publishedAt = publishedAt;

  bool? _visibleInListings;
  bool? get visibleInListings => _$this._visibleInListings;
  set visibleInListings(bool? visibleInListings) =>
      _$this._visibleInListings = visibleInListings;

  bool? _isAvailableForPurchase;
  bool? get isAvailableForPurchase => _$this._isAvailableForPurchase;
  set isAvailableForPurchase(bool? isAvailableForPurchase) =>
      _$this._isAvailableForPurchase = isAvailableForPurchase;

  GDateBuilder? _availableForPurchaseDate;
  GDateBuilder get availableForPurchaseDate =>
      _$this._availableForPurchaseDate ??= new GDateBuilder();
  set availableForPurchaseDate(GDateBuilder? availableForPurchaseDate) =>
      _$this._availableForPurchaseDate = availableForPurchaseDate;

  GDateTimeBuilder? _availableForPurchaseAt;
  GDateTimeBuilder get availableForPurchaseAt =>
      _$this._availableForPurchaseAt ??= new GDateTimeBuilder();
  set availableForPurchaseAt(GDateTimeBuilder? availableForPurchaseAt) =>
      _$this._availableForPurchaseAt = availableForPurchaseAt;

  ListBuilder<String>? _addVariants;
  ListBuilder<String> get addVariants =>
      _$this._addVariants ??= new ListBuilder<String>();
  set addVariants(ListBuilder<String>? addVariants) =>
      _$this._addVariants = addVariants;

  ListBuilder<String>? _removeVariants;
  ListBuilder<String> get removeVariants =>
      _$this._removeVariants ??= new ListBuilder<String>();
  set removeVariants(ListBuilder<String>? removeVariants) =>
      _$this._removeVariants = removeVariants;

  GProductChannelListingAddInputBuilder();

  GProductChannelListingAddInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _channelId = $v.channelId;
      _isPublished = $v.isPublished;
      _publicationDate = $v.publicationDate?.toBuilder();
      _publishedAt = $v.publishedAt?.toBuilder();
      _visibleInListings = $v.visibleInListings;
      _isAvailableForPurchase = $v.isAvailableForPurchase;
      _availableForPurchaseDate = $v.availableForPurchaseDate?.toBuilder();
      _availableForPurchaseAt = $v.availableForPurchaseAt?.toBuilder();
      _addVariants = $v.addVariants?.toBuilder();
      _removeVariants = $v.removeVariants?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductChannelListingAddInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductChannelListingAddInput;
  }

  @override
  void update(void Function(GProductChannelListingAddInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductChannelListingAddInput build() => _build();

  _$GProductChannelListingAddInput _build() {
    _$GProductChannelListingAddInput _$result;
    try {
      _$result = _$v ??
          new _$GProductChannelListingAddInput._(
              channelId: BuiltValueNullFieldError.checkNotNull(
                  channelId, r'GProductChannelListingAddInput', 'channelId'),
              isPublished: isPublished,
              publicationDate: _publicationDate?.build(),
              publishedAt: _publishedAt?.build(),
              visibleInListings: visibleInListings,
              isAvailableForPurchase: isAvailableForPurchase,
              availableForPurchaseDate: _availableForPurchaseDate?.build(),
              availableForPurchaseAt: _availableForPurchaseAt?.build(),
              addVariants: _addVariants?.build(),
              removeVariants: _removeVariants?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'publicationDate';
        _publicationDate?.build();
        _$failedField = 'publishedAt';
        _publishedAt?.build();

        _$failedField = 'availableForPurchaseDate';
        _availableForPurchaseDate?.build();
        _$failedField = 'availableForPurchaseAt';
        _availableForPurchaseAt?.build();
        _$failedField = 'addVariants';
        _addVariants?.build();
        _$failedField = 'removeVariants';
        _removeVariants?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductChannelListingAddInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductChannelListingUpdateInput
    extends GProductChannelListingUpdateInput {
  @override
  final BuiltList<GProductChannelListingAddInput>? updateChannels;
  @override
  final BuiltList<String>? removeChannels;

  factory _$GProductChannelListingUpdateInput(
          [void Function(GProductChannelListingUpdateInputBuilder)? updates]) =>
      (new GProductChannelListingUpdateInputBuilder()..update(updates))
          ._build();

  _$GProductChannelListingUpdateInput._(
      {this.updateChannels, this.removeChannels})
      : super._();

  @override
  GProductChannelListingUpdateInput rebuild(
          void Function(GProductChannelListingUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductChannelListingUpdateInputBuilder toBuilder() =>
      new GProductChannelListingUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductChannelListingUpdateInput &&
        updateChannels == other.updateChannels &&
        removeChannels == other.removeChannels;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, updateChannels.hashCode), removeChannels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductChannelListingUpdateInput')
          ..add('updateChannels', updateChannels)
          ..add('removeChannels', removeChannels))
        .toString();
  }
}

class GProductChannelListingUpdateInputBuilder
    implements
        Builder<GProductChannelListingUpdateInput,
            GProductChannelListingUpdateInputBuilder> {
  _$GProductChannelListingUpdateInput? _$v;

  ListBuilder<GProductChannelListingAddInput>? _updateChannels;
  ListBuilder<GProductChannelListingAddInput> get updateChannels =>
      _$this._updateChannels ??=
          new ListBuilder<GProductChannelListingAddInput>();
  set updateChannels(
          ListBuilder<GProductChannelListingAddInput>? updateChannels) =>
      _$this._updateChannels = updateChannels;

  ListBuilder<String>? _removeChannels;
  ListBuilder<String> get removeChannels =>
      _$this._removeChannels ??= new ListBuilder<String>();
  set removeChannels(ListBuilder<String>? removeChannels) =>
      _$this._removeChannels = removeChannels;

  GProductChannelListingUpdateInputBuilder();

  GProductChannelListingUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _updateChannels = $v.updateChannels?.toBuilder();
      _removeChannels = $v.removeChannels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductChannelListingUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductChannelListingUpdateInput;
  }

  @override
  void update(
      void Function(GProductChannelListingUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductChannelListingUpdateInput build() => _build();

  _$GProductChannelListingUpdateInput _build() {
    _$GProductChannelListingUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductChannelListingUpdateInput._(
              updateChannels: _updateChannels?.build(),
              removeChannels: _removeChannels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'updateChannels';
        _updateChannels?.build();
        _$failedField = 'removeChannels';
        _removeChannels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductChannelListingUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductCreateInput extends GProductCreateInput {
  @override
  final BuiltList<GAttributeValueInput>? attributes;
  @override
  final String? category;
  @override
  final bool? chargeTaxes;
  @override
  final BuiltList<String>? collections;
  @override
  final GJSONString? description;
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final String? taxCode;
  @override
  final GSeoInput? seo;
  @override
  final GWeightScalar? weight;
  @override
  final double? rating;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;
  @override
  final String productType;

  factory _$GProductCreateInput(
          [void Function(GProductCreateInputBuilder)? updates]) =>
      (new GProductCreateInputBuilder()..update(updates))._build();

  _$GProductCreateInput._(
      {this.attributes,
      this.category,
      this.chargeTaxes,
      this.collections,
      this.description,
      this.name,
      this.slug,
      this.taxCode,
      this.seo,
      this.weight,
      this.rating,
      this.metadata,
      this.privateMetadata,
      required this.productType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        productType, r'GProductCreateInput', 'productType');
  }

  @override
  GProductCreateInput rebuild(
          void Function(GProductCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductCreateInputBuilder toBuilder() =>
      new GProductCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductCreateInput &&
        attributes == other.attributes &&
        category == other.category &&
        chargeTaxes == other.chargeTaxes &&
        collections == other.collections &&
        description == other.description &&
        name == other.name &&
        slug == other.slug &&
        taxCode == other.taxCode &&
        seo == other.seo &&
        weight == other.weight &&
        rating == other.rating &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata &&
        productType == other.productType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            0,
                                                            attributes
                                                                .hashCode),
                                                        category.hashCode),
                                                    chargeTaxes.hashCode),
                                                collections.hashCode),
                                            description.hashCode),
                                        name.hashCode),
                                    slug.hashCode),
                                taxCode.hashCode),
                            seo.hashCode),
                        weight.hashCode),
                    rating.hashCode),
                metadata.hashCode),
            privateMetadata.hashCode),
        productType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductCreateInput')
          ..add('attributes', attributes)
          ..add('category', category)
          ..add('chargeTaxes', chargeTaxes)
          ..add('collections', collections)
          ..add('description', description)
          ..add('name', name)
          ..add('slug', slug)
          ..add('taxCode', taxCode)
          ..add('seo', seo)
          ..add('weight', weight)
          ..add('rating', rating)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata)
          ..add('productType', productType))
        .toString();
  }
}

class GProductCreateInputBuilder
    implements Builder<GProductCreateInput, GProductCreateInputBuilder> {
  _$GProductCreateInput? _$v;

  ListBuilder<GAttributeValueInput>? _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput>? attributes) =>
      _$this._attributes = attributes;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  bool? _chargeTaxes;
  bool? get chargeTaxes => _$this._chargeTaxes;
  set chargeTaxes(bool? chargeTaxes) => _$this._chargeTaxes = chargeTaxes;

  ListBuilder<String>? _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String>? collections) =>
      _$this._collections = collections;

  GJSONStringBuilder? _description;
  GJSONStringBuilder get description =>
      _$this._description ??= new GJSONStringBuilder();
  set description(GJSONStringBuilder? description) =>
      _$this._description = description;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _taxCode;
  String? get taxCode => _$this._taxCode;
  set taxCode(String? taxCode) => _$this._taxCode = taxCode;

  GSeoInputBuilder? _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder? seo) => _$this._seo = seo;

  GWeightScalarBuilder? _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder? weight) => _$this._weight = weight;

  double? _rating;
  double? get rating => _$this._rating;
  set rating(double? rating) => _$this._rating = rating;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  String? _productType;
  String? get productType => _$this._productType;
  set productType(String? productType) => _$this._productType = productType;

  GProductCreateInputBuilder();

  GProductCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _attributes = $v.attributes?.toBuilder();
      _category = $v.category;
      _chargeTaxes = $v.chargeTaxes;
      _collections = $v.collections?.toBuilder();
      _description = $v.description?.toBuilder();
      _name = $v.name;
      _slug = $v.slug;
      _taxCode = $v.taxCode;
      _seo = $v.seo?.toBuilder();
      _weight = $v.weight?.toBuilder();
      _rating = $v.rating;
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _productType = $v.productType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductCreateInput;
  }

  @override
  void update(void Function(GProductCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductCreateInput build() => _build();

  _$GProductCreateInput _build() {
    _$GProductCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductCreateInput._(
              attributes: _attributes?.build(),
              category: category,
              chargeTaxes: chargeTaxes,
              collections: _collections?.build(),
              description: _description?.build(),
              name: name,
              slug: slug,
              taxCode: taxCode,
              seo: _seo?.build(),
              weight: _weight?.build(),
              rating: rating,
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build(),
              productType: BuiltValueNullFieldError.checkNotNull(
                  productType, r'GProductCreateInput', 'productType'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();

        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'description';
        _description?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'weight';
        _weight?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductFilterInput extends GProductFilterInput {
  @override
  final bool? isPublished;
  @override
  final BuiltList<String>? collections;
  @override
  final BuiltList<String>? categories;
  @override
  final bool? hasCategory;
  @override
  final BuiltList<GAttributeInput>? attributes;
  @override
  final GStockAvailability? stockAvailability;
  @override
  final GProductStockFilterInput? stocks;
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final GDateTime? publishedFrom;
  @override
  final bool? isAvailable;
  @override
  final GDateTime? availableFrom;
  @override
  final bool? isVisibleInListing;
  @override
  final GPriceRangeInput? price;
  @override
  final GPriceRangeInput? minimalPrice;
  @override
  final GDateTimeRangeInput? updatedAt;
  @override
  final BuiltList<String>? productTypes;
  @override
  final bool? giftCard;
  @override
  final BuiltList<String>? ids;
  @override
  final bool? hasPreorderedVariants;
  @override
  final BuiltList<String>? slugs;
  @override
  final String? channel;

  factory _$GProductFilterInput(
          [void Function(GProductFilterInputBuilder)? updates]) =>
      (new GProductFilterInputBuilder()..update(updates))._build();

  _$GProductFilterInput._(
      {this.isPublished,
      this.collections,
      this.categories,
      this.hasCategory,
      this.attributes,
      this.stockAvailability,
      this.stocks,
      this.search,
      this.metadata,
      this.publishedFrom,
      this.isAvailable,
      this.availableFrom,
      this.isVisibleInListing,
      this.price,
      this.minimalPrice,
      this.updatedAt,
      this.productTypes,
      this.giftCard,
      this.ids,
      this.hasPreorderedVariants,
      this.slugs,
      this.channel})
      : super._();

  @override
  GProductFilterInput rebuild(
          void Function(GProductFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductFilterInputBuilder toBuilder() =>
      new GProductFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductFilterInput &&
        isPublished == other.isPublished &&
        collections == other.collections &&
        categories == other.categories &&
        hasCategory == other.hasCategory &&
        attributes == other.attributes &&
        stockAvailability == other.stockAvailability &&
        stocks == other.stocks &&
        search == other.search &&
        metadata == other.metadata &&
        publishedFrom == other.publishedFrom &&
        isAvailable == other.isAvailable &&
        availableFrom == other.availableFrom &&
        isVisibleInListing == other.isVisibleInListing &&
        price == other.price &&
        minimalPrice == other.minimalPrice &&
        updatedAt == other.updatedAt &&
        productTypes == other.productTypes &&
        giftCard == other.giftCard &&
        ids == other.ids &&
        hasPreorderedVariants == other.hasPreorderedVariants &&
        slugs == other.slugs &&
        channel == other.channel;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            $jc($jc($jc($jc(0, isPublished.hashCode), collections.hashCode), categories.hashCode),
                                                                                hasCategory.hashCode),
                                                                            attributes.hashCode),
                                                                        stockAvailability.hashCode),
                                                                    stocks.hashCode),
                                                                search.hashCode),
                                                            metadata.hashCode),
                                                        publishedFrom.hashCode),
                                                    isAvailable.hashCode),
                                                availableFrom.hashCode),
                                            isVisibleInListing.hashCode),
                                        price.hashCode),
                                    minimalPrice.hashCode),
                                updatedAt.hashCode),
                            productTypes.hashCode),
                        giftCard.hashCode),
                    ids.hashCode),
                hasPreorderedVariants.hashCode),
            slugs.hashCode),
        channel.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductFilterInput')
          ..add('isPublished', isPublished)
          ..add('collections', collections)
          ..add('categories', categories)
          ..add('hasCategory', hasCategory)
          ..add('attributes', attributes)
          ..add('stockAvailability', stockAvailability)
          ..add('stocks', stocks)
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('publishedFrom', publishedFrom)
          ..add('isAvailable', isAvailable)
          ..add('availableFrom', availableFrom)
          ..add('isVisibleInListing', isVisibleInListing)
          ..add('price', price)
          ..add('minimalPrice', minimalPrice)
          ..add('updatedAt', updatedAt)
          ..add('productTypes', productTypes)
          ..add('giftCard', giftCard)
          ..add('ids', ids)
          ..add('hasPreorderedVariants', hasPreorderedVariants)
          ..add('slugs', slugs)
          ..add('channel', channel))
        .toString();
  }
}

class GProductFilterInputBuilder
    implements Builder<GProductFilterInput, GProductFilterInputBuilder> {
  _$GProductFilterInput? _$v;

  bool? _isPublished;
  bool? get isPublished => _$this._isPublished;
  set isPublished(bool? isPublished) => _$this._isPublished = isPublished;

  ListBuilder<String>? _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String>? collections) =>
      _$this._collections = collections;

  ListBuilder<String>? _categories;
  ListBuilder<String> get categories =>
      _$this._categories ??= new ListBuilder<String>();
  set categories(ListBuilder<String>? categories) =>
      _$this._categories = categories;

  bool? _hasCategory;
  bool? get hasCategory => _$this._hasCategory;
  set hasCategory(bool? hasCategory) => _$this._hasCategory = hasCategory;

  ListBuilder<GAttributeInput>? _attributes;
  ListBuilder<GAttributeInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeInput>();
  set attributes(ListBuilder<GAttributeInput>? attributes) =>
      _$this._attributes = attributes;

  GStockAvailability? _stockAvailability;
  GStockAvailability? get stockAvailability => _$this._stockAvailability;
  set stockAvailability(GStockAvailability? stockAvailability) =>
      _$this._stockAvailability = stockAvailability;

  GProductStockFilterInputBuilder? _stocks;
  GProductStockFilterInputBuilder get stocks =>
      _$this._stocks ??= new GProductStockFilterInputBuilder();
  set stocks(GProductStockFilterInputBuilder? stocks) =>
      _$this._stocks = stocks;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  GDateTimeBuilder? _publishedFrom;
  GDateTimeBuilder get publishedFrom =>
      _$this._publishedFrom ??= new GDateTimeBuilder();
  set publishedFrom(GDateTimeBuilder? publishedFrom) =>
      _$this._publishedFrom = publishedFrom;

  bool? _isAvailable;
  bool? get isAvailable => _$this._isAvailable;
  set isAvailable(bool? isAvailable) => _$this._isAvailable = isAvailable;

  GDateTimeBuilder? _availableFrom;
  GDateTimeBuilder get availableFrom =>
      _$this._availableFrom ??= new GDateTimeBuilder();
  set availableFrom(GDateTimeBuilder? availableFrom) =>
      _$this._availableFrom = availableFrom;

  bool? _isVisibleInListing;
  bool? get isVisibleInListing => _$this._isVisibleInListing;
  set isVisibleInListing(bool? isVisibleInListing) =>
      _$this._isVisibleInListing = isVisibleInListing;

  GPriceRangeInputBuilder? _price;
  GPriceRangeInputBuilder get price =>
      _$this._price ??= new GPriceRangeInputBuilder();
  set price(GPriceRangeInputBuilder? price) => _$this._price = price;

  GPriceRangeInputBuilder? _minimalPrice;
  GPriceRangeInputBuilder get minimalPrice =>
      _$this._minimalPrice ??= new GPriceRangeInputBuilder();
  set minimalPrice(GPriceRangeInputBuilder? minimalPrice) =>
      _$this._minimalPrice = minimalPrice;

  GDateTimeRangeInputBuilder? _updatedAt;
  GDateTimeRangeInputBuilder get updatedAt =>
      _$this._updatedAt ??= new GDateTimeRangeInputBuilder();
  set updatedAt(GDateTimeRangeInputBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  ListBuilder<String>? _productTypes;
  ListBuilder<String> get productTypes =>
      _$this._productTypes ??= new ListBuilder<String>();
  set productTypes(ListBuilder<String>? productTypes) =>
      _$this._productTypes = productTypes;

  bool? _giftCard;
  bool? get giftCard => _$this._giftCard;
  set giftCard(bool? giftCard) => _$this._giftCard = giftCard;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  bool? _hasPreorderedVariants;
  bool? get hasPreorderedVariants => _$this._hasPreorderedVariants;
  set hasPreorderedVariants(bool? hasPreorderedVariants) =>
      _$this._hasPreorderedVariants = hasPreorderedVariants;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GProductFilterInputBuilder();

  GProductFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _isPublished = $v.isPublished;
      _collections = $v.collections?.toBuilder();
      _categories = $v.categories?.toBuilder();
      _hasCategory = $v.hasCategory;
      _attributes = $v.attributes?.toBuilder();
      _stockAvailability = $v.stockAvailability;
      _stocks = $v.stocks?.toBuilder();
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _publishedFrom = $v.publishedFrom?.toBuilder();
      _isAvailable = $v.isAvailable;
      _availableFrom = $v.availableFrom?.toBuilder();
      _isVisibleInListing = $v.isVisibleInListing;
      _price = $v.price?.toBuilder();
      _minimalPrice = $v.minimalPrice?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _productTypes = $v.productTypes?.toBuilder();
      _giftCard = $v.giftCard;
      _ids = $v.ids?.toBuilder();
      _hasPreorderedVariants = $v.hasPreorderedVariants;
      _slugs = $v.slugs?.toBuilder();
      _channel = $v.channel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductFilterInput;
  }

  @override
  void update(void Function(GProductFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductFilterInput build() => _build();

  _$GProductFilterInput _build() {
    _$GProductFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GProductFilterInput._(
              isPublished: isPublished,
              collections: _collections?.build(),
              categories: _categories?.build(),
              hasCategory: hasCategory,
              attributes: _attributes?.build(),
              stockAvailability: stockAvailability,
              stocks: _stocks?.build(),
              search: search,
              metadata: _metadata?.build(),
              publishedFrom: _publishedFrom?.build(),
              isAvailable: isAvailable,
              availableFrom: _availableFrom?.build(),
              isVisibleInListing: isVisibleInListing,
              price: _price?.build(),
              minimalPrice: _minimalPrice?.build(),
              updatedAt: _updatedAt?.build(),
              productTypes: _productTypes?.build(),
              giftCard: giftCard,
              ids: _ids?.build(),
              hasPreorderedVariants: hasPreorderedVariants,
              slugs: _slugs?.build(),
              channel: channel);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'categories';
        _categories?.build();

        _$failedField = 'attributes';
        _attributes?.build();

        _$failedField = 'stocks';
        _stocks?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'publishedFrom';
        _publishedFrom?.build();

        _$failedField = 'availableFrom';
        _availableFrom?.build();

        _$failedField = 'price';
        _price?.build();
        _$failedField = 'minimalPrice';
        _minimalPrice?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();
        _$failedField = 'productTypes';
        _productTypes?.build();

        _$failedField = 'ids';
        _ids?.build();

        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductInput extends GProductInput {
  @override
  final BuiltList<GAttributeValueInput>? attributes;
  @override
  final String? category;
  @override
  final bool? chargeTaxes;
  @override
  final BuiltList<String>? collections;
  @override
  final GJSONString? description;
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final String? taxCode;
  @override
  final GSeoInput? seo;
  @override
  final GWeightScalar? weight;
  @override
  final double? rating;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;

  factory _$GProductInput([void Function(GProductInputBuilder)? updates]) =>
      (new GProductInputBuilder()..update(updates))._build();

  _$GProductInput._(
      {this.attributes,
      this.category,
      this.chargeTaxes,
      this.collections,
      this.description,
      this.name,
      this.slug,
      this.taxCode,
      this.seo,
      this.weight,
      this.rating,
      this.metadata,
      this.privateMetadata})
      : super._();

  @override
  GProductInput rebuild(void Function(GProductInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductInputBuilder toBuilder() => new GProductInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductInput &&
        attributes == other.attributes &&
        category == other.category &&
        chargeTaxes == other.chargeTaxes &&
        collections == other.collections &&
        description == other.description &&
        name == other.name &&
        slug == other.slug &&
        taxCode == other.taxCode &&
        seo == other.seo &&
        weight == other.weight &&
        rating == other.rating &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc($jc(0, attributes.hashCode),
                                                    category.hashCode),
                                                chargeTaxes.hashCode),
                                            collections.hashCode),
                                        description.hashCode),
                                    name.hashCode),
                                slug.hashCode),
                            taxCode.hashCode),
                        seo.hashCode),
                    weight.hashCode),
                rating.hashCode),
            metadata.hashCode),
        privateMetadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductInput')
          ..add('attributes', attributes)
          ..add('category', category)
          ..add('chargeTaxes', chargeTaxes)
          ..add('collections', collections)
          ..add('description', description)
          ..add('name', name)
          ..add('slug', slug)
          ..add('taxCode', taxCode)
          ..add('seo', seo)
          ..add('weight', weight)
          ..add('rating', rating)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata))
        .toString();
  }
}

class GProductInputBuilder
    implements Builder<GProductInput, GProductInputBuilder> {
  _$GProductInput? _$v;

  ListBuilder<GAttributeValueInput>? _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput>? attributes) =>
      _$this._attributes = attributes;

  String? _category;
  String? get category => _$this._category;
  set category(String? category) => _$this._category = category;

  bool? _chargeTaxes;
  bool? get chargeTaxes => _$this._chargeTaxes;
  set chargeTaxes(bool? chargeTaxes) => _$this._chargeTaxes = chargeTaxes;

  ListBuilder<String>? _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String>? collections) =>
      _$this._collections = collections;

  GJSONStringBuilder? _description;
  GJSONStringBuilder get description =>
      _$this._description ??= new GJSONStringBuilder();
  set description(GJSONStringBuilder? description) =>
      _$this._description = description;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _taxCode;
  String? get taxCode => _$this._taxCode;
  set taxCode(String? taxCode) => _$this._taxCode = taxCode;

  GSeoInputBuilder? _seo;
  GSeoInputBuilder get seo => _$this._seo ??= new GSeoInputBuilder();
  set seo(GSeoInputBuilder? seo) => _$this._seo = seo;

  GWeightScalarBuilder? _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder? weight) => _$this._weight = weight;

  double? _rating;
  double? get rating => _$this._rating;
  set rating(double? rating) => _$this._rating = rating;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  GProductInputBuilder();

  GProductInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _attributes = $v.attributes?.toBuilder();
      _category = $v.category;
      _chargeTaxes = $v.chargeTaxes;
      _collections = $v.collections?.toBuilder();
      _description = $v.description?.toBuilder();
      _name = $v.name;
      _slug = $v.slug;
      _taxCode = $v.taxCode;
      _seo = $v.seo?.toBuilder();
      _weight = $v.weight?.toBuilder();
      _rating = $v.rating;
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductInput;
  }

  @override
  void update(void Function(GProductInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductInput build() => _build();

  _$GProductInput _build() {
    _$GProductInput _$result;
    try {
      _$result = _$v ??
          new _$GProductInput._(
              attributes: _attributes?.build(),
              category: category,
              chargeTaxes: chargeTaxes,
              collections: _collections?.build(),
              description: _description?.build(),
              name: name,
              slug: slug,
              taxCode: taxCode,
              seo: _seo?.build(),
              weight: _weight?.build(),
              rating: rating,
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();

        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'description';
        _description?.build();

        _$failedField = 'seo';
        _seo?.build();
        _$failedField = 'weight';
        _weight?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductMediaCreateInput extends GProductMediaCreateInput {
  @override
  final String? alt;
  @override
  final GUpload? image;
  @override
  final String product;
  @override
  final String? mediaUrl;

  factory _$GProductMediaCreateInput(
          [void Function(GProductMediaCreateInputBuilder)? updates]) =>
      (new GProductMediaCreateInputBuilder()..update(updates))._build();

  _$GProductMediaCreateInput._(
      {this.alt, this.image, required this.product, this.mediaUrl})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        product, r'GProductMediaCreateInput', 'product');
  }

  @override
  GProductMediaCreateInput rebuild(
          void Function(GProductMediaCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductMediaCreateInputBuilder toBuilder() =>
      new GProductMediaCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductMediaCreateInput &&
        alt == other.alt &&
        image == other.image &&
        product == other.product &&
        mediaUrl == other.mediaUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, alt.hashCode), image.hashCode), product.hashCode),
        mediaUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductMediaCreateInput')
          ..add('alt', alt)
          ..add('image', image)
          ..add('product', product)
          ..add('mediaUrl', mediaUrl))
        .toString();
  }
}

class GProductMediaCreateInputBuilder
    implements
        Builder<GProductMediaCreateInput, GProductMediaCreateInputBuilder> {
  _$GProductMediaCreateInput? _$v;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  GUploadBuilder? _image;
  GUploadBuilder get image => _$this._image ??= new GUploadBuilder();
  set image(GUploadBuilder? image) => _$this._image = image;

  String? _product;
  String? get product => _$this._product;
  set product(String? product) => _$this._product = product;

  String? _mediaUrl;
  String? get mediaUrl => _$this._mediaUrl;
  set mediaUrl(String? mediaUrl) => _$this._mediaUrl = mediaUrl;

  GProductMediaCreateInputBuilder();

  GProductMediaCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _alt = $v.alt;
      _image = $v.image?.toBuilder();
      _product = $v.product;
      _mediaUrl = $v.mediaUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductMediaCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductMediaCreateInput;
  }

  @override
  void update(void Function(GProductMediaCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductMediaCreateInput build() => _build();

  _$GProductMediaCreateInput _build() {
    _$GProductMediaCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductMediaCreateInput._(
              alt: alt,
              image: _image?.build(),
              product: BuiltValueNullFieldError.checkNotNull(
                  product, r'GProductMediaCreateInput', 'product'),
              mediaUrl: mediaUrl);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'image';
        _image?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductMediaCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductMediaUpdateInput extends GProductMediaUpdateInput {
  @override
  final String? alt;

  factory _$GProductMediaUpdateInput(
          [void Function(GProductMediaUpdateInputBuilder)? updates]) =>
      (new GProductMediaUpdateInputBuilder()..update(updates))._build();

  _$GProductMediaUpdateInput._({this.alt}) : super._();

  @override
  GProductMediaUpdateInput rebuild(
          void Function(GProductMediaUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductMediaUpdateInputBuilder toBuilder() =>
      new GProductMediaUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductMediaUpdateInput && alt == other.alt;
  }

  @override
  int get hashCode {
    return $jf($jc(0, alt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductMediaUpdateInput')
          ..add('alt', alt))
        .toString();
  }
}

class GProductMediaUpdateInputBuilder
    implements
        Builder<GProductMediaUpdateInput, GProductMediaUpdateInputBuilder> {
  _$GProductMediaUpdateInput? _$v;

  String? _alt;
  String? get alt => _$this._alt;
  set alt(String? alt) => _$this._alt = alt;

  GProductMediaUpdateInputBuilder();

  GProductMediaUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _alt = $v.alt;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductMediaUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductMediaUpdateInput;
  }

  @override
  void update(void Function(GProductMediaUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductMediaUpdateInput build() => _build();

  _$GProductMediaUpdateInput _build() {
    final _$result = _$v ?? new _$GProductMediaUpdateInput._(alt: alt);
    replace(_$result);
    return _$result;
  }
}

class _$GProductOrder extends GProductOrder {
  @override
  final GOrderDirection direction;
  @override
  final String? channel;
  @override
  final String? attributeId;
  @override
  final GProductOrderField? field;

  factory _$GProductOrder([void Function(GProductOrderBuilder)? updates]) =>
      (new GProductOrderBuilder()..update(updates))._build();

  _$GProductOrder._(
      {required this.direction, this.channel, this.attributeId, this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GProductOrder', 'direction');
  }

  @override
  GProductOrder rebuild(void Function(GProductOrderBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductOrderBuilder toBuilder() => new GProductOrderBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductOrder &&
        direction == other.direction &&
        channel == other.channel &&
        attributeId == other.attributeId &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, direction.hashCode), channel.hashCode),
            attributeId.hashCode),
        field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductOrder')
          ..add('direction', direction)
          ..add('channel', channel)
          ..add('attributeId', attributeId)
          ..add('field', field))
        .toString();
  }
}

class GProductOrderBuilder
    implements Builder<GProductOrder, GProductOrderBuilder> {
  _$GProductOrder? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  String? _attributeId;
  String? get attributeId => _$this._attributeId;
  set attributeId(String? attributeId) => _$this._attributeId = attributeId;

  GProductOrderField? _field;
  GProductOrderField? get field => _$this._field;
  set field(GProductOrderField? field) => _$this._field = field;

  GProductOrderBuilder();

  GProductOrderBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _channel = $v.channel;
      _attributeId = $v.attributeId;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductOrder other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductOrder;
  }

  @override
  void update(void Function(GProductOrderBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductOrder build() => _build();

  _$GProductOrder _build() {
    final _$result = _$v ??
        new _$GProductOrder._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GProductOrder', 'direction'),
            channel: channel,
            attributeId: attributeId,
            field: field);
    replace(_$result);
    return _$result;
  }
}

class _$GProductStockFilterInput extends GProductStockFilterInput {
  @override
  final BuiltList<String>? warehouseIds;
  @override
  final GIntRangeInput? quantity;

  factory _$GProductStockFilterInput(
          [void Function(GProductStockFilterInputBuilder)? updates]) =>
      (new GProductStockFilterInputBuilder()..update(updates))._build();

  _$GProductStockFilterInput._({this.warehouseIds, this.quantity}) : super._();

  @override
  GProductStockFilterInput rebuild(
          void Function(GProductStockFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductStockFilterInputBuilder toBuilder() =>
      new GProductStockFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductStockFilterInput &&
        warehouseIds == other.warehouseIds &&
        quantity == other.quantity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, warehouseIds.hashCode), quantity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductStockFilterInput')
          ..add('warehouseIds', warehouseIds)
          ..add('quantity', quantity))
        .toString();
  }
}

class GProductStockFilterInputBuilder
    implements
        Builder<GProductStockFilterInput, GProductStockFilterInputBuilder> {
  _$GProductStockFilterInput? _$v;

  ListBuilder<String>? _warehouseIds;
  ListBuilder<String> get warehouseIds =>
      _$this._warehouseIds ??= new ListBuilder<String>();
  set warehouseIds(ListBuilder<String>? warehouseIds) =>
      _$this._warehouseIds = warehouseIds;

  GIntRangeInputBuilder? _quantity;
  GIntRangeInputBuilder get quantity =>
      _$this._quantity ??= new GIntRangeInputBuilder();
  set quantity(GIntRangeInputBuilder? quantity) => _$this._quantity = quantity;

  GProductStockFilterInputBuilder();

  GProductStockFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _warehouseIds = $v.warehouseIds?.toBuilder();
      _quantity = $v.quantity?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductStockFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductStockFilterInput;
  }

  @override
  void update(void Function(GProductStockFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductStockFilterInput build() => _build();

  _$GProductStockFilterInput _build() {
    _$GProductStockFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GProductStockFilterInput._(
              warehouseIds: _warehouseIds?.build(),
              quantity: _quantity?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'warehouseIds';
        _warehouseIds?.build();
        _$failedField = 'quantity';
        _quantity?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductStockFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductTypeFilterInput extends GProductTypeFilterInput {
  @override
  final String? search;
  @override
  final GProductTypeConfigurable? configurable;
  @override
  final GProductTypeEnum? productType;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final GProductTypeKindEnum? kind;
  @override
  final BuiltList<String>? ids;
  @override
  final BuiltList<String>? slugs;

  factory _$GProductTypeFilterInput(
          [void Function(GProductTypeFilterInputBuilder)? updates]) =>
      (new GProductTypeFilterInputBuilder()..update(updates))._build();

  _$GProductTypeFilterInput._(
      {this.search,
      this.configurable,
      this.productType,
      this.metadata,
      this.kind,
      this.ids,
      this.slugs})
      : super._();

  @override
  GProductTypeFilterInput rebuild(
          void Function(GProductTypeFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductTypeFilterInputBuilder toBuilder() =>
      new GProductTypeFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductTypeFilterInput &&
        search == other.search &&
        configurable == other.configurable &&
        productType == other.productType &&
        metadata == other.metadata &&
        kind == other.kind &&
        ids == other.ids &&
        slugs == other.slugs;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, search.hashCode), configurable.hashCode),
                        productType.hashCode),
                    metadata.hashCode),
                kind.hashCode),
            ids.hashCode),
        slugs.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductTypeFilterInput')
          ..add('search', search)
          ..add('configurable', configurable)
          ..add('productType', productType)
          ..add('metadata', metadata)
          ..add('kind', kind)
          ..add('ids', ids)
          ..add('slugs', slugs))
        .toString();
  }
}

class GProductTypeFilterInputBuilder
    implements
        Builder<GProductTypeFilterInput, GProductTypeFilterInputBuilder> {
  _$GProductTypeFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  GProductTypeConfigurable? _configurable;
  GProductTypeConfigurable? get configurable => _$this._configurable;
  set configurable(GProductTypeConfigurable? configurable) =>
      _$this._configurable = configurable;

  GProductTypeEnum? _productType;
  GProductTypeEnum? get productType => _$this._productType;
  set productType(GProductTypeEnum? productType) =>
      _$this._productType = productType;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  GProductTypeKindEnum? _kind;
  GProductTypeKindEnum? get kind => _$this._kind;
  set kind(GProductTypeKindEnum? kind) => _$this._kind = kind;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  GProductTypeFilterInputBuilder();

  GProductTypeFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _configurable = $v.configurable;
      _productType = $v.productType;
      _metadata = $v.metadata?.toBuilder();
      _kind = $v.kind;
      _ids = $v.ids?.toBuilder();
      _slugs = $v.slugs?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductTypeFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductTypeFilterInput;
  }

  @override
  void update(void Function(GProductTypeFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductTypeFilterInput build() => _build();

  _$GProductTypeFilterInput _build() {
    _$GProductTypeFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GProductTypeFilterInput._(
              search: search,
              configurable: configurable,
              productType: productType,
              metadata: _metadata?.build(),
              kind: kind,
              ids: _ids?.build(),
              slugs: _slugs?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'ids';
        _ids?.build();
        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductTypeFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductTypeInput extends GProductTypeInput {
  @override
  final String? name;
  @override
  final String? slug;
  @override
  final GProductTypeKindEnum? kind;
  @override
  final bool? hasVariants;
  @override
  final BuiltList<String>? productAttributes;
  @override
  final BuiltList<String>? variantAttributes;
  @override
  final bool? isShippingRequired;
  @override
  final bool? isDigital;
  @override
  final GWeightScalar? weight;
  @override
  final String? taxCode;

  factory _$GProductTypeInput(
          [void Function(GProductTypeInputBuilder)? updates]) =>
      (new GProductTypeInputBuilder()..update(updates))._build();

  _$GProductTypeInput._(
      {this.name,
      this.slug,
      this.kind,
      this.hasVariants,
      this.productAttributes,
      this.variantAttributes,
      this.isShippingRequired,
      this.isDigital,
      this.weight,
      this.taxCode})
      : super._();

  @override
  GProductTypeInput rebuild(void Function(GProductTypeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductTypeInputBuilder toBuilder() =>
      new GProductTypeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductTypeInput &&
        name == other.name &&
        slug == other.slug &&
        kind == other.kind &&
        hasVariants == other.hasVariants &&
        productAttributes == other.productAttributes &&
        variantAttributes == other.variantAttributes &&
        isShippingRequired == other.isShippingRequired &&
        isDigital == other.isDigital &&
        weight == other.weight &&
        taxCode == other.taxCode;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc($jc(0, name.hashCode), slug.hashCode),
                                    kind.hashCode),
                                hasVariants.hashCode),
                            productAttributes.hashCode),
                        variantAttributes.hashCode),
                    isShippingRequired.hashCode),
                isDigital.hashCode),
            weight.hashCode),
        taxCode.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductTypeInput')
          ..add('name', name)
          ..add('slug', slug)
          ..add('kind', kind)
          ..add('hasVariants', hasVariants)
          ..add('productAttributes', productAttributes)
          ..add('variantAttributes', variantAttributes)
          ..add('isShippingRequired', isShippingRequired)
          ..add('isDigital', isDigital)
          ..add('weight', weight)
          ..add('taxCode', taxCode))
        .toString();
  }
}

class GProductTypeInputBuilder
    implements Builder<GProductTypeInput, GProductTypeInputBuilder> {
  _$GProductTypeInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  GProductTypeKindEnum? _kind;
  GProductTypeKindEnum? get kind => _$this._kind;
  set kind(GProductTypeKindEnum? kind) => _$this._kind = kind;

  bool? _hasVariants;
  bool? get hasVariants => _$this._hasVariants;
  set hasVariants(bool? hasVariants) => _$this._hasVariants = hasVariants;

  ListBuilder<String>? _productAttributes;
  ListBuilder<String> get productAttributes =>
      _$this._productAttributes ??= new ListBuilder<String>();
  set productAttributes(ListBuilder<String>? productAttributes) =>
      _$this._productAttributes = productAttributes;

  ListBuilder<String>? _variantAttributes;
  ListBuilder<String> get variantAttributes =>
      _$this._variantAttributes ??= new ListBuilder<String>();
  set variantAttributes(ListBuilder<String>? variantAttributes) =>
      _$this._variantAttributes = variantAttributes;

  bool? _isShippingRequired;
  bool? get isShippingRequired => _$this._isShippingRequired;
  set isShippingRequired(bool? isShippingRequired) =>
      _$this._isShippingRequired = isShippingRequired;

  bool? _isDigital;
  bool? get isDigital => _$this._isDigital;
  set isDigital(bool? isDigital) => _$this._isDigital = isDigital;

  GWeightScalarBuilder? _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder? weight) => _$this._weight = weight;

  String? _taxCode;
  String? get taxCode => _$this._taxCode;
  set taxCode(String? taxCode) => _$this._taxCode = taxCode;

  GProductTypeInputBuilder();

  GProductTypeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _slug = $v.slug;
      _kind = $v.kind;
      _hasVariants = $v.hasVariants;
      _productAttributes = $v.productAttributes?.toBuilder();
      _variantAttributes = $v.variantAttributes?.toBuilder();
      _isShippingRequired = $v.isShippingRequired;
      _isDigital = $v.isDigital;
      _weight = $v.weight?.toBuilder();
      _taxCode = $v.taxCode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductTypeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductTypeInput;
  }

  @override
  void update(void Function(GProductTypeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductTypeInput build() => _build();

  _$GProductTypeInput _build() {
    _$GProductTypeInput _$result;
    try {
      _$result = _$v ??
          new _$GProductTypeInput._(
              name: name,
              slug: slug,
              kind: kind,
              hasVariants: hasVariants,
              productAttributes: _productAttributes?.build(),
              variantAttributes: _variantAttributes?.build(),
              isShippingRequired: isShippingRequired,
              isDigital: isDigital,
              weight: _weight?.build(),
              taxCode: taxCode);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'productAttributes';
        _productAttributes?.build();
        _$failedField = 'variantAttributes';
        _variantAttributes?.build();

        _$failedField = 'weight';
        _weight?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductTypeInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductTypeSortingInput extends GProductTypeSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GProductTypeSortField field;

  factory _$GProductTypeSortingInput(
          [void Function(GProductTypeSortingInputBuilder)? updates]) =>
      (new GProductTypeSortingInputBuilder()..update(updates))._build();

  _$GProductTypeSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GProductTypeSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GProductTypeSortingInput', 'field');
  }

  @override
  GProductTypeSortingInput rebuild(
          void Function(GProductTypeSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductTypeSortingInputBuilder toBuilder() =>
      new GProductTypeSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductTypeSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductTypeSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GProductTypeSortingInputBuilder
    implements
        Builder<GProductTypeSortingInput, GProductTypeSortingInputBuilder> {
  _$GProductTypeSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GProductTypeSortField? _field;
  GProductTypeSortField? get field => _$this._field;
  set field(GProductTypeSortField? field) => _$this._field = field;

  GProductTypeSortingInputBuilder();

  GProductTypeSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductTypeSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductTypeSortingInput;
  }

  @override
  void update(void Function(GProductTypeSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductTypeSortingInput build() => _build();

  _$GProductTypeSortingInput _build() {
    final _$result = _$v ??
        new _$GProductTypeSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GProductTypeSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GProductTypeSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantBulkCreateInput extends GProductVariantBulkCreateInput {
  @override
  final BuiltList<GBulkAttributeValueInput> attributes;
  @override
  final String? sku;
  @override
  final String? name;
  @override
  final bool? trackInventory;
  @override
  final GWeightScalar? weight;
  @override
  final GPreorderSettingsInput? preorder;
  @override
  final int? quantityLimitPerCustomer;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;
  @override
  final BuiltList<GStockInput>? stocks;
  @override
  final BuiltList<GProductVariantChannelListingAddInput>? channelListings;

  factory _$GProductVariantBulkCreateInput(
          [void Function(GProductVariantBulkCreateInputBuilder)? updates]) =>
      (new GProductVariantBulkCreateInputBuilder()..update(updates))._build();

  _$GProductVariantBulkCreateInput._(
      {required this.attributes,
      this.sku,
      this.name,
      this.trackInventory,
      this.weight,
      this.preorder,
      this.quantityLimitPerCustomer,
      this.metadata,
      this.privateMetadata,
      this.stocks,
      this.channelListings})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        attributes, r'GProductVariantBulkCreateInput', 'attributes');
  }

  @override
  GProductVariantBulkCreateInput rebuild(
          void Function(GProductVariantBulkCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantBulkCreateInputBuilder toBuilder() =>
      new GProductVariantBulkCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantBulkCreateInput &&
        attributes == other.attributes &&
        sku == other.sku &&
        name == other.name &&
        trackInventory == other.trackInventory &&
        weight == other.weight &&
        preorder == other.preorder &&
        quantityLimitPerCustomer == other.quantityLimitPerCustomer &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata &&
        stocks == other.stocks &&
        channelListings == other.channelListings;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, attributes.hashCode),
                                            sku.hashCode),
                                        name.hashCode),
                                    trackInventory.hashCode),
                                weight.hashCode),
                            preorder.hashCode),
                        quantityLimitPerCustomer.hashCode),
                    metadata.hashCode),
                privateMetadata.hashCode),
            stocks.hashCode),
        channelListings.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductVariantBulkCreateInput')
          ..add('attributes', attributes)
          ..add('sku', sku)
          ..add('name', name)
          ..add('trackInventory', trackInventory)
          ..add('weight', weight)
          ..add('preorder', preorder)
          ..add('quantityLimitPerCustomer', quantityLimitPerCustomer)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata)
          ..add('stocks', stocks)
          ..add('channelListings', channelListings))
        .toString();
  }
}

class GProductVariantBulkCreateInputBuilder
    implements
        Builder<GProductVariantBulkCreateInput,
            GProductVariantBulkCreateInputBuilder> {
  _$GProductVariantBulkCreateInput? _$v;

  ListBuilder<GBulkAttributeValueInput>? _attributes;
  ListBuilder<GBulkAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GBulkAttributeValueInput>();
  set attributes(ListBuilder<GBulkAttributeValueInput>? attributes) =>
      _$this._attributes = attributes;

  String? _sku;
  String? get sku => _$this._sku;
  set sku(String? sku) => _$this._sku = sku;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _trackInventory;
  bool? get trackInventory => _$this._trackInventory;
  set trackInventory(bool? trackInventory) =>
      _$this._trackInventory = trackInventory;

  GWeightScalarBuilder? _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder? weight) => _$this._weight = weight;

  GPreorderSettingsInputBuilder? _preorder;
  GPreorderSettingsInputBuilder get preorder =>
      _$this._preorder ??= new GPreorderSettingsInputBuilder();
  set preorder(GPreorderSettingsInputBuilder? preorder) =>
      _$this._preorder = preorder;

  int? _quantityLimitPerCustomer;
  int? get quantityLimitPerCustomer => _$this._quantityLimitPerCustomer;
  set quantityLimitPerCustomer(int? quantityLimitPerCustomer) =>
      _$this._quantityLimitPerCustomer = quantityLimitPerCustomer;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  ListBuilder<GStockInput>? _stocks;
  ListBuilder<GStockInput> get stocks =>
      _$this._stocks ??= new ListBuilder<GStockInput>();
  set stocks(ListBuilder<GStockInput>? stocks) => _$this._stocks = stocks;

  ListBuilder<GProductVariantChannelListingAddInput>? _channelListings;
  ListBuilder<GProductVariantChannelListingAddInput> get channelListings =>
      _$this._channelListings ??=
          new ListBuilder<GProductVariantChannelListingAddInput>();
  set channelListings(
          ListBuilder<GProductVariantChannelListingAddInput>?
              channelListings) =>
      _$this._channelListings = channelListings;

  GProductVariantBulkCreateInputBuilder();

  GProductVariantBulkCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _attributes = $v.attributes.toBuilder();
      _sku = $v.sku;
      _name = $v.name;
      _trackInventory = $v.trackInventory;
      _weight = $v.weight?.toBuilder();
      _preorder = $v.preorder?.toBuilder();
      _quantityLimitPerCustomer = $v.quantityLimitPerCustomer;
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _stocks = $v.stocks?.toBuilder();
      _channelListings = $v.channelListings?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantBulkCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductVariantBulkCreateInput;
  }

  @override
  void update(void Function(GProductVariantBulkCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductVariantBulkCreateInput build() => _build();

  _$GProductVariantBulkCreateInput _build() {
    _$GProductVariantBulkCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductVariantBulkCreateInput._(
              attributes: attributes.build(),
              sku: sku,
              name: name,
              trackInventory: trackInventory,
              weight: _weight?.build(),
              preorder: _preorder?.build(),
              quantityLimitPerCustomer: quantityLimitPerCustomer,
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build(),
              stocks: _stocks?.build(),
              channelListings: _channelListings?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributes';
        attributes.build();

        _$failedField = 'weight';
        _weight?.build();
        _$failedField = 'preorder';
        _preorder?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
        _$failedField = 'stocks';
        _stocks?.build();
        _$failedField = 'channelListings';
        _channelListings?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductVariantBulkCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantChannelListingAddInput
    extends GProductVariantChannelListingAddInput {
  @override
  final String channelId;
  @override
  final GPositiveDecimal price;
  @override
  final GPositiveDecimal? costPrice;
  @override
  final int? preorderThreshold;

  factory _$GProductVariantChannelListingAddInput(
          [void Function(GProductVariantChannelListingAddInputBuilder)?
              updates]) =>
      (new GProductVariantChannelListingAddInputBuilder()..update(updates))
          ._build();

  _$GProductVariantChannelListingAddInput._(
      {required this.channelId,
      required this.price,
      this.costPrice,
      this.preorderThreshold})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        channelId, r'GProductVariantChannelListingAddInput', 'channelId');
    BuiltValueNullFieldError.checkNotNull(
        price, r'GProductVariantChannelListingAddInput', 'price');
  }

  @override
  GProductVariantChannelListingAddInput rebuild(
          void Function(GProductVariantChannelListingAddInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantChannelListingAddInputBuilder toBuilder() =>
      new GProductVariantChannelListingAddInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantChannelListingAddInput &&
        channelId == other.channelId &&
        price == other.price &&
        costPrice == other.costPrice &&
        preorderThreshold == other.preorderThreshold;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, channelId.hashCode), price.hashCode),
            costPrice.hashCode),
        preorderThreshold.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GProductVariantChannelListingAddInput')
          ..add('channelId', channelId)
          ..add('price', price)
          ..add('costPrice', costPrice)
          ..add('preorderThreshold', preorderThreshold))
        .toString();
  }
}

class GProductVariantChannelListingAddInputBuilder
    implements
        Builder<GProductVariantChannelListingAddInput,
            GProductVariantChannelListingAddInputBuilder> {
  _$GProductVariantChannelListingAddInput? _$v;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  GPositiveDecimalBuilder? _price;
  GPositiveDecimalBuilder get price =>
      _$this._price ??= new GPositiveDecimalBuilder();
  set price(GPositiveDecimalBuilder? price) => _$this._price = price;

  GPositiveDecimalBuilder? _costPrice;
  GPositiveDecimalBuilder get costPrice =>
      _$this._costPrice ??= new GPositiveDecimalBuilder();
  set costPrice(GPositiveDecimalBuilder? costPrice) =>
      _$this._costPrice = costPrice;

  int? _preorderThreshold;
  int? get preorderThreshold => _$this._preorderThreshold;
  set preorderThreshold(int? preorderThreshold) =>
      _$this._preorderThreshold = preorderThreshold;

  GProductVariantChannelListingAddInputBuilder();

  GProductVariantChannelListingAddInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _channelId = $v.channelId;
      _price = $v.price.toBuilder();
      _costPrice = $v.costPrice?.toBuilder();
      _preorderThreshold = $v.preorderThreshold;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantChannelListingAddInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductVariantChannelListingAddInput;
  }

  @override
  void update(
      void Function(GProductVariantChannelListingAddInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductVariantChannelListingAddInput build() => _build();

  _$GProductVariantChannelListingAddInput _build() {
    _$GProductVariantChannelListingAddInput _$result;
    try {
      _$result = _$v ??
          new _$GProductVariantChannelListingAddInput._(
              channelId: BuiltValueNullFieldError.checkNotNull(channelId,
                  r'GProductVariantChannelListingAddInput', 'channelId'),
              price: price.build(),
              costPrice: _costPrice?.build(),
              preorderThreshold: preorderThreshold);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'price';
        price.build();
        _$failedField = 'costPrice';
        _costPrice?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductVariantChannelListingAddInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantCreateInput extends GProductVariantCreateInput {
  @override
  final BuiltList<GAttributeValueInput> attributes;
  @override
  final String? sku;
  @override
  final String? name;
  @override
  final bool? trackInventory;
  @override
  final GWeightScalar? weight;
  @override
  final GPreorderSettingsInput? preorder;
  @override
  final int? quantityLimitPerCustomer;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;
  @override
  final String product;
  @override
  final BuiltList<GStockInput>? stocks;

  factory _$GProductVariantCreateInput(
          [void Function(GProductVariantCreateInputBuilder)? updates]) =>
      (new GProductVariantCreateInputBuilder()..update(updates))._build();

  _$GProductVariantCreateInput._(
      {required this.attributes,
      this.sku,
      this.name,
      this.trackInventory,
      this.weight,
      this.preorder,
      this.quantityLimitPerCustomer,
      this.metadata,
      this.privateMetadata,
      required this.product,
      this.stocks})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        attributes, r'GProductVariantCreateInput', 'attributes');
    BuiltValueNullFieldError.checkNotNull(
        product, r'GProductVariantCreateInput', 'product');
  }

  @override
  GProductVariantCreateInput rebuild(
          void Function(GProductVariantCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantCreateInputBuilder toBuilder() =>
      new GProductVariantCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantCreateInput &&
        attributes == other.attributes &&
        sku == other.sku &&
        name == other.name &&
        trackInventory == other.trackInventory &&
        weight == other.weight &&
        preorder == other.preorder &&
        quantityLimitPerCustomer == other.quantityLimitPerCustomer &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata &&
        product == other.product &&
        stocks == other.stocks;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, attributes.hashCode),
                                            sku.hashCode),
                                        name.hashCode),
                                    trackInventory.hashCode),
                                weight.hashCode),
                            preorder.hashCode),
                        quantityLimitPerCustomer.hashCode),
                    metadata.hashCode),
                privateMetadata.hashCode),
            product.hashCode),
        stocks.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductVariantCreateInput')
          ..add('attributes', attributes)
          ..add('sku', sku)
          ..add('name', name)
          ..add('trackInventory', trackInventory)
          ..add('weight', weight)
          ..add('preorder', preorder)
          ..add('quantityLimitPerCustomer', quantityLimitPerCustomer)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata)
          ..add('product', product)
          ..add('stocks', stocks))
        .toString();
  }
}

class GProductVariantCreateInputBuilder
    implements
        Builder<GProductVariantCreateInput, GProductVariantCreateInputBuilder> {
  _$GProductVariantCreateInput? _$v;

  ListBuilder<GAttributeValueInput>? _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput>? attributes) =>
      _$this._attributes = attributes;

  String? _sku;
  String? get sku => _$this._sku;
  set sku(String? sku) => _$this._sku = sku;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _trackInventory;
  bool? get trackInventory => _$this._trackInventory;
  set trackInventory(bool? trackInventory) =>
      _$this._trackInventory = trackInventory;

  GWeightScalarBuilder? _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder? weight) => _$this._weight = weight;

  GPreorderSettingsInputBuilder? _preorder;
  GPreorderSettingsInputBuilder get preorder =>
      _$this._preorder ??= new GPreorderSettingsInputBuilder();
  set preorder(GPreorderSettingsInputBuilder? preorder) =>
      _$this._preorder = preorder;

  int? _quantityLimitPerCustomer;
  int? get quantityLimitPerCustomer => _$this._quantityLimitPerCustomer;
  set quantityLimitPerCustomer(int? quantityLimitPerCustomer) =>
      _$this._quantityLimitPerCustomer = quantityLimitPerCustomer;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  String? _product;
  String? get product => _$this._product;
  set product(String? product) => _$this._product = product;

  ListBuilder<GStockInput>? _stocks;
  ListBuilder<GStockInput> get stocks =>
      _$this._stocks ??= new ListBuilder<GStockInput>();
  set stocks(ListBuilder<GStockInput>? stocks) => _$this._stocks = stocks;

  GProductVariantCreateInputBuilder();

  GProductVariantCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _attributes = $v.attributes.toBuilder();
      _sku = $v.sku;
      _name = $v.name;
      _trackInventory = $v.trackInventory;
      _weight = $v.weight?.toBuilder();
      _preorder = $v.preorder?.toBuilder();
      _quantityLimitPerCustomer = $v.quantityLimitPerCustomer;
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _product = $v.product;
      _stocks = $v.stocks?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductVariantCreateInput;
  }

  @override
  void update(void Function(GProductVariantCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductVariantCreateInput build() => _build();

  _$GProductVariantCreateInput _build() {
    _$GProductVariantCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GProductVariantCreateInput._(
              attributes: attributes.build(),
              sku: sku,
              name: name,
              trackInventory: trackInventory,
              weight: _weight?.build(),
              preorder: _preorder?.build(),
              quantityLimitPerCustomer: quantityLimitPerCustomer,
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build(),
              product: BuiltValueNullFieldError.checkNotNull(
                  product, r'GProductVariantCreateInput', 'product'),
              stocks: _stocks?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributes';
        attributes.build();

        _$failedField = 'weight';
        _weight?.build();
        _$failedField = 'preorder';
        _preorder?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();

        _$failedField = 'stocks';
        _stocks?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductVariantCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantFilterInput extends GProductVariantFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<String>? sku;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final bool? isPreorder;
  @override
  final GDateTimeRangeInput? updatedAt;

  factory _$GProductVariantFilterInput(
          [void Function(GProductVariantFilterInputBuilder)? updates]) =>
      (new GProductVariantFilterInputBuilder()..update(updates))._build();

  _$GProductVariantFilterInput._(
      {this.search, this.sku, this.metadata, this.isPreorder, this.updatedAt})
      : super._();

  @override
  GProductVariantFilterInput rebuild(
          void Function(GProductVariantFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantFilterInputBuilder toBuilder() =>
      new GProductVariantFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantFilterInput &&
        search == other.search &&
        sku == other.sku &&
        metadata == other.metadata &&
        isPreorder == other.isPreorder &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, search.hashCode), sku.hashCode), metadata.hashCode),
            isPreorder.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductVariantFilterInput')
          ..add('search', search)
          ..add('sku', sku)
          ..add('metadata', metadata)
          ..add('isPreorder', isPreorder)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GProductVariantFilterInputBuilder
    implements
        Builder<GProductVariantFilterInput, GProductVariantFilterInputBuilder> {
  _$GProductVariantFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _sku;
  ListBuilder<String> get sku => _$this._sku ??= new ListBuilder<String>();
  set sku(ListBuilder<String>? sku) => _$this._sku = sku;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  bool? _isPreorder;
  bool? get isPreorder => _$this._isPreorder;
  set isPreorder(bool? isPreorder) => _$this._isPreorder = isPreorder;

  GDateTimeRangeInputBuilder? _updatedAt;
  GDateTimeRangeInputBuilder get updatedAt =>
      _$this._updatedAt ??= new GDateTimeRangeInputBuilder();
  set updatedAt(GDateTimeRangeInputBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GProductVariantFilterInputBuilder();

  GProductVariantFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _sku = $v.sku?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _isPreorder = $v.isPreorder;
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductVariantFilterInput;
  }

  @override
  void update(void Function(GProductVariantFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductVariantFilterInput build() => _build();

  _$GProductVariantFilterInput _build() {
    _$GProductVariantFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GProductVariantFilterInput._(
              search: search,
              sku: _sku?.build(),
              metadata: _metadata?.build(),
              isPreorder: isPreorder,
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'sku';
        _sku?.build();
        _$failedField = 'metadata';
        _metadata?.build();

        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductVariantFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantInput extends GProductVariantInput {
  @override
  final BuiltList<GAttributeValueInput>? attributes;
  @override
  final String? sku;
  @override
  final String? name;
  @override
  final bool? trackInventory;
  @override
  final GWeightScalar? weight;
  @override
  final GPreorderSettingsInput? preorder;
  @override
  final int? quantityLimitPerCustomer;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;

  factory _$GProductVariantInput(
          [void Function(GProductVariantInputBuilder)? updates]) =>
      (new GProductVariantInputBuilder()..update(updates))._build();

  _$GProductVariantInput._(
      {this.attributes,
      this.sku,
      this.name,
      this.trackInventory,
      this.weight,
      this.preorder,
      this.quantityLimitPerCustomer,
      this.metadata,
      this.privateMetadata})
      : super._();

  @override
  GProductVariantInput rebuild(
          void Function(GProductVariantInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantInputBuilder toBuilder() =>
      new GProductVariantInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantInput &&
        attributes == other.attributes &&
        sku == other.sku &&
        name == other.name &&
        trackInventory == other.trackInventory &&
        weight == other.weight &&
        preorder == other.preorder &&
        quantityLimitPerCustomer == other.quantityLimitPerCustomer &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, attributes.hashCode), sku.hashCode),
                                name.hashCode),
                            trackInventory.hashCode),
                        weight.hashCode),
                    preorder.hashCode),
                quantityLimitPerCustomer.hashCode),
            metadata.hashCode),
        privateMetadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductVariantInput')
          ..add('attributes', attributes)
          ..add('sku', sku)
          ..add('name', name)
          ..add('trackInventory', trackInventory)
          ..add('weight', weight)
          ..add('preorder', preorder)
          ..add('quantityLimitPerCustomer', quantityLimitPerCustomer)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata))
        .toString();
  }
}

class GProductVariantInputBuilder
    implements Builder<GProductVariantInput, GProductVariantInputBuilder> {
  _$GProductVariantInput? _$v;

  ListBuilder<GAttributeValueInput>? _attributes;
  ListBuilder<GAttributeValueInput> get attributes =>
      _$this._attributes ??= new ListBuilder<GAttributeValueInput>();
  set attributes(ListBuilder<GAttributeValueInput>? attributes) =>
      _$this._attributes = attributes;

  String? _sku;
  String? get sku => _$this._sku;
  set sku(String? sku) => _$this._sku = sku;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  bool? _trackInventory;
  bool? get trackInventory => _$this._trackInventory;
  set trackInventory(bool? trackInventory) =>
      _$this._trackInventory = trackInventory;

  GWeightScalarBuilder? _weight;
  GWeightScalarBuilder get weight =>
      _$this._weight ??= new GWeightScalarBuilder();
  set weight(GWeightScalarBuilder? weight) => _$this._weight = weight;

  GPreorderSettingsInputBuilder? _preorder;
  GPreorderSettingsInputBuilder get preorder =>
      _$this._preorder ??= new GPreorderSettingsInputBuilder();
  set preorder(GPreorderSettingsInputBuilder? preorder) =>
      _$this._preorder = preorder;

  int? _quantityLimitPerCustomer;
  int? get quantityLimitPerCustomer => _$this._quantityLimitPerCustomer;
  set quantityLimitPerCustomer(int? quantityLimitPerCustomer) =>
      _$this._quantityLimitPerCustomer = quantityLimitPerCustomer;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  GProductVariantInputBuilder();

  GProductVariantInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _attributes = $v.attributes?.toBuilder();
      _sku = $v.sku;
      _name = $v.name;
      _trackInventory = $v.trackInventory;
      _weight = $v.weight?.toBuilder();
      _preorder = $v.preorder?.toBuilder();
      _quantityLimitPerCustomer = $v.quantityLimitPerCustomer;
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductVariantInput;
  }

  @override
  void update(void Function(GProductVariantInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductVariantInput build() => _build();

  _$GProductVariantInput _build() {
    _$GProductVariantInput _$result;
    try {
      _$result = _$v ??
          new _$GProductVariantInput._(
              attributes: _attributes?.build(),
              sku: sku,
              name: name,
              trackInventory: trackInventory,
              weight: _weight?.build(),
              preorder: _preorder?.build(),
              quantityLimitPerCustomer: quantityLimitPerCustomer,
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attributes';
        _attributes?.build();

        _$failedField = 'weight';
        _weight?.build();
        _$failedField = 'preorder';
        _preorder?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GProductVariantInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GProductVariantSortingInput extends GProductVariantSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GProductVariantSortField field;

  factory _$GProductVariantSortingInput(
          [void Function(GProductVariantSortingInputBuilder)? updates]) =>
      (new GProductVariantSortingInputBuilder()..update(updates))._build();

  _$GProductVariantSortingInput._(
      {required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GProductVariantSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GProductVariantSortingInput', 'field');
  }

  @override
  GProductVariantSortingInput rebuild(
          void Function(GProductVariantSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GProductVariantSortingInputBuilder toBuilder() =>
      new GProductVariantSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GProductVariantSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GProductVariantSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GProductVariantSortingInputBuilder
    implements
        Builder<GProductVariantSortingInput,
            GProductVariantSortingInputBuilder> {
  _$GProductVariantSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GProductVariantSortField? _field;
  GProductVariantSortField? get field => _$this._field;
  set field(GProductVariantSortField? field) => _$this._field = field;

  GProductVariantSortingInputBuilder();

  GProductVariantSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GProductVariantSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GProductVariantSortingInput;
  }

  @override
  void update(void Function(GProductVariantSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GProductVariantSortingInput build() => _build();

  _$GProductVariantSortingInput _build() {
    final _$result = _$v ??
        new _$GProductVariantSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GProductVariantSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GProductVariantSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GPublishableChannelListingInput
    extends GPublishableChannelListingInput {
  @override
  final String channelId;
  @override
  final bool? isPublished;
  @override
  final GDate? publicationDate;
  @override
  final GDateTime? publishedAt;

  factory _$GPublishableChannelListingInput(
          [void Function(GPublishableChannelListingInputBuilder)? updates]) =>
      (new GPublishableChannelListingInputBuilder()..update(updates))._build();

  _$GPublishableChannelListingInput._(
      {required this.channelId,
      this.isPublished,
      this.publicationDate,
      this.publishedAt})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        channelId, r'GPublishableChannelListingInput', 'channelId');
  }

  @override
  GPublishableChannelListingInput rebuild(
          void Function(GPublishableChannelListingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPublishableChannelListingInputBuilder toBuilder() =>
      new GPublishableChannelListingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPublishableChannelListingInput &&
        channelId == other.channelId &&
        isPublished == other.isPublished &&
        publicationDate == other.publicationDate &&
        publishedAt == other.publishedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, channelId.hashCode), isPublished.hashCode),
            publicationDate.hashCode),
        publishedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPublishableChannelListingInput')
          ..add('channelId', channelId)
          ..add('isPublished', isPublished)
          ..add('publicationDate', publicationDate)
          ..add('publishedAt', publishedAt))
        .toString();
  }
}

class GPublishableChannelListingInputBuilder
    implements
        Builder<GPublishableChannelListingInput,
            GPublishableChannelListingInputBuilder> {
  _$GPublishableChannelListingInput? _$v;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  bool? _isPublished;
  bool? get isPublished => _$this._isPublished;
  set isPublished(bool? isPublished) => _$this._isPublished = isPublished;

  GDateBuilder? _publicationDate;
  GDateBuilder get publicationDate =>
      _$this._publicationDate ??= new GDateBuilder();
  set publicationDate(GDateBuilder? publicationDate) =>
      _$this._publicationDate = publicationDate;

  GDateTimeBuilder? _publishedAt;
  GDateTimeBuilder get publishedAt =>
      _$this._publishedAt ??= new GDateTimeBuilder();
  set publishedAt(GDateTimeBuilder? publishedAt) =>
      _$this._publishedAt = publishedAt;

  GPublishableChannelListingInputBuilder();

  GPublishableChannelListingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _channelId = $v.channelId;
      _isPublished = $v.isPublished;
      _publicationDate = $v.publicationDate?.toBuilder();
      _publishedAt = $v.publishedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPublishableChannelListingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPublishableChannelListingInput;
  }

  @override
  void update(void Function(GPublishableChannelListingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPublishableChannelListingInput build() => _build();

  _$GPublishableChannelListingInput _build() {
    _$GPublishableChannelListingInput _$result;
    try {
      _$result = _$v ??
          new _$GPublishableChannelListingInput._(
              channelId: BuiltValueNullFieldError.checkNotNull(
                  channelId, r'GPublishableChannelListingInput', 'channelId'),
              isPublished: isPublished,
              publicationDate: _publicationDate?.build(),
              publishedAt: _publishedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'publicationDate';
        _publicationDate?.build();
        _$failedField = 'publishedAt';
        _publishedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GPublishableChannelListingInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GReorderInput extends GReorderInput {
  @override
  final String id;
  @override
  final int? sortOrder;

  factory _$GReorderInput([void Function(GReorderInputBuilder)? updates]) =>
      (new GReorderInputBuilder()..update(updates))._build();

  _$GReorderInput._({required this.id, this.sortOrder}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GReorderInput', 'id');
  }

  @override
  GReorderInput rebuild(void Function(GReorderInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReorderInputBuilder toBuilder() => new GReorderInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReorderInput &&
        id == other.id &&
        sortOrder == other.sortOrder;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, id.hashCode), sortOrder.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReorderInput')
          ..add('id', id)
          ..add('sortOrder', sortOrder))
        .toString();
  }
}

class GReorderInputBuilder
    implements Builder<GReorderInput, GReorderInputBuilder> {
  _$GReorderInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  int? _sortOrder;
  int? get sortOrder => _$this._sortOrder;
  set sortOrder(int? sortOrder) => _$this._sortOrder = sortOrder;

  GReorderInputBuilder();

  GReorderInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _sortOrder = $v.sortOrder;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReorderInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReorderInput;
  }

  @override
  void update(void Function(GReorderInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReorderInput build() => _build();

  _$GReorderInput _build() {
    final _$result = _$v ??
        new _$GReorderInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GReorderInput', 'id'),
            sortOrder: sortOrder);
    replace(_$result);
    return _$result;
  }
}

class _$GSaleChannelListingAddInput extends GSaleChannelListingAddInput {
  @override
  final String channelId;
  @override
  final GPositiveDecimal discountValue;

  factory _$GSaleChannelListingAddInput(
          [void Function(GSaleChannelListingAddInputBuilder)? updates]) =>
      (new GSaleChannelListingAddInputBuilder()..update(updates))._build();

  _$GSaleChannelListingAddInput._(
      {required this.channelId, required this.discountValue})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        channelId, r'GSaleChannelListingAddInput', 'channelId');
    BuiltValueNullFieldError.checkNotNull(
        discountValue, r'GSaleChannelListingAddInput', 'discountValue');
  }

  @override
  GSaleChannelListingAddInput rebuild(
          void Function(GSaleChannelListingAddInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaleChannelListingAddInputBuilder toBuilder() =>
      new GSaleChannelListingAddInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaleChannelListingAddInput &&
        channelId == other.channelId &&
        discountValue == other.discountValue;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, channelId.hashCode), discountValue.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSaleChannelListingAddInput')
          ..add('channelId', channelId)
          ..add('discountValue', discountValue))
        .toString();
  }
}

class GSaleChannelListingAddInputBuilder
    implements
        Builder<GSaleChannelListingAddInput,
            GSaleChannelListingAddInputBuilder> {
  _$GSaleChannelListingAddInput? _$v;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  GPositiveDecimalBuilder? _discountValue;
  GPositiveDecimalBuilder get discountValue =>
      _$this._discountValue ??= new GPositiveDecimalBuilder();
  set discountValue(GPositiveDecimalBuilder? discountValue) =>
      _$this._discountValue = discountValue;

  GSaleChannelListingAddInputBuilder();

  GSaleChannelListingAddInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _channelId = $v.channelId;
      _discountValue = $v.discountValue.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaleChannelListingAddInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSaleChannelListingAddInput;
  }

  @override
  void update(void Function(GSaleChannelListingAddInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSaleChannelListingAddInput build() => _build();

  _$GSaleChannelListingAddInput _build() {
    _$GSaleChannelListingAddInput _$result;
    try {
      _$result = _$v ??
          new _$GSaleChannelListingAddInput._(
              channelId: BuiltValueNullFieldError.checkNotNull(
                  channelId, r'GSaleChannelListingAddInput', 'channelId'),
              discountValue: discountValue.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'discountValue';
        discountValue.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSaleChannelListingAddInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSaleChannelListingInput extends GSaleChannelListingInput {
  @override
  final BuiltList<GSaleChannelListingAddInput>? addChannels;
  @override
  final BuiltList<String>? removeChannels;

  factory _$GSaleChannelListingInput(
          [void Function(GSaleChannelListingInputBuilder)? updates]) =>
      (new GSaleChannelListingInputBuilder()..update(updates))._build();

  _$GSaleChannelListingInput._({this.addChannels, this.removeChannels})
      : super._();

  @override
  GSaleChannelListingInput rebuild(
          void Function(GSaleChannelListingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaleChannelListingInputBuilder toBuilder() =>
      new GSaleChannelListingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaleChannelListingInput &&
        addChannels == other.addChannels &&
        removeChannels == other.removeChannels;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, addChannels.hashCode), removeChannels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSaleChannelListingInput')
          ..add('addChannels', addChannels)
          ..add('removeChannels', removeChannels))
        .toString();
  }
}

class GSaleChannelListingInputBuilder
    implements
        Builder<GSaleChannelListingInput, GSaleChannelListingInputBuilder> {
  _$GSaleChannelListingInput? _$v;

  ListBuilder<GSaleChannelListingAddInput>? _addChannels;
  ListBuilder<GSaleChannelListingAddInput> get addChannels =>
      _$this._addChannels ??= new ListBuilder<GSaleChannelListingAddInput>();
  set addChannels(ListBuilder<GSaleChannelListingAddInput>? addChannels) =>
      _$this._addChannels = addChannels;

  ListBuilder<String>? _removeChannels;
  ListBuilder<String> get removeChannels =>
      _$this._removeChannels ??= new ListBuilder<String>();
  set removeChannels(ListBuilder<String>? removeChannels) =>
      _$this._removeChannels = removeChannels;

  GSaleChannelListingInputBuilder();

  GSaleChannelListingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _addChannels = $v.addChannels?.toBuilder();
      _removeChannels = $v.removeChannels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaleChannelListingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSaleChannelListingInput;
  }

  @override
  void update(void Function(GSaleChannelListingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSaleChannelListingInput build() => _build();

  _$GSaleChannelListingInput _build() {
    _$GSaleChannelListingInput _$result;
    try {
      _$result = _$v ??
          new _$GSaleChannelListingInput._(
              addChannels: _addChannels?.build(),
              removeChannels: _removeChannels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addChannels';
        _addChannels?.build();
        _$failedField = 'removeChannels';
        _removeChannels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSaleChannelListingInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSaleFilterInput extends GSaleFilterInput {
  @override
  final BuiltList<GDiscountStatusEnum>? status;
  @override
  final GDiscountValueTypeEnum? saleType;
  @override
  final GDateTimeRangeInput? started;
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final GDateTimeRangeInput? updatedAt;

  factory _$GSaleFilterInput(
          [void Function(GSaleFilterInputBuilder)? updates]) =>
      (new GSaleFilterInputBuilder()..update(updates))._build();

  _$GSaleFilterInput._(
      {this.status,
      this.saleType,
      this.started,
      this.search,
      this.metadata,
      this.updatedAt})
      : super._();

  @override
  GSaleFilterInput rebuild(void Function(GSaleFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaleFilterInputBuilder toBuilder() =>
      new GSaleFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaleFilterInput &&
        status == other.status &&
        saleType == other.saleType &&
        started == other.started &&
        search == other.search &&
        metadata == other.metadata &&
        updatedAt == other.updatedAt;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, status.hashCode), saleType.hashCode),
                    started.hashCode),
                search.hashCode),
            metadata.hashCode),
        updatedAt.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSaleFilterInput')
          ..add('status', status)
          ..add('saleType', saleType)
          ..add('started', started)
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('updatedAt', updatedAt))
        .toString();
  }
}

class GSaleFilterInputBuilder
    implements Builder<GSaleFilterInput, GSaleFilterInputBuilder> {
  _$GSaleFilterInput? _$v;

  ListBuilder<GDiscountStatusEnum>? _status;
  ListBuilder<GDiscountStatusEnum> get status =>
      _$this._status ??= new ListBuilder<GDiscountStatusEnum>();
  set status(ListBuilder<GDiscountStatusEnum>? status) =>
      _$this._status = status;

  GDiscountValueTypeEnum? _saleType;
  GDiscountValueTypeEnum? get saleType => _$this._saleType;
  set saleType(GDiscountValueTypeEnum? saleType) => _$this._saleType = saleType;

  GDateTimeRangeInputBuilder? _started;
  GDateTimeRangeInputBuilder get started =>
      _$this._started ??= new GDateTimeRangeInputBuilder();
  set started(GDateTimeRangeInputBuilder? started) => _$this._started = started;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  GDateTimeRangeInputBuilder? _updatedAt;
  GDateTimeRangeInputBuilder get updatedAt =>
      _$this._updatedAt ??= new GDateTimeRangeInputBuilder();
  set updatedAt(GDateTimeRangeInputBuilder? updatedAt) =>
      _$this._updatedAt = updatedAt;

  GSaleFilterInputBuilder();

  GSaleFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _status = $v.status?.toBuilder();
      _saleType = $v.saleType;
      _started = $v.started?.toBuilder();
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _updatedAt = $v.updatedAt?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaleFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSaleFilterInput;
  }

  @override
  void update(void Function(GSaleFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSaleFilterInput build() => _build();

  _$GSaleFilterInput _build() {
    _$GSaleFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GSaleFilterInput._(
              status: _status?.build(),
              saleType: saleType,
              started: _started?.build(),
              search: search,
              metadata: _metadata?.build(),
              updatedAt: _updatedAt?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'status';
        _status?.build();

        _$failedField = 'started';
        _started?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'updatedAt';
        _updatedAt?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSaleFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSaleInput extends GSaleInput {
  @override
  final String? name;
  @override
  final GDiscountValueTypeEnum? type;
  @override
  final GPositiveDecimal? value;
  @override
  final BuiltList<String>? products;
  @override
  final BuiltList<String>? variants;
  @override
  final BuiltList<String>? categories;
  @override
  final BuiltList<String>? collections;
  @override
  final GDateTime? startDate;
  @override
  final GDateTime? endDate;

  factory _$GSaleInput([void Function(GSaleInputBuilder)? updates]) =>
      (new GSaleInputBuilder()..update(updates))._build();

  _$GSaleInput._(
      {this.name,
      this.type,
      this.value,
      this.products,
      this.variants,
      this.categories,
      this.collections,
      this.startDate,
      this.endDate})
      : super._();

  @override
  GSaleInput rebuild(void Function(GSaleInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaleInputBuilder toBuilder() => new GSaleInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaleInput &&
        name == other.name &&
        type == other.type &&
        value == other.value &&
        products == other.products &&
        variants == other.variants &&
        categories == other.categories &&
        collections == other.collections &&
        startDate == other.startDate &&
        endDate == other.endDate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, name.hashCode), type.hashCode),
                                value.hashCode),
                            products.hashCode),
                        variants.hashCode),
                    categories.hashCode),
                collections.hashCode),
            startDate.hashCode),
        endDate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSaleInput')
          ..add('name', name)
          ..add('type', type)
          ..add('value', value)
          ..add('products', products)
          ..add('variants', variants)
          ..add('categories', categories)
          ..add('collections', collections)
          ..add('startDate', startDate)
          ..add('endDate', endDate))
        .toString();
  }
}

class GSaleInputBuilder implements Builder<GSaleInput, GSaleInputBuilder> {
  _$GSaleInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GDiscountValueTypeEnum? _type;
  GDiscountValueTypeEnum? get type => _$this._type;
  set type(GDiscountValueTypeEnum? type) => _$this._type = type;

  GPositiveDecimalBuilder? _value;
  GPositiveDecimalBuilder get value =>
      _$this._value ??= new GPositiveDecimalBuilder();
  set value(GPositiveDecimalBuilder? value) => _$this._value = value;

  ListBuilder<String>? _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String>? products) => _$this._products = products;

  ListBuilder<String>? _variants;
  ListBuilder<String> get variants =>
      _$this._variants ??= new ListBuilder<String>();
  set variants(ListBuilder<String>? variants) => _$this._variants = variants;

  ListBuilder<String>? _categories;
  ListBuilder<String> get categories =>
      _$this._categories ??= new ListBuilder<String>();
  set categories(ListBuilder<String>? categories) =>
      _$this._categories = categories;

  ListBuilder<String>? _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String>? collections) =>
      _$this._collections = collections;

  GDateTimeBuilder? _startDate;
  GDateTimeBuilder get startDate =>
      _$this._startDate ??= new GDateTimeBuilder();
  set startDate(GDateTimeBuilder? startDate) => _$this._startDate = startDate;

  GDateTimeBuilder? _endDate;
  GDateTimeBuilder get endDate => _$this._endDate ??= new GDateTimeBuilder();
  set endDate(GDateTimeBuilder? endDate) => _$this._endDate = endDate;

  GSaleInputBuilder();

  GSaleInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _type = $v.type;
      _value = $v.value?.toBuilder();
      _products = $v.products?.toBuilder();
      _variants = $v.variants?.toBuilder();
      _categories = $v.categories?.toBuilder();
      _collections = $v.collections?.toBuilder();
      _startDate = $v.startDate?.toBuilder();
      _endDate = $v.endDate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaleInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSaleInput;
  }

  @override
  void update(void Function(GSaleInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSaleInput build() => _build();

  _$GSaleInput _build() {
    _$GSaleInput _$result;
    try {
      _$result = _$v ??
          new _$GSaleInput._(
              name: name,
              type: type,
              value: _value?.build(),
              products: _products?.build(),
              variants: _variants?.build(),
              categories: _categories?.build(),
              collections: _collections?.build(),
              startDate: _startDate?.build(),
              endDate: _endDate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'value';
        _value?.build();
        _$failedField = 'products';
        _products?.build();
        _$failedField = 'variants';
        _variants?.build();
        _$failedField = 'categories';
        _categories?.build();
        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'startDate';
        _startDate?.build();
        _$failedField = 'endDate';
        _endDate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSaleInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSaleSortingInput extends GSaleSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final String? channel;
  @override
  final GSaleSortField field;

  factory _$GSaleSortingInput(
          [void Function(GSaleSortingInputBuilder)? updates]) =>
      (new GSaleSortingInputBuilder()..update(updates))._build();

  _$GSaleSortingInput._(
      {required this.direction, this.channel, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GSaleSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(field, r'GSaleSortingInput', 'field');
  }

  @override
  GSaleSortingInput rebuild(void Function(GSaleSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaleSortingInputBuilder toBuilder() =>
      new GSaleSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaleSortingInput &&
        direction == other.direction &&
        channel == other.channel &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, direction.hashCode), channel.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSaleSortingInput')
          ..add('direction', direction)
          ..add('channel', channel)
          ..add('field', field))
        .toString();
  }
}

class GSaleSortingInputBuilder
    implements Builder<GSaleSortingInput, GSaleSortingInputBuilder> {
  _$GSaleSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GSaleSortField? _field;
  GSaleSortField? get field => _$this._field;
  set field(GSaleSortField? field) => _$this._field = field;

  GSaleSortingInputBuilder();

  GSaleSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _channel = $v.channel;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaleSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSaleSortingInput;
  }

  @override
  void update(void Function(GSaleSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSaleSortingInput build() => _build();

  _$GSaleSortingInput _build() {
    final _$result = _$v ??
        new _$GSaleSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GSaleSortingInput', 'direction'),
            channel: channel,
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GSaleSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GSeoInput extends GSeoInput {
  @override
  final String? title;
  @override
  final String? description;

  factory _$GSeoInput([void Function(GSeoInputBuilder)? updates]) =>
      (new GSeoInputBuilder()..update(updates))._build();

  _$GSeoInput._({this.title, this.description}) : super._();

  @override
  GSeoInput rebuild(void Function(GSeoInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSeoInputBuilder toBuilder() => new GSeoInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSeoInput &&
        title == other.title &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, title.hashCode), description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSeoInput')
          ..add('title', title)
          ..add('description', description))
        .toString();
  }
}

class GSeoInputBuilder implements Builder<GSeoInput, GSeoInputBuilder> {
  _$GSeoInput? _$v;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GSeoInputBuilder();

  GSeoInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _title = $v.title;
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSeoInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSeoInput;
  }

  @override
  void update(void Function(GSeoInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSeoInput build() => _build();

  _$GSeoInput _build() {
    final _$result =
        _$v ?? new _$GSeoInput._(title: title, description: description);
    replace(_$result);
    return _$result;
  }
}

class _$GShippingMethodChannelListingAddInput
    extends GShippingMethodChannelListingAddInput {
  @override
  final String channelId;
  @override
  final GPositiveDecimal? price;
  @override
  final GPositiveDecimal? minimumOrderPrice;
  @override
  final GPositiveDecimal? maximumOrderPrice;

  factory _$GShippingMethodChannelListingAddInput(
          [void Function(GShippingMethodChannelListingAddInputBuilder)?
              updates]) =>
      (new GShippingMethodChannelListingAddInputBuilder()..update(updates))
          ._build();

  _$GShippingMethodChannelListingAddInput._(
      {required this.channelId,
      this.price,
      this.minimumOrderPrice,
      this.maximumOrderPrice})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        channelId, r'GShippingMethodChannelListingAddInput', 'channelId');
  }

  @override
  GShippingMethodChannelListingAddInput rebuild(
          void Function(GShippingMethodChannelListingAddInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingMethodChannelListingAddInputBuilder toBuilder() =>
      new GShippingMethodChannelListingAddInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingMethodChannelListingAddInput &&
        channelId == other.channelId &&
        price == other.price &&
        minimumOrderPrice == other.minimumOrderPrice &&
        maximumOrderPrice == other.maximumOrderPrice;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, channelId.hashCode), price.hashCode),
            minimumOrderPrice.hashCode),
        maximumOrderPrice.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GShippingMethodChannelListingAddInput')
          ..add('channelId', channelId)
          ..add('price', price)
          ..add('minimumOrderPrice', minimumOrderPrice)
          ..add('maximumOrderPrice', maximumOrderPrice))
        .toString();
  }
}

class GShippingMethodChannelListingAddInputBuilder
    implements
        Builder<GShippingMethodChannelListingAddInput,
            GShippingMethodChannelListingAddInputBuilder> {
  _$GShippingMethodChannelListingAddInput? _$v;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  GPositiveDecimalBuilder? _price;
  GPositiveDecimalBuilder get price =>
      _$this._price ??= new GPositiveDecimalBuilder();
  set price(GPositiveDecimalBuilder? price) => _$this._price = price;

  GPositiveDecimalBuilder? _minimumOrderPrice;
  GPositiveDecimalBuilder get minimumOrderPrice =>
      _$this._minimumOrderPrice ??= new GPositiveDecimalBuilder();
  set minimumOrderPrice(GPositiveDecimalBuilder? minimumOrderPrice) =>
      _$this._minimumOrderPrice = minimumOrderPrice;

  GPositiveDecimalBuilder? _maximumOrderPrice;
  GPositiveDecimalBuilder get maximumOrderPrice =>
      _$this._maximumOrderPrice ??= new GPositiveDecimalBuilder();
  set maximumOrderPrice(GPositiveDecimalBuilder? maximumOrderPrice) =>
      _$this._maximumOrderPrice = maximumOrderPrice;

  GShippingMethodChannelListingAddInputBuilder();

  GShippingMethodChannelListingAddInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _channelId = $v.channelId;
      _price = $v.price?.toBuilder();
      _minimumOrderPrice = $v.minimumOrderPrice?.toBuilder();
      _maximumOrderPrice = $v.maximumOrderPrice?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingMethodChannelListingAddInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingMethodChannelListingAddInput;
  }

  @override
  void update(
      void Function(GShippingMethodChannelListingAddInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingMethodChannelListingAddInput build() => _build();

  _$GShippingMethodChannelListingAddInput _build() {
    _$GShippingMethodChannelListingAddInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingMethodChannelListingAddInput._(
              channelId: BuiltValueNullFieldError.checkNotNull(channelId,
                  r'GShippingMethodChannelListingAddInput', 'channelId'),
              price: _price?.build(),
              minimumOrderPrice: _minimumOrderPrice?.build(),
              maximumOrderPrice: _maximumOrderPrice?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'price';
        _price?.build();
        _$failedField = 'minimumOrderPrice';
        _minimumOrderPrice?.build();
        _$failedField = 'maximumOrderPrice';
        _maximumOrderPrice?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GShippingMethodChannelListingAddInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingMethodChannelListingInput
    extends GShippingMethodChannelListingInput {
  @override
  final BuiltList<GShippingMethodChannelListingAddInput>? addChannels;
  @override
  final BuiltList<String>? removeChannels;

  factory _$GShippingMethodChannelListingInput(
          [void Function(GShippingMethodChannelListingInputBuilder)?
              updates]) =>
      (new GShippingMethodChannelListingInputBuilder()..update(updates))
          ._build();

  _$GShippingMethodChannelListingInput._(
      {this.addChannels, this.removeChannels})
      : super._();

  @override
  GShippingMethodChannelListingInput rebuild(
          void Function(GShippingMethodChannelListingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingMethodChannelListingInputBuilder toBuilder() =>
      new GShippingMethodChannelListingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingMethodChannelListingInput &&
        addChannels == other.addChannels &&
        removeChannels == other.removeChannels;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, addChannels.hashCode), removeChannels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShippingMethodChannelListingInput')
          ..add('addChannels', addChannels)
          ..add('removeChannels', removeChannels))
        .toString();
  }
}

class GShippingMethodChannelListingInputBuilder
    implements
        Builder<GShippingMethodChannelListingInput,
            GShippingMethodChannelListingInputBuilder> {
  _$GShippingMethodChannelListingInput? _$v;

  ListBuilder<GShippingMethodChannelListingAddInput>? _addChannels;
  ListBuilder<GShippingMethodChannelListingAddInput> get addChannels =>
      _$this._addChannels ??=
          new ListBuilder<GShippingMethodChannelListingAddInput>();
  set addChannels(
          ListBuilder<GShippingMethodChannelListingAddInput>? addChannels) =>
      _$this._addChannels = addChannels;

  ListBuilder<String>? _removeChannels;
  ListBuilder<String> get removeChannels =>
      _$this._removeChannels ??= new ListBuilder<String>();
  set removeChannels(ListBuilder<String>? removeChannels) =>
      _$this._removeChannels = removeChannels;

  GShippingMethodChannelListingInputBuilder();

  GShippingMethodChannelListingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _addChannels = $v.addChannels?.toBuilder();
      _removeChannels = $v.removeChannels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingMethodChannelListingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingMethodChannelListingInput;
  }

  @override
  void update(
      void Function(GShippingMethodChannelListingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingMethodChannelListingInput build() => _build();

  _$GShippingMethodChannelListingInput _build() {
    _$GShippingMethodChannelListingInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingMethodChannelListingInput._(
              addChannels: _addChannels?.build(),
              removeChannels: _removeChannels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addChannels';
        _addChannels?.build();
        _$failedField = 'removeChannels';
        _removeChannels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GShippingMethodChannelListingInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingPostalCodeRulesCreateInputRange
    extends GShippingPostalCodeRulesCreateInputRange {
  @override
  final String start;
  @override
  final String? end;

  factory _$GShippingPostalCodeRulesCreateInputRange(
          [void Function(GShippingPostalCodeRulesCreateInputRangeBuilder)?
              updates]) =>
      (new GShippingPostalCodeRulesCreateInputRangeBuilder()..update(updates))
          ._build();

  _$GShippingPostalCodeRulesCreateInputRange._({required this.start, this.end})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        start, r'GShippingPostalCodeRulesCreateInputRange', 'start');
  }

  @override
  GShippingPostalCodeRulesCreateInputRange rebuild(
          void Function(GShippingPostalCodeRulesCreateInputRangeBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingPostalCodeRulesCreateInputRangeBuilder toBuilder() =>
      new GShippingPostalCodeRulesCreateInputRangeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingPostalCodeRulesCreateInputRange &&
        start == other.start &&
        end == other.end;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, start.hashCode), end.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GShippingPostalCodeRulesCreateInputRange')
          ..add('start', start)
          ..add('end', end))
        .toString();
  }
}

class GShippingPostalCodeRulesCreateInputRangeBuilder
    implements
        Builder<GShippingPostalCodeRulesCreateInputRange,
            GShippingPostalCodeRulesCreateInputRangeBuilder> {
  _$GShippingPostalCodeRulesCreateInputRange? _$v;

  String? _start;
  String? get start => _$this._start;
  set start(String? start) => _$this._start = start;

  String? _end;
  String? get end => _$this._end;
  set end(String? end) => _$this._end = end;

  GShippingPostalCodeRulesCreateInputRangeBuilder();

  GShippingPostalCodeRulesCreateInputRangeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _start = $v.start;
      _end = $v.end;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingPostalCodeRulesCreateInputRange other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingPostalCodeRulesCreateInputRange;
  }

  @override
  void update(
      void Function(GShippingPostalCodeRulesCreateInputRangeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingPostalCodeRulesCreateInputRange build() => _build();

  _$GShippingPostalCodeRulesCreateInputRange _build() {
    final _$result = _$v ??
        new _$GShippingPostalCodeRulesCreateInputRange._(
            start: BuiltValueNullFieldError.checkNotNull(
                start, r'GShippingPostalCodeRulesCreateInputRange', 'start'),
            end: end);
    replace(_$result);
    return _$result;
  }
}

class _$GShippingPriceExcludeProductsInput
    extends GShippingPriceExcludeProductsInput {
  @override
  final BuiltList<String> products;

  factory _$GShippingPriceExcludeProductsInput(
          [void Function(GShippingPriceExcludeProductsInputBuilder)?
              updates]) =>
      (new GShippingPriceExcludeProductsInputBuilder()..update(updates))
          ._build();

  _$GShippingPriceExcludeProductsInput._({required this.products}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        products, r'GShippingPriceExcludeProductsInput', 'products');
  }

  @override
  GShippingPriceExcludeProductsInput rebuild(
          void Function(GShippingPriceExcludeProductsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingPriceExcludeProductsInputBuilder toBuilder() =>
      new GShippingPriceExcludeProductsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingPriceExcludeProductsInput &&
        products == other.products;
  }

  @override
  int get hashCode {
    return $jf($jc(0, products.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShippingPriceExcludeProductsInput')
          ..add('products', products))
        .toString();
  }
}

class GShippingPriceExcludeProductsInputBuilder
    implements
        Builder<GShippingPriceExcludeProductsInput,
            GShippingPriceExcludeProductsInputBuilder> {
  _$GShippingPriceExcludeProductsInput? _$v;

  ListBuilder<String>? _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String>? products) => _$this._products = products;

  GShippingPriceExcludeProductsInputBuilder();

  GShippingPriceExcludeProductsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _products = $v.products.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingPriceExcludeProductsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingPriceExcludeProductsInput;
  }

  @override
  void update(
      void Function(GShippingPriceExcludeProductsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingPriceExcludeProductsInput build() => _build();

  _$GShippingPriceExcludeProductsInput _build() {
    _$GShippingPriceExcludeProductsInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingPriceExcludeProductsInput._(
              products: products.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'products';
        products.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GShippingPriceExcludeProductsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingPriceInput extends GShippingPriceInput {
  @override
  final String? name;
  @override
  final GJSONString? description;
  @override
  final GWeightScalar? minimumOrderWeight;
  @override
  final GWeightScalar? maximumOrderWeight;
  @override
  final int? maximumDeliveryDays;
  @override
  final int? minimumDeliveryDays;
  @override
  final GShippingMethodTypeEnum? type;
  @override
  final String? shippingZone;
  @override
  final BuiltList<GShippingPostalCodeRulesCreateInputRange>? addPostalCodeRules;
  @override
  final BuiltList<String>? deletePostalCodeRules;
  @override
  final GPostalCodeRuleInclusionTypeEnum? inclusionType;

  factory _$GShippingPriceInput(
          [void Function(GShippingPriceInputBuilder)? updates]) =>
      (new GShippingPriceInputBuilder()..update(updates))._build();

  _$GShippingPriceInput._(
      {this.name,
      this.description,
      this.minimumOrderWeight,
      this.maximumOrderWeight,
      this.maximumDeliveryDays,
      this.minimumDeliveryDays,
      this.type,
      this.shippingZone,
      this.addPostalCodeRules,
      this.deletePostalCodeRules,
      this.inclusionType})
      : super._();

  @override
  GShippingPriceInput rebuild(
          void Function(GShippingPriceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingPriceInputBuilder toBuilder() =>
      new GShippingPriceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingPriceInput &&
        name == other.name &&
        description == other.description &&
        minimumOrderWeight == other.minimumOrderWeight &&
        maximumOrderWeight == other.maximumOrderWeight &&
        maximumDeliveryDays == other.maximumDeliveryDays &&
        minimumDeliveryDays == other.minimumDeliveryDays &&
        type == other.type &&
        shippingZone == other.shippingZone &&
        addPostalCodeRules == other.addPostalCodeRules &&
        deletePostalCodeRules == other.deletePostalCodeRules &&
        inclusionType == other.inclusionType;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc($jc(0, name.hashCode),
                                            description.hashCode),
                                        minimumOrderWeight.hashCode),
                                    maximumOrderWeight.hashCode),
                                maximumDeliveryDays.hashCode),
                            minimumDeliveryDays.hashCode),
                        type.hashCode),
                    shippingZone.hashCode),
                addPostalCodeRules.hashCode),
            deletePostalCodeRules.hashCode),
        inclusionType.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShippingPriceInput')
          ..add('name', name)
          ..add('description', description)
          ..add('minimumOrderWeight', minimumOrderWeight)
          ..add('maximumOrderWeight', maximumOrderWeight)
          ..add('maximumDeliveryDays', maximumDeliveryDays)
          ..add('minimumDeliveryDays', minimumDeliveryDays)
          ..add('type', type)
          ..add('shippingZone', shippingZone)
          ..add('addPostalCodeRules', addPostalCodeRules)
          ..add('deletePostalCodeRules', deletePostalCodeRules)
          ..add('inclusionType', inclusionType))
        .toString();
  }
}

class GShippingPriceInputBuilder
    implements Builder<GShippingPriceInput, GShippingPriceInputBuilder> {
  _$GShippingPriceInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GJSONStringBuilder? _description;
  GJSONStringBuilder get description =>
      _$this._description ??= new GJSONStringBuilder();
  set description(GJSONStringBuilder? description) =>
      _$this._description = description;

  GWeightScalarBuilder? _minimumOrderWeight;
  GWeightScalarBuilder get minimumOrderWeight =>
      _$this._minimumOrderWeight ??= new GWeightScalarBuilder();
  set minimumOrderWeight(GWeightScalarBuilder? minimumOrderWeight) =>
      _$this._minimumOrderWeight = minimumOrderWeight;

  GWeightScalarBuilder? _maximumOrderWeight;
  GWeightScalarBuilder get maximumOrderWeight =>
      _$this._maximumOrderWeight ??= new GWeightScalarBuilder();
  set maximumOrderWeight(GWeightScalarBuilder? maximumOrderWeight) =>
      _$this._maximumOrderWeight = maximumOrderWeight;

  int? _maximumDeliveryDays;
  int? get maximumDeliveryDays => _$this._maximumDeliveryDays;
  set maximumDeliveryDays(int? maximumDeliveryDays) =>
      _$this._maximumDeliveryDays = maximumDeliveryDays;

  int? _minimumDeliveryDays;
  int? get minimumDeliveryDays => _$this._minimumDeliveryDays;
  set minimumDeliveryDays(int? minimumDeliveryDays) =>
      _$this._minimumDeliveryDays = minimumDeliveryDays;

  GShippingMethodTypeEnum? _type;
  GShippingMethodTypeEnum? get type => _$this._type;
  set type(GShippingMethodTypeEnum? type) => _$this._type = type;

  String? _shippingZone;
  String? get shippingZone => _$this._shippingZone;
  set shippingZone(String? shippingZone) => _$this._shippingZone = shippingZone;

  ListBuilder<GShippingPostalCodeRulesCreateInputRange>? _addPostalCodeRules;
  ListBuilder<GShippingPostalCodeRulesCreateInputRange>
      get addPostalCodeRules => _$this._addPostalCodeRules ??=
          new ListBuilder<GShippingPostalCodeRulesCreateInputRange>();
  set addPostalCodeRules(
          ListBuilder<GShippingPostalCodeRulesCreateInputRange>?
              addPostalCodeRules) =>
      _$this._addPostalCodeRules = addPostalCodeRules;

  ListBuilder<String>? _deletePostalCodeRules;
  ListBuilder<String> get deletePostalCodeRules =>
      _$this._deletePostalCodeRules ??= new ListBuilder<String>();
  set deletePostalCodeRules(ListBuilder<String>? deletePostalCodeRules) =>
      _$this._deletePostalCodeRules = deletePostalCodeRules;

  GPostalCodeRuleInclusionTypeEnum? _inclusionType;
  GPostalCodeRuleInclusionTypeEnum? get inclusionType => _$this._inclusionType;
  set inclusionType(GPostalCodeRuleInclusionTypeEnum? inclusionType) =>
      _$this._inclusionType = inclusionType;

  GShippingPriceInputBuilder();

  GShippingPriceInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _description = $v.description?.toBuilder();
      _minimumOrderWeight = $v.minimumOrderWeight?.toBuilder();
      _maximumOrderWeight = $v.maximumOrderWeight?.toBuilder();
      _maximumDeliveryDays = $v.maximumDeliveryDays;
      _minimumDeliveryDays = $v.minimumDeliveryDays;
      _type = $v.type;
      _shippingZone = $v.shippingZone;
      _addPostalCodeRules = $v.addPostalCodeRules?.toBuilder();
      _deletePostalCodeRules = $v.deletePostalCodeRules?.toBuilder();
      _inclusionType = $v.inclusionType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingPriceInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingPriceInput;
  }

  @override
  void update(void Function(GShippingPriceInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingPriceInput build() => _build();

  _$GShippingPriceInput _build() {
    _$GShippingPriceInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingPriceInput._(
              name: name,
              description: _description?.build(),
              minimumOrderWeight: _minimumOrderWeight?.build(),
              maximumOrderWeight: _maximumOrderWeight?.build(),
              maximumDeliveryDays: maximumDeliveryDays,
              minimumDeliveryDays: minimumDeliveryDays,
              type: type,
              shippingZone: shippingZone,
              addPostalCodeRules: _addPostalCodeRules?.build(),
              deletePostalCodeRules: _deletePostalCodeRules?.build(),
              inclusionType: inclusionType);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'description';
        _description?.build();
        _$failedField = 'minimumOrderWeight';
        _minimumOrderWeight?.build();
        _$failedField = 'maximumOrderWeight';
        _maximumOrderWeight?.build();

        _$failedField = 'addPostalCodeRules';
        _addPostalCodeRules?.build();
        _$failedField = 'deletePostalCodeRules';
        _deletePostalCodeRules?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GShippingPriceInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingPriceTranslationInput extends GShippingPriceTranslationInput {
  @override
  final String? name;
  @override
  final GJSONString? description;

  factory _$GShippingPriceTranslationInput(
          [void Function(GShippingPriceTranslationInputBuilder)? updates]) =>
      (new GShippingPriceTranslationInputBuilder()..update(updates))._build();

  _$GShippingPriceTranslationInput._({this.name, this.description}) : super._();

  @override
  GShippingPriceTranslationInput rebuild(
          void Function(GShippingPriceTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingPriceTranslationInputBuilder toBuilder() =>
      new GShippingPriceTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingPriceTranslationInput &&
        name == other.name &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, name.hashCode), description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShippingPriceTranslationInput')
          ..add('name', name)
          ..add('description', description))
        .toString();
  }
}

class GShippingPriceTranslationInputBuilder
    implements
        Builder<GShippingPriceTranslationInput,
            GShippingPriceTranslationInputBuilder> {
  _$GShippingPriceTranslationInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GJSONStringBuilder? _description;
  GJSONStringBuilder get description =>
      _$this._description ??= new GJSONStringBuilder();
  set description(GJSONStringBuilder? description) =>
      _$this._description = description;

  GShippingPriceTranslationInputBuilder();

  GShippingPriceTranslationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _description = $v.description?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingPriceTranslationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingPriceTranslationInput;
  }

  @override
  void update(void Function(GShippingPriceTranslationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingPriceTranslationInput build() => _build();

  _$GShippingPriceTranslationInput _build() {
    _$GShippingPriceTranslationInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingPriceTranslationInput._(
              name: name, description: _description?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'description';
        _description?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GShippingPriceTranslationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingZoneCreateInput extends GShippingZoneCreateInput {
  @override
  final String? name;
  @override
  final String? description;
  @override
  final BuiltList<String>? countries;
  @override
  final bool? Gdefault;
  @override
  final BuiltList<String>? addWarehouses;
  @override
  final BuiltList<String>? addChannels;

  factory _$GShippingZoneCreateInput(
          [void Function(GShippingZoneCreateInputBuilder)? updates]) =>
      (new GShippingZoneCreateInputBuilder()..update(updates))._build();

  _$GShippingZoneCreateInput._(
      {this.name,
      this.description,
      this.countries,
      this.Gdefault,
      this.addWarehouses,
      this.addChannels})
      : super._();

  @override
  GShippingZoneCreateInput rebuild(
          void Function(GShippingZoneCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingZoneCreateInputBuilder toBuilder() =>
      new GShippingZoneCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingZoneCreateInput &&
        name == other.name &&
        description == other.description &&
        countries == other.countries &&
        Gdefault == other.Gdefault &&
        addWarehouses == other.addWarehouses &&
        addChannels == other.addChannels;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc($jc($jc(0, name.hashCode), description.hashCode),
                    countries.hashCode),
                Gdefault.hashCode),
            addWarehouses.hashCode),
        addChannels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShippingZoneCreateInput')
          ..add('name', name)
          ..add('description', description)
          ..add('countries', countries)
          ..add('Gdefault', Gdefault)
          ..add('addWarehouses', addWarehouses)
          ..add('addChannels', addChannels))
        .toString();
  }
}

class GShippingZoneCreateInputBuilder
    implements
        Builder<GShippingZoneCreateInput, GShippingZoneCreateInputBuilder> {
  _$GShippingZoneCreateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  ListBuilder<String>? _countries;
  ListBuilder<String> get countries =>
      _$this._countries ??= new ListBuilder<String>();
  set countries(ListBuilder<String>? countries) =>
      _$this._countries = countries;

  bool? _Gdefault;
  bool? get Gdefault => _$this._Gdefault;
  set Gdefault(bool? Gdefault) => _$this._Gdefault = Gdefault;

  ListBuilder<String>? _addWarehouses;
  ListBuilder<String> get addWarehouses =>
      _$this._addWarehouses ??= new ListBuilder<String>();
  set addWarehouses(ListBuilder<String>? addWarehouses) =>
      _$this._addWarehouses = addWarehouses;

  ListBuilder<String>? _addChannels;
  ListBuilder<String> get addChannels =>
      _$this._addChannels ??= new ListBuilder<String>();
  set addChannels(ListBuilder<String>? addChannels) =>
      _$this._addChannels = addChannels;

  GShippingZoneCreateInputBuilder();

  GShippingZoneCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _description = $v.description;
      _countries = $v.countries?.toBuilder();
      _Gdefault = $v.Gdefault;
      _addWarehouses = $v.addWarehouses?.toBuilder();
      _addChannels = $v.addChannels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingZoneCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingZoneCreateInput;
  }

  @override
  void update(void Function(GShippingZoneCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingZoneCreateInput build() => _build();

  _$GShippingZoneCreateInput _build() {
    _$GShippingZoneCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingZoneCreateInput._(
              name: name,
              description: description,
              countries: _countries?.build(),
              Gdefault: Gdefault,
              addWarehouses: _addWarehouses?.build(),
              addChannels: _addChannels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'countries';
        _countries?.build();

        _$failedField = 'addWarehouses';
        _addWarehouses?.build();
        _$failedField = 'addChannels';
        _addChannels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GShippingZoneCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingZoneFilterInput extends GShippingZoneFilterInput {
  @override
  final String? search;
  @override
  final BuiltList<String>? channels;

  factory _$GShippingZoneFilterInput(
          [void Function(GShippingZoneFilterInputBuilder)? updates]) =>
      (new GShippingZoneFilterInputBuilder()..update(updates))._build();

  _$GShippingZoneFilterInput._({this.search, this.channels}) : super._();

  @override
  GShippingZoneFilterInput rebuild(
          void Function(GShippingZoneFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingZoneFilterInputBuilder toBuilder() =>
      new GShippingZoneFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingZoneFilterInput &&
        search == other.search &&
        channels == other.channels;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, search.hashCode), channels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShippingZoneFilterInput')
          ..add('search', search)
          ..add('channels', channels))
        .toString();
  }
}

class GShippingZoneFilterInputBuilder
    implements
        Builder<GShippingZoneFilterInput, GShippingZoneFilterInputBuilder> {
  _$GShippingZoneFilterInput? _$v;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _channels;
  ListBuilder<String> get channels =>
      _$this._channels ??= new ListBuilder<String>();
  set channels(ListBuilder<String>? channels) => _$this._channels = channels;

  GShippingZoneFilterInputBuilder();

  GShippingZoneFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _search = $v.search;
      _channels = $v.channels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingZoneFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingZoneFilterInput;
  }

  @override
  void update(void Function(GShippingZoneFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingZoneFilterInput build() => _build();

  _$GShippingZoneFilterInput _build() {
    _$GShippingZoneFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingZoneFilterInput._(
              search: search, channels: _channels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'channels';
        _channels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GShippingZoneFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShippingZoneUpdateInput extends GShippingZoneUpdateInput {
  @override
  final String? name;
  @override
  final String? description;
  @override
  final BuiltList<String>? countries;
  @override
  final bool? Gdefault;
  @override
  final BuiltList<String>? addWarehouses;
  @override
  final BuiltList<String>? addChannels;
  @override
  final BuiltList<String>? removeWarehouses;
  @override
  final BuiltList<String>? removeChannels;

  factory _$GShippingZoneUpdateInput(
          [void Function(GShippingZoneUpdateInputBuilder)? updates]) =>
      (new GShippingZoneUpdateInputBuilder()..update(updates))._build();

  _$GShippingZoneUpdateInput._(
      {this.name,
      this.description,
      this.countries,
      this.Gdefault,
      this.addWarehouses,
      this.addChannels,
      this.removeWarehouses,
      this.removeChannels})
      : super._();

  @override
  GShippingZoneUpdateInput rebuild(
          void Function(GShippingZoneUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShippingZoneUpdateInputBuilder toBuilder() =>
      new GShippingZoneUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShippingZoneUpdateInput &&
        name == other.name &&
        description == other.description &&
        countries == other.countries &&
        Gdefault == other.Gdefault &&
        addWarehouses == other.addWarehouses &&
        addChannels == other.addChannels &&
        removeWarehouses == other.removeWarehouses &&
        removeChannels == other.removeChannels;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc($jc($jc(0, name.hashCode), description.hashCode),
                            countries.hashCode),
                        Gdefault.hashCode),
                    addWarehouses.hashCode),
                addChannels.hashCode),
            removeWarehouses.hashCode),
        removeChannels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShippingZoneUpdateInput')
          ..add('name', name)
          ..add('description', description)
          ..add('countries', countries)
          ..add('Gdefault', Gdefault)
          ..add('addWarehouses', addWarehouses)
          ..add('addChannels', addChannels)
          ..add('removeWarehouses', removeWarehouses)
          ..add('removeChannels', removeChannels))
        .toString();
  }
}

class GShippingZoneUpdateInputBuilder
    implements
        Builder<GShippingZoneUpdateInput, GShippingZoneUpdateInputBuilder> {
  _$GShippingZoneUpdateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  ListBuilder<String>? _countries;
  ListBuilder<String> get countries =>
      _$this._countries ??= new ListBuilder<String>();
  set countries(ListBuilder<String>? countries) =>
      _$this._countries = countries;

  bool? _Gdefault;
  bool? get Gdefault => _$this._Gdefault;
  set Gdefault(bool? Gdefault) => _$this._Gdefault = Gdefault;

  ListBuilder<String>? _addWarehouses;
  ListBuilder<String> get addWarehouses =>
      _$this._addWarehouses ??= new ListBuilder<String>();
  set addWarehouses(ListBuilder<String>? addWarehouses) =>
      _$this._addWarehouses = addWarehouses;

  ListBuilder<String>? _addChannels;
  ListBuilder<String> get addChannels =>
      _$this._addChannels ??= new ListBuilder<String>();
  set addChannels(ListBuilder<String>? addChannels) =>
      _$this._addChannels = addChannels;

  ListBuilder<String>? _removeWarehouses;
  ListBuilder<String> get removeWarehouses =>
      _$this._removeWarehouses ??= new ListBuilder<String>();
  set removeWarehouses(ListBuilder<String>? removeWarehouses) =>
      _$this._removeWarehouses = removeWarehouses;

  ListBuilder<String>? _removeChannels;
  ListBuilder<String> get removeChannels =>
      _$this._removeChannels ??= new ListBuilder<String>();
  set removeChannels(ListBuilder<String>? removeChannels) =>
      _$this._removeChannels = removeChannels;

  GShippingZoneUpdateInputBuilder();

  GShippingZoneUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _description = $v.description;
      _countries = $v.countries?.toBuilder();
      _Gdefault = $v.Gdefault;
      _addWarehouses = $v.addWarehouses?.toBuilder();
      _addChannels = $v.addChannels?.toBuilder();
      _removeWarehouses = $v.removeWarehouses?.toBuilder();
      _removeChannels = $v.removeChannels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShippingZoneUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShippingZoneUpdateInput;
  }

  @override
  void update(void Function(GShippingZoneUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShippingZoneUpdateInput build() => _build();

  _$GShippingZoneUpdateInput _build() {
    _$GShippingZoneUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GShippingZoneUpdateInput._(
              name: name,
              description: description,
              countries: _countries?.build(),
              Gdefault: Gdefault,
              addWarehouses: _addWarehouses?.build(),
              addChannels: _addChannels?.build(),
              removeWarehouses: _removeWarehouses?.build(),
              removeChannels: _removeChannels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'countries';
        _countries?.build();

        _$failedField = 'addWarehouses';
        _addWarehouses?.build();
        _$failedField = 'addChannels';
        _addChannels?.build();
        _$failedField = 'removeWarehouses';
        _removeWarehouses?.build();
        _$failedField = 'removeChannels';
        _removeChannels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GShippingZoneUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GShopSettingsInput extends GShopSettingsInput {
  @override
  final String? headerText;
  @override
  final String? description;
  @override
  final bool? includeTaxesInPrices;
  @override
  final bool? displayGrossPrices;
  @override
  final bool? chargeTaxesOnShipping;
  @override
  final bool? trackInventoryByDefault;
  @override
  final GWeightUnitsEnum? defaultWeightUnit;
  @override
  final bool? automaticFulfillmentDigitalProducts;
  @override
  final bool? fulfillmentAutoApprove;
  @override
  final bool? fulfillmentAllowUnpaid;
  @override
  final int? defaultDigitalMaxDownloads;
  @override
  final int? defaultDigitalUrlValidDays;
  @override
  final String? defaultMailSenderName;
  @override
  final String? defaultMailSenderAddress;
  @override
  final String? customerSetPasswordUrl;
  @override
  final int? reserveStockDurationAnonymousUser;
  @override
  final int? reserveStockDurationAuthenticatedUser;
  @override
  final int? limitQuantityPerCheckout;

  factory _$GShopSettingsInput(
          [void Function(GShopSettingsInputBuilder)? updates]) =>
      (new GShopSettingsInputBuilder()..update(updates))._build();

  _$GShopSettingsInput._(
      {this.headerText,
      this.description,
      this.includeTaxesInPrices,
      this.displayGrossPrices,
      this.chargeTaxesOnShipping,
      this.trackInventoryByDefault,
      this.defaultWeightUnit,
      this.automaticFulfillmentDigitalProducts,
      this.fulfillmentAutoApprove,
      this.fulfillmentAllowUnpaid,
      this.defaultDigitalMaxDownloads,
      this.defaultDigitalUrlValidDays,
      this.defaultMailSenderName,
      this.defaultMailSenderAddress,
      this.customerSetPasswordUrl,
      this.reserveStockDurationAnonymousUser,
      this.reserveStockDurationAuthenticatedUser,
      this.limitQuantityPerCheckout})
      : super._();

  @override
  GShopSettingsInput rebuild(
          void Function(GShopSettingsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShopSettingsInputBuilder toBuilder() =>
      new GShopSettingsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShopSettingsInput &&
        headerText == other.headerText &&
        description == other.description &&
        includeTaxesInPrices == other.includeTaxesInPrices &&
        displayGrossPrices == other.displayGrossPrices &&
        chargeTaxesOnShipping == other.chargeTaxesOnShipping &&
        trackInventoryByDefault == other.trackInventoryByDefault &&
        defaultWeightUnit == other.defaultWeightUnit &&
        automaticFulfillmentDigitalProducts ==
            other.automaticFulfillmentDigitalProducts &&
        fulfillmentAutoApprove == other.fulfillmentAutoApprove &&
        fulfillmentAllowUnpaid == other.fulfillmentAllowUnpaid &&
        defaultDigitalMaxDownloads == other.defaultDigitalMaxDownloads &&
        defaultDigitalUrlValidDays == other.defaultDigitalUrlValidDays &&
        defaultMailSenderName == other.defaultMailSenderName &&
        defaultMailSenderAddress == other.defaultMailSenderAddress &&
        customerSetPasswordUrl == other.customerSetPasswordUrl &&
        reserveStockDurationAnonymousUser ==
            other.reserveStockDurationAnonymousUser &&
        reserveStockDurationAuthenticatedUser ==
            other.reserveStockDurationAuthenticatedUser &&
        limitQuantityPerCheckout == other.limitQuantityPerCheckout;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(
                                                                    $jc(
                                                                        $jc(
                                                                            0,
                                                                            headerText
                                                                                .hashCode),
                                                                        description
                                                                            .hashCode),
                                                                    includeTaxesInPrices
                                                                        .hashCode),
                                                                displayGrossPrices
                                                                    .hashCode),
                                                            chargeTaxesOnShipping
                                                                .hashCode),
                                                        trackInventoryByDefault
                                                            .hashCode),
                                                    defaultWeightUnit.hashCode),
                                                automaticFulfillmentDigitalProducts
                                                    .hashCode),
                                            fulfillmentAutoApprove.hashCode),
                                        fulfillmentAllowUnpaid.hashCode),
                                    defaultDigitalMaxDownloads.hashCode),
                                defaultDigitalUrlValidDays.hashCode),
                            defaultMailSenderName.hashCode),
                        defaultMailSenderAddress.hashCode),
                    customerSetPasswordUrl.hashCode),
                reserveStockDurationAnonymousUser.hashCode),
            reserveStockDurationAuthenticatedUser.hashCode),
        limitQuantityPerCheckout.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShopSettingsInput')
          ..add('headerText', headerText)
          ..add('description', description)
          ..add('includeTaxesInPrices', includeTaxesInPrices)
          ..add('displayGrossPrices', displayGrossPrices)
          ..add('chargeTaxesOnShipping', chargeTaxesOnShipping)
          ..add('trackInventoryByDefault', trackInventoryByDefault)
          ..add('defaultWeightUnit', defaultWeightUnit)
          ..add('automaticFulfillmentDigitalProducts',
              automaticFulfillmentDigitalProducts)
          ..add('fulfillmentAutoApprove', fulfillmentAutoApprove)
          ..add('fulfillmentAllowUnpaid', fulfillmentAllowUnpaid)
          ..add('defaultDigitalMaxDownloads', defaultDigitalMaxDownloads)
          ..add('defaultDigitalUrlValidDays', defaultDigitalUrlValidDays)
          ..add('defaultMailSenderName', defaultMailSenderName)
          ..add('defaultMailSenderAddress', defaultMailSenderAddress)
          ..add('customerSetPasswordUrl', customerSetPasswordUrl)
          ..add('reserveStockDurationAnonymousUser',
              reserveStockDurationAnonymousUser)
          ..add('reserveStockDurationAuthenticatedUser',
              reserveStockDurationAuthenticatedUser)
          ..add('limitQuantityPerCheckout', limitQuantityPerCheckout))
        .toString();
  }
}

class GShopSettingsInputBuilder
    implements Builder<GShopSettingsInput, GShopSettingsInputBuilder> {
  _$GShopSettingsInput? _$v;

  String? _headerText;
  String? get headerText => _$this._headerText;
  set headerText(String? headerText) => _$this._headerText = headerText;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  bool? _includeTaxesInPrices;
  bool? get includeTaxesInPrices => _$this._includeTaxesInPrices;
  set includeTaxesInPrices(bool? includeTaxesInPrices) =>
      _$this._includeTaxesInPrices = includeTaxesInPrices;

  bool? _displayGrossPrices;
  bool? get displayGrossPrices => _$this._displayGrossPrices;
  set displayGrossPrices(bool? displayGrossPrices) =>
      _$this._displayGrossPrices = displayGrossPrices;

  bool? _chargeTaxesOnShipping;
  bool? get chargeTaxesOnShipping => _$this._chargeTaxesOnShipping;
  set chargeTaxesOnShipping(bool? chargeTaxesOnShipping) =>
      _$this._chargeTaxesOnShipping = chargeTaxesOnShipping;

  bool? _trackInventoryByDefault;
  bool? get trackInventoryByDefault => _$this._trackInventoryByDefault;
  set trackInventoryByDefault(bool? trackInventoryByDefault) =>
      _$this._trackInventoryByDefault = trackInventoryByDefault;

  GWeightUnitsEnum? _defaultWeightUnit;
  GWeightUnitsEnum? get defaultWeightUnit => _$this._defaultWeightUnit;
  set defaultWeightUnit(GWeightUnitsEnum? defaultWeightUnit) =>
      _$this._defaultWeightUnit = defaultWeightUnit;

  bool? _automaticFulfillmentDigitalProducts;
  bool? get automaticFulfillmentDigitalProducts =>
      _$this._automaticFulfillmentDigitalProducts;
  set automaticFulfillmentDigitalProducts(
          bool? automaticFulfillmentDigitalProducts) =>
      _$this._automaticFulfillmentDigitalProducts =
          automaticFulfillmentDigitalProducts;

  bool? _fulfillmentAutoApprove;
  bool? get fulfillmentAutoApprove => _$this._fulfillmentAutoApprove;
  set fulfillmentAutoApprove(bool? fulfillmentAutoApprove) =>
      _$this._fulfillmentAutoApprove = fulfillmentAutoApprove;

  bool? _fulfillmentAllowUnpaid;
  bool? get fulfillmentAllowUnpaid => _$this._fulfillmentAllowUnpaid;
  set fulfillmentAllowUnpaid(bool? fulfillmentAllowUnpaid) =>
      _$this._fulfillmentAllowUnpaid = fulfillmentAllowUnpaid;

  int? _defaultDigitalMaxDownloads;
  int? get defaultDigitalMaxDownloads => _$this._defaultDigitalMaxDownloads;
  set defaultDigitalMaxDownloads(int? defaultDigitalMaxDownloads) =>
      _$this._defaultDigitalMaxDownloads = defaultDigitalMaxDownloads;

  int? _defaultDigitalUrlValidDays;
  int? get defaultDigitalUrlValidDays => _$this._defaultDigitalUrlValidDays;
  set defaultDigitalUrlValidDays(int? defaultDigitalUrlValidDays) =>
      _$this._defaultDigitalUrlValidDays = defaultDigitalUrlValidDays;

  String? _defaultMailSenderName;
  String? get defaultMailSenderName => _$this._defaultMailSenderName;
  set defaultMailSenderName(String? defaultMailSenderName) =>
      _$this._defaultMailSenderName = defaultMailSenderName;

  String? _defaultMailSenderAddress;
  String? get defaultMailSenderAddress => _$this._defaultMailSenderAddress;
  set defaultMailSenderAddress(String? defaultMailSenderAddress) =>
      _$this._defaultMailSenderAddress = defaultMailSenderAddress;

  String? _customerSetPasswordUrl;
  String? get customerSetPasswordUrl => _$this._customerSetPasswordUrl;
  set customerSetPasswordUrl(String? customerSetPasswordUrl) =>
      _$this._customerSetPasswordUrl = customerSetPasswordUrl;

  int? _reserveStockDurationAnonymousUser;
  int? get reserveStockDurationAnonymousUser =>
      _$this._reserveStockDurationAnonymousUser;
  set reserveStockDurationAnonymousUser(
          int? reserveStockDurationAnonymousUser) =>
      _$this._reserveStockDurationAnonymousUser =
          reserveStockDurationAnonymousUser;

  int? _reserveStockDurationAuthenticatedUser;
  int? get reserveStockDurationAuthenticatedUser =>
      _$this._reserveStockDurationAuthenticatedUser;
  set reserveStockDurationAuthenticatedUser(
          int? reserveStockDurationAuthenticatedUser) =>
      _$this._reserveStockDurationAuthenticatedUser =
          reserveStockDurationAuthenticatedUser;

  int? _limitQuantityPerCheckout;
  int? get limitQuantityPerCheckout => _$this._limitQuantityPerCheckout;
  set limitQuantityPerCheckout(int? limitQuantityPerCheckout) =>
      _$this._limitQuantityPerCheckout = limitQuantityPerCheckout;

  GShopSettingsInputBuilder();

  GShopSettingsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _headerText = $v.headerText;
      _description = $v.description;
      _includeTaxesInPrices = $v.includeTaxesInPrices;
      _displayGrossPrices = $v.displayGrossPrices;
      _chargeTaxesOnShipping = $v.chargeTaxesOnShipping;
      _trackInventoryByDefault = $v.trackInventoryByDefault;
      _defaultWeightUnit = $v.defaultWeightUnit;
      _automaticFulfillmentDigitalProducts =
          $v.automaticFulfillmentDigitalProducts;
      _fulfillmentAutoApprove = $v.fulfillmentAutoApprove;
      _fulfillmentAllowUnpaid = $v.fulfillmentAllowUnpaid;
      _defaultDigitalMaxDownloads = $v.defaultDigitalMaxDownloads;
      _defaultDigitalUrlValidDays = $v.defaultDigitalUrlValidDays;
      _defaultMailSenderName = $v.defaultMailSenderName;
      _defaultMailSenderAddress = $v.defaultMailSenderAddress;
      _customerSetPasswordUrl = $v.customerSetPasswordUrl;
      _reserveStockDurationAnonymousUser = $v.reserveStockDurationAnonymousUser;
      _reserveStockDurationAuthenticatedUser =
          $v.reserveStockDurationAuthenticatedUser;
      _limitQuantityPerCheckout = $v.limitQuantityPerCheckout;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShopSettingsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShopSettingsInput;
  }

  @override
  void update(void Function(GShopSettingsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShopSettingsInput build() => _build();

  _$GShopSettingsInput _build() {
    final _$result = _$v ??
        new _$GShopSettingsInput._(
            headerText: headerText,
            description: description,
            includeTaxesInPrices: includeTaxesInPrices,
            displayGrossPrices: displayGrossPrices,
            chargeTaxesOnShipping: chargeTaxesOnShipping,
            trackInventoryByDefault: trackInventoryByDefault,
            defaultWeightUnit: defaultWeightUnit,
            automaticFulfillmentDigitalProducts:
                automaticFulfillmentDigitalProducts,
            fulfillmentAutoApprove: fulfillmentAutoApprove,
            fulfillmentAllowUnpaid: fulfillmentAllowUnpaid,
            defaultDigitalMaxDownloads: defaultDigitalMaxDownloads,
            defaultDigitalUrlValidDays: defaultDigitalUrlValidDays,
            defaultMailSenderName: defaultMailSenderName,
            defaultMailSenderAddress: defaultMailSenderAddress,
            customerSetPasswordUrl: customerSetPasswordUrl,
            reserveStockDurationAnonymousUser:
                reserveStockDurationAnonymousUser,
            reserveStockDurationAuthenticatedUser:
                reserveStockDurationAuthenticatedUser,
            limitQuantityPerCheckout: limitQuantityPerCheckout);
    replace(_$result);
    return _$result;
  }
}

class _$GShopSettingsTranslationInput extends GShopSettingsTranslationInput {
  @override
  final String? headerText;
  @override
  final String? description;

  factory _$GShopSettingsTranslationInput(
          [void Function(GShopSettingsTranslationInputBuilder)? updates]) =>
      (new GShopSettingsTranslationInputBuilder()..update(updates))._build();

  _$GShopSettingsTranslationInput._({this.headerText, this.description})
      : super._();

  @override
  GShopSettingsTranslationInput rebuild(
          void Function(GShopSettingsTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GShopSettingsTranslationInputBuilder toBuilder() =>
      new GShopSettingsTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GShopSettingsTranslationInput &&
        headerText == other.headerText &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, headerText.hashCode), description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GShopSettingsTranslationInput')
          ..add('headerText', headerText)
          ..add('description', description))
        .toString();
  }
}

class GShopSettingsTranslationInputBuilder
    implements
        Builder<GShopSettingsTranslationInput,
            GShopSettingsTranslationInputBuilder> {
  _$GShopSettingsTranslationInput? _$v;

  String? _headerText;
  String? get headerText => _$this._headerText;
  set headerText(String? headerText) => _$this._headerText = headerText;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  GShopSettingsTranslationInputBuilder();

  GShopSettingsTranslationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _headerText = $v.headerText;
      _description = $v.description;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GShopSettingsTranslationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GShopSettingsTranslationInput;
  }

  @override
  void update(void Function(GShopSettingsTranslationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GShopSettingsTranslationInput build() => _build();

  _$GShopSettingsTranslationInput _build() {
    final _$result = _$v ??
        new _$GShopSettingsTranslationInput._(
            headerText: headerText, description: description);
    replace(_$result);
    return _$result;
  }
}

class _$GSiteDomainInput extends GSiteDomainInput {
  @override
  final String? domain;
  @override
  final String? name;

  factory _$GSiteDomainInput(
          [void Function(GSiteDomainInputBuilder)? updates]) =>
      (new GSiteDomainInputBuilder()..update(updates))._build();

  _$GSiteDomainInput._({this.domain, this.name}) : super._();

  @override
  GSiteDomainInput rebuild(void Function(GSiteDomainInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSiteDomainInputBuilder toBuilder() =>
      new GSiteDomainInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSiteDomainInput &&
        domain == other.domain &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, domain.hashCode), name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSiteDomainInput')
          ..add('domain', domain)
          ..add('name', name))
        .toString();
  }
}

class GSiteDomainInputBuilder
    implements Builder<GSiteDomainInput, GSiteDomainInputBuilder> {
  _$GSiteDomainInput? _$v;

  String? _domain;
  String? get domain => _$this._domain;
  set domain(String? domain) => _$this._domain = domain;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GSiteDomainInputBuilder();

  GSiteDomainInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _domain = $v.domain;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSiteDomainInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSiteDomainInput;
  }

  @override
  void update(void Function(GSiteDomainInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSiteDomainInput build() => _build();

  _$GSiteDomainInput _build() {
    final _$result =
        _$v ?? new _$GSiteDomainInput._(domain: domain, name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GStaffCreateInput extends GStaffCreateInput {
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final String? email;
  @override
  final bool? isActive;
  @override
  final String? note;
  @override
  final BuiltList<String>? addGroups;
  @override
  final String? redirectUrl;

  factory _$GStaffCreateInput(
          [void Function(GStaffCreateInputBuilder)? updates]) =>
      (new GStaffCreateInputBuilder()..update(updates))._build();

  _$GStaffCreateInput._(
      {this.firstName,
      this.lastName,
      this.email,
      this.isActive,
      this.note,
      this.addGroups,
      this.redirectUrl})
      : super._();

  @override
  GStaffCreateInput rebuild(void Function(GStaffCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStaffCreateInputBuilder toBuilder() =>
      new GStaffCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStaffCreateInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        email == other.email &&
        isActive == other.isActive &&
        note == other.note &&
        addGroups == other.addGroups &&
        redirectUrl == other.redirectUrl;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, firstName.hashCode), lastName.hashCode),
                        email.hashCode),
                    isActive.hashCode),
                note.hashCode),
            addGroups.hashCode),
        redirectUrl.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GStaffCreateInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('email', email)
          ..add('isActive', isActive)
          ..add('note', note)
          ..add('addGroups', addGroups)
          ..add('redirectUrl', redirectUrl))
        .toString();
  }
}

class GStaffCreateInputBuilder
    implements Builder<GStaffCreateInput, GStaffCreateInputBuilder> {
  _$GStaffCreateInput? _$v;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  ListBuilder<String>? _addGroups;
  ListBuilder<String> get addGroups =>
      _$this._addGroups ??= new ListBuilder<String>();
  set addGroups(ListBuilder<String>? addGroups) =>
      _$this._addGroups = addGroups;

  String? _redirectUrl;
  String? get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String? redirectUrl) => _$this._redirectUrl = redirectUrl;

  GStaffCreateInputBuilder();

  GStaffCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _email = $v.email;
      _isActive = $v.isActive;
      _note = $v.note;
      _addGroups = $v.addGroups?.toBuilder();
      _redirectUrl = $v.redirectUrl;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStaffCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GStaffCreateInput;
  }

  @override
  void update(void Function(GStaffCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GStaffCreateInput build() => _build();

  _$GStaffCreateInput _build() {
    _$GStaffCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GStaffCreateInput._(
              firstName: firstName,
              lastName: lastName,
              email: email,
              isActive: isActive,
              note: note,
              addGroups: _addGroups?.build(),
              redirectUrl: redirectUrl);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addGroups';
        _addGroups?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GStaffCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GStaffNotificationRecipientInput
    extends GStaffNotificationRecipientInput {
  @override
  final String? user;
  @override
  final String? email;
  @override
  final bool? active;

  factory _$GStaffNotificationRecipientInput(
          [void Function(GStaffNotificationRecipientInputBuilder)? updates]) =>
      (new GStaffNotificationRecipientInputBuilder()..update(updates))._build();

  _$GStaffNotificationRecipientInput._({this.user, this.email, this.active})
      : super._();

  @override
  GStaffNotificationRecipientInput rebuild(
          void Function(GStaffNotificationRecipientInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStaffNotificationRecipientInputBuilder toBuilder() =>
      new GStaffNotificationRecipientInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStaffNotificationRecipientInput &&
        user == other.user &&
        email == other.email &&
        active == other.active;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, user.hashCode), email.hashCode), active.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GStaffNotificationRecipientInput')
          ..add('user', user)
          ..add('email', email)
          ..add('active', active))
        .toString();
  }
}

class GStaffNotificationRecipientInputBuilder
    implements
        Builder<GStaffNotificationRecipientInput,
            GStaffNotificationRecipientInputBuilder> {
  _$GStaffNotificationRecipientInput? _$v;

  String? _user;
  String? get user => _$this._user;
  set user(String? user) => _$this._user = user;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _active;
  bool? get active => _$this._active;
  set active(bool? active) => _$this._active = active;

  GStaffNotificationRecipientInputBuilder();

  GStaffNotificationRecipientInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _user = $v.user;
      _email = $v.email;
      _active = $v.active;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStaffNotificationRecipientInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GStaffNotificationRecipientInput;
  }

  @override
  void update(void Function(GStaffNotificationRecipientInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GStaffNotificationRecipientInput build() => _build();

  _$GStaffNotificationRecipientInput _build() {
    final _$result = _$v ??
        new _$GStaffNotificationRecipientInput._(
            user: user, email: email, active: active);
    replace(_$result);
    return _$result;
  }
}

class _$GStaffUpdateInput extends GStaffUpdateInput {
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final String? email;
  @override
  final bool? isActive;
  @override
  final String? note;
  @override
  final BuiltList<String>? addGroups;
  @override
  final BuiltList<String>? removeGroups;

  factory _$GStaffUpdateInput(
          [void Function(GStaffUpdateInputBuilder)? updates]) =>
      (new GStaffUpdateInputBuilder()..update(updates))._build();

  _$GStaffUpdateInput._(
      {this.firstName,
      this.lastName,
      this.email,
      this.isActive,
      this.note,
      this.addGroups,
      this.removeGroups})
      : super._();

  @override
  GStaffUpdateInput rebuild(void Function(GStaffUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStaffUpdateInputBuilder toBuilder() =>
      new GStaffUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStaffUpdateInput &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        email == other.email &&
        isActive == other.isActive &&
        note == other.note &&
        addGroups == other.addGroups &&
        removeGroups == other.removeGroups;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, firstName.hashCode), lastName.hashCode),
                        email.hashCode),
                    isActive.hashCode),
                note.hashCode),
            addGroups.hashCode),
        removeGroups.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GStaffUpdateInput')
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('email', email)
          ..add('isActive', isActive)
          ..add('note', note)
          ..add('addGroups', addGroups)
          ..add('removeGroups', removeGroups))
        .toString();
  }
}

class GStaffUpdateInputBuilder
    implements Builder<GStaffUpdateInput, GStaffUpdateInputBuilder> {
  _$GStaffUpdateInput? _$v;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  ListBuilder<String>? _addGroups;
  ListBuilder<String> get addGroups =>
      _$this._addGroups ??= new ListBuilder<String>();
  set addGroups(ListBuilder<String>? addGroups) =>
      _$this._addGroups = addGroups;

  ListBuilder<String>? _removeGroups;
  ListBuilder<String> get removeGroups =>
      _$this._removeGroups ??= new ListBuilder<String>();
  set removeGroups(ListBuilder<String>? removeGroups) =>
      _$this._removeGroups = removeGroups;

  GStaffUpdateInputBuilder();

  GStaffUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _email = $v.email;
      _isActive = $v.isActive;
      _note = $v.note;
      _addGroups = $v.addGroups?.toBuilder();
      _removeGroups = $v.removeGroups?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStaffUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GStaffUpdateInput;
  }

  @override
  void update(void Function(GStaffUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GStaffUpdateInput build() => _build();

  _$GStaffUpdateInput _build() {
    _$GStaffUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GStaffUpdateInput._(
              firstName: firstName,
              lastName: lastName,
              email: email,
              isActive: isActive,
              note: note,
              addGroups: _addGroups?.build(),
              removeGroups: _removeGroups?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addGroups';
        _addGroups?.build();
        _$failedField = 'removeGroups';
        _removeGroups?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GStaffUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GStaffUserInput extends GStaffUserInput {
  @override
  final GStaffMemberStatus? status;
  @override
  final String? search;
  @override
  final BuiltList<String>? ids;

  factory _$GStaffUserInput([void Function(GStaffUserInputBuilder)? updates]) =>
      (new GStaffUserInputBuilder()..update(updates))._build();

  _$GStaffUserInput._({this.status, this.search, this.ids}) : super._();

  @override
  GStaffUserInput rebuild(void Function(GStaffUserInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStaffUserInputBuilder toBuilder() =>
      new GStaffUserInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStaffUserInput &&
        status == other.status &&
        search == other.search &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, status.hashCode), search.hashCode), ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GStaffUserInput')
          ..add('status', status)
          ..add('search', search)
          ..add('ids', ids))
        .toString();
  }
}

class GStaffUserInputBuilder
    implements Builder<GStaffUserInput, GStaffUserInputBuilder> {
  _$GStaffUserInput? _$v;

  GStaffMemberStatus? _status;
  GStaffMemberStatus? get status => _$this._status;
  set status(GStaffMemberStatus? status) => _$this._status = status;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GStaffUserInputBuilder();

  GStaffUserInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _status = $v.status;
      _search = $v.search;
      _ids = $v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStaffUserInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GStaffUserInput;
  }

  @override
  void update(void Function(GStaffUserInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GStaffUserInput build() => _build();

  _$GStaffUserInput _build() {
    _$GStaffUserInput _$result;
    try {
      _$result = _$v ??
          new _$GStaffUserInput._(
              status: status, search: search, ids: _ids?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GStaffUserInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GStockFilterInput extends GStockFilterInput {
  @override
  final double? quantity;
  @override
  final String? search;

  factory _$GStockFilterInput(
          [void Function(GStockFilterInputBuilder)? updates]) =>
      (new GStockFilterInputBuilder()..update(updates))._build();

  _$GStockFilterInput._({this.quantity, this.search}) : super._();

  @override
  GStockFilterInput rebuild(void Function(GStockFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStockFilterInputBuilder toBuilder() =>
      new GStockFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStockFilterInput &&
        quantity == other.quantity &&
        search == other.search;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, quantity.hashCode), search.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GStockFilterInput')
          ..add('quantity', quantity)
          ..add('search', search))
        .toString();
  }
}

class GStockFilterInputBuilder
    implements Builder<GStockFilterInput, GStockFilterInputBuilder> {
  _$GStockFilterInput? _$v;

  double? _quantity;
  double? get quantity => _$this._quantity;
  set quantity(double? quantity) => _$this._quantity = quantity;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  GStockFilterInputBuilder();

  GStockFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _quantity = $v.quantity;
      _search = $v.search;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStockFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GStockFilterInput;
  }

  @override
  void update(void Function(GStockFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GStockFilterInput build() => _build();

  _$GStockFilterInput _build() {
    final _$result =
        _$v ?? new _$GStockFilterInput._(quantity: quantity, search: search);
    replace(_$result);
    return _$result;
  }
}

class _$GStockInput extends GStockInput {
  @override
  final String warehouse;
  @override
  final int quantity;

  factory _$GStockInput([void Function(GStockInputBuilder)? updates]) =>
      (new GStockInputBuilder()..update(updates))._build();

  _$GStockInput._({required this.warehouse, required this.quantity})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        warehouse, r'GStockInput', 'warehouse');
    BuiltValueNullFieldError.checkNotNull(quantity, r'GStockInput', 'quantity');
  }

  @override
  GStockInput rebuild(void Function(GStockInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStockInputBuilder toBuilder() => new GStockInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStockInput &&
        warehouse == other.warehouse &&
        quantity == other.quantity;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, warehouse.hashCode), quantity.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GStockInput')
          ..add('warehouse', warehouse)
          ..add('quantity', quantity))
        .toString();
  }
}

class GStockInputBuilder implements Builder<GStockInput, GStockInputBuilder> {
  _$GStockInput? _$v;

  String? _warehouse;
  String? get warehouse => _$this._warehouse;
  set warehouse(String? warehouse) => _$this._warehouse = warehouse;

  int? _quantity;
  int? get quantity => _$this._quantity;
  set quantity(int? quantity) => _$this._quantity = quantity;

  GStockInputBuilder();

  GStockInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _warehouse = $v.warehouse;
      _quantity = $v.quantity;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStockInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GStockInput;
  }

  @override
  void update(void Function(GStockInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GStockInput build() => _build();

  _$GStockInput _build() {
    final _$result = _$v ??
        new _$GStockInput._(
            warehouse: BuiltValueNullFieldError.checkNotNull(
                warehouse, r'GStockInput', 'warehouse'),
            quantity: BuiltValueNullFieldError.checkNotNull(
                quantity, r'GStockInput', 'quantity'));
    replace(_$result);
    return _$result;
  }
}

class _$GStockSettingsInput extends GStockSettingsInput {
  @override
  final GAllocationStrategyEnum allocationStrategy;

  factory _$GStockSettingsInput(
          [void Function(GStockSettingsInputBuilder)? updates]) =>
      (new GStockSettingsInputBuilder()..update(updates))._build();

  _$GStockSettingsInput._({required this.allocationStrategy}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        allocationStrategy, r'GStockSettingsInput', 'allocationStrategy');
  }

  @override
  GStockSettingsInput rebuild(
          void Function(GStockSettingsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GStockSettingsInputBuilder toBuilder() =>
      new GStockSettingsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GStockSettingsInput &&
        allocationStrategy == other.allocationStrategy;
  }

  @override
  int get hashCode {
    return $jf($jc(0, allocationStrategy.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GStockSettingsInput')
          ..add('allocationStrategy', allocationStrategy))
        .toString();
  }
}

class GStockSettingsInputBuilder
    implements Builder<GStockSettingsInput, GStockSettingsInputBuilder> {
  _$GStockSettingsInput? _$v;

  GAllocationStrategyEnum? _allocationStrategy;
  GAllocationStrategyEnum? get allocationStrategy => _$this._allocationStrategy;
  set allocationStrategy(GAllocationStrategyEnum? allocationStrategy) =>
      _$this._allocationStrategy = allocationStrategy;

  GStockSettingsInputBuilder();

  GStockSettingsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _allocationStrategy = $v.allocationStrategy;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GStockSettingsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GStockSettingsInput;
  }

  @override
  void update(void Function(GStockSettingsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GStockSettingsInput build() => _build();

  _$GStockSettingsInput _build() {
    final _$result = _$v ??
        new _$GStockSettingsInput._(
            allocationStrategy: BuiltValueNullFieldError.checkNotNull(
                allocationStrategy,
                r'GStockSettingsInput',
                'allocationStrategy'));
    replace(_$result);
    return _$result;
  }
}

class _$GTimePeriodInputType extends GTimePeriodInputType {
  @override
  final int amount;
  @override
  final GTimePeriodTypeEnum type;

  factory _$GTimePeriodInputType(
          [void Function(GTimePeriodInputTypeBuilder)? updates]) =>
      (new GTimePeriodInputTypeBuilder()..update(updates))._build();

  _$GTimePeriodInputType._({required this.amount, required this.type})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        amount, r'GTimePeriodInputType', 'amount');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GTimePeriodInputType', 'type');
  }

  @override
  GTimePeriodInputType rebuild(
          void Function(GTimePeriodInputTypeBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTimePeriodInputTypeBuilder toBuilder() =>
      new GTimePeriodInputTypeBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTimePeriodInputType &&
        amount == other.amount &&
        type == other.type;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, amount.hashCode), type.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTimePeriodInputType')
          ..add('amount', amount)
          ..add('type', type))
        .toString();
  }
}

class GTimePeriodInputTypeBuilder
    implements Builder<GTimePeriodInputType, GTimePeriodInputTypeBuilder> {
  _$GTimePeriodInputType? _$v;

  int? _amount;
  int? get amount => _$this._amount;
  set amount(int? amount) => _$this._amount = amount;

  GTimePeriodTypeEnum? _type;
  GTimePeriodTypeEnum? get type => _$this._type;
  set type(GTimePeriodTypeEnum? type) => _$this._type = type;

  GTimePeriodInputTypeBuilder();

  GTimePeriodInputTypeBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _amount = $v.amount;
      _type = $v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTimePeriodInputType other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTimePeriodInputType;
  }

  @override
  void update(void Function(GTimePeriodInputTypeBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTimePeriodInputType build() => _build();

  _$GTimePeriodInputType _build() {
    final _$result = _$v ??
        new _$GTimePeriodInputType._(
            amount: BuiltValueNullFieldError.checkNotNull(
                amount, r'GTimePeriodInputType', 'amount'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GTimePeriodInputType', 'type'));
    replace(_$result);
    return _$result;
  }
}

class _$GTransactionCreateInput extends GTransactionCreateInput {
  @override
  final String status;
  @override
  final String type;
  @override
  final String? reference;
  @override
  final BuiltList<GTransactionActionEnum>? availableActions;
  @override
  final GMoneyInput? amountAuthorized;
  @override
  final GMoneyInput? amountCharged;
  @override
  final GMoneyInput? amountRefunded;
  @override
  final GMoneyInput? amountVoided;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;

  factory _$GTransactionCreateInput(
          [void Function(GTransactionCreateInputBuilder)? updates]) =>
      (new GTransactionCreateInputBuilder()..update(updates))._build();

  _$GTransactionCreateInput._(
      {required this.status,
      required this.type,
      this.reference,
      this.availableActions,
      this.amountAuthorized,
      this.amountCharged,
      this.amountRefunded,
      this.amountVoided,
      this.metadata,
      this.privateMetadata})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        status, r'GTransactionCreateInput', 'status');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GTransactionCreateInput', 'type');
  }

  @override
  GTransactionCreateInput rebuild(
          void Function(GTransactionCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTransactionCreateInputBuilder toBuilder() =>
      new GTransactionCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTransactionCreateInput &&
        status == other.status &&
        type == other.type &&
        reference == other.reference &&
        availableActions == other.availableActions &&
        amountAuthorized == other.amountAuthorized &&
        amountCharged == other.amountCharged &&
        amountRefunded == other.amountRefunded &&
        amountVoided == other.amountVoided &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc($jc(0, status.hashCode), type.hashCode),
                                    reference.hashCode),
                                availableActions.hashCode),
                            amountAuthorized.hashCode),
                        amountCharged.hashCode),
                    amountRefunded.hashCode),
                amountVoided.hashCode),
            metadata.hashCode),
        privateMetadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTransactionCreateInput')
          ..add('status', status)
          ..add('type', type)
          ..add('reference', reference)
          ..add('availableActions', availableActions)
          ..add('amountAuthorized', amountAuthorized)
          ..add('amountCharged', amountCharged)
          ..add('amountRefunded', amountRefunded)
          ..add('amountVoided', amountVoided)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata))
        .toString();
  }
}

class GTransactionCreateInputBuilder
    implements
        Builder<GTransactionCreateInput, GTransactionCreateInputBuilder> {
  _$GTransactionCreateInput? _$v;

  String? _status;
  String? get status => _$this._status;
  set status(String? status) => _$this._status = status;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _reference;
  String? get reference => _$this._reference;
  set reference(String? reference) => _$this._reference = reference;

  ListBuilder<GTransactionActionEnum>? _availableActions;
  ListBuilder<GTransactionActionEnum> get availableActions =>
      _$this._availableActions ??= new ListBuilder<GTransactionActionEnum>();
  set availableActions(ListBuilder<GTransactionActionEnum>? availableActions) =>
      _$this._availableActions = availableActions;

  GMoneyInputBuilder? _amountAuthorized;
  GMoneyInputBuilder get amountAuthorized =>
      _$this._amountAuthorized ??= new GMoneyInputBuilder();
  set amountAuthorized(GMoneyInputBuilder? amountAuthorized) =>
      _$this._amountAuthorized = amountAuthorized;

  GMoneyInputBuilder? _amountCharged;
  GMoneyInputBuilder get amountCharged =>
      _$this._amountCharged ??= new GMoneyInputBuilder();
  set amountCharged(GMoneyInputBuilder? amountCharged) =>
      _$this._amountCharged = amountCharged;

  GMoneyInputBuilder? _amountRefunded;
  GMoneyInputBuilder get amountRefunded =>
      _$this._amountRefunded ??= new GMoneyInputBuilder();
  set amountRefunded(GMoneyInputBuilder? amountRefunded) =>
      _$this._amountRefunded = amountRefunded;

  GMoneyInputBuilder? _amountVoided;
  GMoneyInputBuilder get amountVoided =>
      _$this._amountVoided ??= new GMoneyInputBuilder();
  set amountVoided(GMoneyInputBuilder? amountVoided) =>
      _$this._amountVoided = amountVoided;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  GTransactionCreateInputBuilder();

  GTransactionCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _status = $v.status;
      _type = $v.type;
      _reference = $v.reference;
      _availableActions = $v.availableActions?.toBuilder();
      _amountAuthorized = $v.amountAuthorized?.toBuilder();
      _amountCharged = $v.amountCharged?.toBuilder();
      _amountRefunded = $v.amountRefunded?.toBuilder();
      _amountVoided = $v.amountVoided?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTransactionCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTransactionCreateInput;
  }

  @override
  void update(void Function(GTransactionCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTransactionCreateInput build() => _build();

  _$GTransactionCreateInput _build() {
    _$GTransactionCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GTransactionCreateInput._(
              status: BuiltValueNullFieldError.checkNotNull(
                  status, r'GTransactionCreateInput', 'status'),
              type: BuiltValueNullFieldError.checkNotNull(
                  type, r'GTransactionCreateInput', 'type'),
              reference: reference,
              availableActions: _availableActions?.build(),
              amountAuthorized: _amountAuthorized?.build(),
              amountCharged: _amountCharged?.build(),
              amountRefunded: _amountRefunded?.build(),
              amountVoided: _amountVoided?.build(),
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'availableActions';
        _availableActions?.build();
        _$failedField = 'amountAuthorized';
        _amountAuthorized?.build();
        _$failedField = 'amountCharged';
        _amountCharged?.build();
        _$failedField = 'amountRefunded';
        _amountRefunded?.build();
        _$failedField = 'amountVoided';
        _amountVoided?.build();
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTransactionCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTransactionEventInput extends GTransactionEventInput {
  @override
  final GTransactionStatus status;
  @override
  final String? reference;
  @override
  final String? name;

  factory _$GTransactionEventInput(
          [void Function(GTransactionEventInputBuilder)? updates]) =>
      (new GTransactionEventInputBuilder()..update(updates))._build();

  _$GTransactionEventInput._({required this.status, this.reference, this.name})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        status, r'GTransactionEventInput', 'status');
  }

  @override
  GTransactionEventInput rebuild(
          void Function(GTransactionEventInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTransactionEventInputBuilder toBuilder() =>
      new GTransactionEventInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTransactionEventInput &&
        status == other.status &&
        reference == other.reference &&
        name == other.name;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, status.hashCode), reference.hashCode), name.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTransactionEventInput')
          ..add('status', status)
          ..add('reference', reference)
          ..add('name', name))
        .toString();
  }
}

class GTransactionEventInputBuilder
    implements Builder<GTransactionEventInput, GTransactionEventInputBuilder> {
  _$GTransactionEventInput? _$v;

  GTransactionStatus? _status;
  GTransactionStatus? get status => _$this._status;
  set status(GTransactionStatus? status) => _$this._status = status;

  String? _reference;
  String? get reference => _$this._reference;
  set reference(String? reference) => _$this._reference = reference;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GTransactionEventInputBuilder();

  GTransactionEventInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _status = $v.status;
      _reference = $v.reference;
      _name = $v.name;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTransactionEventInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTransactionEventInput;
  }

  @override
  void update(void Function(GTransactionEventInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTransactionEventInput build() => _build();

  _$GTransactionEventInput _build() {
    final _$result = _$v ??
        new _$GTransactionEventInput._(
            status: BuiltValueNullFieldError.checkNotNull(
                status, r'GTransactionEventInput', 'status'),
            reference: reference,
            name: name);
    replace(_$result);
    return _$result;
  }
}

class _$GTransactionUpdateInput extends GTransactionUpdateInput {
  @override
  final String? status;
  @override
  final String? type;
  @override
  final String? reference;
  @override
  final BuiltList<GTransactionActionEnum>? availableActions;
  @override
  final GMoneyInput? amountAuthorized;
  @override
  final GMoneyInput? amountCharged;
  @override
  final GMoneyInput? amountRefunded;
  @override
  final GMoneyInput? amountVoided;
  @override
  final BuiltList<GMetadataInput>? metadata;
  @override
  final BuiltList<GMetadataInput>? privateMetadata;

  factory _$GTransactionUpdateInput(
          [void Function(GTransactionUpdateInputBuilder)? updates]) =>
      (new GTransactionUpdateInputBuilder()..update(updates))._build();

  _$GTransactionUpdateInput._(
      {this.status,
      this.type,
      this.reference,
      this.availableActions,
      this.amountAuthorized,
      this.amountCharged,
      this.amountRefunded,
      this.amountVoided,
      this.metadata,
      this.privateMetadata})
      : super._();

  @override
  GTransactionUpdateInput rebuild(
          void Function(GTransactionUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTransactionUpdateInputBuilder toBuilder() =>
      new GTransactionUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTransactionUpdateInput &&
        status == other.status &&
        type == other.type &&
        reference == other.reference &&
        availableActions == other.availableActions &&
        amountAuthorized == other.amountAuthorized &&
        amountCharged == other.amountCharged &&
        amountRefunded == other.amountRefunded &&
        amountVoided == other.amountVoided &&
        metadata == other.metadata &&
        privateMetadata == other.privateMetadata;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc($jc($jc(0, status.hashCode), type.hashCode),
                                    reference.hashCode),
                                availableActions.hashCode),
                            amountAuthorized.hashCode),
                        amountCharged.hashCode),
                    amountRefunded.hashCode),
                amountVoided.hashCode),
            metadata.hashCode),
        privateMetadata.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTransactionUpdateInput')
          ..add('status', status)
          ..add('type', type)
          ..add('reference', reference)
          ..add('availableActions', availableActions)
          ..add('amountAuthorized', amountAuthorized)
          ..add('amountCharged', amountCharged)
          ..add('amountRefunded', amountRefunded)
          ..add('amountVoided', amountVoided)
          ..add('metadata', metadata)
          ..add('privateMetadata', privateMetadata))
        .toString();
  }
}

class GTransactionUpdateInputBuilder
    implements
        Builder<GTransactionUpdateInput, GTransactionUpdateInputBuilder> {
  _$GTransactionUpdateInput? _$v;

  String? _status;
  String? get status => _$this._status;
  set status(String? status) => _$this._status = status;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _reference;
  String? get reference => _$this._reference;
  set reference(String? reference) => _$this._reference = reference;

  ListBuilder<GTransactionActionEnum>? _availableActions;
  ListBuilder<GTransactionActionEnum> get availableActions =>
      _$this._availableActions ??= new ListBuilder<GTransactionActionEnum>();
  set availableActions(ListBuilder<GTransactionActionEnum>? availableActions) =>
      _$this._availableActions = availableActions;

  GMoneyInputBuilder? _amountAuthorized;
  GMoneyInputBuilder get amountAuthorized =>
      _$this._amountAuthorized ??= new GMoneyInputBuilder();
  set amountAuthorized(GMoneyInputBuilder? amountAuthorized) =>
      _$this._amountAuthorized = amountAuthorized;

  GMoneyInputBuilder? _amountCharged;
  GMoneyInputBuilder get amountCharged =>
      _$this._amountCharged ??= new GMoneyInputBuilder();
  set amountCharged(GMoneyInputBuilder? amountCharged) =>
      _$this._amountCharged = amountCharged;

  GMoneyInputBuilder? _amountRefunded;
  GMoneyInputBuilder get amountRefunded =>
      _$this._amountRefunded ??= new GMoneyInputBuilder();
  set amountRefunded(GMoneyInputBuilder? amountRefunded) =>
      _$this._amountRefunded = amountRefunded;

  GMoneyInputBuilder? _amountVoided;
  GMoneyInputBuilder get amountVoided =>
      _$this._amountVoided ??= new GMoneyInputBuilder();
  set amountVoided(GMoneyInputBuilder? amountVoided) =>
      _$this._amountVoided = amountVoided;

  ListBuilder<GMetadataInput>? _metadata;
  ListBuilder<GMetadataInput> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataInput>();
  set metadata(ListBuilder<GMetadataInput>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<GMetadataInput>? _privateMetadata;
  ListBuilder<GMetadataInput> get privateMetadata =>
      _$this._privateMetadata ??= new ListBuilder<GMetadataInput>();
  set privateMetadata(ListBuilder<GMetadataInput>? privateMetadata) =>
      _$this._privateMetadata = privateMetadata;

  GTransactionUpdateInputBuilder();

  GTransactionUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _status = $v.status;
      _type = $v.type;
      _reference = $v.reference;
      _availableActions = $v.availableActions?.toBuilder();
      _amountAuthorized = $v.amountAuthorized?.toBuilder();
      _amountCharged = $v.amountCharged?.toBuilder();
      _amountRefunded = $v.amountRefunded?.toBuilder();
      _amountVoided = $v.amountVoided?.toBuilder();
      _metadata = $v.metadata?.toBuilder();
      _privateMetadata = $v.privateMetadata?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTransactionUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTransactionUpdateInput;
  }

  @override
  void update(void Function(GTransactionUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTransactionUpdateInput build() => _build();

  _$GTransactionUpdateInput _build() {
    _$GTransactionUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GTransactionUpdateInput._(
              status: status,
              type: type,
              reference: reference,
              availableActions: _availableActions?.build(),
              amountAuthorized: _amountAuthorized?.build(),
              amountCharged: _amountCharged?.build(),
              amountRefunded: _amountRefunded?.build(),
              amountVoided: _amountVoided?.build(),
              metadata: _metadata?.build(),
              privateMetadata: _privateMetadata?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'availableActions';
        _availableActions?.build();
        _$failedField = 'amountAuthorized';
        _amountAuthorized?.build();
        _$failedField = 'amountCharged';
        _amountCharged?.build();
        _$failedField = 'amountRefunded';
        _amountRefunded?.build();
        _$failedField = 'amountVoided';
        _amountVoided?.build();
        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'privateMetadata';
        _privateMetadata?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTransactionUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTranslationInput extends GTranslationInput {
  @override
  final String? seoTitle;
  @override
  final String? seoDescription;
  @override
  final String? name;
  @override
  final GJSONString? description;

  factory _$GTranslationInput(
          [void Function(GTranslationInputBuilder)? updates]) =>
      (new GTranslationInputBuilder()..update(updates))._build();

  _$GTranslationInput._(
      {this.seoTitle, this.seoDescription, this.name, this.description})
      : super._();

  @override
  GTranslationInput rebuild(void Function(GTranslationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTranslationInputBuilder toBuilder() =>
      new GTranslationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTranslationInput &&
        seoTitle == other.seoTitle &&
        seoDescription == other.seoDescription &&
        name == other.name &&
        description == other.description;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc(0, seoTitle.hashCode), seoDescription.hashCode),
            name.hashCode),
        description.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTranslationInput')
          ..add('seoTitle', seoTitle)
          ..add('seoDescription', seoDescription)
          ..add('name', name)
          ..add('description', description))
        .toString();
  }
}

class GTranslationInputBuilder
    implements Builder<GTranslationInput, GTranslationInputBuilder> {
  _$GTranslationInput? _$v;

  String? _seoTitle;
  String? get seoTitle => _$this._seoTitle;
  set seoTitle(String? seoTitle) => _$this._seoTitle = seoTitle;

  String? _seoDescription;
  String? get seoDescription => _$this._seoDescription;
  set seoDescription(String? seoDescription) =>
      _$this._seoDescription = seoDescription;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GJSONStringBuilder? _description;
  GJSONStringBuilder get description =>
      _$this._description ??= new GJSONStringBuilder();
  set description(GJSONStringBuilder? description) =>
      _$this._description = description;

  GTranslationInputBuilder();

  GTranslationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _seoTitle = $v.seoTitle;
      _seoDescription = $v.seoDescription;
      _name = $v.name;
      _description = $v.description?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTranslationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTranslationInput;
  }

  @override
  void update(void Function(GTranslationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTranslationInput build() => _build();

  _$GTranslationInput _build() {
    _$GTranslationInput _$result;
    try {
      _$result = _$v ??
          new _$GTranslationInput._(
              seoTitle: seoTitle,
              seoDescription: seoDescription,
              name: name,
              description: _description?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'description';
        _description?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTranslationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUpdateInvoiceInput extends GUpdateInvoiceInput {
  @override
  final String? number;
  @override
  final String? url;

  factory _$GUpdateInvoiceInput(
          [void Function(GUpdateInvoiceInputBuilder)? updates]) =>
      (new GUpdateInvoiceInputBuilder()..update(updates))._build();

  _$GUpdateInvoiceInput._({this.number, this.url}) : super._();

  @override
  GUpdateInvoiceInput rebuild(
          void Function(GUpdateInvoiceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdateInvoiceInputBuilder toBuilder() =>
      new GUpdateInvoiceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdateInvoiceInput &&
        number == other.number &&
        url == other.url;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, number.hashCode), url.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdateInvoiceInput')
          ..add('number', number)
          ..add('url', url))
        .toString();
  }
}

class GUpdateInvoiceInputBuilder
    implements Builder<GUpdateInvoiceInput, GUpdateInvoiceInputBuilder> {
  _$GUpdateInvoiceInput? _$v;

  String? _number;
  String? get number => _$this._number;
  set number(String? number) => _$this._number = number;

  String? _url;
  String? get url => _$this._url;
  set url(String? url) => _$this._url = url;

  GUpdateInvoiceInputBuilder();

  GUpdateInvoiceInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _number = $v.number;
      _url = $v.url;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdateInvoiceInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdateInvoiceInput;
  }

  @override
  void update(void Function(GUpdateInvoiceInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdateInvoiceInput build() => _build();

  _$GUpdateInvoiceInput _build() {
    final _$result =
        _$v ?? new _$GUpdateInvoiceInput._(number: number, url: url);
    replace(_$result);
    return _$result;
  }
}

class _$GUpload extends GUpload {
  @override
  final String value;

  factory _$GUpload([void Function(GUploadBuilder)? updates]) =>
      (new GUploadBuilder()..update(updates))._build();

  _$GUpload._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GUpload', 'value');
  }

  @override
  GUpload rebuild(void Function(GUploadBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUploadBuilder toBuilder() => new GUploadBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpload && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpload')..add('value', value))
        .toString();
  }
}

class GUploadBuilder implements Builder<GUpload, GUploadBuilder> {
  _$GUpload? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUploadBuilder();

  GUploadBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpload other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpload;
  }

  @override
  void update(void Function(GUploadBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpload build() => _build();

  _$GUpload _build() {
    final _$result = _$v ??
        new _$GUpload._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GUpload', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserCreateInput extends GUserCreateInput {
  @override
  final GAddressInput? defaultBillingAddress;
  @override
  final GAddressInput? defaultShippingAddress;
  @override
  final String? firstName;
  @override
  final String? lastName;
  @override
  final String? email;
  @override
  final bool? isActive;
  @override
  final String? note;
  @override
  final GLanguageCodeEnum? languageCode;
  @override
  final String? redirectUrl;
  @override
  final String? channel;

  factory _$GUserCreateInput(
          [void Function(GUserCreateInputBuilder)? updates]) =>
      (new GUserCreateInputBuilder()..update(updates))._build();

  _$GUserCreateInput._(
      {this.defaultBillingAddress,
      this.defaultShippingAddress,
      this.firstName,
      this.lastName,
      this.email,
      this.isActive,
      this.note,
      this.languageCode,
      this.redirectUrl,
      this.channel})
      : super._();

  @override
  GUserCreateInput rebuild(void Function(GUserCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserCreateInputBuilder toBuilder() =>
      new GUserCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserCreateInput &&
        defaultBillingAddress == other.defaultBillingAddress &&
        defaultShippingAddress == other.defaultShippingAddress &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        email == other.email &&
        isActive == other.isActive &&
        note == other.note &&
        languageCode == other.languageCode &&
        redirectUrl == other.redirectUrl &&
        channel == other.channel;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc($jc(0, defaultBillingAddress.hashCode),
                                        defaultShippingAddress.hashCode),
                                    firstName.hashCode),
                                lastName.hashCode),
                            email.hashCode),
                        isActive.hashCode),
                    note.hashCode),
                languageCode.hashCode),
            redirectUrl.hashCode),
        channel.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserCreateInput')
          ..add('defaultBillingAddress', defaultBillingAddress)
          ..add('defaultShippingAddress', defaultShippingAddress)
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('email', email)
          ..add('isActive', isActive)
          ..add('note', note)
          ..add('languageCode', languageCode)
          ..add('redirectUrl', redirectUrl)
          ..add('channel', channel))
        .toString();
  }
}

class GUserCreateInputBuilder
    implements Builder<GUserCreateInput, GUserCreateInputBuilder> {
  _$GUserCreateInput? _$v;

  GAddressInputBuilder? _defaultBillingAddress;
  GAddressInputBuilder get defaultBillingAddress =>
      _$this._defaultBillingAddress ??= new GAddressInputBuilder();
  set defaultBillingAddress(GAddressInputBuilder? defaultBillingAddress) =>
      _$this._defaultBillingAddress = defaultBillingAddress;

  GAddressInputBuilder? _defaultShippingAddress;
  GAddressInputBuilder get defaultShippingAddress =>
      _$this._defaultShippingAddress ??= new GAddressInputBuilder();
  set defaultShippingAddress(GAddressInputBuilder? defaultShippingAddress) =>
      _$this._defaultShippingAddress = defaultShippingAddress;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  String? _note;
  String? get note => _$this._note;
  set note(String? note) => _$this._note = note;

  GLanguageCodeEnum? _languageCode;
  GLanguageCodeEnum? get languageCode => _$this._languageCode;
  set languageCode(GLanguageCodeEnum? languageCode) =>
      _$this._languageCode = languageCode;

  String? _redirectUrl;
  String? get redirectUrl => _$this._redirectUrl;
  set redirectUrl(String? redirectUrl) => _$this._redirectUrl = redirectUrl;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GUserCreateInputBuilder();

  GUserCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _defaultBillingAddress = $v.defaultBillingAddress?.toBuilder();
      _defaultShippingAddress = $v.defaultShippingAddress?.toBuilder();
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _email = $v.email;
      _isActive = $v.isActive;
      _note = $v.note;
      _languageCode = $v.languageCode;
      _redirectUrl = $v.redirectUrl;
      _channel = $v.channel;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserCreateInput;
  }

  @override
  void update(void Function(GUserCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserCreateInput build() => _build();

  _$GUserCreateInput _build() {
    _$GUserCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GUserCreateInput._(
              defaultBillingAddress: _defaultBillingAddress?.build(),
              defaultShippingAddress: _defaultShippingAddress?.build(),
              firstName: firstName,
              lastName: lastName,
              email: email,
              isActive: isActive,
              note: note,
              languageCode: languageCode,
              redirectUrl: redirectUrl,
              channel: channel);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'defaultBillingAddress';
        _defaultBillingAddress?.build();
        _$failedField = 'defaultShippingAddress';
        _defaultShippingAddress?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserSortingInput extends GUserSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GUserSortField field;

  factory _$GUserSortingInput(
          [void Function(GUserSortingInputBuilder)? updates]) =>
      (new GUserSortingInputBuilder()..update(updates))._build();

  _$GUserSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GUserSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(field, r'GUserSortingInput', 'field');
  }

  @override
  GUserSortingInput rebuild(void Function(GUserSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserSortingInputBuilder toBuilder() =>
      new GUserSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GUserSortingInputBuilder
    implements Builder<GUserSortingInput, GUserSortingInputBuilder> {
  _$GUserSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GUserSortField? _field;
  GUserSortField? get field => _$this._field;
  set field(GUserSortField? field) => _$this._field = field;

  GUserSortingInputBuilder();

  GUserSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserSortingInput;
  }

  @override
  void update(void Function(GUserSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserSortingInput build() => _build();

  _$GUserSortingInput _build() {
    final _$result = _$v ??
        new _$GUserSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GUserSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GUserSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GUUID extends GUUID {
  @override
  final String value;

  factory _$GUUID([void Function(GUUIDBuilder)? updates]) =>
      (new GUUIDBuilder()..update(updates))._build();

  _$GUUID._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GUUID', 'value');
  }

  @override
  GUUID rebuild(void Function(GUUIDBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUUIDBuilder toBuilder() => new GUUIDBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUUID && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUUID')..add('value', value))
        .toString();
  }
}

class GUUIDBuilder implements Builder<GUUID, GUUIDBuilder> {
  _$GUUID? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUUIDBuilder();

  GUUIDBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUUID other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUUID;
  }

  @override
  void update(void Function(GUUIDBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUUID build() => _build();

  _$GUUID _build() {
    final _$result = _$v ??
        new _$GUUID._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GUUID', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GVoucherChannelListingAddInput extends GVoucherChannelListingAddInput {
  @override
  final String channelId;
  @override
  final GPositiveDecimal? discountValue;
  @override
  final GPositiveDecimal? minAmountSpent;

  factory _$GVoucherChannelListingAddInput(
          [void Function(GVoucherChannelListingAddInputBuilder)? updates]) =>
      (new GVoucherChannelListingAddInputBuilder()..update(updates))._build();

  _$GVoucherChannelListingAddInput._(
      {required this.channelId, this.discountValue, this.minAmountSpent})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        channelId, r'GVoucherChannelListingAddInput', 'channelId');
  }

  @override
  GVoucherChannelListingAddInput rebuild(
          void Function(GVoucherChannelListingAddInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVoucherChannelListingAddInputBuilder toBuilder() =>
      new GVoucherChannelListingAddInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVoucherChannelListingAddInput &&
        channelId == other.channelId &&
        discountValue == other.discountValue &&
        minAmountSpent == other.minAmountSpent;
  }

  @override
  int get hashCode {
    return $jf($jc($jc($jc(0, channelId.hashCode), discountValue.hashCode),
        minAmountSpent.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVoucherChannelListingAddInput')
          ..add('channelId', channelId)
          ..add('discountValue', discountValue)
          ..add('minAmountSpent', minAmountSpent))
        .toString();
  }
}

class GVoucherChannelListingAddInputBuilder
    implements
        Builder<GVoucherChannelListingAddInput,
            GVoucherChannelListingAddInputBuilder> {
  _$GVoucherChannelListingAddInput? _$v;

  String? _channelId;
  String? get channelId => _$this._channelId;
  set channelId(String? channelId) => _$this._channelId = channelId;

  GPositiveDecimalBuilder? _discountValue;
  GPositiveDecimalBuilder get discountValue =>
      _$this._discountValue ??= new GPositiveDecimalBuilder();
  set discountValue(GPositiveDecimalBuilder? discountValue) =>
      _$this._discountValue = discountValue;

  GPositiveDecimalBuilder? _minAmountSpent;
  GPositiveDecimalBuilder get minAmountSpent =>
      _$this._minAmountSpent ??= new GPositiveDecimalBuilder();
  set minAmountSpent(GPositiveDecimalBuilder? minAmountSpent) =>
      _$this._minAmountSpent = minAmountSpent;

  GVoucherChannelListingAddInputBuilder();

  GVoucherChannelListingAddInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _channelId = $v.channelId;
      _discountValue = $v.discountValue?.toBuilder();
      _minAmountSpent = $v.minAmountSpent?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVoucherChannelListingAddInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVoucherChannelListingAddInput;
  }

  @override
  void update(void Function(GVoucherChannelListingAddInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVoucherChannelListingAddInput build() => _build();

  _$GVoucherChannelListingAddInput _build() {
    _$GVoucherChannelListingAddInput _$result;
    try {
      _$result = _$v ??
          new _$GVoucherChannelListingAddInput._(
              channelId: BuiltValueNullFieldError.checkNotNull(
                  channelId, r'GVoucherChannelListingAddInput', 'channelId'),
              discountValue: _discountValue?.build(),
              minAmountSpent: _minAmountSpent?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'discountValue';
        _discountValue?.build();
        _$failedField = 'minAmountSpent';
        _minAmountSpent?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVoucherChannelListingAddInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVoucherChannelListingInput extends GVoucherChannelListingInput {
  @override
  final BuiltList<GVoucherChannelListingAddInput>? addChannels;
  @override
  final BuiltList<String>? removeChannels;

  factory _$GVoucherChannelListingInput(
          [void Function(GVoucherChannelListingInputBuilder)? updates]) =>
      (new GVoucherChannelListingInputBuilder()..update(updates))._build();

  _$GVoucherChannelListingInput._({this.addChannels, this.removeChannels})
      : super._();

  @override
  GVoucherChannelListingInput rebuild(
          void Function(GVoucherChannelListingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVoucherChannelListingInputBuilder toBuilder() =>
      new GVoucherChannelListingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVoucherChannelListingInput &&
        addChannels == other.addChannels &&
        removeChannels == other.removeChannels;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, addChannels.hashCode), removeChannels.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVoucherChannelListingInput')
          ..add('addChannels', addChannels)
          ..add('removeChannels', removeChannels))
        .toString();
  }
}

class GVoucherChannelListingInputBuilder
    implements
        Builder<GVoucherChannelListingInput,
            GVoucherChannelListingInputBuilder> {
  _$GVoucherChannelListingInput? _$v;

  ListBuilder<GVoucherChannelListingAddInput>? _addChannels;
  ListBuilder<GVoucherChannelListingAddInput> get addChannels =>
      _$this._addChannels ??= new ListBuilder<GVoucherChannelListingAddInput>();
  set addChannels(ListBuilder<GVoucherChannelListingAddInput>? addChannels) =>
      _$this._addChannels = addChannels;

  ListBuilder<String>? _removeChannels;
  ListBuilder<String> get removeChannels =>
      _$this._removeChannels ??= new ListBuilder<String>();
  set removeChannels(ListBuilder<String>? removeChannels) =>
      _$this._removeChannels = removeChannels;

  GVoucherChannelListingInputBuilder();

  GVoucherChannelListingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _addChannels = $v.addChannels?.toBuilder();
      _removeChannels = $v.removeChannels?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVoucherChannelListingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVoucherChannelListingInput;
  }

  @override
  void update(void Function(GVoucherChannelListingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVoucherChannelListingInput build() => _build();

  _$GVoucherChannelListingInput _build() {
    _$GVoucherChannelListingInput _$result;
    try {
      _$result = _$v ??
          new _$GVoucherChannelListingInput._(
              addChannels: _addChannels?.build(),
              removeChannels: _removeChannels?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'addChannels';
        _addChannels?.build();
        _$failedField = 'removeChannels';
        _removeChannels?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVoucherChannelListingInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVoucherFilterInput extends GVoucherFilterInput {
  @override
  final BuiltList<GDiscountStatusEnum>? status;
  @override
  final GIntRangeInput? timesUsed;
  @override
  final BuiltList<GVoucherDiscountType>? discountType;
  @override
  final GDateTimeRangeInput? started;
  @override
  final String? search;
  @override
  final BuiltList<GMetadataFilter>? metadata;
  @override
  final BuiltList<String>? ids;

  factory _$GVoucherFilterInput(
          [void Function(GVoucherFilterInputBuilder)? updates]) =>
      (new GVoucherFilterInputBuilder()..update(updates))._build();

  _$GVoucherFilterInput._(
      {this.status,
      this.timesUsed,
      this.discountType,
      this.started,
      this.search,
      this.metadata,
      this.ids})
      : super._();

  @override
  GVoucherFilterInput rebuild(
          void Function(GVoucherFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVoucherFilterInputBuilder toBuilder() =>
      new GVoucherFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVoucherFilterInput &&
        status == other.status &&
        timesUsed == other.timesUsed &&
        discountType == other.discountType &&
        started == other.started &&
        search == other.search &&
        metadata == other.metadata &&
        ids == other.ids;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc($jc(0, status.hashCode), timesUsed.hashCode),
                        discountType.hashCode),
                    started.hashCode),
                search.hashCode),
            metadata.hashCode),
        ids.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVoucherFilterInput')
          ..add('status', status)
          ..add('timesUsed', timesUsed)
          ..add('discountType', discountType)
          ..add('started', started)
          ..add('search', search)
          ..add('metadata', metadata)
          ..add('ids', ids))
        .toString();
  }
}

class GVoucherFilterInputBuilder
    implements Builder<GVoucherFilterInput, GVoucherFilterInputBuilder> {
  _$GVoucherFilterInput? _$v;

  ListBuilder<GDiscountStatusEnum>? _status;
  ListBuilder<GDiscountStatusEnum> get status =>
      _$this._status ??= new ListBuilder<GDiscountStatusEnum>();
  set status(ListBuilder<GDiscountStatusEnum>? status) =>
      _$this._status = status;

  GIntRangeInputBuilder? _timesUsed;
  GIntRangeInputBuilder get timesUsed =>
      _$this._timesUsed ??= new GIntRangeInputBuilder();
  set timesUsed(GIntRangeInputBuilder? timesUsed) =>
      _$this._timesUsed = timesUsed;

  ListBuilder<GVoucherDiscountType>? _discountType;
  ListBuilder<GVoucherDiscountType> get discountType =>
      _$this._discountType ??= new ListBuilder<GVoucherDiscountType>();
  set discountType(ListBuilder<GVoucherDiscountType>? discountType) =>
      _$this._discountType = discountType;

  GDateTimeRangeInputBuilder? _started;
  GDateTimeRangeInputBuilder get started =>
      _$this._started ??= new GDateTimeRangeInputBuilder();
  set started(GDateTimeRangeInputBuilder? started) => _$this._started = started;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<GMetadataFilter>? _metadata;
  ListBuilder<GMetadataFilter> get metadata =>
      _$this._metadata ??= new ListBuilder<GMetadataFilter>();
  set metadata(ListBuilder<GMetadataFilter>? metadata) =>
      _$this._metadata = metadata;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  GVoucherFilterInputBuilder();

  GVoucherFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _status = $v.status?.toBuilder();
      _timesUsed = $v.timesUsed?.toBuilder();
      _discountType = $v.discountType?.toBuilder();
      _started = $v.started?.toBuilder();
      _search = $v.search;
      _metadata = $v.metadata?.toBuilder();
      _ids = $v.ids?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVoucherFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVoucherFilterInput;
  }

  @override
  void update(void Function(GVoucherFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVoucherFilterInput build() => _build();

  _$GVoucherFilterInput _build() {
    _$GVoucherFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GVoucherFilterInput._(
              status: _status?.build(),
              timesUsed: _timesUsed?.build(),
              discountType: _discountType?.build(),
              started: _started?.build(),
              search: search,
              metadata: _metadata?.build(),
              ids: _ids?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'status';
        _status?.build();
        _$failedField = 'timesUsed';
        _timesUsed?.build();
        _$failedField = 'discountType';
        _discountType?.build();
        _$failedField = 'started';
        _started?.build();

        _$failedField = 'metadata';
        _metadata?.build();
        _$failedField = 'ids';
        _ids?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVoucherFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVoucherInput extends GVoucherInput {
  @override
  final GVoucherTypeEnum? type;
  @override
  final String? name;
  @override
  final String? code;
  @override
  final GDateTime? startDate;
  @override
  final GDateTime? endDate;
  @override
  final GDiscountValueTypeEnum? discountValueType;
  @override
  final BuiltList<String>? products;
  @override
  final BuiltList<String>? variants;
  @override
  final BuiltList<String>? collections;
  @override
  final BuiltList<String>? categories;
  @override
  final int? minCheckoutItemsQuantity;
  @override
  final BuiltList<String>? countries;
  @override
  final bool? applyOncePerOrder;
  @override
  final bool? applyOncePerCustomer;
  @override
  final bool? onlyForStaff;
  @override
  final int? usageLimit;

  factory _$GVoucherInput([void Function(GVoucherInputBuilder)? updates]) =>
      (new GVoucherInputBuilder()..update(updates))._build();

  _$GVoucherInput._(
      {this.type,
      this.name,
      this.code,
      this.startDate,
      this.endDate,
      this.discountValueType,
      this.products,
      this.variants,
      this.collections,
      this.categories,
      this.minCheckoutItemsQuantity,
      this.countries,
      this.applyOncePerOrder,
      this.applyOncePerCustomer,
      this.onlyForStaff,
      this.usageLimit})
      : super._();

  @override
  GVoucherInput rebuild(void Function(GVoucherInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVoucherInputBuilder toBuilder() => new GVoucherInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVoucherInput &&
        type == other.type &&
        name == other.name &&
        code == other.code &&
        startDate == other.startDate &&
        endDate == other.endDate &&
        discountValueType == other.discountValueType &&
        products == other.products &&
        variants == other.variants &&
        collections == other.collections &&
        categories == other.categories &&
        minCheckoutItemsQuantity == other.minCheckoutItemsQuantity &&
        countries == other.countries &&
        applyOncePerOrder == other.applyOncePerOrder &&
        applyOncePerCustomer == other.applyOncePerCustomer &&
        onlyForStaff == other.onlyForStaff &&
        usageLimit == other.usageLimit;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc(
                                $jc(
                                    $jc(
                                        $jc(
                                            $jc(
                                                $jc(
                                                    $jc(
                                                        $jc(
                                                            $jc(
                                                                $jc(0,
                                                                    type.hashCode),
                                                                name.hashCode),
                                                            code.hashCode),
                                                        startDate.hashCode),
                                                    endDate.hashCode),
                                                discountValueType.hashCode),
                                            products.hashCode),
                                        variants.hashCode),
                                    collections.hashCode),
                                categories.hashCode),
                            minCheckoutItemsQuantity.hashCode),
                        countries.hashCode),
                    applyOncePerOrder.hashCode),
                applyOncePerCustomer.hashCode),
            onlyForStaff.hashCode),
        usageLimit.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVoucherInput')
          ..add('type', type)
          ..add('name', name)
          ..add('code', code)
          ..add('startDate', startDate)
          ..add('endDate', endDate)
          ..add('discountValueType', discountValueType)
          ..add('products', products)
          ..add('variants', variants)
          ..add('collections', collections)
          ..add('categories', categories)
          ..add('minCheckoutItemsQuantity', minCheckoutItemsQuantity)
          ..add('countries', countries)
          ..add('applyOncePerOrder', applyOncePerOrder)
          ..add('applyOncePerCustomer', applyOncePerCustomer)
          ..add('onlyForStaff', onlyForStaff)
          ..add('usageLimit', usageLimit))
        .toString();
  }
}

class GVoucherInputBuilder
    implements Builder<GVoucherInput, GVoucherInputBuilder> {
  _$GVoucherInput? _$v;

  GVoucherTypeEnum? _type;
  GVoucherTypeEnum? get type => _$this._type;
  set type(GVoucherTypeEnum? type) => _$this._type = type;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _code;
  String? get code => _$this._code;
  set code(String? code) => _$this._code = code;

  GDateTimeBuilder? _startDate;
  GDateTimeBuilder get startDate =>
      _$this._startDate ??= new GDateTimeBuilder();
  set startDate(GDateTimeBuilder? startDate) => _$this._startDate = startDate;

  GDateTimeBuilder? _endDate;
  GDateTimeBuilder get endDate => _$this._endDate ??= new GDateTimeBuilder();
  set endDate(GDateTimeBuilder? endDate) => _$this._endDate = endDate;

  GDiscountValueTypeEnum? _discountValueType;
  GDiscountValueTypeEnum? get discountValueType => _$this._discountValueType;
  set discountValueType(GDiscountValueTypeEnum? discountValueType) =>
      _$this._discountValueType = discountValueType;

  ListBuilder<String>? _products;
  ListBuilder<String> get products =>
      _$this._products ??= new ListBuilder<String>();
  set products(ListBuilder<String>? products) => _$this._products = products;

  ListBuilder<String>? _variants;
  ListBuilder<String> get variants =>
      _$this._variants ??= new ListBuilder<String>();
  set variants(ListBuilder<String>? variants) => _$this._variants = variants;

  ListBuilder<String>? _collections;
  ListBuilder<String> get collections =>
      _$this._collections ??= new ListBuilder<String>();
  set collections(ListBuilder<String>? collections) =>
      _$this._collections = collections;

  ListBuilder<String>? _categories;
  ListBuilder<String> get categories =>
      _$this._categories ??= new ListBuilder<String>();
  set categories(ListBuilder<String>? categories) =>
      _$this._categories = categories;

  int? _minCheckoutItemsQuantity;
  int? get minCheckoutItemsQuantity => _$this._minCheckoutItemsQuantity;
  set minCheckoutItemsQuantity(int? minCheckoutItemsQuantity) =>
      _$this._minCheckoutItemsQuantity = minCheckoutItemsQuantity;

  ListBuilder<String>? _countries;
  ListBuilder<String> get countries =>
      _$this._countries ??= new ListBuilder<String>();
  set countries(ListBuilder<String>? countries) =>
      _$this._countries = countries;

  bool? _applyOncePerOrder;
  bool? get applyOncePerOrder => _$this._applyOncePerOrder;
  set applyOncePerOrder(bool? applyOncePerOrder) =>
      _$this._applyOncePerOrder = applyOncePerOrder;

  bool? _applyOncePerCustomer;
  bool? get applyOncePerCustomer => _$this._applyOncePerCustomer;
  set applyOncePerCustomer(bool? applyOncePerCustomer) =>
      _$this._applyOncePerCustomer = applyOncePerCustomer;

  bool? _onlyForStaff;
  bool? get onlyForStaff => _$this._onlyForStaff;
  set onlyForStaff(bool? onlyForStaff) => _$this._onlyForStaff = onlyForStaff;

  int? _usageLimit;
  int? get usageLimit => _$this._usageLimit;
  set usageLimit(int? usageLimit) => _$this._usageLimit = usageLimit;

  GVoucherInputBuilder();

  GVoucherInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _type = $v.type;
      _name = $v.name;
      _code = $v.code;
      _startDate = $v.startDate?.toBuilder();
      _endDate = $v.endDate?.toBuilder();
      _discountValueType = $v.discountValueType;
      _products = $v.products?.toBuilder();
      _variants = $v.variants?.toBuilder();
      _collections = $v.collections?.toBuilder();
      _categories = $v.categories?.toBuilder();
      _minCheckoutItemsQuantity = $v.minCheckoutItemsQuantity;
      _countries = $v.countries?.toBuilder();
      _applyOncePerOrder = $v.applyOncePerOrder;
      _applyOncePerCustomer = $v.applyOncePerCustomer;
      _onlyForStaff = $v.onlyForStaff;
      _usageLimit = $v.usageLimit;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVoucherInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVoucherInput;
  }

  @override
  void update(void Function(GVoucherInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVoucherInput build() => _build();

  _$GVoucherInput _build() {
    _$GVoucherInput _$result;
    try {
      _$result = _$v ??
          new _$GVoucherInput._(
              type: type,
              name: name,
              code: code,
              startDate: _startDate?.build(),
              endDate: _endDate?.build(),
              discountValueType: discountValueType,
              products: _products?.build(),
              variants: _variants?.build(),
              collections: _collections?.build(),
              categories: _categories?.build(),
              minCheckoutItemsQuantity: minCheckoutItemsQuantity,
              countries: _countries?.build(),
              applyOncePerOrder: applyOncePerOrder,
              applyOncePerCustomer: applyOncePerCustomer,
              onlyForStaff: onlyForStaff,
              usageLimit: usageLimit);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'startDate';
        _startDate?.build();
        _$failedField = 'endDate';
        _endDate?.build();

        _$failedField = 'products';
        _products?.build();
        _$failedField = 'variants';
        _variants?.build();
        _$failedField = 'collections';
        _collections?.build();
        _$failedField = 'categories';
        _categories?.build();

        _$failedField = 'countries';
        _countries?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GVoucherInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GVoucherSortingInput extends GVoucherSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final String? channel;
  @override
  final GVoucherSortField field;

  factory _$GVoucherSortingInput(
          [void Function(GVoucherSortingInputBuilder)? updates]) =>
      (new GVoucherSortingInputBuilder()..update(updates))._build();

  _$GVoucherSortingInput._(
      {required this.direction, this.channel, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GVoucherSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GVoucherSortingInput', 'field');
  }

  @override
  GVoucherSortingInput rebuild(
          void Function(GVoucherSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVoucherSortingInputBuilder toBuilder() =>
      new GVoucherSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVoucherSortingInput &&
        direction == other.direction &&
        channel == other.channel &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf(
        $jc($jc($jc(0, direction.hashCode), channel.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVoucherSortingInput')
          ..add('direction', direction)
          ..add('channel', channel)
          ..add('field', field))
        .toString();
  }
}

class GVoucherSortingInputBuilder
    implements Builder<GVoucherSortingInput, GVoucherSortingInputBuilder> {
  _$GVoucherSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  String? _channel;
  String? get channel => _$this._channel;
  set channel(String? channel) => _$this._channel = channel;

  GVoucherSortField? _field;
  GVoucherSortField? get field => _$this._field;
  set field(GVoucherSortField? field) => _$this._field = field;

  GVoucherSortingInputBuilder();

  GVoucherSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _channel = $v.channel;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVoucherSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVoucherSortingInput;
  }

  @override
  void update(void Function(GVoucherSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVoucherSortingInput build() => _build();

  _$GVoucherSortingInput _build() {
    final _$result = _$v ??
        new _$GVoucherSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GVoucherSortingInput', 'direction'),
            channel: channel,
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GVoucherSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseCreateInput extends GWarehouseCreateInput {
  @override
  final String? slug;
  @override
  final String? email;
  @override
  final String name;
  @override
  final GAddressInput address;
  @override
  final BuiltList<String>? shippingZones;

  factory _$GWarehouseCreateInput(
          [void Function(GWarehouseCreateInputBuilder)? updates]) =>
      (new GWarehouseCreateInputBuilder()..update(updates))._build();

  _$GWarehouseCreateInput._(
      {this.slug,
      this.email,
      required this.name,
      required this.address,
      this.shippingZones})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GWarehouseCreateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        address, r'GWarehouseCreateInput', 'address');
  }

  @override
  GWarehouseCreateInput rebuild(
          void Function(GWarehouseCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseCreateInputBuilder toBuilder() =>
      new GWarehouseCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseCreateInput &&
        slug == other.slug &&
        email == other.email &&
        name == other.name &&
        address == other.address &&
        shippingZones == other.shippingZones;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc($jc($jc($jc(0, slug.hashCode), email.hashCode), name.hashCode),
            address.hashCode),
        shippingZones.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWarehouseCreateInput')
          ..add('slug', slug)
          ..add('email', email)
          ..add('name', name)
          ..add('address', address)
          ..add('shippingZones', shippingZones))
        .toString();
  }
}

class GWarehouseCreateInputBuilder
    implements Builder<GWarehouseCreateInput, GWarehouseCreateInputBuilder> {
  _$GWarehouseCreateInput? _$v;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GAddressInputBuilder? _address;
  GAddressInputBuilder get address =>
      _$this._address ??= new GAddressInputBuilder();
  set address(GAddressInputBuilder? address) => _$this._address = address;

  ListBuilder<String>? _shippingZones;
  ListBuilder<String> get shippingZones =>
      _$this._shippingZones ??= new ListBuilder<String>();
  set shippingZones(ListBuilder<String>? shippingZones) =>
      _$this._shippingZones = shippingZones;

  GWarehouseCreateInputBuilder();

  GWarehouseCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _slug = $v.slug;
      _email = $v.email;
      _name = $v.name;
      _address = $v.address.toBuilder();
      _shippingZones = $v.shippingZones?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWarehouseCreateInput;
  }

  @override
  void update(void Function(GWarehouseCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWarehouseCreateInput build() => _build();

  _$GWarehouseCreateInput _build() {
    _$GWarehouseCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GWarehouseCreateInput._(
              slug: slug,
              email: email,
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GWarehouseCreateInput', 'name'),
              address: address.build(),
              shippingZones: _shippingZones?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'address';
        address.build();
        _$failedField = 'shippingZones';
        _shippingZones?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWarehouseCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseFilterInput extends GWarehouseFilterInput {
  @override
  final GWarehouseClickAndCollectOptionEnum? clickAndCollectOption;
  @override
  final String? search;
  @override
  final BuiltList<String>? ids;
  @override
  final bool? isPrivate;
  @override
  final BuiltList<String>? channels;
  @override
  final BuiltList<String>? slugs;

  factory _$GWarehouseFilterInput(
          [void Function(GWarehouseFilterInputBuilder)? updates]) =>
      (new GWarehouseFilterInputBuilder()..update(updates))._build();

  _$GWarehouseFilterInput._(
      {this.clickAndCollectOption,
      this.search,
      this.ids,
      this.isPrivate,
      this.channels,
      this.slugs})
      : super._();

  @override
  GWarehouseFilterInput rebuild(
          void Function(GWarehouseFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseFilterInputBuilder toBuilder() =>
      new GWarehouseFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseFilterInput &&
        clickAndCollectOption == other.clickAndCollectOption &&
        search == other.search &&
        ids == other.ids &&
        isPrivate == other.isPrivate &&
        channels == other.channels &&
        slugs == other.slugs;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc($jc(0, clickAndCollectOption.hashCode),
                        search.hashCode),
                    ids.hashCode),
                isPrivate.hashCode),
            channels.hashCode),
        slugs.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWarehouseFilterInput')
          ..add('clickAndCollectOption', clickAndCollectOption)
          ..add('search', search)
          ..add('ids', ids)
          ..add('isPrivate', isPrivate)
          ..add('channels', channels)
          ..add('slugs', slugs))
        .toString();
  }
}

class GWarehouseFilterInputBuilder
    implements Builder<GWarehouseFilterInput, GWarehouseFilterInputBuilder> {
  _$GWarehouseFilterInput? _$v;

  GWarehouseClickAndCollectOptionEnum? _clickAndCollectOption;
  GWarehouseClickAndCollectOptionEnum? get clickAndCollectOption =>
      _$this._clickAndCollectOption;
  set clickAndCollectOption(
          GWarehouseClickAndCollectOptionEnum? clickAndCollectOption) =>
      _$this._clickAndCollectOption = clickAndCollectOption;

  String? _search;
  String? get search => _$this._search;
  set search(String? search) => _$this._search = search;

  ListBuilder<String>? _ids;
  ListBuilder<String> get ids => _$this._ids ??= new ListBuilder<String>();
  set ids(ListBuilder<String>? ids) => _$this._ids = ids;

  bool? _isPrivate;
  bool? get isPrivate => _$this._isPrivate;
  set isPrivate(bool? isPrivate) => _$this._isPrivate = isPrivate;

  ListBuilder<String>? _channels;
  ListBuilder<String> get channels =>
      _$this._channels ??= new ListBuilder<String>();
  set channels(ListBuilder<String>? channels) => _$this._channels = channels;

  ListBuilder<String>? _slugs;
  ListBuilder<String> get slugs => _$this._slugs ??= new ListBuilder<String>();
  set slugs(ListBuilder<String>? slugs) => _$this._slugs = slugs;

  GWarehouseFilterInputBuilder();

  GWarehouseFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _clickAndCollectOption = $v.clickAndCollectOption;
      _search = $v.search;
      _ids = $v.ids?.toBuilder();
      _isPrivate = $v.isPrivate;
      _channels = $v.channels?.toBuilder();
      _slugs = $v.slugs?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWarehouseFilterInput;
  }

  @override
  void update(void Function(GWarehouseFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWarehouseFilterInput build() => _build();

  _$GWarehouseFilterInput _build() {
    _$GWarehouseFilterInput _$result;
    try {
      _$result = _$v ??
          new _$GWarehouseFilterInput._(
              clickAndCollectOption: clickAndCollectOption,
              search: search,
              ids: _ids?.build(),
              isPrivate: isPrivate,
              channels: _channels?.build(),
              slugs: _slugs?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'ids';
        _ids?.build();

        _$failedField = 'channels';
        _channels?.build();
        _$failedField = 'slugs';
        _slugs?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWarehouseFilterInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseSortingInput extends GWarehouseSortingInput {
  @override
  final GOrderDirection direction;
  @override
  final GWarehouseSortField field;

  factory _$GWarehouseSortingInput(
          [void Function(GWarehouseSortingInputBuilder)? updates]) =>
      (new GWarehouseSortingInputBuilder()..update(updates))._build();

  _$GWarehouseSortingInput._({required this.direction, required this.field})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        direction, r'GWarehouseSortingInput', 'direction');
    BuiltValueNullFieldError.checkNotNull(
        field, r'GWarehouseSortingInput', 'field');
  }

  @override
  GWarehouseSortingInput rebuild(
          void Function(GWarehouseSortingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseSortingInputBuilder toBuilder() =>
      new GWarehouseSortingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseSortingInput &&
        direction == other.direction &&
        field == other.field;
  }

  @override
  int get hashCode {
    return $jf($jc($jc(0, direction.hashCode), field.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWarehouseSortingInput')
          ..add('direction', direction)
          ..add('field', field))
        .toString();
  }
}

class GWarehouseSortingInputBuilder
    implements Builder<GWarehouseSortingInput, GWarehouseSortingInputBuilder> {
  _$GWarehouseSortingInput? _$v;

  GOrderDirection? _direction;
  GOrderDirection? get direction => _$this._direction;
  set direction(GOrderDirection? direction) => _$this._direction = direction;

  GWarehouseSortField? _field;
  GWarehouseSortField? get field => _$this._field;
  set field(GWarehouseSortField? field) => _$this._field = field;

  GWarehouseSortingInputBuilder();

  GWarehouseSortingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _direction = $v.direction;
      _field = $v.field;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseSortingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWarehouseSortingInput;
  }

  @override
  void update(void Function(GWarehouseSortingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWarehouseSortingInput build() => _build();

  _$GWarehouseSortingInput _build() {
    final _$result = _$v ??
        new _$GWarehouseSortingInput._(
            direction: BuiltValueNullFieldError.checkNotNull(
                direction, r'GWarehouseSortingInput', 'direction'),
            field: BuiltValueNullFieldError.checkNotNull(
                field, r'GWarehouseSortingInput', 'field'));
    replace(_$result);
    return _$result;
  }
}

class _$GWarehouseUpdateInput extends GWarehouseUpdateInput {
  @override
  final String? slug;
  @override
  final String? email;
  @override
  final String? name;
  @override
  final GAddressInput? address;
  @override
  final GWarehouseClickAndCollectOptionEnum? clickAndCollectOption;
  @override
  final bool? isPrivate;

  factory _$GWarehouseUpdateInput(
          [void Function(GWarehouseUpdateInputBuilder)? updates]) =>
      (new GWarehouseUpdateInputBuilder()..update(updates))._build();

  _$GWarehouseUpdateInput._(
      {this.slug,
      this.email,
      this.name,
      this.address,
      this.clickAndCollectOption,
      this.isPrivate})
      : super._();

  @override
  GWarehouseUpdateInput rebuild(
          void Function(GWarehouseUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWarehouseUpdateInputBuilder toBuilder() =>
      new GWarehouseUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWarehouseUpdateInput &&
        slug == other.slug &&
        email == other.email &&
        name == other.name &&
        address == other.address &&
        clickAndCollectOption == other.clickAndCollectOption &&
        isPrivate == other.isPrivate;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc($jc($jc($jc(0, slug.hashCode), email.hashCode), name.hashCode),
                address.hashCode),
            clickAndCollectOption.hashCode),
        isPrivate.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWarehouseUpdateInput')
          ..add('slug', slug)
          ..add('email', email)
          ..add('name', name)
          ..add('address', address)
          ..add('clickAndCollectOption', clickAndCollectOption)
          ..add('isPrivate', isPrivate))
        .toString();
  }
}

class GWarehouseUpdateInputBuilder
    implements Builder<GWarehouseUpdateInput, GWarehouseUpdateInputBuilder> {
  _$GWarehouseUpdateInput? _$v;

  String? _slug;
  String? get slug => _$this._slug;
  set slug(String? slug) => _$this._slug = slug;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GAddressInputBuilder? _address;
  GAddressInputBuilder get address =>
      _$this._address ??= new GAddressInputBuilder();
  set address(GAddressInputBuilder? address) => _$this._address = address;

  GWarehouseClickAndCollectOptionEnum? _clickAndCollectOption;
  GWarehouseClickAndCollectOptionEnum? get clickAndCollectOption =>
      _$this._clickAndCollectOption;
  set clickAndCollectOption(
          GWarehouseClickAndCollectOptionEnum? clickAndCollectOption) =>
      _$this._clickAndCollectOption = clickAndCollectOption;

  bool? _isPrivate;
  bool? get isPrivate => _$this._isPrivate;
  set isPrivate(bool? isPrivate) => _$this._isPrivate = isPrivate;

  GWarehouseUpdateInputBuilder();

  GWarehouseUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _slug = $v.slug;
      _email = $v.email;
      _name = $v.name;
      _address = $v.address?.toBuilder();
      _clickAndCollectOption = $v.clickAndCollectOption;
      _isPrivate = $v.isPrivate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWarehouseUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWarehouseUpdateInput;
  }

  @override
  void update(void Function(GWarehouseUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWarehouseUpdateInput build() => _build();

  _$GWarehouseUpdateInput _build() {
    _$GWarehouseUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GWarehouseUpdateInput._(
              slug: slug,
              email: email,
              name: name,
              address: _address?.build(),
              clickAndCollectOption: clickAndCollectOption,
              isPrivate: isPrivate);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'address';
        _address?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWarehouseUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWebhookCreateInput extends GWebhookCreateInput {
  @override
  final String? name;
  @override
  final String? targetUrl;
  @override
  final BuiltList<GWebhookEventTypeEnum>? events;
  @override
  final BuiltList<GWebhookEventTypeAsyncEnum>? asyncEvents;
  @override
  final BuiltList<GWebhookEventTypeSyncEnum>? syncEvents;
  @override
  final String? app;
  @override
  final bool? isActive;
  @override
  final String? secretKey;
  @override
  final String? query;

  factory _$GWebhookCreateInput(
          [void Function(GWebhookCreateInputBuilder)? updates]) =>
      (new GWebhookCreateInputBuilder()..update(updates))._build();

  _$GWebhookCreateInput._(
      {this.name,
      this.targetUrl,
      this.events,
      this.asyncEvents,
      this.syncEvents,
      this.app,
      this.isActive,
      this.secretKey,
      this.query})
      : super._();

  @override
  GWebhookCreateInput rebuild(
          void Function(GWebhookCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWebhookCreateInputBuilder toBuilder() =>
      new GWebhookCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWebhookCreateInput &&
        name == other.name &&
        targetUrl == other.targetUrl &&
        events == other.events &&
        asyncEvents == other.asyncEvents &&
        syncEvents == other.syncEvents &&
        app == other.app &&
        isActive == other.isActive &&
        secretKey == other.secretKey &&
        query == other.query;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, name.hashCode), targetUrl.hashCode),
                                events.hashCode),
                            asyncEvents.hashCode),
                        syncEvents.hashCode),
                    app.hashCode),
                isActive.hashCode),
            secretKey.hashCode),
        query.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWebhookCreateInput')
          ..add('name', name)
          ..add('targetUrl', targetUrl)
          ..add('events', events)
          ..add('asyncEvents', asyncEvents)
          ..add('syncEvents', syncEvents)
          ..add('app', app)
          ..add('isActive', isActive)
          ..add('secretKey', secretKey)
          ..add('query', query))
        .toString();
  }
}

class GWebhookCreateInputBuilder
    implements Builder<GWebhookCreateInput, GWebhookCreateInputBuilder> {
  _$GWebhookCreateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _targetUrl;
  String? get targetUrl => _$this._targetUrl;
  set targetUrl(String? targetUrl) => _$this._targetUrl = targetUrl;

  ListBuilder<GWebhookEventTypeEnum>? _events;
  ListBuilder<GWebhookEventTypeEnum> get events =>
      _$this._events ??= new ListBuilder<GWebhookEventTypeEnum>();
  set events(ListBuilder<GWebhookEventTypeEnum>? events) =>
      _$this._events = events;

  ListBuilder<GWebhookEventTypeAsyncEnum>? _asyncEvents;
  ListBuilder<GWebhookEventTypeAsyncEnum> get asyncEvents =>
      _$this._asyncEvents ??= new ListBuilder<GWebhookEventTypeAsyncEnum>();
  set asyncEvents(ListBuilder<GWebhookEventTypeAsyncEnum>? asyncEvents) =>
      _$this._asyncEvents = asyncEvents;

  ListBuilder<GWebhookEventTypeSyncEnum>? _syncEvents;
  ListBuilder<GWebhookEventTypeSyncEnum> get syncEvents =>
      _$this._syncEvents ??= new ListBuilder<GWebhookEventTypeSyncEnum>();
  set syncEvents(ListBuilder<GWebhookEventTypeSyncEnum>? syncEvents) =>
      _$this._syncEvents = syncEvents;

  String? _app;
  String? get app => _$this._app;
  set app(String? app) => _$this._app = app;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  String? _secretKey;
  String? get secretKey => _$this._secretKey;
  set secretKey(String? secretKey) => _$this._secretKey = secretKey;

  String? _query;
  String? get query => _$this._query;
  set query(String? query) => _$this._query = query;

  GWebhookCreateInputBuilder();

  GWebhookCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _targetUrl = $v.targetUrl;
      _events = $v.events?.toBuilder();
      _asyncEvents = $v.asyncEvents?.toBuilder();
      _syncEvents = $v.syncEvents?.toBuilder();
      _app = $v.app;
      _isActive = $v.isActive;
      _secretKey = $v.secretKey;
      _query = $v.query;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWebhookCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWebhookCreateInput;
  }

  @override
  void update(void Function(GWebhookCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWebhookCreateInput build() => _build();

  _$GWebhookCreateInput _build() {
    _$GWebhookCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GWebhookCreateInput._(
              name: name,
              targetUrl: targetUrl,
              events: _events?.build(),
              asyncEvents: _asyncEvents?.build(),
              syncEvents: _syncEvents?.build(),
              app: app,
              isActive: isActive,
              secretKey: secretKey,
              query: query);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'events';
        _events?.build();
        _$failedField = 'asyncEvents';
        _asyncEvents?.build();
        _$failedField = 'syncEvents';
        _syncEvents?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWebhookCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWebhookUpdateInput extends GWebhookUpdateInput {
  @override
  final String? name;
  @override
  final String? targetUrl;
  @override
  final BuiltList<GWebhookEventTypeEnum>? events;
  @override
  final BuiltList<GWebhookEventTypeAsyncEnum>? asyncEvents;
  @override
  final BuiltList<GWebhookEventTypeSyncEnum>? syncEvents;
  @override
  final String? app;
  @override
  final bool? isActive;
  @override
  final String? secretKey;
  @override
  final String? query;

  factory _$GWebhookUpdateInput(
          [void Function(GWebhookUpdateInputBuilder)? updates]) =>
      (new GWebhookUpdateInputBuilder()..update(updates))._build();

  _$GWebhookUpdateInput._(
      {this.name,
      this.targetUrl,
      this.events,
      this.asyncEvents,
      this.syncEvents,
      this.app,
      this.isActive,
      this.secretKey,
      this.query})
      : super._();

  @override
  GWebhookUpdateInput rebuild(
          void Function(GWebhookUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWebhookUpdateInputBuilder toBuilder() =>
      new GWebhookUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWebhookUpdateInput &&
        name == other.name &&
        targetUrl == other.targetUrl &&
        events == other.events &&
        asyncEvents == other.asyncEvents &&
        syncEvents == other.syncEvents &&
        app == other.app &&
        isActive == other.isActive &&
        secretKey == other.secretKey &&
        query == other.query;
  }

  @override
  int get hashCode {
    return $jf($jc(
        $jc(
            $jc(
                $jc(
                    $jc(
                        $jc(
                            $jc($jc($jc(0, name.hashCode), targetUrl.hashCode),
                                events.hashCode),
                            asyncEvents.hashCode),
                        syncEvents.hashCode),
                    app.hashCode),
                isActive.hashCode),
            secretKey.hashCode),
        query.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWebhookUpdateInput')
          ..add('name', name)
          ..add('targetUrl', targetUrl)
          ..add('events', events)
          ..add('asyncEvents', asyncEvents)
          ..add('syncEvents', syncEvents)
          ..add('app', app)
          ..add('isActive', isActive)
          ..add('secretKey', secretKey)
          ..add('query', query))
        .toString();
  }
}

class GWebhookUpdateInputBuilder
    implements Builder<GWebhookUpdateInput, GWebhookUpdateInputBuilder> {
  _$GWebhookUpdateInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _targetUrl;
  String? get targetUrl => _$this._targetUrl;
  set targetUrl(String? targetUrl) => _$this._targetUrl = targetUrl;

  ListBuilder<GWebhookEventTypeEnum>? _events;
  ListBuilder<GWebhookEventTypeEnum> get events =>
      _$this._events ??= new ListBuilder<GWebhookEventTypeEnum>();
  set events(ListBuilder<GWebhookEventTypeEnum>? events) =>
      _$this._events = events;

  ListBuilder<GWebhookEventTypeAsyncEnum>? _asyncEvents;
  ListBuilder<GWebhookEventTypeAsyncEnum> get asyncEvents =>
      _$this._asyncEvents ??= new ListBuilder<GWebhookEventTypeAsyncEnum>();
  set asyncEvents(ListBuilder<GWebhookEventTypeAsyncEnum>? asyncEvents) =>
      _$this._asyncEvents = asyncEvents;

  ListBuilder<GWebhookEventTypeSyncEnum>? _syncEvents;
  ListBuilder<GWebhookEventTypeSyncEnum> get syncEvents =>
      _$this._syncEvents ??= new ListBuilder<GWebhookEventTypeSyncEnum>();
  set syncEvents(ListBuilder<GWebhookEventTypeSyncEnum>? syncEvents) =>
      _$this._syncEvents = syncEvents;

  String? _app;
  String? get app => _$this._app;
  set app(String? app) => _$this._app = app;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  String? _secretKey;
  String? get secretKey => _$this._secretKey;
  set secretKey(String? secretKey) => _$this._secretKey = secretKey;

  String? _query;
  String? get query => _$this._query;
  set query(String? query) => _$this._query = query;

  GWebhookUpdateInputBuilder();

  GWebhookUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _targetUrl = $v.targetUrl;
      _events = $v.events?.toBuilder();
      _asyncEvents = $v.asyncEvents?.toBuilder();
      _syncEvents = $v.syncEvents?.toBuilder();
      _app = $v.app;
      _isActive = $v.isActive;
      _secretKey = $v.secretKey;
      _query = $v.query;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWebhookUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWebhookUpdateInput;
  }

  @override
  void update(void Function(GWebhookUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWebhookUpdateInput build() => _build();

  _$GWebhookUpdateInput _build() {
    _$GWebhookUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GWebhookUpdateInput._(
              name: name,
              targetUrl: targetUrl,
              events: _events?.build(),
              asyncEvents: _asyncEvents?.build(),
              syncEvents: _syncEvents?.build(),
              app: app,
              isActive: isActive,
              secretKey: secretKey,
              query: query);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'events';
        _events?.build();
        _$failedField = 'asyncEvents';
        _asyncEvents?.build();
        _$failedField = 'syncEvents';
        _syncEvents?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GWebhookUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GWeightScalar extends GWeightScalar {
  @override
  final String value;

  factory _$GWeightScalar([void Function(GWeightScalarBuilder)? updates]) =>
      (new GWeightScalarBuilder()..update(updates))._build();

  _$GWeightScalar._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GWeightScalar', 'value');
  }

  @override
  GWeightScalar rebuild(void Function(GWeightScalarBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GWeightScalarBuilder toBuilder() => new GWeightScalarBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GWeightScalar && value == other.value;
  }

  @override
  int get hashCode {
    return $jf($jc(0, value.hashCode));
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GWeightScalar')..add('value', value))
        .toString();
  }
}

class GWeightScalarBuilder
    implements Builder<GWeightScalar, GWeightScalarBuilder> {
  _$GWeightScalar? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GWeightScalarBuilder();

  GWeightScalarBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GWeightScalar other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GWeightScalar;
  }

  @override
  void update(void Function(GWeightScalarBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GWeightScalar build() => _build();

  _$GWeightScalar _build() {
    final _$result = _$v ??
        new _$GWeightScalar._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GWeightScalar', 'value'));
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: always_put_control_body_on_new_line,always_specify_types,annotate_overrides,avoid_annotating_with_dynamic,avoid_as,avoid_catches_without_on_clauses,avoid_returning_this,deprecated_member_use_from_same_package,lines_longer_than_80_chars,no_leading_underscores_for_local_identifiers,omit_local_variable_types,prefer_expression_function_bodies,sort_constructors_first,test_types_in_equals,unnecessary_const,unnecessary_new,unnecessary_lambdas
